{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_10yfl9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Create simple POS with React.js, Node.js, and MongoDB #7: Adding redux to other component", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hebhol", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592933424.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.soshace.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hebhol", "is_robot_indexable": true, "report_reasons": null, "author": "branikita", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hebhol/create_simple_pos_with_reactjs_nodejs_and_mongodb/", "parent_whitelist_status": null, "stickied": false, "url": "https://blog.soshace.com/create-simple-pos-with-react-js-node-js-and-mongodb-7-adding-redux-to-other-component/", "subreddit_subscribers": 3512, "created_utc": 1592904624.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_m56dd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Making sense of Redux", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hdptf7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592850294.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "vishaltelangre.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hdptf7", "is_robot_indexable": true, "report_reasons": null, "author": "vishaltelangre", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hdptf7/making_sense_of_redux/", "parent_whitelist_status": null, "stickied": false, "url": "https://vishaltelangre.com/making-sense-of-redux/", "subreddit_subscribers": 3512, "created_utc": 1592821494.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_3cl7e290", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Build a Shopping Cart with React, Redux, and React-DnD \u2014 PART 1", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hd5wgq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592770082.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hd5wgq", "is_robot_indexable": true, "report_reasons": null, "author": "EvoNext", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hd5wgq/build_a_shopping_cart_with_react_redux_and/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@tonyparkerkenz/build-a-shopping-cart-with-react-redux-and-react-dnd-part-1-2433558c3f38", "subreddit_subscribers": 3512, "created_utc": 1592741282.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "Hi!  \nI'm implementing a website with React Redux Saga and react router. I have a few pages where I need to display some cooking recipes. The recipe details like steps, ingredients, nutritional info and other stuff comes from the back-end.  \nI want to use JsonLd schemas for better SEO (yeah, I know React is not the best tool for SEO) and I'm using React Helmet to add the required meta tags to each recipe page.  \nMy question is: Is it bad practice to have a SEO component that connects to the redux store and when the back-end responds with the data update the JsonLd schema?  \nThanks!", "author_fullname": "t2_61nll48h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React helmet with redux", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hd3jsh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592757747.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi!&lt;br/&gt;\nI&amp;#39;m implementing a website with React Redux Saga and react router. I have a few pages where I need to display some cooking recipes. The recipe details like steps, ingredients, nutritional info and other stuff comes from the back-end.&lt;br/&gt;\nI want to use JsonLd schemas for better SEO (yeah, I know React is not the best tool for SEO) and I&amp;#39;m using React Helmet to add the required meta tags to each recipe page.&lt;br/&gt;\nMy question is: Is it bad practice to have a SEO component that connects to the redux store and when the back-end responds with the data update the JsonLd schema?&lt;br/&gt;\nThanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hd3jsh", "is_robot_indexable": true, "report_reasons": null, "author": "gergo-balogh", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hd3jsh/react_helmet_with_redux/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/hd3jsh/react_helmet_with_redux/", "subreddit_subscribers": 3512, "created_utc": 1592728947.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": " I'm learning redux so I built an earth invasion game using Reactjs, Redux, and SVG \n\nSource Code:  [https://github.com/aashrafh/Invasion](https://github.com/aashrafh/Invasion) \n\nTry It: [https://aashrafh.github.io/Invasion](https://aashrafh.github.io/Invasion)\n\nhttps://i.redd.it/gp17hjfdv1651.gif", "author_fullname": "t2_5ejh3w18", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Invasion, Protect The Earth!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"gp17hjfdv1651": {"status": "valid", "e": "AnimatedImage", "m": "image/gif", "p": [{"y": 151, "x": 108, "u": "https://preview.redd.it/gp17hjfdv1651.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=3a6251911733bc8324adeac2a5c94a0ea9787339"}, {"y": 302, "x": 216, "u": "https://preview.redd.it/gp17hjfdv1651.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=3b2def1940480f63384f962380ab6afe0aa22d12"}, {"y": 448, "x": 320, "u": "https://preview.redd.it/gp17hjfdv1651.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=b6d9caa2e0abbd183ff7f3c25b8d646ad936e5f1"}], "s": {"y": 864, "gif": "https://i.redd.it/gp17hjfdv1651.gif", "mp4": "https://preview.redd.it/gp17hjfdv1651.gif?format=mp4&amp;s=e8d086da88a5bedf77eaf2a8b5ebc7147cb12e09", "x": 616}, "id": "gp17hjfdv1651"}}, "name": "t3_hcko88", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592681079.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m learning redux so I built an earth invasion game using Reactjs, Redux, and SVG &lt;/p&gt;\n\n&lt;p&gt;Source Code:  &lt;a href=\"https://github.com/aashrafh/Invasion\"&gt;https://github.com/aashrafh/Invasion&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;Try It: &lt;a href=\"https://aashrafh.github.io/Invasion\"&gt;https://aashrafh.github.io/Invasion&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.redd.it/gp17hjfdv1651.gif\"&gt;https://i.redd.it/gp17hjfdv1651.gif&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hcko88", "is_robot_indexable": true, "report_reasons": null, "author": "ahmedashrafhamdy", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hcko88/invasion_protect_the_earth/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/hcko88/invasion_protect_the_earth/", "subreddit_subscribers": 3512, "created_utc": 1592652279.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "It seems like the suggested pattern to use is createSlice where actions and reducers have a 1:1 relationship based on the name/variable provided. createAsyncThunk seems to follow the same pattern.\n\nIs there a way to write reducers (let's say for a different slice) to handle an action defined by createSlice/createAsyncThunk? Or would you have to write actions/reducers using createAction and createReducer?", "author_fullname": "t2_3sk6j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Subscribing multiple reducers to a single action in Redux Toolkit", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hc2255", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592607109.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It seems like the suggested pattern to use is createSlice where actions and reducers have a 1:1 relationship based on the name/variable provided. createAsyncThunk seems to follow the same pattern.&lt;/p&gt;\n\n&lt;p&gt;Is there a way to write reducers (let&amp;#39;s say for a different slice) to handle an action defined by createSlice/createAsyncThunk? Or would you have to write actions/reducers using createAction and createReducer?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hc2255", "is_robot_indexable": true, "report_reasons": null, "author": "ellusion", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hc2255/subscribing_multiple_reducers_to_a_single_action/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/hc2255/subscribing_multiple_reducers_to_a_single_action/", "subreddit_subscribers": 3512, "created_utc": 1592578309.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_1t7y74gw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How Redux Toolkit can reduce your setup of Redux in your next React app", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hbc6ca", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592505329.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hbc6ca", "is_robot_indexable": true, "report_reasons": null, "author": "jsloverr", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hbc6ca/how_redux_toolkit_can_reduce_your_setup_of_redux/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com//how-redux-toolkit-can-reduce-your-setup-of-redux-in-your-react-app-d87baab59268?source=friends_link&amp;sk=626b48e7ab94dff289177c14be3b7383", "subreddit_subscribers": 3512, "created_utc": 1592476529.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "I am trying to teach myself Redux and I am having trouble with an assignment.  I'm trying to figure out how to let a child use componentDidMount without the whole component tree, it belongs to, re-rendering.\nHere's are some pics to explain my problem:\nWhen I click on the [todo item](https://imgur.com/5SJ3QFS) I expect it to open up and reveal the details of the todo item including the [steps](https://imgur.com/bhSL24w).  This does happen BUT I only see the steps flash for a second and I'm back to seeing only the [todo list item](https://imgur.com/5SJ3QFS).  The todo items(parents) are fetched just like the steps(children).\n\nPlease let me know if you need more information!!!\n\nHere is my code...\n\n\nChild component:\n\n\n    class TodoViewDetail extends React.Component {\n        constructor(props) {\n            super(props);\n            this.props = props;\n        }\n        componentDidMount() {\n            this.props.fetchSteps();\n        }\n        render() {\n            const { body, id } = this.props.todo;\n            return (\n                &lt;div className=\"todo-details\"&gt;\n                    &lt;p&gt;{body}&lt;/p&gt;\n                    &lt;StepListContainer todoId={id} /&gt;\n                    &lt;button onClick={this.props.deleteTodo}&gt;Delete&lt;/button&gt;\n                &lt;/div&gt;\n            );\n        }\n    }\n\nfetchSteps action:\n\n\n    export const receiveSteps = (steps) =&gt;  ({\n        type: RECEIVE_STEPS,\n        steps: steps\n    });\n    export function fetchSteps(todoId) {\n        return (dispatch, state) =&gt; {\n            return stepAPIUtil.fetchSteps(todoId).then(\n                    successfulStepsResponse =&gt; dispatch(receiveSteps(successfulStepsResponse)\n                )\n            )\n        }\n    }\n\najax request:\n\n\n    export function fetchSteps(todoId) {\n        return $.ajax({\n            type: \"GET\",\n            url: `/api/todos/${todoId}/steps`,\n        });\n    }", "author_fullname": "t2_fwz46", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Parent componentDidMount and child componentDidMount.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hbbc6n", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592501033.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to teach myself Redux and I am having trouble with an assignment.  I&amp;#39;m trying to figure out how to let a child use componentDidMount without the whole component tree, it belongs to, re-rendering.\nHere&amp;#39;s are some pics to explain my problem:\nWhen I click on the &lt;a href=\"https://imgur.com/5SJ3QFS\"&gt;todo item&lt;/a&gt; I expect it to open up and reveal the details of the todo item including the &lt;a href=\"https://imgur.com/bhSL24w\"&gt;steps&lt;/a&gt;.  This does happen BUT I only see the steps flash for a second and I&amp;#39;m back to seeing only the &lt;a href=\"https://imgur.com/5SJ3QFS\"&gt;todo list item&lt;/a&gt;.  The todo items(parents) are fetched just like the steps(children).&lt;/p&gt;\n\n&lt;p&gt;Please let me know if you need more information!!!&lt;/p&gt;\n\n&lt;p&gt;Here is my code...&lt;/p&gt;\n\n&lt;p&gt;Child component:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class TodoViewDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n    componentDidMount() {\n        this.props.fetchSteps();\n    }\n    render() {\n        const { body, id } = this.props.todo;\n        return (\n            &amp;lt;div className=&amp;quot;todo-details&amp;quot;&amp;gt;\n                &amp;lt;p&amp;gt;{body}&amp;lt;/p&amp;gt;\n                &amp;lt;StepListContainer todoId={id} /&amp;gt;\n                &amp;lt;button onClick={this.props.deleteTodo}&amp;gt;Delete&amp;lt;/button&amp;gt;\n            &amp;lt;/div&amp;gt;\n        );\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;fetchSteps action:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export const receiveSteps = (steps) =&amp;gt;  ({\n    type: RECEIVE_STEPS,\n    steps: steps\n});\nexport function fetchSteps(todoId) {\n    return (dispatch, state) =&amp;gt; {\n        return stepAPIUtil.fetchSteps(todoId).then(\n                successfulStepsResponse =&amp;gt; dispatch(receiveSteps(successfulStepsResponse)\n            )\n        )\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ajax request:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export function fetchSteps(todoId) {\n    return $.ajax({\n        type: &amp;quot;GET&amp;quot;,\n        url: `/api/todos/${todoId}/steps`,\n    });\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hbbc6n", "is_robot_indexable": true, "report_reasons": null, "author": "ben53125", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hbbc6n/parent_componentdidmount_and_child/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/hbbc6n/parent_componentdidmount_and_child/", "subreddit_subscribers": 3512, "created_utc": 1592472233.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_cdjg8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Modern React/React Router Auth Best Practices with Redux Saga Firebase + React Hooks?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hauvve", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Does anyone know of modern React/React Router Auth best practices that I can implement into my project with Redux Saga Firebase? A template for guidance works too.\n\nI know a pretty idea how everything should work, just wondering if I\u2019m missing something, could improve a process, or if there\u2019s a really good template I could use for guidance. Here\u2019s my current stack:\n\n&amp;#x200B;\n\n**My Stack:**\n\n* React\n* React Router\n* Redux\n* React Redux\n* Redux Saga\n* Redux Saga Firebase\n* Firebase\n* Redux Persist\n\n**React:**\n\n* On App.js, use OnAuthStateChanged() to redirect the user somehow.\n\n**React Router (Protect using Redirect):**\n\n* Public Routes (\u201c/\u201c, \u201c/login\u201d, \u201csignup\u201d)\n* Private Routes (\u201c/dashboard\u201d, \u201c/settings\u201d)\n\n**Redux:**\n\n* authReducer with state 4 state properties: loading, error, user, and uid. User is the user object from Firebase given when logged out. uid is the user\u2019s Firebase UID.\n\n**Redux Saga:**\n\n* I see see some people using an event channel to sync users data. Is that necessary and what benefit does that add?\n\n**ReduxSagaFirebase:**\n\n* rsf.auth.signInWithEmailAndPassword\n* rsf.auth.logout\n\n&amp;#x200B;\n\n**Additional questions:**\n\n* Do I need to worry about sessions at all?\n* I will be using Firebase for auth, cloud functions, and cloud firestore. Has anyone had experience using this with a real world app with thousands of users? How\u2019s the performance, reliability, and cold starts?\n* Anything else I should take into consideration?", "author_fullname": "t2_cdjg8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Modern React/React Router Auth Best Practices with Redux Saga Firebase + React Hooks?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hauut4", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1592413800.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592440908.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone know of modern React/React Router Auth best practices that I can implement into my project with Redux Saga Firebase? A template for guidance works too.&lt;/p&gt;\n\n&lt;p&gt;I know a pretty idea how everything should work, just wondering if I\u2019m missing something, could improve a process, or if there\u2019s a really good template I could use for guidance. Here\u2019s my current stack:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;My Stack:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;React&lt;/li&gt;\n&lt;li&gt;React Router&lt;/li&gt;\n&lt;li&gt;Redux&lt;/li&gt;\n&lt;li&gt;React Redux&lt;/li&gt;\n&lt;li&gt;Redux Saga&lt;/li&gt;\n&lt;li&gt;Redux Saga Firebase&lt;/li&gt;\n&lt;li&gt;Firebase&lt;/li&gt;\n&lt;li&gt;Redux Persist&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;React:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;On App.js, use OnAuthStateChanged() to redirect the user somehow.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;React Router (Protect using Redirect):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Public Routes (\u201c/\u201c, \u201c/login\u201d, \u201csignup\u201d)&lt;/li&gt;\n&lt;li&gt;Private Routes (\u201c/dashboard\u201d, \u201c/settings\u201d)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Redux:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;authReducer with state 4 state properties: loading, error, user, and uid. User is the user object from Firebase given when logged out. uid is the user\u2019s Firebase UID.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Redux Saga:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I see see some people using an event channel to sync users data. Is that necessary and what benefit does that add?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;ReduxSagaFirebase:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;rsf.auth.signInWithEmailAndPassword&lt;/li&gt;\n&lt;li&gt;rsf.auth.logout&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Additional questions:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Do I need to worry about sessions at all?&lt;/li&gt;\n&lt;li&gt;I will be using Firebase for auth, cloud functions, and cloud firestore. Has anyone had experience using this with a real world app with thousands of users? How\u2019s the performance, reliability, and cold starts?&lt;/li&gt;\n&lt;li&gt;Anything else I should take into consideration?&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "hauut4", "is_robot_indexable": true, "report_reasons": null, "author": "Jeffylew77", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/hauut4/modern_reactreact_router_auth_best_practices_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/hauut4/modern_reactreact_router_auth_best_practices_with/", "subreddit_subscribers": 195613, "created_utc": 1592412108.0, "num_crossposts": 2, "media": null, "is_video": false}], "created": 1592440989.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hauvve", "is_robot_indexable": true, "report_reasons": null, "author": "Jeffylew77", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_hauut4", "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/hauvve/modern_reactreact_router_auth_best_practices_with/", "parent_whitelist_status": null, "stickied": false, "url": "/r/reactjs/comments/hauut4/modern_reactreact_router_auth_best_practices_with/", "subreddit_subscribers": 3512, "created_utc": 1592412189.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_10yfl9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Create simple POS with React, Node and MongoDB #6: Redux Integration", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ha0wdc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592329766.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.soshace.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ha0wdc", "is_robot_indexable": true, "report_reasons": null, "author": "branikita", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/ha0wdc/create_simple_pos_with_react_node_and_mongodb_6/", "parent_whitelist_status": null, "stickied": false, "url": "https://blog.soshace.com/create-simple-pos-with-react-node-and-mongodb-6-redux-integration/", "subreddit_subscribers": 3512, "created_utc": 1592300966.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ha0wdc", "before": null}}