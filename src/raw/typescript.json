{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - July", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hizg5z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 39, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 39, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1593590733.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hizg5z", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 6, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "subreddit_subscribers": 43379, "created_utc": 1593561933.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I know that there are Boolean types for true or false. However I would like to have a value pairs, or some might call them interdependent polarities. The world around us is full of that. Like temperature = is warm or is cold. Or age = young vs old. Light = dark | bright. I was thinking about two methods in an object that will set to true or false the corresponding properties. But again, these are propreties and not actual variables. Or maybe there is some other way? It must be simpler than I think it is", "author_fullname": "t2_j918k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Typescript and mutually exclusive variables ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hl1af0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593887730.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I know that there are Boolean types for true or false. However I would like to have a value pairs, or some might call them interdependent polarities. The world around us is full of that. Like temperature = is warm or is cold. Or age = young vs old. Light = dark | bright. I was thinking about two methods in an object that will set to true or false the corresponding properties. But again, these are propreties and not actual variables. Or maybe there is some other way? It must be simpler than I think it is&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hl1af0", "is_robot_indexable": true, "report_reasons": null, "author": "gevera", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hl1af0/typescript_and_mutually_exclusive_variables/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hl1af0/typescript_and_mutually_exclusive_variables/", "subreddit_subscribers": 43379, "created_utc": 1593858930.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey,  \nSo, I am working on my first TS project and I want to make sure I start off correctly.   \nWhat is the general concensus in terms of architecture? This is a website, not a library.  \n\n\n1. Do you have your types/interfaces in a seperate file?\n   1. If so, do you name it with a '\\*.d.ts\" or is that ONLY for libraries/modules to be used outside the codebase?\n2. Do you put your types IN the same file that is being used? If you have to re-use that type to you just export it? (won't that get a bit disorganized after a while?)\n3. Do you have a \"types\" folder that you define by feature?\n\n&amp;#8203;\n\n    /src\n      /src/products\n         --- product.tsx\n         --- product.types.ts // these can be used in this feature or wherever?\n\nBasically, what I am asking is HOW do you structure your typings that is robust &amp; expandable?", "author_fullname": "t2_9303mz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "WHERE to put my types/interfaces?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hknqf4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593827903.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey,&lt;br/&gt;\nSo, I am working on my first TS project and I want to make sure I start off correctly.&lt;br/&gt;\nWhat is the general concensus in terms of architecture? This is a website, not a library.  &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Do you have your types/interfaces in a seperate file?\n\n&lt;ol&gt;\n&lt;li&gt;If so, do you name it with a &amp;#39;*.d.ts&amp;quot; or is that ONLY for libraries/modules to be used outside the codebase?&lt;/li&gt;\n&lt;/ol&gt;&lt;/li&gt;\n&lt;li&gt;Do you put your types IN the same file that is being used? If you have to re-use that type to you just export it? (won&amp;#39;t that get a bit disorganized after a while?)&lt;/li&gt;\n&lt;li&gt;Do you have a &amp;quot;types&amp;quot; folder that you define by feature?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&amp;#8203;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/src\n  /src/products\n     --- product.tsx\n     --- product.types.ts // these can be used in this feature or wherever?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Basically, what I am asking is HOW do you structure your typings that is robust &amp;amp; expandable?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hknqf4", "is_robot_indexable": true, "report_reasons": null, "author": "Jamesfromvenice", "discussion_type": null, "num_comments": 20, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hknqf4/where_to_put_my_typesinterfaces/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hknqf4/where_to_put_my_typesinterfaces/", "subreddit_subscribers": 43379, "created_utc": 1593799103.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "       protected validateAndSetSentenceCandidates(candidates: string[]) {\n          const passedAndUndefined: Array&lt;Sentence | undefined&gt; = candidates\n             .map(candidate =&gt; {\n                if (candidate.length &gt;= 2) {\n                   return new Sentence(candidate);\n                }\n                // else undefined returned implicitly\n             });\n    \n          const passedTest: Sentence[] = passedAndUndefined\n             .filter((item: Sentence | undefined) =&gt; item !== undefined);\n          // .filter((item: Sentence | undefined) =&gt; typeof item !== \"undefined\");\n    \n    */\n    const passedTest: Sentence[]\n    Type '(Sentence | undefined)[]' is not assignable to type 'Sentence[]'.\n      Type 'Sentence | undefined' is not assignable to type 'Sentence'.\n        Type 'undefined' is not assignable to type 'Sentence'.ts(2322)\n    /*\n\nBoth attempts to filter them out above failed", "author_fullname": "t2_3dgvi4uq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why isn't filter kicking out undefined from this array?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hkndzx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593826737.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;   protected validateAndSetSentenceCandidates(candidates: string[]) {\n      const passedAndUndefined: Array&amp;lt;Sentence | undefined&amp;gt; = candidates\n         .map(candidate =&amp;gt; {\n            if (candidate.length &amp;gt;= 2) {\n               return new Sentence(candidate);\n            }\n            // else undefined returned implicitly\n         });\n\n      const passedTest: Sentence[] = passedAndUndefined\n         .filter((item: Sentence | undefined) =&amp;gt; item !== undefined);\n      // .filter((item: Sentence | undefined) =&amp;gt; typeof item !== &amp;quot;undefined&amp;quot;);\n\n*/\nconst passedTest: Sentence[]\nType &amp;#39;(Sentence | undefined)[]&amp;#39; is not assignable to type &amp;#39;Sentence[]&amp;#39;.\n  Type &amp;#39;Sentence | undefined&amp;#39; is not assignable to type &amp;#39;Sentence&amp;#39;.\n    Type &amp;#39;undefined&amp;#39; is not assignable to type &amp;#39;Sentence&amp;#39;.ts(2322)\n/*\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Both attempts to filter them out above failed&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hkndzx", "is_robot_indexable": true, "report_reasons": null, "author": "javascript_dev", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hkndzx/why_isnt_filter_kicking_out_undefined_from_this/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hkndzx/why_isnt_filter_kicking_out_undefined_from_this/", "subreddit_subscribers": 43379, "created_utc": 1593797937.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Without the final (hacky) return statement on the empty string, Typescript demands that the return type include `void`. But the `while` loop should never exit without returning a string.\n\nIs there any way to tell TS this? Or is this hack necessary?\n\n       protected getValidInput(configStep: WizardSteps): string {\n          while (true) {\n             const rawInput: string = configStep.prompt();\n    \n             // check for an exit value\n             this.exitCheck(rawInput);\n    \n             const inputIsValid: boolean = configStep.validateInput(rawInput);\n    \n             if (inputIsValid) {\n                return rawInput;\n             } else {\n                console.log(configStep.invalidInputMessage)\n             }\n          }\n    \n          // unreachable code, needed for TS compiler\n          return \"\";\n       }", "author_fullname": "t2_3dgvi4uq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to tell TS a certain path is unreachable?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hkpin3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593834039.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Without the final (hacky) return statement on the empty string, Typescript demands that the return type include &lt;code&gt;void&lt;/code&gt;. But the &lt;code&gt;while&lt;/code&gt; loop should never exit without returning a string.&lt;/p&gt;\n\n&lt;p&gt;Is there any way to tell TS this? Or is this hack necessary?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   protected getValidInput(configStep: WizardSteps): string {\n      while (true) {\n         const rawInput: string = configStep.prompt();\n\n         // check for an exit value\n         this.exitCheck(rawInput);\n\n         const inputIsValid: boolean = configStep.validateInput(rawInput);\n\n         if (inputIsValid) {\n            return rawInput;\n         } else {\n            console.log(configStep.invalidInputMessage)\n         }\n      }\n\n      // unreachable code, needed for TS compiler\n      return &amp;quot;&amp;quot;;\n   }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hkpin3", "is_robot_indexable": true, "report_reasons": null, "author": "javascript_dev", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hkpin3/how_to_tell_ts_a_certain_path_is_unreachable/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hkpin3/how_to_tell_ts_a_certain_path_is_unreachable/", "subreddit_subscribers": 43379, "created_utc": 1593805239.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "After forgetting `strictNullChecks` I've forgotten how helpful it is to constantly have to account for `null | undefined` during my initial drafting phase.\n\nAny others you guys would promote for most projects? I also have `noImplicitAny`, and of course the `esModuleInterop`", "author_fullname": "t2_3ob6osi0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Valuable compiler options", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hkhdur", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.85, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593804318.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;After forgetting &lt;code&gt;strictNullChecks&lt;/code&gt; I&amp;#39;ve forgotten how helpful it is to constantly have to account for &lt;code&gt;null | undefined&lt;/code&gt; during my initial drafting phase.&lt;/p&gt;\n\n&lt;p&gt;Any others you guys would promote for most projects? I also have &lt;code&gt;noImplicitAny&lt;/code&gt;, and of course the &lt;code&gt;esModuleInterop&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hkhdur", "is_robot_indexable": true, "report_reasons": null, "author": "embar5", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hkhdur/valuable_compiler_options/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hkhdur/valuable_compiler_options/", "subreddit_subscribers": 43379, "created_utc": 1593775518.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Only the Not Null assertion operator (!) on validateFile worked below, not any of the other attempts at constraining null/undefined:\n\n          const configData = this.steps.reduce(\n             (accumulator: Partial&lt;ConfigData&gt;, currentStepInstance: NonNullable&lt;WizardSteps&gt;): Partial&lt;ConfigData&gt; =&gt; {\n    \n             if (currentStepInstance.needsFileValidation &amp;&amp; currentStepInstance.hasOwnProperty(\"validateFile\")) { // also tried \"in\" keyword\n    \n    // (parameter) currentStepInstance: WizardSteps\n    // Cannot invoke an object which is possibly 'undefined'.ts(2722)\n                currentStepInstance.validateFile!();\n             }\n\nIn general I try to avoid the ! operator as it isn't always honest. Is it necessary here or is there a better way?\n\nThe interface:\n\n    export default interface WizardSteps {\n       readonly hasSaveableData: boolean\n       , readonly needsFileValidation: boolean\n       , readonly invalidInputMessage?: string\n       , readonly configDataKey?: string\n    \n       , explain(): void\n       , prompt(): string\n       , validateInput(userInput?: string): boolean\n       , validateFile?(filePath?: string): boolean\n    }\n\n&amp;#x200B;", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Cannot invoke an object which is possibly 'undefined'.ts(2722)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hklt5q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593821465.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Only the Not Null assertion operator (!) on validateFile worked below, not any of the other attempts at constraining null/undefined:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;      const configData = this.steps.reduce(\n         (accumulator: Partial&amp;lt;ConfigData&amp;gt;, currentStepInstance: NonNullable&amp;lt;WizardSteps&amp;gt;): Partial&amp;lt;ConfigData&amp;gt; =&amp;gt; {\n\n         if (currentStepInstance.needsFileValidation &amp;amp;&amp;amp; currentStepInstance.hasOwnProperty(&amp;quot;validateFile&amp;quot;)) { // also tried &amp;quot;in&amp;quot; keyword\n\n// (parameter) currentStepInstance: WizardSteps\n// Cannot invoke an object which is possibly &amp;#39;undefined&amp;#39;.ts(2722)\n            currentStepInstance.validateFile!();\n         }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In general I try to avoid the ! operator as it isn&amp;#39;t always honest. Is it necessary here or is there a better way?&lt;/p&gt;\n\n&lt;p&gt;The interface:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export default interface WizardSteps {\n   readonly hasSaveableData: boolean\n   , readonly needsFileValidation: boolean\n   , readonly invalidInputMessage?: string\n   , readonly configDataKey?: string\n\n   , explain(): void\n   , prompt(): string\n   , validateInput(userInput?: string): boolean\n   , validateFile?(filePath?: string): boolean\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hklt5q", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hklt5q/cannot_invoke_an_object_which_is_possibly/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hklt5q/cannot_invoke_an_object_which_is_possibly/", "subreddit_subscribers": 43379, "created_utc": 1593792665.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    // TS2464: A computed property name must be of type 'string', 'number', 'symbol', or 'any'.\n    \n    54  [currentStepInstance.configDataKey] : validatedUserInput\n\nI'm trying to use -- I think it's called \"scope resolution\" -- here on the key name, since property access requires dot notation. The key name is a string. \n\nThe below syntax didn't work, how should it be written?\n\n             if (currentStepInstance.hasSaveableData) {\n                Object.assign(returnObject, {\n                   [currentStepInstance.configDataKey: string] : validatedUserInput\n                });\n             }", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TS2464: A computed property name must be of type 'string', 'number', 'symbol', or 'any'. 54 [x.y] : z", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hkiodn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593810200.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;// TS2464: A computed property name must be of type &amp;#39;string&amp;#39;, &amp;#39;number&amp;#39;, &amp;#39;symbol&amp;#39;, or &amp;#39;any&amp;#39;.\n\n54  [currentStepInstance.configDataKey] : validatedUserInput\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m trying to use -- I think it&amp;#39;s called &amp;quot;scope resolution&amp;quot; -- here on the key name, since property access requires dot notation. The key name is a string. &lt;/p&gt;\n\n&lt;p&gt;The below syntax didn&amp;#39;t work, how should it be written?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;         if (currentStepInstance.hasSaveableData) {\n            Object.assign(returnObject, {\n               [currentStepInstance.configDataKey: string] : validatedUserInput\n            });\n         }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hkiodn", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hkiodn/ts2464_a_computed_property_name_must_be_of_type/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hkiodn/ts2464_a_computed_property_name_must_be_of_type/", "subreddit_subscribers": 43379, "created_utc": 1593781400.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I am very new to typescript and when vscode threw that error after doing some search I mixed few stuffs from the results and came up with this solution.\n\n`interface Body {`  \n   `name: string;`  \n   `email: string;`  \n   `password: string;`  \n `}`  \n `const body: Body = request.body as Body;`  \n `const { name, email, password } = body;`\n\nHow can I improve this as it seems a lot of code for de-structuring.", "author_fullname": "t2_y9r2p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do I de-structure express request.body without \"Unsafe assignment of an any value.\" error?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hk1mp8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593740690.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am very new to typescript and when vscode threw that error after doing some search I mixed few stuffs from the results and came up with this solution.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;interface Body {&lt;/code&gt;&lt;br/&gt;\n   &lt;code&gt;name: string;&lt;/code&gt;&lt;br/&gt;\n   &lt;code&gt;email: string;&lt;/code&gt;&lt;br/&gt;\n   &lt;code&gt;password: string;&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const body: Body = request.body as Body;&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const { name, email, password } = body;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;How can I improve this as it seems a lot of code for de-structuring.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hk1mp8", "is_robot_indexable": true, "report_reasons": null, "author": "farhantahir", "discussion_type": null, "num_comments": 20, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hk1mp8/how_do_i_destructure_express_requestbody_without/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hk1mp8/how_do_i_destructure_express_requestbody_without/", "subreddit_subscribers": 43379, "created_utc": 1593711890.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "So my code looks like this:\n\nAn abstract class named Component with nothing inside which all component inherit from.\n\nAn abstract generic base Entity class functioning as an Array abstraction with methods to add/get instances of classes,\n\nA Entity class which extends BaseEntity with all the getters, one for each component, the reason I created it is because I must always force the type like &lt;Health&gt; this.getComponent(Health), I want to get rid of it, is there a way to type check BaseEntity so that when I do  this.getComponent(Health), the compiler knows its Health instance?\n\n&amp;#x200B;\n\n    export class Component {}\n    export class Health extends Component { ............}\n    export class Position extends Component { ............. }\n    \n    .....................\n    export abstract class BaseEntity&lt;R&gt;\u00a0{\n        private readonly entity:\u00a0Array&lt;R&gt;\u00a0=\u00a0[];\n    \n        protected getComponent&lt;T extends\u00a0{\u00a0new(...args:\u00a0any[]):\u00a0R\u00a0}&gt;(component:\u00a0T):\u00a0R\u00a0{\n            return this.entity.find(\n                currentComponent =&gt; currentComponent instanceof component\n    \u00a0\u00a0\u00a0     ); \u00a0\u00a0\u00a0\u00a0\n        } \n    \n        addComponent(component: R): R {\n            const index = this.entity.indexOf(component)\n    \n            if (index === -1) {\n                 this.entity.push(component)\n    \n                 return component\n            }\n        }\n    }\n    \n    .....................\n    export abstract class Entity extends BaseEntity&lt;Component | Entity&gt; {\n        get getHealth(): Health {\n            return &lt;Health&gt; this.getComponent(Health)\n        }\n    \n        get getPosition(): Position {\n            return &lt;Position&gt; this.getComponent(Position)\n        }\n    }\n    export class Player extends Entity {}\n    export class Monster extends Entity {}", "author_fullname": "t2_9ao0jfs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to deal with array of different class instances in typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hk2z2a", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1593764426.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593744935.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So my code looks like this:&lt;/p&gt;\n\n&lt;p&gt;An abstract class named Component with nothing inside which all component inherit from.&lt;/p&gt;\n\n&lt;p&gt;An abstract generic base Entity class functioning as an Array abstraction with methods to add/get instances of classes,&lt;/p&gt;\n\n&lt;p&gt;A Entity class which extends BaseEntity with all the getters, one for each component, the reason I created it is because I must always force the type like &amp;lt;Health&amp;gt; this.getComponent(Health), I want to get rid of it, is there a way to type check BaseEntity so that when I do  this.getComponent(Health), the compiler knows its Health instance?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export class Component {}\nexport class Health extends Component { ............}\nexport class Position extends Component { ............. }\n\n.....................\nexport abstract class BaseEntity&amp;lt;R&amp;gt;\u00a0{\n    private readonly entity:\u00a0Array&amp;lt;R&amp;gt;\u00a0=\u00a0[];\n\n    protected getComponent&amp;lt;T extends\u00a0{\u00a0new(...args:\u00a0any[]):\u00a0R\u00a0}&amp;gt;(component:\u00a0T):\u00a0R\u00a0{\n        return this.entity.find(\n            currentComponent =&amp;gt; currentComponent instanceof component\n\u00a0\u00a0\u00a0     ); \u00a0\u00a0\u00a0\u00a0\n    } \n\n    addComponent(component: R): R {\n        const index = this.entity.indexOf(component)\n\n        if (index === -1) {\n             this.entity.push(component)\n\n             return component\n        }\n    }\n}\n\n.....................\nexport abstract class Entity extends BaseEntity&amp;lt;Component | Entity&amp;gt; {\n    get getHealth(): Health {\n        return &amp;lt;Health&amp;gt; this.getComponent(Health)\n    }\n\n    get getPosition(): Position {\n        return &amp;lt;Position&amp;gt; this.getComponent(Position)\n    }\n}\nexport class Player extends Entity {}\nexport class Monster extends Entity {}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hk2z2a", "is_robot_indexable": true, "report_reasons": null, "author": "numacurse", "discussion_type": null, "num_comments": 18, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hk2z2a/how_to_deal_with_array_of_different_class/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hk2z2a/how_to_deal_with_array_of_different_class/", "subreddit_subscribers": 43379, "created_utc": 1593716135.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Recently I had to use the `ReturnType` generic type constructor to build a type for me, that was the return shape of an obsurely documented method in Google Text To Speech's API:\n\n    protected async fetchAndWriteAudio(options: {\n          input : { text : string }\n          , voice : { languageCode : string, ssmlGender: voiceGender }\n          , audioConfig : { \n             audioEncoding : \"AUDIO_ENCODING_UNSPECIFIED\" | \"LINEAR16\" | \"MP3\" | \"OGG_OPUS\" }\n       }, fileNameAndPath: string)\n          : Promise&lt;ReturnType&lt;typeof TextToSpeechClient.prototype.synthesizeSpeech&gt;&gt; {\n\nBut now the title error shows on the error-commented lines below. I thought a specific string value, depicted as a quad union from the `ReturnType` constructor, should match one of those specific strings. Instead, none match. Why is that and what is the proper fix?\n\n       public async makeSentenceAudio(subFolderPath: string): Promise&lt;void&gt; {\n          // setup the foreign and english text string\n          const foreignSentenceText = this.textTranslate(\n             this.sentence.englishVersion\n             , translationDirection.toForeign);\n          const englishText = this.sentence.englishVersion;\n    \n          \n          /**** Generate Audios ****/\n          // define audio options (including text)\n          const sharedOptions = {\n             input: { text : \"\" }\n             , voice: { languageCode : \"\", ssmlGender : voiceGender.male }\n             , audioConfig : {audioEncoding : \"OGG_OPUS\"}\n          }\n    \n          const foreignAudioOptions = {\n             ...sharedOptions\n             , input: {text: \"\"}\n          }\n    \n          const englishAudioOptions = {\n             ...sharedOptions\n             , input: {text: \"\"}\n          }\n    \n          this.fetchAndWriteAudio(foreignAudioOptions, \"placeholder\");\n          this.fetchAndWriteAudio(englishAudioOptions, \"placeholder\");\n\n.\n\n    // the error message. There was also one on englishAudioOptions\n    \n    const foreignAudioOptions: {\n        input: {\n            text: string;\n        };\n        voice: {\n            languageCode: string;\n            ssmlGender: voiceGender;\n        };\n        audioConfig: {\n            audioEncoding: string;\n        };\n    }\n    Argument of type '{ input: { text: string; }; voice: { languageCode: string; ssmlGender: voiceGender; }; audioConfig: { audioEncoding: string; }; }' is not assignable to parameter of type '{ input: { text: string; }; voice: { languageCode: string; ssmlGender: voiceGender; }; audioConfig: { audioEncoding: \"OGG_OPUS\" | \"AUDIO_ENCODING_UNSPECIFIED\" | \"LINEAR16\" | \"MP3\"; }; }'.\n    \n      The types of 'audioConfig.audioEncoding' are incompatible between these types.\n        Type 'string' is not assignable to type '\"OGG_OPUS\" | \"AUDIO_ENCODING_UNSPECIFIED\" | \"LINEAR16\" | \"MP3\"'. ts(2345)", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type 'string' is not assignable to type '\"X\" | \"Y\" | \"Z\"'", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hjvw3n", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593720796.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Recently I had to use the &lt;code&gt;ReturnType&lt;/code&gt; generic type constructor to build a type for me, that was the return shape of an obsurely documented method in Google Text To Speech&amp;#39;s API:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;protected async fetchAndWriteAudio(options: {\n      input : { text : string }\n      , voice : { languageCode : string, ssmlGender: voiceGender }\n      , audioConfig : { \n         audioEncoding : &amp;quot;AUDIO_ENCODING_UNSPECIFIED&amp;quot; | &amp;quot;LINEAR16&amp;quot; | &amp;quot;MP3&amp;quot; | &amp;quot;OGG_OPUS&amp;quot; }\n   }, fileNameAndPath: string)\n      : Promise&amp;lt;ReturnType&amp;lt;typeof TextToSpeechClient.prototype.synthesizeSpeech&amp;gt;&amp;gt; {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But now the title error shows on the error-commented lines below. I thought a specific string value, depicted as a quad union from the &lt;code&gt;ReturnType&lt;/code&gt; constructor, should match one of those specific strings. Instead, none match. Why is that and what is the proper fix?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   public async makeSentenceAudio(subFolderPath: string): Promise&amp;lt;void&amp;gt; {\n      // setup the foreign and english text string\n      const foreignSentenceText = this.textTranslate(\n         this.sentence.englishVersion\n         , translationDirection.toForeign);\n      const englishText = this.sentence.englishVersion;\n\n\n      /**** Generate Audios ****/\n      // define audio options (including text)\n      const sharedOptions = {\n         input: { text : &amp;quot;&amp;quot; }\n         , voice: { languageCode : &amp;quot;&amp;quot;, ssmlGender : voiceGender.male }\n         , audioConfig : {audioEncoding : &amp;quot;OGG_OPUS&amp;quot;}\n      }\n\n      const foreignAudioOptions = {\n         ...sharedOptions\n         , input: {text: &amp;quot;&amp;quot;}\n      }\n\n      const englishAudioOptions = {\n         ...sharedOptions\n         , input: {text: &amp;quot;&amp;quot;}\n      }\n\n      this.fetchAndWriteAudio(foreignAudioOptions, &amp;quot;placeholder&amp;quot;);\n      this.fetchAndWriteAudio(englishAudioOptions, &amp;quot;placeholder&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// the error message. There was also one on englishAudioOptions\n\nconst foreignAudioOptions: {\n    input: {\n        text: string;\n    };\n    voice: {\n        languageCode: string;\n        ssmlGender: voiceGender;\n    };\n    audioConfig: {\n        audioEncoding: string;\n    };\n}\nArgument of type &amp;#39;{ input: { text: string; }; voice: { languageCode: string; ssmlGender: voiceGender; }; audioConfig: { audioEncoding: string; }; }&amp;#39; is not assignable to parameter of type &amp;#39;{ input: { text: string; }; voice: { languageCode: string; ssmlGender: voiceGender; }; audioConfig: { audioEncoding: &amp;quot;OGG_OPUS&amp;quot; | &amp;quot;AUDIO_ENCODING_UNSPECIFIED&amp;quot; | &amp;quot;LINEAR16&amp;quot; | &amp;quot;MP3&amp;quot;; }; }&amp;#39;.\n\n  The types of &amp;#39;audioConfig.audioEncoding&amp;#39; are incompatible between these types.\n    Type &amp;#39;string&amp;#39; is not assignable to type &amp;#39;&amp;quot;OGG_OPUS&amp;quot; | &amp;quot;AUDIO_ENCODING_UNSPECIFIED&amp;quot; | &amp;quot;LINEAR16&amp;quot; | &amp;quot;MP3&amp;quot;&amp;#39;. ts(2345)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hjvw3n", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hjvw3n/type_string_is_not_assignable_to_type_x_y_z/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hjvw3n/type_string_is_not_assignable_to_type_x_y_z/", "subreddit_subscribers": 43379, "created_utc": 1593691996.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hjvw3n", "before": null}}