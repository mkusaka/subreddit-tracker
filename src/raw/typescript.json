{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - March", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fbll8c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1583049956.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "908dba50-143b-11ea-8541-0e435e5ea9e1", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fbll8c", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 6, "send_replies": false, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fbll8c/whos_hiring_typescript_developers_march/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/fbll8c/whos_hiring_typescript_developers_march/", "subreddit_subscribers": 36040, "created_utc": 1583021156.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_93kdo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type-safe lenses", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_foo055", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Rnkh5Kk9Ngs2L3hua7PejcTku3i0VnU4oX14Tu0WDVM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585160705.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Ur0NwigRQMc8lhzcTmnoosmuwqObm3kN3OQlhbEiUEs.jpg?auto=webp&amp;s=e81504f0dcc41a0833d8bbbfae9c5297c0837bce", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/Ur0NwigRQMc8lhzcTmnoosmuwqObm3kN3OQlhbEiUEs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=15b84e4bdfee8403b08840cf1dea7e29df5257dc", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/Ur0NwigRQMc8lhzcTmnoosmuwqObm3kN3OQlhbEiUEs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=149c7a10ea1faf801814720806319d8ccee73ea5", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/Ur0NwigRQMc8lhzcTmnoosmuwqObm3kN3OQlhbEiUEs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e2601fe4a1e27e55b2c369355a34a86c93081040", "width": 320, "height": 320}], "variants": {}, "id": "VWsW44WCMHRvb9fkCDOVUiG7o4LVhC5LzDGgpwqoajM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "foo055", "is_robot_indexable": true, "report_reasons": null, "author": "gmaggior", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/foo055/typesafe_lenses/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/hoppinger/ts-lenses", "subreddit_subscribers": 36040, "created_utc": 1585131905.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_ovblo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "MySQL Parser in Typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fojj5j", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/7B1nw9dKUWR0yBgLD8llcK8TuYX5eQB_hteVH-AMa8I.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585136576.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/WZyfjC2lOT3I09qhy-MCi-sYaYts5M1dljddI18kJBQ.jpg?auto=webp&amp;s=f819d56b3353de875ef2a11f384f7a6824c4f160", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/WZyfjC2lOT3I09qhy-MCi-sYaYts5M1dljddI18kJBQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c20ff69753881cf602eb049c1d304f16682b6520", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/WZyfjC2lOT3I09qhy-MCi-sYaYts5M1dljddI18kJBQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=21b9277afac5f8917cd69e2a975cdcdeeb87a911", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/WZyfjC2lOT3I09qhy-MCi-sYaYts5M1dljddI18kJBQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f1bfd9782ba9627ae4598256ab205fd64a3560dc", "width": 320, "height": 320}], "variants": {}, "id": "wIA5U8Hjn0LJxpfvEnfn8Vp6sSRxh0YnNWUlOCj-858"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fojj5j", "is_robot_indexable": true, "report_reasons": null, "author": "stevenmiller888", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fojj5j/mysql_parser_in_typescript/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/stevenmiller888/ts-mysql-parser", "subreddit_subscribers": 36040, "created_utc": 1585107776.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_35whz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Redux Toolkit v1.3.0 final: New `createAsyncThunk` and `createEntityAdapter` APIs, Immer 6.0, smaller bundle sizes!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fo5uvd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Br-RQh3pWTYw4qmvc581RyCITsx6Uf9QurkThs_t2WM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585088334.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/jz05KL1avdaYLfSZBt0pxgishjIAcXA7g_D5NOnGKcE.jpg?auto=webp&amp;s=bd9221671d7f46d592bec7651b6943ba564867eb", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/jz05KL1avdaYLfSZBt0pxgishjIAcXA7g_D5NOnGKcE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=64768385c1432db43d13b119bbb2f453d2ec9796", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/jz05KL1avdaYLfSZBt0pxgishjIAcXA7g_D5NOnGKcE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=49d2e392c35a87f550f730fdc0cae6e7f747f474", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/jz05KL1avdaYLfSZBt0pxgishjIAcXA7g_D5NOnGKcE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7d4489d35f878032a60fbb15bce9f3304bac145b", "width": 320, "height": 320}], "variants": {}, "id": "3_Po3Z5eLRJm9nGz_2gliNNOJBgWg2Rl5eDoDOnHSQM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo5uvd", "is_robot_indexable": true, "report_reasons": null, "author": "acemarke", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fo5uvd/redux_toolkit_v130_final_new_createasyncthunk_and/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/reduxjs/redux-toolkit/releases/tag/v1.3.0", "subreddit_subscribers": 36040, "created_utc": 1585059534.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "If yes why?", "author_fullname": "t2_3lkpxytp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is typescript programmers should know about prototype in JavaScript in deep?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fok6fv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585139520.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If yes why?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fok6fv", "is_robot_indexable": true, "report_reasons": null, "author": "shadowHijackers", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fok6fv/is_typescript_programmers_should_know_about/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fok6fv/is_typescript_programmers_should_know_about/", "subreddit_subscribers": 36040, "created_utc": 1585110720.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_21dq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A rule of thumb for working with null values", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fo5sim", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/uNm1YmiR9lPXwgsRFRj0uGNS-kuP9bwviSBY7fgOrZk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585088070.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "effectivetypescript.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?auto=webp&amp;s=2b44bece9abbb40f39797ec228d32388e0c5766c", "width": 560, "height": 735}, "resolutions": [{"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1dca5534d811fbe7aaaba60890caeaa0ff020750", "width": 108, "height": 141}, {"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b00d53f24aa79581db0e3b4f30d52d2753fcba2d", "width": 216, "height": 283}, {"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ea2681fdf66ad8fa201d189ba0fcbbaaef46ae10", "width": 320, "height": 420}], "variants": {}, "id": "8zYitvujXg_ZAhj8K4Sk_G_W5qzcv10lw_0IOSj7jVc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo5sim", "is_robot_indexable": true, "report_reasons": null, "author": "danvk", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fo5sim/a_rule_of_thumb_for_working_with_null_values/", "parent_whitelist_status": null, "stickied": false, "url": "https://effectivetypescript.com/2020/03/24/null-values-to-perimeter/", "subreddit_subscribers": 36040, "created_utc": 1585059270.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Probably the title is wrong, i couldn't figure out how to explain it. Here is a simplified version of the problem.\n\n    type Foo&lt;T&gt; = { getValue: () =&gt; T; };\n    \n    function createFoo&lt;T&gt;(value: T): Foo&lt;T&gt; { return { getValue: () =&gt; value }; }\n    \n    let items = { apple: createFoo(1), orange: createFoo('hello'), };\n    \n    function combine(items) { // }\n    \n    let combined = combine({ apple, orange });\n    \n    /* combined's type should be { apple: number, orange: string } */\n\nThank you :)", "author_fullname": "t2_4f32ij9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to type return type of a function based on given argument", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fo2rsk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1585061804.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585073862.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Probably the title is wrong, i couldn&amp;#39;t figure out how to explain it. Here is a simplified version of the problem.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Foo&amp;lt;T&amp;gt; = { getValue: () =&amp;gt; T; };\n\nfunction createFoo&amp;lt;T&amp;gt;(value: T): Foo&amp;lt;T&amp;gt; { return { getValue: () =&amp;gt; value }; }\n\nlet items = { apple: createFoo(1), orange: createFoo(&amp;#39;hello&amp;#39;), };\n\nfunction combine(items) { // }\n\nlet combined = combine({ apple, orange });\n\n/* combined&amp;#39;s type should be { apple: number, orange: string } */\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thank you :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo2rsk", "is_robot_indexable": true, "report_reasons": null, "author": "enesTufekci", "discussion_type": null, "num_comments": 27, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fo2rsk/how_to_type_return_type_of_a_function_based_on/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fo2rsk/how_to_type_return_type_of_a_function_based_on/", "subreddit_subscribers": 36040, "created_utc": 1585045062.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Here's the [code](https://pastebin.com/cQrWSrd3)\n\nCompiler [error](https://pastebin.com/auYcY96J)\n\nEdit: Switched to Markdown. I really need to see if there's a way to set that to default. Also, apologies for the syntax highlighting in Pastebin. Is there a better service to share TS code?", "author_fullname": "t2_o8qgq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ran into a TS issue. Maybe a TSC problem?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fo7j2s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1585065906.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1585094466.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s the &lt;a href=\"https://pastebin.com/cQrWSrd3\"&gt;code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Compiler &lt;a href=\"https://pastebin.com/auYcY96J\"&gt;error&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: Switched to Markdown. I really need to see if there&amp;#39;s a way to set that to default. Also, apologies for the syntax highlighting in Pastebin. Is there a better service to share TS code?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/rc2Fna9bJ_J6PFVDuZUOKJl5CH9700Qyi0-ll1mn4C4.jpg?auto=webp&amp;s=e28867cccd2864fc170848b64bc44e6a778116b9", "width": 250, "height": 250}, "resolutions": [{"url": "https://external-preview.redd.it/rc2Fna9bJ_J6PFVDuZUOKJl5CH9700Qyi0-ll1mn4C4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6b38a59d6140109bc38ed4f88b98bd4436dfe09b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/rc2Fna9bJ_J6PFVDuZUOKJl5CH9700Qyi0-ll1mn4C4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=203ad20eac023d67d122c5f834516a4670799f63", "width": 216, "height": 216}], "variants": {}, "id": "tEFaKdpbTuSBBWpWQ-kmQ1l_KwNUpQtPpUtOwmLiL-A"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo7j2s", "is_robot_indexable": true, "report_reasons": null, "author": "nosrednehnai", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fo7j2s/ran_into_a_ts_issue_maybe_a_tsc_problem/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fo7j2s/ran_into_a_ts_issue_maybe_a_tsc_problem/", "subreddit_subscribers": 36040, "created_utc": 1585065666.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "For practice I'm working on an algorithm that assigns values as (object) key names. The keys are paired to an array.\n\nThis is in raw  JS. In TS I don't know how to handle objects with dynamic key names:\n\n    { joe : [{...}, {...}, {...}], sally : [{...}, {...}]  } \n\n(key names will vary)\n\nAnyone know how to properly type these?", "author_fullname": "t2_3dgvi4uq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to type object with variable key names?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fnu9ha", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585034319.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For practice I&amp;#39;m working on an algorithm that assigns values as (object) key names. The keys are paired to an array.&lt;/p&gt;\n\n&lt;p&gt;This is in raw  JS. In TS I don&amp;#39;t know how to handle objects with dynamic key names:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{ joe : [{...}, {...}, {...}], sally : [{...}, {...}]  } \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(key names will vary)&lt;/p&gt;\n\n&lt;p&gt;Anyone know how to properly type these?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fnu9ha", "is_robot_indexable": true, "report_reasons": null, "author": "javascript_dev", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fnu9ha/how_to_type_object_with_variable_key_names/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fnu9ha/how_to_type_object_with_variable_key_names/", "subreddit_subscribers": 36040, "created_utc": 1585005519.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Trying to grok `typedi` and came up with this. Is following right?\n\n1. `@Inject()` injects `Container` into decorated class properties,  \n*Hint: **InjectContainer**IntoProp*\n2. `@Service()` injects `Container` into decorated classes via constructor params,  \n*Hint: **InjectContainer**IntoClassViaConstructorParams*\n3. `@Service{'&lt;name&gt;')` injects `Container` into decorated classes and provides that classes via `&lt;name&gt;` via `Container.get('&lt;name&gt;')`,  \n*Hint: **InjectContainer**IntoClassViaConstructorParamsAnd**ProvideClass**ViaAlias*\n\n1 is mandatory for classes without a constructor. 2 is mandatory if a constructor with params injects the dependency. 3 is the one which actually act as a *service*.\n\nA more intuitive naming scheme would have been:  \n1: `@InjectToProp()`   \n2: `@InjectViaConstructor()`  \n3: `@ProvideAs('&lt;name&gt;')`", "author_fullname": "t2_2x0723cu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "typedi cheat sheet", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fo1equ", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1585053686.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585066297.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Trying to grok &lt;code&gt;typedi&lt;/code&gt; and came up with this. Is following right?&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;@Inject()&lt;/code&gt; injects &lt;code&gt;Container&lt;/code&gt; into decorated class properties,&lt;br/&gt;\n&lt;em&gt;Hint: *&lt;/em&gt;InjectContainer*&lt;em&gt;IntoProp&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;@Service()&lt;/code&gt; injects &lt;code&gt;Container&lt;/code&gt; into decorated classes via constructor params,&lt;br/&gt;\n&lt;em&gt;Hint: *&lt;/em&gt;InjectContainer*&lt;em&gt;IntoClassViaConstructorParams&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;@Service{&amp;#39;&amp;lt;name&amp;gt;&amp;#39;)&lt;/code&gt; injects &lt;code&gt;Container&lt;/code&gt; into decorated classes and provides that classes via &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; via &lt;code&gt;Container.get(&amp;#39;&amp;lt;name&amp;gt;&amp;#39;)&lt;/code&gt;,&lt;br/&gt;\n&lt;em&gt;Hint: *&lt;/em&gt;InjectContainer&lt;strong&gt;IntoClassViaConstructorParamsAnd&lt;/strong&gt;ProvideClass*&lt;em&gt;ViaAlias&lt;/em&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;1 is mandatory for classes without a constructor. 2 is mandatory if a constructor with params injects the dependency. 3 is the one which actually act as a &lt;em&gt;service&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;A more intuitive naming scheme would have been:&lt;br/&gt;\n1: &lt;code&gt;@InjectToProp()&lt;/code&gt;&lt;br/&gt;\n2: &lt;code&gt;@InjectViaConstructor()&lt;/code&gt;&lt;br/&gt;\n3: &lt;code&gt;@ProvideAs(&amp;#39;&amp;lt;name&amp;gt;&amp;#39;)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo1equ", "is_robot_indexable": true, "report_reasons": null, "author": "desmap", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fo1equ/typedi_cheat_sheet/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fo1equ/typedi_cheat_sheet/", "subreddit_subscribers": 36040, "created_utc": 1585037497.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello all,\n\nI am learning Typescript and I was naming my interfaces happily until I arrived to Mongodb/Mongoose.  \n\n\nFor example, I had before an interface called User. However, when I create my model schema, in mongo without Typescript I would have called this User as well. Therefore, that would create a conflict.  \n\n\nIs there a common convention about this?  \n\n\nI see this guy in the link down below uses IUser but I have read also that Typescript community does not like using Iwhatever... and personally I do not like that either.\n\n[https://brianflove.com/2016/10/04/typescript-declaring-mongoose-schema-model/](https://brianflove.com/2016/10/04/typescript-declaring-mongoose-schema-model/)  \n\n\nTherefore, do you know what is the most common way to naming mongo stuff and interfaces?  \n\n\nThank you in advance.", "author_fullname": "t2_30go39zl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is the common convention for interface names?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fng5ji", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1584978742.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello all,&lt;/p&gt;\n\n&lt;p&gt;I am learning Typescript and I was naming my interfaces happily until I arrived to Mongodb/Mongoose.  &lt;/p&gt;\n\n&lt;p&gt;For example, I had before an interface called User. However, when I create my model schema, in mongo without Typescript I would have called this User as well. Therefore, that would create a conflict.  &lt;/p&gt;\n\n&lt;p&gt;Is there a common convention about this?  &lt;/p&gt;\n\n&lt;p&gt;I see this guy in the link down below uses IUser but I have read also that Typescript community does not like using Iwhatever... and personally I do not like that either.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://brianflove.com/2016/10/04/typescript-declaring-mongoose-schema-model/\"&gt;https://brianflove.com/2016/10/04/typescript-declaring-mongoose-schema-model/&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Therefore, do you know what is the most common way to naming mongo stuff and interfaces?  &lt;/p&gt;\n\n&lt;p&gt;Thank you in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/cwUj2AOXTfPH6NDh_x2CpkpIs2Wh5-at6i_96IBiG_E.jpg?auto=webp&amp;s=f82b3525f428155439379a555636eca914f21871", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/cwUj2AOXTfPH6NDh_x2CpkpIs2Wh5-at6i_96IBiG_E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fcffd95919d5c76a8c1f0f16a2245aaef0c716ff", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/cwUj2AOXTfPH6NDh_x2CpkpIs2Wh5-at6i_96IBiG_E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=06db6b06f5659ab49e78bf6f9beaaa9e681b91d8", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/cwUj2AOXTfPH6NDh_x2CpkpIs2Wh5-at6i_96IBiG_E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8a759add9c247810e34e5f8e3ed8bc1872be88c6", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/cwUj2AOXTfPH6NDh_x2CpkpIs2Wh5-at6i_96IBiG_E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f8dc9839f12053ef985c50efef7a1767eacf9e13", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/cwUj2AOXTfPH6NDh_x2CpkpIs2Wh5-at6i_96IBiG_E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c85b4f5f0b07769132fe354f205cb3191e070fe8", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/cwUj2AOXTfPH6NDh_x2CpkpIs2Wh5-at6i_96IBiG_E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=600de93fc34be69ac39cdd91d40a5665eaee8b60", "width": 1080, "height": 567}], "variants": {}, "id": "CkgHkpPsjHAWUUUxtUDJliRw5q-6FF5hx8Feor3fC94"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fng5ji", "is_robot_indexable": true, "report_reasons": null, "author": "dejavits", "discussion_type": null, "num_comments": 35, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fng5ji/what_is_the_common_convention_for_interface_names/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fng5ji/what_is_the_common_convention_for_interface_names/", "subreddit_subscribers": 36040, "created_utc": 1584949942.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fng5ji", "before": null}}