{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi everyone - termshark v2.1 is out now on github. Termshark is a terminal UI for tshark that tries to imitate Wireshark. It's written 100% in Go and because of that, termshark is only a single binary on each supported platform. New with this release are conversations by protocol, packet colors and capture file info. A shout-out to the terrific tcell (https://github.com/gdamore/tcell), a library for handling terminals, upon which termshark is constructed. Here's the website - https://termshark.io. I hope you find it useful!", "author_fullname": "t2_onenf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "termshark v2.1: a terminal UI for tshark, written in Go - now with conversations and packet colors", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey0m9z", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 60, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 60, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580729342.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone - termshark v2.1 is out now on github. Termshark is a terminal UI for tshark that tries to imitate Wireshark. It&amp;#39;s written 100% in Go and because of that, termshark is only a single binary on each supported platform. New with this release are conversations by protocol, packet colors and capture file info. A shout-out to the terrific tcell (&lt;a href=\"https://github.com/gdamore/tcell\"&gt;https://github.com/gdamore/tcell&lt;/a&gt;), a library for handling terminals, upon which termshark is constructed. Here&amp;#39;s the website - &lt;a href=\"https://termshark.io\"&gt;https://termshark.io&lt;/a&gt;. I hope you find it useful!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey0m9z", "is_robot_indexable": true, "report_reasons": null, "author": "gramboc", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ey0m9z/termshark_v21_a_terminal_ui_for_tshark_written_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ey0m9z/termshark_v21_a_terminal_ui_for_tshark_written_in/", "subreddit_subscribers": 101564, "created_utc": 1580700542.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3a7bdg90", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TinyGo is now officially a Google sponsored project", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_exn69u", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 464, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Breaking news from the &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; devroom here at &lt;a href=\"https://twitter.com/hashtag/FOSDEM2020?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#FOSDEM2020&lt;/a&gt; that we are very excited to share with you: &lt;a href=\"https://twitter.com/hashtag/tinygo?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#tinygo&lt;/a&gt; is now officially a Google sponsored project!&lt;/p&gt;&amp;mdash; TinyGo (@TinyGolang) &lt;a href=\"https://twitter.com/TinyGolang/status/1223887654158307328?ref_src=twsrc%5Etfw\"&gt;February 2, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 185}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/TinyGolang/status/1223887654158307328", "author_name": "TinyGo", "height": 185, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Breaking news from the &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; devroom here at &lt;a href=\"https://twitter.com/hashtag/FOSDEM2020?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#FOSDEM2020&lt;/a&gt; that we are very excited to share with you: &lt;a href=\"https://twitter.com/hashtag/tinygo?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#tinygo&lt;/a&gt; is now officially a Google sponsored project!&lt;/p&gt;&amp;mdash; TinyGo (@TinyGolang) &lt;a href=\"https://twitter.com/TinyGolang/status/1223887654158307328?ref_src=twsrc%5Etfw\"&gt;February 2, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/TinyGolang", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Breaking news from the &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; devroom here at &lt;a href=\"https://twitter.com/hashtag/FOSDEM2020?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#FOSDEM2020&lt;/a&gt; that we are very excited to share with you: &lt;a href=\"https://twitter.com/hashtag/tinygo?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#tinygo&lt;/a&gt; is now officially a Google sponsored project!&lt;/p&gt;&amp;mdash; TinyGo (@TinyGolang) &lt;a href=\"https://twitter.com/TinyGolang/status/1223887654158307328?ref_src=twsrc%5Etfw\"&gt;February 2, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/exn69u", "height": 185}, "link_flair_text": null, "can_mod_post": false, "score": 464, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580671756.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "exn69u", "is_robot_indexable": true, "report_reasons": null, "author": "Thorbassen", "discussion_type": null, "num_comments": 26, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/exn69u/tinygo_is_now_officially_a_google_sponsored/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/TinyGolang/status/1223887654158307328", "subreddit_subscribers": 101564, "created_utc": 1580642956.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/TinyGolang/status/1223887654158307328", "author_name": "TinyGo", "height": 185, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Breaking news from the &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; devroom here at &lt;a href=\"https://twitter.com/hashtag/FOSDEM2020?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#FOSDEM2020&lt;/a&gt; that we are very excited to share with you: &lt;a href=\"https://twitter.com/hashtag/tinygo?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#tinygo&lt;/a&gt; is now officially a Google sponsored project!&lt;/p&gt;&amp;mdash; TinyGo (@TinyGolang) &lt;a href=\"https://twitter.com/TinyGolang/status/1223887654158307328?ref_src=twsrc%5Etfw\"&gt;February 2, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/TinyGolang", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_9ix3v", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "gopls v0.3.0 released, now loads in the context of an entire workspace - greatly improves features like \"find all references\"", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_exw44o", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 61, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 61, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580709746.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "exw44o", "is_robot_indexable": true, "report_reasons": null, "author": "magnetik79", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/exw44o/gopls_v030_released_now_loads_in_the_context_of/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/golang/go/issues/33030#issuecomment-580827997", "subreddit_subscribers": 101564, "created_utc": 1580680946.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_xuyfp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Terminal based ASCII fluid simulation controlled by your webcam using the Pigo face detection library.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ey6c3t", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580761077.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey6c3t", "is_robot_indexable": true, "report_reasons": null, "author": "esimov", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ey6c3t/terminal_based_ascii_fluid_simulation_controlled/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/esimov/ascii-fluid", "subreddit_subscribers": 101564, "created_utc": 1580732277.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_o4uf501", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "libp2p-lora-transport : enabling low-bandwidth LibP2P IoT communication over LoRa", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_exwqtk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "ipfs", "selftext": "Hey /r/ipfs, got some exciting developments for a hobby project I'm working on. LoRa is a low-powered wireless communication protocol, particularily used in IoT, remote sensor readings, etc.. There's a lot of Lo\nRa dev hardware out there that's extremely cheap for the arduino and raspberry pi platforms so I decided to pick some equipment up and experiment with using LoRa as a transport layer for LibP2P.\n\nThe goal for the project is to have two different methods of using LoRa with LibP2P:\n\n  * Transport (enabling swarm communication)\n  * Protocol (enabling arbitrary communications, and protocols over LoRa)\n\nFor the moment I'm working on the \"protocol\" aspect, and have got it to be about 50% finished. At the moment a LibP2P node with absolutely no awareness of LoRa can receive data being sent over LoRa through way o\nf a \"bridge node\", which has a connection to an arduino + LoRa HAT, and LibP2P.\n\nIf you want to check out the demo of the protocol aspect, check it out [here](https://gateway.temporal.cloud/ipfs/QmSoJnCaJCVigMKuLSLVa3kjh2JXZxFp62HTZo867nKNST).\n\nIf you want to check out the code running this, head on over to [github](https://github.com/RTradeLtd/libp2p-lora-transport)", "author_fullname": "t2_o4uf501", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "libp2p-lora-transport : enabling low-bandwidth LibP2P IoT communication over LoRa", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ipfs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_exwpuw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580712036.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ipfs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey &lt;a href=\"/r/ipfs\"&gt;/r/ipfs&lt;/a&gt;, got some exciting developments for a hobby project I&amp;#39;m working on. LoRa is a low-powered wireless communication protocol, particularily used in IoT, remote sensor readings, etc.. There&amp;#39;s a lot of Lo\nRa dev hardware out there that&amp;#39;s extremely cheap for the arduino and raspberry pi platforms so I decided to pick some equipment up and experiment with using LoRa as a transport layer for LibP2P.&lt;/p&gt;\n\n&lt;p&gt;The goal for the project is to have two different methods of using LoRa with LibP2P:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Transport (enabling swarm communication)&lt;/li&gt;\n&lt;li&gt;Protocol (enabling arbitrary communications, and protocols over LoRa)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;For the moment I&amp;#39;m working on the &amp;quot;protocol&amp;quot; aspect, and have got it to be about 50% finished. At the moment a LibP2P node with absolutely no awareness of LoRa can receive data being sent over LoRa through way o\nf a &amp;quot;bridge node&amp;quot;, which has a connection to an arduino + LoRa HAT, and LibP2P.&lt;/p&gt;\n\n&lt;p&gt;If you want to check out the demo of the protocol aspect, check it out &lt;a href=\"https://gateway.temporal.cloud/ipfs/QmSoJnCaJCVigMKuLSLVa3kjh2JXZxFp62HTZo867nKNST\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;If you want to check out the code running this, head on over to &lt;a href=\"https://github.com/RTradeLtd/libp2p-lora-transport\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_34dae", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "exwpuw", "is_robot_indexable": true, "report_reasons": null, "author": "post_a_bles", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ipfs/comments/exwpuw/libp2ploratransport_enabling_lowbandwidth_libp2p/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/ipfs/comments/exwpuw/libp2ploratransport_enabling_lowbandwidth_libp2p/", "subreddit_subscribers": 6697, "created_utc": 1580683236.0, "num_crossposts": 6, "media": null, "is_video": false}], "created": 1580712142.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ipfs", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "exwqtk", "is_robot_indexable": true, "report_reasons": null, "author": "post_a_bles", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_exwpuw", "author_flair_text_color": null, "permalink": "/r/golang/comments/exwqtk/libp2ploratransport_enabling_lowbandwidth_libp2p/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/ipfs/comments/exwpuw/libp2ploratransport_enabling_lowbandwidth_libp2p/", "subreddit_subscribers": 101564, "created_utc": 1580683342.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_81yj9s9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Library to fit data structures to their underlying types.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey4r5m", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580751816.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey4r5m", "is_robot_indexable": true, "report_reasons": null, "author": "donutloop", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ey4r5m/library_to_fit_data_structures_to_their/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/spatialcurrent/go-fit", "subreddit_subscribers": 101564, "created_utc": 1580723016.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Does anyone know any good tutorial/article on how to make a video streaming service like Netflix with gRPC and Go ?", "author_fullname": "t2_82l7wu2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to make video streaming with grpc and go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey31vx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580741578.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone know any good tutorial/article on how to make a video streaming service like Netflix with gRPC and Go ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey31vx", "is_robot_indexable": true, "report_reasons": null, "author": "theakshaygupta", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ey31vx/how_to_make_video_streaming_with_grpc_and_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ey31vx/how_to_make_video_streaming_with_grpc_and_go/", "subreddit_subscribers": 101564, "created_utc": 1580712778.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm new to golang and am loving all the features so far, but I've run into a bit of a problem. I'm using the sqlx package to assist with querying a MySql database, and I'm trying to execute a query:\n\n`var t MyStruct`\n\n`_, err = s.db.NamedExec(\"REPLACE INTO mytable VALUES (:id, :date, ....)\", t)`\n\nI've added `db:` tags to the struct but the issue is that MyStruct is extremely long, about 50 fields and it seems ridiculous that I'll have to list off each of the tags in the values section of any such named query, is there a better way to do this?", "author_fullname": "t2_5lbi23xx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Large struct SQL query", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey2up3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580740474.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m new to golang and am loving all the features so far, but I&amp;#39;ve run into a bit of a problem. I&amp;#39;m using the sqlx package to assist with querying a MySql database, and I&amp;#39;m trying to execute a query:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var t MyStruct&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;_, err = s.db.NamedExec(&amp;quot;REPLACE INTO mytable VALUES (:id, :date, ....)&amp;quot;, t)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve added &lt;code&gt;db:&lt;/code&gt; tags to the struct but the issue is that MyStruct is extremely long, about 50 fields and it seems ridiculous that I&amp;#39;ll have to list off each of the tags in the values section of any such named query, is there a better way to do this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey2up3", "is_robot_indexable": true, "report_reasons": null, "author": "EuclidianDreams", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ey2up3/large_struct_sql_query/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ey2up3/large_struct_sql_query/", "subreddit_subscribers": 101564, "created_utc": 1580711674.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_2je3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "go hack on module dependencies workflow", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey1mgk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/4ErQbNQzx64?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "go hack on module dependencies workflow", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/4ErQbNQzx64?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Kai Hendry", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/4ErQbNQzx64/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/kaihendry"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/4ErQbNQzx64?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/ey1mgk", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580734052.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey1mgk", "is_robot_indexable": true, "report_reasons": null, "author": "kai", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ey1mgk/go_hack_on_module_dependencies_workflow/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/4ErQbNQzx64", "subreddit_subscribers": 101564, "created_utc": 1580705252.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "go hack on module dependencies workflow", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/4ErQbNQzx64?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Kai Hendry", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/4ErQbNQzx64/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/kaihendry"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_akd7o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The State of Go 2020: changes since Go 1.12", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_exlm0i", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fspeakerdeck.com%2Fplayer%2F5eeba2927802410f8b2e30356ff48813&amp;display_name=Speaker+Deck&amp;url=https%3A%2F%2Fspeakerdeck.com%2Fcampoy%2Fthe-state-of-go-2020&amp;image=https%3A%2F%2Fspeakerd.s3.amazonaws.com%2Fpresentations%2F5eeba2927802410f8b2e30356ff48813%2Fslide_0.jpg%3F598661&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=speakerdeck\" width=\"600\" height=\"347\" scrolling=\"no\" title=\"Speaker Deck embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 347}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "speakerdeck.com", "oembed": {"provider_url": "https://speakerdeck.com/", "description": "The most important changes to Go since Go 1.12. By Maartje Eyskens and Francesc Campoy", "title": "The State of Go 2020", "type": "rich", "author_name": "Francesc Campoy Flores", "height": 347, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fspeakerdeck.com%2Fplayer%2F5eeba2927802410f8b2e30356ff48813&amp;display_name=Speaker+Deck&amp;url=https%3A%2F%2Fspeakerdeck.com%2Fcampoy%2Fthe-state-of-go-2020&amp;image=https%3A%2F%2Fspeakerd.s3.amazonaws.com%2Fpresentations%2F5eeba2927802410f8b2e30356ff48813%2Fslide_0.jpg%3F598661&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=speakerdeck\" width=\"600\" height=\"347\" scrolling=\"no\" title=\"Speaker Deck embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "thumbnail_width": 1024, "version": "1.0", "provider_name": "Speaker Deck", "thumbnail_url": "https://speakerd.s3.amazonaws.com/presentations/5eeba2927802410f8b2e30356ff48813/slide_0.jpg?598661", "thumbnail_height": 576, "author_url": "https://speakerdeck.com/campoy"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fspeakerdeck.com%2Fplayer%2F5eeba2927802410f8b2e30356ff48813&amp;display_name=Speaker+Deck&amp;url=https%3A%2F%2Fspeakerdeck.com%2Fcampoy%2Fthe-state-of-go-2020&amp;image=https%3A%2F%2Fspeakerd.s3.amazonaws.com%2Fpresentations%2F5eeba2927802410f8b2e30356ff48813%2Fslide_0.jpg%3F598661&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=speakerdeck\" width=\"600\" height=\"347\" scrolling=\"no\" title=\"Speaker Deck embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/exlm0i", "height": 347}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580661648.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "speakerdeck.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "exlm0i", "is_robot_indexable": true, "report_reasons": null, "author": "campoy", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/exlm0i/the_state_of_go_2020_changes_since_go_112/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://speakerdeck.com/campoy/the-state-of-go-2020", "subreddit_subscribers": 101564, "created_utc": 1580632848.0, "num_crossposts": 0, "media": {"type": "speakerdeck.com", "oembed": {"provider_url": "https://speakerdeck.com/", "description": "The most important changes to Go since Go 1.12. By Maartje Eyskens and Francesc Campoy", "title": "The State of Go 2020", "type": "rich", "author_name": "Francesc Campoy Flores", "height": 347, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fspeakerdeck.com%2Fplayer%2F5eeba2927802410f8b2e30356ff48813&amp;display_name=Speaker+Deck&amp;url=https%3A%2F%2Fspeakerdeck.com%2Fcampoy%2Fthe-state-of-go-2020&amp;image=https%3A%2F%2Fspeakerd.s3.amazonaws.com%2Fpresentations%2F5eeba2927802410f8b2e30356ff48813%2Fslide_0.jpg%3F598661&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=speakerdeck\" width=\"600\" height=\"347\" scrolling=\"no\" title=\"Speaker Deck embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "thumbnail_width": 1024, "version": "1.0", "provider_name": "Speaker Deck", "thumbnail_url": "https://speakerd.s3.amazonaws.com/presentations/5eeba2927802410f8b2e30356ff48813/slide_0.jpg?598661", "thumbnail_height": 576, "author_url": "https://speakerdeck.com/campoy"}}, "is_video": false}}], "after": "t3_exlm0i", "before": null}}