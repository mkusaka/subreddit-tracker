{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - April", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fsojx3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1585728331.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsojx3", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": null, "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fsojx3/whos_hiring_typescript_developers_april/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/fsojx3/whos_hiring_typescript_developers_april/", "subreddit_subscribers": 37596, "created_utc": 1585699531.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_2r7eohlj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to add relay to Create-React-App with Typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "hide_score": false, "name": "t3_fzr1jm", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/6hIVd9-0aRcZTVjHzbhSLoUF6ZHPagFCcnLvzP5lqjA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1586699099.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/utu0030gf3XpzRBcQF3zXQDVZXiqRC7cCabEM0LlLHA.jpg?auto=webp&amp;s=db923e7c4f53f8558297ece98da35e9bac0015ff", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/utu0030gf3XpzRBcQF3zXQDVZXiqRC7cCabEM0LlLHA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=77eb97b849547549a2ed51fd269ef3dc03888135", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/utu0030gf3XpzRBcQF3zXQDVZXiqRC7cCabEM0LlLHA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3b7df0c3a72793afd53466568e5681ba81d88349", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/utu0030gf3XpzRBcQF3zXQDVZXiqRC7cCabEM0LlLHA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=571eb8a61c4d53db862673a4782d152db03fa74c", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/utu0030gf3XpzRBcQF3zXQDVZXiqRC7cCabEM0LlLHA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7adfbeaf016f10987818c64f2467150ca8d54e2c", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/utu0030gf3XpzRBcQF3zXQDVZXiqRC7cCabEM0LlLHA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6861e7c234c205c8ee32d07a941c9a185fb7c1b3", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/utu0030gf3XpzRBcQF3zXQDVZXiqRC7cCabEM0LlLHA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=31e8552681c59c9244bd33e3273826508bf3c2bb", "width": 1080, "height": 540}], "variants": {}, "id": "u7e3ZkljLvt5nLeZ0ymNHuG2OlxQhu1jYuh0rgfDRRY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fzr1jm", "is_robot_indexable": true, "report_reasons": null, "author": "rgrome0105", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fzr1jm/how_to_add_relay_to_createreactapp_with_typescript/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@ricardojgonzlez/how-to-add-relay-to-create-react-app-with-typescript-b6daacea21dd", "subreddit_subscribers": 37596, "created_utc": 1586670299.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_1hv1u00l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Isotope - fast, simple &amp; lightweight UI library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fykjph", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/NIBG-q3zedUAAV_BuZUAzxQA5OnzUjT6_AZFLxMYmI8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1586569259.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8Kv0tcOGHFZ64j4LSI7f0OyjUBzYe1VDbATUnfCh8QQ.jpg?auto=webp&amp;s=98130b1b5939fef35b7927ef01fa105424118e7d", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/8Kv0tcOGHFZ64j4LSI7f0OyjUBzYe1VDbATUnfCh8QQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bbe4ccf15cb90e60d542340c183968f5eb53a949", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/8Kv0tcOGHFZ64j4LSI7f0OyjUBzYe1VDbATUnfCh8QQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a137d35aae4b7df22082db576a8de94cf5b807b4", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/8Kv0tcOGHFZ64j4LSI7f0OyjUBzYe1VDbATUnfCh8QQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5ea18a36d8f4f054c469e8e1e709ad2447f8a096", "width": 320, "height": 320}], "variants": {}, "id": "ISxTdoeDkNizbGhd4aO6qa2bl8LaRkgBwtSeT3EkGzw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fykjph", "is_robot_indexable": true, "report_reasons": null, "author": "areknawo", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fykjph/isotope_fast_simple_lightweight_ui_library/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/Isotope-js/core", "subreddit_subscribers": 37596, "created_utc": 1586540459.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi,\n\nI wonder what's the best way of sharing the same data types between the client (React) and the server (Express + Socket.IO).\n\nIn my game I have different rooms, each room saves the current status, something like:\n\n```js\nclass GameRoom {\n    players: Player[];\n    started: boolean;\n    currentPlayerTurn; Player;\n    dices: [number, number];\n\n    constructor({players = [], started = false, currentPlayerTurn = null, dices = [1,1]) {\n        this.players = players;\n        this.started = started;\n        this.currentPlayerTurn = currentPlayerTurn;\n        this.dices = dices;\n    }\n\n    startGame() {\n        this.currentPlayerTurn = this.players[0];\n        this.started = true;\n    }\n    \n    // etc..\n}\n```\n\nThe room is being generated in the server, being sent to the client as JSON, and then rebuilt in the client. I sync the data with socket events, and everything's perfect.\n\nBut there's a problem with the React side of the story: changing `GameRoom` properties won't cause a rerender. That means I have to `forceRerender()` each time something is edited, or listen to class changes. Both options are a mess and I [described it deeply on Stack Overflow](https://stackoverflow.com/questions/61142978/make-a-react-component-rerender-when-data-class-property-change/).\n\nThis mess made me think maybe classes are not the best way to go. Using interface will solve this problem entirely, but I do lose instance functions like `GameRoom.startGame()`, that will have to be turned into utility functions, like:\n\n```js\nexport function startGame(gameRoom: GameRoom) {\n    gameRoom.currentPlayerTurn = gameRoom.players[0];\n    gameRoom.started = true;\n}\n```\n\nwhich is another mess, since they're hidden in code, and the developer **needs to know they exist**, and not edit `gameRoom` directly.\n\nIf you guys have any idea on how to model my data types, I'd be more than happy to hear.\\\nThanks!", "author_fullname": "t2_3rrvcjvh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's the best practice for data modeling, shared by both front-end and back-end?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fyj2u6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1586564840.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I wonder what&amp;#39;s the best way of sharing the same data types between the client (React) and the server (Express + Socket.IO).&lt;/p&gt;\n\n&lt;p&gt;In my game I have different rooms, each room saves the current status, something like:&lt;/p&gt;\n\n&lt;p&gt;```js\nclass GameRoom {\n    players: Player[];\n    started: boolean;\n    currentPlayerTurn; Player;\n    dices: [number, number];&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;constructor({players = [], started = false, currentPlayerTurn = null, dices = [1,1]) {\n    this.players = players;\n    this.started = started;\n    this.currentPlayerTurn = currentPlayerTurn;\n    this.dices = dices;\n}\n\nstartGame() {\n    this.currentPlayerTurn = this.players[0];\n    this.started = true;\n}\n\n// etc..\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;p&gt;The room is being generated in the server, being sent to the client as JSON, and then rebuilt in the client. I sync the data with socket events, and everything&amp;#39;s perfect.&lt;/p&gt;\n\n&lt;p&gt;But there&amp;#39;s a problem with the React side of the story: changing &lt;code&gt;GameRoom&lt;/code&gt; properties won&amp;#39;t cause a rerender. That means I have to &lt;code&gt;forceRerender()&lt;/code&gt; each time something is edited, or listen to class changes. Both options are a mess and I &lt;a href=\"https://stackoverflow.com/questions/61142978/make-a-react-component-rerender-when-data-class-property-change/\"&gt;described it deeply on Stack Overflow&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;This mess made me think maybe classes are not the best way to go. Using interface will solve this problem entirely, but I do lose instance functions like &lt;code&gt;GameRoom.startGame()&lt;/code&gt;, that will have to be turned into utility functions, like:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;js\nexport function startGame(gameRoom: GameRoom) {\n    gameRoom.currentPlayerTurn = gameRoom.players[0];\n    gameRoom.started = true;\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;which is another mess, since they&amp;#39;re hidden in code, and the developer &lt;strong&gt;needs to know they exist&lt;/strong&gt;, and not edit &lt;code&gt;gameRoom&lt;/code&gt; directly.&lt;/p&gt;\n\n&lt;p&gt;If you guys have any idea on how to model my data types, I&amp;#39;d be more than happy to hear.\\\nThanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799", "width": 316, "height": 316}, "resolutions": [{"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda", "width": 216, "height": 216}], "variants": {}, "id": "nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fyj2u6", "is_robot_indexable": true, "report_reasons": null, "author": "itayganor", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fyj2u6/whats_the_best_practice_for_data_modeling_shared/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fyj2u6/whats_the_best_practice_for_data_modeling_shared/", "subreddit_subscribers": 37596, "created_utc": 1586536040.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_21dq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "If x has a type of T, then what's the type of JSON.parse(JSON.stringify(x))?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fxub0f", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 82, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 82, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/L7hWLoGUBadto-MvlGV23N9lsstcds4ivDaEiGyjMfg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1586474533.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "effectivetypescript.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?auto=webp&amp;s=2b44bece9abbb40f39797ec228d32388e0c5766c", "width": 560, "height": 735}, "resolutions": [{"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1dca5534d811fbe7aaaba60890caeaa0ff020750", "width": 108, "height": 141}, {"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b00d53f24aa79581db0e3b4f30d52d2753fcba2d", "width": 216, "height": 283}, {"url": "https://external-preview.redd.it/buYCOYRvXeZ1YZf5uzONB0Ya_CdnEf5pRysm-pwu3gw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ea2681fdf66ad8fa201d189ba0fcbbaaef46ae10", "width": 320, "height": 420}], "variants": {}, "id": "8zYitvujXg_ZAhj8K4Sk_G_W5qzcv10lw_0IOSj7jVc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fxub0f", "is_robot_indexable": true, "report_reasons": null, "author": "danvk", "discussion_type": null, "num_comments": 26, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fxub0f/if_x_has_a_type_of_t_then_whats_the_type_of/", "parent_whitelist_status": null, "stickied": false, "url": "https://effectivetypescript.com/2020/04/09/jsonify/", "subreddit_subscribers": 37596, "created_utc": 1586445733.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_hl047", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Porting to TypeScript Solved Our API Woes", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fy37h9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/_XYDbpnLxA1vq1pnDrf7Kpk3K7Fgb_9Qs7P6ygatjxs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1586504077.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "executeprogram.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/IXtciCVw0laIIBALUuQ377B7-h08mnZ1cjGbV21OaM4.jpg?auto=webp&amp;s=17110cd38caaeab57e7f700d02e57c05ede45cda", "width": 500, "height": 500}, "resolutions": [{"url": "https://external-preview.redd.it/IXtciCVw0laIIBALUuQ377B7-h08mnZ1cjGbV21OaM4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=658918c0b2570a04a48f80cd2cbea3585e6ef526", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/IXtciCVw0laIIBALUuQ377B7-h08mnZ1cjGbV21OaM4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d8023b1c94929c676f43ac96dd9c4abcb5e17a63", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/IXtciCVw0laIIBALUuQ377B7-h08mnZ1cjGbV21OaM4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a88d75c577ae2a2093758446ddcfcfa8799c16d6", "width": 320, "height": 320}], "variants": {}, "id": "PCjeZ0d4udugndTpM_AhJIISOdK_sID70PQNCrC2ae8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fy37h9", "is_robot_indexable": true, "report_reasons": null, "author": "overtowed", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fy37h9/porting_to_typescript_solved_our_api_woes/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.executeprogram.com/blog/porting-to-typescript-solved-our-api-woes", "subreddit_subscribers": 37596, "created_utc": 1586475277.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi,\n\nso in typescript, once we define an object like this \n\n```\nconst parsedData = {\n            serviceType,\n            stops,\n            deliveries,\n            requesterContact: {\n                name: pickup.personInChargeName,\n                phone: merchantPhoneValidator(pickup.personInChargePhoneNum),\n            },\n            specialRequests,\n        };\n```\nThen we cannot dynamically add more fields like javascript\n```\n// error \nif (isPreOrder) {\n       parsedData.scheduleAt = new Date(pickup.startAt).toISOString();\n}\n```\nNor we can add dummy field just letting typescript know we have this field\n```\nconst parsedData = {\n            scheduleAt : undefined  // error\n            serviceType,\n            stops,\n            deliveries,\n            requesterContact: {\n                name: pickup.personInChargeName,\n                phone: merchantPhoneValidator(pickup.personInChargePhoneNum),\n            },\n            specialRequests,\n        };\n```\n\nAny better way to get around with this except disabling typescript? Thanks!", "author_fullname": "t2_39a8ltwl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "typescript object literal problem", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fy5v3r", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1586512977.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;so in typescript, once we define an object like this &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nconst parsedData = {\n            serviceType,\n            stops,\n            deliveries,\n            requesterContact: {\n                name: pickup.personInChargeName,\n                phone: merchantPhoneValidator(pickup.personInChargePhoneNum),\n            },\n            specialRequests,\n        };\n&lt;/code&gt;\nThen we cannot dynamically add more fields like javascript\n&lt;code&gt;\n// error \nif (isPreOrder) {\n       parsedData.scheduleAt = new Date(pickup.startAt).toISOString();\n}\n&lt;/code&gt;\nNor we can add dummy field just letting typescript know we have this field\n&lt;code&gt;\nconst parsedData = {\n            scheduleAt : undefined  // error\n            serviceType,\n            stops,\n            deliveries,\n            requesterContact: {\n                name: pickup.personInChargeName,\n                phone: merchantPhoneValidator(pickup.personInChargePhoneNum),\n            },\n            specialRequests,\n        };\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Any better way to get around with this except disabling typescript? Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fy5v3r", "is_robot_indexable": true, "report_reasons": null, "author": "GreatFireWallSucks", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fy5v3r/typescript_object_literal_problem/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fy5v3r/typescript_object_literal_problem/", "subreddit_subscribers": 37596, "created_utc": 1586484177.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_39iavqf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Linkdash - Generate a handy dashboard of links in seconds!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 94, "hide_score": false, "name": "t3_fxpx9q", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 70, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 70, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/6TFFckAbJEttarRMYUU_sccfHBlP8_BSOvgepbD8r4A.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "created": 1586456021.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/3mgoes21prr41.gif?format=png8&amp;s=e670906053a963676e09ffe5e4da869d0e135d5e", "width": 1536, "height": 1042}, "resolutions": [{"url": "https://preview.redd.it/3mgoes21prr41.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=76d9f1fa1ea752a4615e1e0c9b06f2c1cbf34b0b", "width": 108, "height": 73}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=36ed433907309d4a6e1a4c02ac977c34fc1887a8", "width": 216, "height": 146}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=1cf13387cc9bbcc78776c63823e745163b453996", "width": 320, "height": 217}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=640&amp;crop=smart&amp;format=png8&amp;s=23b5a949d25ce570ef3a3b2d500ecda9e02a8bee", "width": 640, "height": 434}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=960&amp;crop=smart&amp;format=png8&amp;s=9506038d5981fffc4f6aa5109f764079814982de", "width": 960, "height": 651}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=1080&amp;crop=smart&amp;format=png8&amp;s=94e7be0063423e44b1cde17447095ece523ff097", "width": 1080, "height": 732}], "variants": {"gif": {"source": {"url": "https://preview.redd.it/3mgoes21prr41.gif?s=bb41a0e248567dc55ae40c0af66a827456ffa1e6", "width": 1536, "height": 1042}, "resolutions": [{"url": "https://preview.redd.it/3mgoes21prr41.gif?width=108&amp;crop=smart&amp;s=d1202851997b0f6674bbb4aa009ede9c71e26c5f", "width": 108, "height": 73}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=216&amp;crop=smart&amp;s=062d65b2caf6d3c1298b40e1d20511d663c666d4", "width": 216, "height": 146}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=320&amp;crop=smart&amp;s=99bf25b5cd861568f044ff12769dc85801724341", "width": 320, "height": 217}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=640&amp;crop=smart&amp;s=ea230abe631dd788e8deeb572d4d762ad232e96b", "width": 640, "height": 434}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=960&amp;crop=smart&amp;s=95fc9d915fbfb91042ae0b39ffaf67110a7c1850", "width": 960, "height": 651}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=1080&amp;crop=smart&amp;s=e67a273ed53be34e15421850dcb90f44c9ec0937", "width": 1080, "height": 732}]}, "mp4": {"source": {"url": "https://preview.redd.it/3mgoes21prr41.gif?format=mp4&amp;s=af3ebe053f3a83397a8b7ce9af3fa9bcbdf9348a", "width": 1536, "height": 1042}, "resolutions": [{"url": "https://preview.redd.it/3mgoes21prr41.gif?width=108&amp;format=mp4&amp;s=b1c588ba11c05ab6c7626be3b277ef8118a028fa", "width": 108, "height": 73}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=216&amp;format=mp4&amp;s=cb7d2298cd0ff3daa8286485a1c487379a552212", "width": 216, "height": 146}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=320&amp;format=mp4&amp;s=aaa0880a0a0874d1a683606f9353d0621bafdbfd", "width": 320, "height": 217}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=640&amp;format=mp4&amp;s=3ae273bc3fc34598b2bc65b26756d35a6cef8b79", "width": 640, "height": 434}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=960&amp;format=mp4&amp;s=4365e68441c26f834e5bcc90cd895f5c05da1bc4", "width": 960, "height": 651}, {"url": "https://preview.redd.it/3mgoes21prr41.gif?width=1080&amp;format=mp4&amp;s=8ae1422bfdbd02068e4401cd0e8eb0b0466cda70", "width": 1080, "height": 732}]}}, "id": "WgSV98kLowTTnGK-r3a3QatC-XspFOLospxTvfDylkA"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fxpx9q", "is_robot_indexable": true, "report_reasons": null, "author": "dangerouscuteguy", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fxpx9q/linkdash_generate_a_handy_dashboard_of_links_in/", "parent_whitelist_status": null, "stickied": false, "url": "https://i.redd.it/3mgoes21prr41.gif", "subreddit_subscribers": 37596, "created_utc": 1586427221.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've seen setups for debugging Frontend code with source maps, and complex configurations for debugging entire typescript projects in vscode with sourcemaps.  \n\n\nHowever, what if I have a project that is in Vanilla Node.js, but some of my dependencies are in Typescript? How do I debug those in vscode or chrome?", "author_fullname": "t2_5pypa17u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Debugging typescript dependencies from a non typescript node project", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fy81ch", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1586520630.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve seen setups for debugging Frontend code with source maps, and complex configurations for debugging entire typescript projects in vscode with sourcemaps.  &lt;/p&gt;\n\n&lt;p&gt;However, what if I have a project that is in Vanilla Node.js, but some of my dependencies are in Typescript? How do I debug those in vscode or chrome?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fy81ch", "is_robot_indexable": true, "report_reasons": null, "author": "FactoryReboot", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fy81ch/debugging_typescript_dependencies_from_a_non/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fy81ch/debugging_typescript_dependencies_from_a_non/", "subreddit_subscribers": 37596, "created_utc": 1586491830.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "So I just started using GraphQL Nexus today and I'm just doing some basic setup and noodling around with some stuff. I coded a simple registerUser mutation like so:\n\n`export const Mutation = objectType({`  \n  `name: 'Mutation',`  \n `definition(t) {`  \n `t.boolean('register', {`  \n`args: {`  \n`email: stringArg({ required: true }),`  \n`password: stringArg({ required: true }),`  \n `},`  \n`async resolve(_, { email, password }) {`  \n `console.log(password, email)`  \n`return true`  \n `},`  \n `})`  \n `},`  \n`})`\n\nBut when I replaced the arguments to 'register' with a RegisterInput input like so:\n\n`export const RegisterInput = inputObjectType({`  \n  `name: 'RegisterInput',`  \n `definition(t) {`  \n `t.string('email', { required: true })`  \n `t.string('password', { required: true })`  \n `},`  \n`})`  \n\n\n`export const Mutation = objectType({`  \n  `name: 'Mutation',`  \n `definition(t) {`  \n `t.boolean('register', {`  \n`args: {`  \n`input: arg({ type: RegisterInput }),`  \n `},`  \n`async resolve(_, { input: { email, password } }) {`  \n `console.log(password, email)`  \n`return true`  \n `},`  \n `})`  \n `},`  \n`})`\n\nEverything works, but he resolver input argument `{ input: { email, password } }` gets typescript a little complain - Property 'email'/'password' does not exist on type '{ email: string; password: string; } | null | undefined'? How do I get those annoying red squiggles to go away?", "author_fullname": "t2_1w5m078a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Typescript problem using GraphQL Nexus", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fxz4f6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1586490016.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I just started using GraphQL Nexus today and I&amp;#39;m just doing some basic setup and noodling around with some stuff. I coded a simple registerUser mutation like so:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export const Mutation = objectType({&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;name: &amp;#39;Mutation&amp;#39;,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;definition(t) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;t.boolean(&amp;#39;register&amp;#39;, {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;args: {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;email: stringArg({ required: true }),&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;password: stringArg({ required: true }),&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;async resolve(_, { email, password }) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;console.log(password, email)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;return true&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;})&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;})&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;But when I replaced the arguments to &amp;#39;register&amp;#39; with a RegisterInput input like so:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export const RegisterInput = inputObjectType({&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;name: &amp;#39;RegisterInput&amp;#39;,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;definition(t) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;t.string(&amp;#39;email&amp;#39;, { required: true })&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;t.string(&amp;#39;password&amp;#39;, { required: true })&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;})&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export const Mutation = objectType({&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;name: &amp;#39;Mutation&amp;#39;,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;definition(t) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;t.boolean(&amp;#39;register&amp;#39;, {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;args: {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;input: arg({ type: RegisterInput }),&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;async resolve(_, { input: { email, password } }) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;console.log(password, email)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;return true&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;})&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;})&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Everything works, but he resolver input argument &lt;code&gt;{ input: { email, password } }&lt;/code&gt; gets typescript a little complain - Property &amp;#39;email&amp;#39;/&amp;#39;password&amp;#39; does not exist on type &amp;#39;{ email: string; password: string; } | null | undefined&amp;#39;? How do I get those annoying red squiggles to go away?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fxz4f6", "is_robot_indexable": true, "report_reasons": null, "author": "rob_moose", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fxz4f6/typescript_problem_using_graphql_nexus/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fxz4f6/typescript_problem_using_graphql_nexus/", "subreddit_subscribers": 37596, "created_utc": 1586461216.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm creating a new MongoDB document in a GraphQL Nexus resolver:\n\n`async resolve(_, { input: { email, password } }, { userData }) {`  \n `const hashedPassword = await bcrypt.hash(password, 10)`  \n `let newUser = {`  \n  `email,`  \n  `password: hashedPassword,`  \n `}`  \n `const { insertedId } = await userData.insertOne(newUser)`  \n `newUser._id = insertedId`  \n  `return newUser`  \n `},`\n\nbut typescript says property '\\_id' does not exist on type '{ email: string; password: string; }'. I'm stuck because this is how I create a new document in mongo using plain JS. What is the proper way to add the insertedId?", "author_fullname": "t2_1w5m078a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Typescript problem with a GraphQl Nexus resolver", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fy1iaz", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1586498012.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m creating a new MongoDB document in a GraphQL Nexus resolver:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;async resolve(_, { input: { email, password } }, { userData }) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const hashedPassword = await bcrypt.hash(password, 10)&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;let newUser = {&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;email,&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;password: hashedPassword,&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;const { insertedId } = await userData.insertOne(newUser)&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;newUser._id = insertedId&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;return newUser&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;},&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;but typescript says property &amp;#39;_id&amp;#39; does not exist on type &amp;#39;{ email: string; password: string; }&amp;#39;. I&amp;#39;m stuck because this is how I create a new document in mongo using plain JS. What is the proper way to add the insertedId?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fy1iaz", "is_robot_indexable": true, "report_reasons": null, "author": "rob_moose", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fy1iaz/typescript_problem_with_a_graphql_nexus_resolver/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fy1iaz/typescript_problem_with_a_graphql_nexus_resolver/", "subreddit_subscribers": 37596, "created_utc": 1586469212.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fy1iaz", "before": null}}