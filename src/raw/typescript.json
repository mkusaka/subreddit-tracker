{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - February", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_ewxjh2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 39, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 39, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1580544318.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ewxjh2", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 6, "send_replies": false, "whitelist_status": null, "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ewxjh2/whos_hiring_typescript_developers_february/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/ewxjh2/whos_hiring_typescript_developers_february/", "subreddit_subscribers": 32321, "created_utc": 1580515518.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_2rj62baz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TSConf:EU - Europe's TypeScript Conference", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 78, "hide_score": false, "name": "t3_f1msjk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/ABT0ORAKU2_1EJ8Xi9N75RMq6dp7x8R4v10QRxIpFBE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581347486.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tsconf.eu", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/wtsLvwajg4O31hwcu11J4NKhWyrzJjzP06Qgb1b0dV8.jpg?auto=webp&amp;s=3175c9a80dc80be30aa35de3552d7ff779474205", "width": 1200, "height": 675}, "resolutions": [{"url": "https://external-preview.redd.it/wtsLvwajg4O31hwcu11J4NKhWyrzJjzP06Qgb1b0dV8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e8e0cfe52249cda4692660566d99f549cf58b80a", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/wtsLvwajg4O31hwcu11J4NKhWyrzJjzP06Qgb1b0dV8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c4465939da9fa8e03f00c57a26eb676f239cbb03", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/wtsLvwajg4O31hwcu11J4NKhWyrzJjzP06Qgb1b0dV8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=af1f1c6c7326498727b204c1107aee1f032e4222", "width": 320, "height": 180}, {"url": "https://external-preview.redd.it/wtsLvwajg4O31hwcu11J4NKhWyrzJjzP06Qgb1b0dV8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=91a16785d9197454dd683e06289a741b8fb3583b", "width": 640, "height": 360}, {"url": "https://external-preview.redd.it/wtsLvwajg4O31hwcu11J4NKhWyrzJjzP06Qgb1b0dV8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=731b628530e51938a21a01e36923271899b25d54", "width": 960, "height": 540}, {"url": "https://external-preview.redd.it/wtsLvwajg4O31hwcu11J4NKhWyrzJjzP06Qgb1b0dV8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=540ecbcd61fa9f8115e1ac310eee809a0f0ce636", "width": 1080, "height": 607}], "variants": {}, "id": "p5gQ5dBLbzGVGzHS3s64hrrhtYImC2AFTx5buKDRz_Y"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f1msjk", "is_robot_indexable": true, "report_reasons": null, "author": "ddprrt", "discussion_type": null, "num_comments": 5, "send_replies": false, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f1msjk/tsconfeu_europes_typescript_conference/", "parent_whitelist_status": null, "stickied": false, "url": "https://tsconf.eu/", "subreddit_subscribers": 32321, "created_utc": 1581318686.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey folks, a month or two ago I asked myself, \"what would it look like if I wanted to get GraphQL-like queries and resolvers in pure TypeScript?\" I started hacking away and today I published the proof of concept under the title TypedQL. It allows you to define a graph query API and write queries against it. The real hero here is TypeScript Language Services, as seen in this [gif](https://imgur.com/fcUrI58).\n\nCheck it out [here](https://github.com/gregoryfabry/TypedQL); the README has some examples that show what the library can do. This is very much a proof of concept and there's definitely some black magic in the typings, but it can be downloaded and experimented with. I would love to hear your feedback, as I definitely think the concept has value and might be worth pursuing further.", "author_fullname": "t2_oeoo6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Weekend project: GraphQL-like queries and resolvers written in TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f1fyar", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 36, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1581314571.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey folks, a month or two ago I asked myself, &amp;quot;what would it look like if I wanted to get GraphQL-like queries and resolvers in pure TypeScript?&amp;quot; I started hacking away and today I published the proof of concept under the title TypedQL. It allows you to define a graph query API and write queries against it. The real hero here is TypeScript Language Services, as seen in this &lt;a href=\"https://imgur.com/fcUrI58\"&gt;gif&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Check it out &lt;a href=\"https://github.com/gregoryfabry/TypedQL\"&gt;here&lt;/a&gt;; the README has some examples that show what the library can do. This is very much a proof of concept and there&amp;#39;s definitely some black magic in the typings, but it can be downloaded and experimented with. I would love to hear your feedback, as I definitely think the concept has value and might be worth pursuing further.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/sDvKgD7_sbU8TbxszydkzGpVMyAnUGltFDu1gLDUTz4.jpg?auto=webp&amp;s=53914d1a4a3f7be56fc69d5c661c88ff339eb88b", "width": 753, "height": 170}, "resolutions": [{"url": "https://external-preview.redd.it/sDvKgD7_sbU8TbxszydkzGpVMyAnUGltFDu1gLDUTz4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3cc95602a50c867ba2b292a1c0ba886818b92441", "width": 108, "height": 24}, {"url": "https://external-preview.redd.it/sDvKgD7_sbU8TbxszydkzGpVMyAnUGltFDu1gLDUTz4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9b7af67a11cb1c3af638f47fc55585092d12d332", "width": 216, "height": 48}, {"url": "https://external-preview.redd.it/sDvKgD7_sbU8TbxszydkzGpVMyAnUGltFDu1gLDUTz4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=678f587b7b0c0fb9c8bdf2d67e53a1cd0c224461", "width": 320, "height": 72}, {"url": "https://external-preview.redd.it/sDvKgD7_sbU8TbxszydkzGpVMyAnUGltFDu1gLDUTz4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b1f4adb9c26890e07f7957660267c2c2368c38c6", "width": 640, "height": 144}], "variants": {}, "id": "lKllTux1YL2nHB_XZN8IRncs6QoUT1fkSK4Ym9jI_wE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f1fyar", "is_robot_indexable": true, "report_reasons": null, "author": "qqqyqnz", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f1fyar/weekend_project_graphqllike_queries_and_resolvers/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f1fyar/weekend_project_graphqllike_queries_and_resolvers/", "subreddit_subscribers": 32321, "created_utc": 1581285771.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi does anyone know of an [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) rule to disallow implicit any?\n\nI know there is a rule to disallow *explicit* any, but I am wondering if there is a rule for disallowing implicit any?\n\nExample:\n\n    // instead of this:\n    let s;\n    \n    // I want to force the use of a type here.. like this:\n    let s: string;\n    \n    // disallowing explicit any solves this:\n    let s: any;\n    \n    // but not this:\n    let s;\n\nThank you!!", "author_fullname": "t2_98z9f", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "typescript-eslint no implicit any rule?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f1hayp", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1581320195.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi does anyone know of an &lt;a href=\"https://github.com/typescript-eslint/typescript-eslint\"&gt;typescript-eslint&lt;/a&gt; rule to disallow implicit any?&lt;/p&gt;\n\n&lt;p&gt;I know there is a rule to disallow &lt;em&gt;explicit&lt;/em&gt; any, but I am wondering if there is a rule for disallowing implicit any?&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// instead of this:\nlet s;\n\n// I want to force the use of a type here.. like this:\nlet s: string;\n\n// disallowing explicit any solves this:\nlet s: any;\n\n// but not this:\nlet s;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thank you!!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?auto=webp&amp;s=12a59667a07a6234eb179a62037989ff0b306dda", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c06264ace3761372e7790e8479c1da36adc911ee", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f730da904312773548eacf58c92917a34338f905", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=87644d5ac854d803f280deab8fedb9d6ac1db18a", "width": 320, "height": 320}], "variants": {}, "id": "9hPlBp-1WJVS34g_GxQR_Z0mSmhZoKiT8OxUbCXUPvA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f1hayp", "is_robot_indexable": true, "report_reasons": null, "author": "oze4", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f1hayp/typescripteslint_no_implicit_any_rule/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f1hayp/typescripteslint_no_implicit_any_rule/", "subreddit_subscribers": 32321, "created_utc": 1581291395.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_tohngqm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A React Router From Scratch in TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 48, "hide_score": false, "name": "t3_f18o3l", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/5JqsPROkNBQs2VBRjRiIKnTcnTma89q_KRSn2E5Mb9o.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581283976.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/qhbav-CNruvfs_L0MmDI_LmiJoOemjVgX-La_4fDoQE.jpg?auto=webp&amp;s=09fc8d9b7dc0319c4db26611aacbfe23b23d8859", "width": 1200, "height": 417}, "resolutions": [{"url": "https://external-preview.redd.it/qhbav-CNruvfs_L0MmDI_LmiJoOemjVgX-La_4fDoQE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6bac7db69c51307273f064f0f8c29822aa6f9ec", "width": 108, "height": 37}, {"url": "https://external-preview.redd.it/qhbav-CNruvfs_L0MmDI_LmiJoOemjVgX-La_4fDoQE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c1aafeeba577ec5ea9214d505fbfd2b6e5e17749", "width": 216, "height": 75}, {"url": "https://external-preview.redd.it/qhbav-CNruvfs_L0MmDI_LmiJoOemjVgX-La_4fDoQE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a3fb8aa3cef6799136c770b1bbbd0c12dd17410b", "width": 320, "height": 111}, {"url": "https://external-preview.redd.it/qhbav-CNruvfs_L0MmDI_LmiJoOemjVgX-La_4fDoQE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=232d8ffd98418f595e3e65d67c06c69624687ee8", "width": 640, "height": 222}, {"url": "https://external-preview.redd.it/qhbav-CNruvfs_L0MmDI_LmiJoOemjVgX-La_4fDoQE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7d791284fbd78655f7c1976b3cec7057ce293429", "width": 960, "height": 333}, {"url": "https://external-preview.redd.it/qhbav-CNruvfs_L0MmDI_LmiJoOemjVgX-La_4fDoQE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=97244450cd74de383f6155a56d88572ca06bd221", "width": 1080, "height": 375}], "variants": {}, "id": "NWeKeEzV9Pu15MJ2Q18QhTfkdJ1R4VAPVWBTm3BOlkU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f18o3l", "is_robot_indexable": true, "report_reasons": null, "author": "kiarash-irandoust", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f18o3l/a_react_router_from_scratch_in_typescript/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@wim.jongeneel1/a-react-router-from-scratch-in-typescript-f0eec6ccb293?source=friends_link&amp;sk=4028f57135472edeb541ac13800055cb", "subreddit_subscribers": 32321, "created_utc": 1581255176.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "So I come from the Java world and I'm having some difficulty with Typescript's `infer` keyword. I'm playing around trying to infer the generic types of a nested data structure, but I can't seem to make the types line up, and I was hoping someone could show me the error of my ways. \n\n     type Tuple&lt;T&gt; = [Foo&lt;T&gt;, Bar&lt;T&gt;]\n     type Tuples&lt;...&gt; = ReadonlyArray&lt;Tuple&lt;?&gt;&gt;\n\n     const tuples = [ // inferred as Tuples&lt;string | number&gt; \n       ['one', 'two'], // inferred Tuple&lt;string&gt;\n       [3, 4] // inferred Tuple&lt;number&gt;\n     ]\n\nThis works fine if i specify the types explicitly, but I'm sure there's got to be a way to infer them.\n\nedit: Adding a more detailed use case: \nedit2: [playground](https://www.typescriptlang.org/play/#code/C4TwDgpgBAYg9nAPAFQHxQLxQN5QG4CGANgFxTJQC+AUKJFAEIEBOK6WucwAFhM2RRrUA9MNgIoBAHYATRiyhSIEOT2gBnAgFtoAcwhLmASwDGUOtDAttEYH2rnw0ZAFcwRCG0xQA2vCRoADTyrGgAug4W5G4e6l5YAEoQBDJwUkQgAILMzAQgKDGeaKjU1CZp6sBQqQDKcDo8RlK63mwAFABmCGT+bMEARixkTKGoAJRkeHBGchjo2A5QS+VS6nAeAHREcLptFnAdUF1wG4REY4vLFesQWzt7TgdQg8wbXLzMF1SlUCuV5m53BAABLSGQeZitNBtDaw4CFdQCBFsMaYeaXLqQtp-Ko+Y4DFhhKBPeFA9SohZLKm1eq2bhNXb454sL5LGjfByiapwCDqKQAciq5S0YCMHk5YiiUhcWn6fCgRnUii4knU6iMuikBH6HnMcBCiEqxmaJV+FSqgwAXt5SUDQbIIW1Lj5cGcyPy0hB+VRgpw1PwoIKAO5wb2UMLBLlNDp8ZgqaJAw3AY26U1LF34YhkADMPpwxP9ZAALFQiVzEABaCvc3kCoX1UW6ghK-aHK0KpWuMlJlOmi4S8z0pUh5gAa3UDhxUAAji4AB42wEee3gviIaWy+UAHygRoZUFQTqpGbdgc9Yd9BY+7uAIbDEagztdWagucol-efGLpYcYyAA)", "author_fullname": "t2_3gc1k41i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Trouble groking infer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f0roge", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1581183023.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581197904.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I come from the Java world and I&amp;#39;m having some difficulty with Typescript&amp;#39;s &lt;code&gt;infer&lt;/code&gt; keyword. I&amp;#39;m playing around trying to infer the generic types of a nested data structure, but I can&amp;#39;t seem to make the types line up, and I was hoping someone could show me the error of my ways. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; type Tuple&amp;lt;T&amp;gt; = [Foo&amp;lt;T&amp;gt;, Bar&amp;lt;T&amp;gt;]\n type Tuples&amp;lt;...&amp;gt; = ReadonlyArray&amp;lt;Tuple&amp;lt;?&amp;gt;&amp;gt;\n\n const tuples = [ // inferred as Tuples&amp;lt;string | number&amp;gt; \n   [&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;], // inferred Tuple&amp;lt;string&amp;gt;\n   [3, 4] // inferred Tuple&amp;lt;number&amp;gt;\n ]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works fine if i specify the types explicitly, but I&amp;#39;m sure there&amp;#39;s got to be a way to infer them.&lt;/p&gt;\n\n&lt;p&gt;edit: Adding a more detailed use case: \nedit2: &lt;a href=\"https://www.typescriptlang.org/play/#code/C4TwDgpgBAYg9nAPAFQHxQLxQN5QG4CGANgFxTJQC+AUKJFAEIEBOK6WucwAFhM2RRrUA9MNgIoBAHYATRiyhSIEOT2gBnAgFtoAcwhLmASwDGUOtDAttEYH2rnw0ZAFcwRCG0xQA2vCRoADTyrGgAug4W5G4e6l5YAEoQBDJwUkQgAILMzAQgKDGeaKjU1CZp6sBQqQDKcDo8RlK63mwAFABmCGT+bMEARixkTKGoAJRkeHBGchjo2A5QS+VS6nAeAHREcLptFnAdUF1wG4REY4vLFesQWzt7TgdQg8wbXLzMF1SlUCuV5m53BAABLSGQeZitNBtDaw4CFdQCBFsMaYeaXLqQtp-Ko+Y4DFhhKBPeFA9SohZLKm1eq2bhNXb454sL5LGjfByiapwCDqKQAciq5S0YCMHk5YiiUhcWn6fCgRnUii4knU6iMuikBH6HnMcBCiEqxmaJV+FSqgwAXt5SUDQbIIW1Lj5cGcyPy0hB+VRgpw1PwoIKAO5wb2UMLBLlNDp8ZgqaJAw3AY26U1LF34YhkADMPpwxP9ZAALFQiVzEABaCvc3kCoX1UW6ghK-aHK0KpWuMlJlOmi4S8z0pUh5gAa3UDhxUAAji4AB42wEee3gviIaWy+UAHygRoZUFQTqpGbdgc9Yd9BY+7uAIbDEagztdWagucol-efGLpYcYyAA\"&gt;playground&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f0roge", "is_robot_indexable": true, "report_reasons": null, "author": "general_dispondency", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f0roge/trouble_groking_infer/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f0roge/trouble_groking_infer/", "subreddit_subscribers": 32321, "created_utc": 1581169104.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've tried searching, and I find various generators and such that will generate Typescript files from C#, but is there anything that does it the other way around? I.e. something that can generate C# types from Typescript? \ud83e\udd14", "author_fullname": "t2_fh4zp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Typescript to C#?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f0ho8j", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581141507.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve tried searching, and I find various generators and such that will generate Typescript files from C#, but is there anything that does it the other way around? I.e. something that can generate C# types from Typescript? \ud83e\udd14&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f0ho8j", "is_robot_indexable": true, "report_reasons": null, "author": "svish", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f0ho8j/typescript_to_c/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f0ho8j/typescript_to_c/", "subreddit_subscribers": 32321, "created_utc": 1581112707.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_pl5om", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The ultimate guide to create desktop apps for javascript entrepreneurs", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_f0tbqf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/aaOTWU7VkMmouo1V6TYlGWGsrDa_BVQuslLnobOwzMc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581205933.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8gB0PQYI76TF4KRl-VJmpkTOAnWCVSusr-ZZQ13RjiQ.jpg?auto=webp&amp;s=d7e6019ea3e4c51ecdb27bbb83027f599f4f1c67", "width": 1000, "height": 1000}, "resolutions": [{"url": "https://external-preview.redd.it/8gB0PQYI76TF4KRl-VJmpkTOAnWCVSusr-ZZQ13RjiQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3b2cf5efaa21c77ac2da57800951a68c989e873d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/8gB0PQYI76TF4KRl-VJmpkTOAnWCVSusr-ZZQ13RjiQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1c19e74c457bfd0e20f4cdbb25a00c02f4963cc9", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/8gB0PQYI76TF4KRl-VJmpkTOAnWCVSusr-ZZQ13RjiQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=89cf094997972c45c2834f1b8d34c4628433b33c", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/8gB0PQYI76TF4KRl-VJmpkTOAnWCVSusr-ZZQ13RjiQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0125726a9c64e8568ea0b41e63f3e2f82f160c9f", "width": 640, "height": 640}, {"url": "https://external-preview.redd.it/8gB0PQYI76TF4KRl-VJmpkTOAnWCVSusr-ZZQ13RjiQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c660c087c4da7cb4c8762e84bfec3648ac794825", "width": 960, "height": 960}], "variants": {}, "id": "sGq18Hz0p8Y9WcGrgVvb8PsP-zO3cN9Ho-5sIFUY3q8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f0tbqf", "is_robot_indexable": true, "report_reasons": null, "author": "merunas", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f0tbqf/the_ultimate_guide_to_create_desktop_apps_for/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@merunasgrincalaitis/the-ultimate-guide-to-create-desktop-apps-for-javascript-entrepreneurs-4b2e1da0fe9c", "subreddit_subscribers": 32321, "created_utc": 1581177133.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_432e5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing TypeScript 3.8 RC", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 87, "hide_score": false, "name": "t3_f01vnf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 73, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 73, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/jDsed_1Nk8FtwE7VXd_xyWDpwKp3hmy92uED1Zh448Y.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581063085.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "devblogs.microsoft.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?auto=webp&amp;s=14e2ac4563a760db74d10febfe85290fec246ef5", "width": 562, "height": 350}, "resolutions": [{"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa2799b11813bc3150ec85fdc02198d51cc7de02", "width": 108, "height": 67}, {"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=51391b8547d45c0aa3521161a9751727540c159d", "width": 216, "height": 134}, {"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=03bbf25230c304c077428f6ef7a72413c8f7b203", "width": 320, "height": 199}], "variants": {}, "id": "VuFaSjtlPcLuMYjdwW1UjzANI4RMUDx4F8fNjZsRS3c"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f01vnf", "is_robot_indexable": true, "report_reasons": null, "author": "DanielRosenwasser", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f01vnf/announcing_typescript_38_rc/", "parent_whitelist_status": null, "stickied": false, "url": "https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-rc/", "subreddit_subscribers": 32321, "created_utc": 1581034285.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello Everyone,\n\nI have created a small library that is designed to transform data using a deduction map, this map contains an array of deductions, each deduction will use one or more values from the source and apply a list of transforms before storing it in the output at the given path.\n\n&amp;#x200B;\n\nReally interested in feedback and suggestions on how to improve the idea.\n\nThanks\n\n&amp;#x200B;\n\nLink: [https://github.com/robertpitt/deducer](https://github.com/robertpitt/deducer)\n\nExample: [https://github.com/robertpitt/deducer/blob/master/test/index.test.ts#L94](https://github.com/robertpitt/deducer/blob/master/test/index.test.ts#L94)", "author_fullname": "t2_ndj83sd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Advice on Transformation Utility library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f0d3sm", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1581122835.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello Everyone,&lt;/p&gt;\n\n&lt;p&gt;I have created a small library that is designed to transform data using a deduction map, this map contains an array of deductions, each deduction will use one or more values from the source and apply a list of transforms before storing it in the output at the given path.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Really interested in feedback and suggestions on how to improve the idea.&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Link: &lt;a href=\"https://github.com/robertpitt/deducer\"&gt;https://github.com/robertpitt/deducer&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Example: &lt;a href=\"https://github.com/robertpitt/deducer/blob/master/test/index.test.ts#L94\"&gt;https://github.com/robertpitt/deducer/blob/master/test/index.test.ts#L94&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/NMs6hHhi7xx9QxkARKejg7itDMdneBjWtVzLjOpRqaA.jpg?auto=webp&amp;s=237819d9c5fe65705f85683ce362c56d823c3729", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/NMs6hHhi7xx9QxkARKejg7itDMdneBjWtVzLjOpRqaA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8209757eaba82444326c6dd171469c5d3935ce70", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/NMs6hHhi7xx9QxkARKejg7itDMdneBjWtVzLjOpRqaA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ece7881dae21c54edb18edf1c8b44c2aa65d0840", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/NMs6hHhi7xx9QxkARKejg7itDMdneBjWtVzLjOpRqaA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2b1fa20a71e11f13a0ebcd565c76be81c32350e2", "width": 320, "height": 320}], "variants": {}, "id": "2lMRDo3hrwUcdb48V9eAh5HttTLm8G1mLK-AF29c7ZA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f0d3sm", "is_robot_indexable": true, "report_reasons": null, "author": "robertpitt1988", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f0d3sm/advice_on_transformation_utility_library/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f0d3sm/advice_on_transformation_utility_library/", "subreddit_subscribers": 32321, "created_utc": 1581094035.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_6047q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Progress so far on my web browser for language-learning, LinguaBrowse, written in TypeScript using React Native", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_f01it4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 200}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/LinguaBrowse/status/1225562067819749376", "author_name": "Jamie Birch", "height": null, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/LinguaBrowse", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/f01it4", "height": 200}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/LwcrfgW9dmJvjX3UjIi-GitWsGCOTBQrEEG64xCDs3U.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "reactnative", "selftext": "", "author_fullname": "t2_6047q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Progress so far on my web browser for language-learning, LinguaBrowse, built from the ground up in React Native", "link_flair_richtext": [{"e": "text", "t": "FYI"}], "subreddit_name_prefixed": "r/reactnative", "hidden": false, "pwls": 1, "link_flair_css_class": "fyi", "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_f01cw3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 764}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/LinguaBrowse/status/1225562067819749376", "author_name": "Jamie Birch", "height": 764, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/LinguaBrowse", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/f01cw3", "height": 764}, "link_flair_text": "FYI", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/LwcrfgW9dmJvjX3UjIi-GitWsGCOTBQrEEG64xCDs3U.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581060876.0, "link_flair_type": "richtext", "wls": 1, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?auto=webp&amp;s=135b0a0be1f48391fdb8814f37fa2ae5f4b69634", "width": 595, "height": 1200}, "resolutions": [{"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f4e4bb1df6614a8ac6af378d5193dd96d5f3c684", "width": 108, "height": 216}, {"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=aeaabba95c95bc5db14cf8cd57a33fad0672e318", "width": 216, "height": 432}, {"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e26c69b8c4ca3314b04d747efb0aa86d91c16948", "width": 320, "height": 640}], "variants": {}, "id": "ktUMBcFDlZ_lX7lkfP9nbCaol1m0FEb90XsHh655MYk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "9b2922ee-04e9-11e5-bf6b-0e2ace68806f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_37k5y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "f01cw3", "is_robot_indexable": true, "report_reasons": null, "author": "Bamboo_the_plant", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "house_only", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactnative/comments/f01cw3/progress_so_far_on_my_web_browser_for/", "parent_whitelist_status": "house_only", "stickied": false, "url": "https://twitter.com/LinguaBrowse/status/1225562067819749376?s=20", "subreddit_subscribers": 44453, "created_utc": 1581032076.0, "num_crossposts": 2, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/LinguaBrowse/status/1225562067819749376", "author_name": "Jamie Birch", "height": 764, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/LinguaBrowse", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}], "created": 1581061566.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?auto=webp&amp;s=135b0a0be1f48391fdb8814f37fa2ae5f4b69634", "width": 595, "height": 1200}, "resolutions": [{"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f4e4bb1df6614a8ac6af378d5193dd96d5f3c684", "width": 108, "height": 216}, {"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=aeaabba95c95bc5db14cf8cd57a33fad0672e318", "width": 216, "height": 432}, {"url": "https://external-preview.redd.it/IjNCpnzwiTfiDkZF6okc64vgs0HYKM0IRz_s0vpgl-w.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e26c69b8c4ca3314b04d747efb0aa86d91c16948", "width": 320, "height": 640}], "variants": {}, "id": "ktUMBcFDlZ_lX7lkfP9nbCaol1m0FEb90XsHh655MYk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f01it4", "is_robot_indexable": true, "report_reasons": null, "author": "Bamboo_the_plant", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_f01cw3", "author_flair_text_color": null, "permalink": "/r/typescript/comments/f01it4/progress_so_far_on_my_web_browser_for/", "parent_whitelist_status": null, "stickied": false, "url": "https://twitter.com/LinguaBrowse/status/1225562067819749376?s=20", "subreddit_subscribers": 32321, "created_utc": 1581032766.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/LinguaBrowse/status/1225562067819749376", "author_name": "Jamie Birch", "height": null, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Here&amp;#39;s my fully React Native web browser app (&lt;a href=\"https://twitter.com/hashtag/LinguaBrowse?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#LinguaBrowse&lt;/a&gt;) so far.&lt;br&gt;&lt;br&gt;\u2013 Visit any foreign-language website&lt;br&gt;&lt;br&gt;\u2013 Look up any word&amp;#39;s definition with one tap&lt;br&gt;&lt;br&gt;\u2013 Bilingual dictionaries available for any pair of languages&lt;br&gt;&lt;br&gt;\u2013 Transcriptions added for any non-Latin scripts&lt;br&gt;&lt;br&gt;please like it &lt;a href=\"https://t.co/01P5tQMS5P\"&gt;pic.twitter.com/01P5tQMS5P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jamie Birch (@LinguaBrowse) &lt;a href=\"https://twitter.com/LinguaBrowse/status/1225562067819749376?ref_src=twsrc%5Etfw\"&gt;February 6, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/LinguaBrowse", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}], "after": "t3_f01it4", "before": null}}