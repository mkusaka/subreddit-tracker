{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "## 0. what is go-zero?\ngo-zero is a web and rpc framework that with lots of engineering practices builtin. It's born to ensure the stability of the busy services with resilience design, and has been serving sites with tens of millions users for years.\ngo-zero contains simple API description syntax and code generation tool called `goctl`. You can generate Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript from\u00a0.api files with `goctl`.\nAdvantages of go-zero:\n* improve the stability of the services with tens of millions of daily active users\n* builtin chained timeout control, concurrency control, rate limit, adaptive circuit breaker, adaptive load shedding, even no configuration needed\n* builtin middlewares also can be integrated into your frameworks\n* simple API syntax, one command to generate couple different languages\n* auto validate the request parameters from clients\n* plenty of builtin microservice management and concurrent toolkits\n&lt;img src=\"https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/architecture-en.png\" alt=\"Architecture\" width=\"1500\" /&gt;\n\n## 1. Backgrounds of go-zero\nAt the beginning of 2018, we heavily suffered from frequent downtime. We decided to re-design our system, from monolithic architecture with Java+MongoDB to microservice architecture. After researches and comparison, we chose to:\n* Golang based\n\u00a0* great performance\n\u00a0* simple syntax\n\u00a0* proven engineering efficiency\n\u00a0* extreme deployment experience\n\u00a0* less server resource consumption\n* Self-designed microservice architecture\n\u00a0* I have rich experience on designing microservice architectures\n\u00a0* easy to location the problems\n\u00a0* easy to extend the features\n\n## 2. Design considerations on go-zero\nBy designing the microservice architecture, we expected to ensure the stability, as well as the productivity. And from just the beginning, we have the following design principles:\n* keep it simple\n* high availability\n* stable on high concurrency\n* easy to extend\n* resilience design, failure-oriented programming\n* try best to be friendly to the business logic development, encapsulate the complexity\n* one thing, one way\nAfter almost half a year, we finished the transfer from monolithic system to microservice system, and deployed on August 2018. The new system guaranteed the business growth, and the system stability.\n\n## 3. The implementation and features of go-zero\ngo-zero is a web and rpc framework that integrates lots of engineering practices. The features are mainly listed below:\n* powerful tool included, less code to write\n* simple interfaces\n* fully compatible with net/http\n* middlewares are supported, easy to extend\n* high performance\n* failure-oriented programming, resilience design\n* builtin service discovery, load balancing\n* builtin concurrency control, adaptive circuit breaker, adaptive load shedding, auto trigger, auto recover\n* auto validation of API request parameters\n* chained timeout control\n* auto management of data caching\n* call tracing, metrics and monitoring\n* high concurrency protected\n\nAs below, go-zero protects the system with couple layers and mechanisms:\n![Resilience](https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/resilience-en.png)\n\n## 4. Future development plans of go-zero\n* auto generate API mock server, make the client debugging eaisier\n* auto generate the simple integration test for the server side just from the\u00a0.api files\n\n## 5. Installation\nRun the following command under your project:\n```shell\ngo get -u github.com/tal-tech/go-zero\n```\n\n## 6. Quick Start\n0. full examples can be checked out from below:\n\n* [Rapid development of microservice systems](https://github.com/tal-tech/go-zero/blob/master/doc/shorturl-en.md)\n* [Rapid development of microservice systems - multiple RPCs](https://github.com/tal-tech/go-zero/blob/master/doc/bookstore-en.md)\n\n1. install goctl\n`goctl`can be read as `go control`. `goctl` means not to be controlled by code, instead, we control it. The inside `go` is not `golang`. At the very beginning, I was expecting it to help us improve the productivity, and make our lives easier.\n```shell\n\u00a0GO111MODULE=on go get -u github.com/tal-tech/go-zero/tools/goctl\n```\nmake sure goctl is executable.\n\n2. create the API file, like greet.api, you can install the plugin of goctl in vs code, api syntax is supported.\n```go\n\u00a0type Request struct {\n\u00a0  Name string `path:\"name,options=you|me\"` // parameters are auto validated\n\u00a0}\n\u00a0\n\u00a0type Response struct {\n\u00a0  Message string `json:\"message\"`\n\u00a0}\n\u00a0\n\u00a0service greet-api {\n\u00a0  @server(\n    \u00a0handler: GreetHandler\n\u00a0  )\n\u00a0  get /greet/from/:name(Request) returns (Response);\n\u00a0}\n```\nthe\u00a0.api files also can be generate by goctl, like below:\n```shell\n\u00a0goctl api -o greet.api\n```\n3. generate the go server side code\n```shell\n\u00a0goctl api go -api greet.api -dir greet\n```\nthe generated files look like:\n```\n\u00a0\u251c\u2500\u2500 greet\n\u00a0\u2502 \u251c\u2500\u2500 etc\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 greet-api.yaml // configuration file\n\u00a0\u2502 \u251c\u2500\u2500 greet.go // main file\n\u00a0\u2502 \u2514\u2500\u2500 internal\n\u00a0\u2502 \u251c\u2500\u2500 config\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 config.go // configuration definition\n\u00a0\u2502 \u251c\u2500\u2500 handler\n\u00a0\u2502 \u2502 \u251c\u2500\u2500 greethandler.go // get/put/post/delete routes are defined here\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 routes.go // routes list\n\u00a0\u2502 \u251c\u2500\u2500 logic\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 greetlogic.go // request logic can be written here\n\u00a0\u2502 \u251c\u2500\u2500 svc\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 servicecontext.go // service context, mysql/redis can be passed in here\n\u00a0\u2502 \u2514\u2500\u2500 types\n\u00a0\u2502 \u2514\u2500\u2500 types.go // request/response defined here\n\u00a0\u2514\u2500\u2500 greet.api // api description file\n```\n\u00a0the generated code can be run directly:\n```shell\n\u00a0cd greet\n\u00a0go run greet.go -f etc/greet-api.yaml\n```\nby default, it's listening on port 8888, while it can be changed in configuration file.\nyou can check it by curl:\n```shell\n\u00a0curl -i http://localhost:8888/greet/from/you\n```\nthe response looks like:\n```http\n\u00a0HTTP/1.1 200 OK\n\u00a0Date: Sun, 30 Aug 2020 15:32:35 GMT\n\u00a0Content-Length: 0\n```\n\n4. Write the business logic code\n* the dependencies can be passed into the logic within servicecontext.go, like mysql, reds etc.\n* add the logic code in logic package according to\u00a0.api file\n\n5. Generate code like Java, TypeScript, Dart, JavaScript etc. just from the api file\n```shell\n\u00a0goctl api java -api greet.api -dir greet\n\u00a0goctl api dart -api greet.api -dir greet\n\u00a0\u2026\n```\n\n## 7. Benchmark\n![benchmark](https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/benchmark.png)\n[Checkout the test code](https://github.com/smallnest/go-web-framework-benchmark)\n\n## 8. Documents\n* [Rapid development of microservice systems](https://github.com/tal-tech/go-zero/blob/master/doc/shorturl-en.md)\n* [Rapid development of microservice systems - multiple RPCs](https://github.com/tal-tech/go-zero/blob/master/doc/bookstore-en.md)\n\n## 9. Project Home\n[https://github.com/tal-tech/go-zero](https://github.com/tal-tech/go-zero)", "author_fullname": "t2_7zqp4pzi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "go-zero, a cloud native web and rpc framework", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_inkdyx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1599391932.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599419927.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h2&gt;0. what is go-zero?&lt;/h2&gt;\n\n&lt;p&gt;go-zero is a web and rpc framework that with lots of engineering practices builtin. It&amp;#39;s born to ensure the stability of the busy services with resilience design, and has been serving sites with tens of millions users for years.\ngo-zero contains simple API description syntax and code generation tool called &lt;code&gt;goctl&lt;/code&gt;. You can generate Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript from\u00a0.api files with &lt;code&gt;goctl&lt;/code&gt;.\nAdvantages of go-zero:\n* improve the stability of the services with tens of millions of daily active users\n* builtin chained timeout control, concurrency control, rate limit, adaptive circuit breaker, adaptive load shedding, even no configuration needed\n* builtin middlewares also can be integrated into your frameworks\n* simple API syntax, one command to generate couple different languages\n* auto validate the request parameters from clients\n* plenty of builtin microservice management and concurrent toolkits\n&amp;lt;img src=&amp;quot;https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/architecture-en.png&amp;quot; alt=&amp;quot;Architecture&amp;quot; width=&amp;quot;1500&amp;quot; /&amp;gt;&lt;/p&gt;\n\n&lt;h2&gt;1. Backgrounds of go-zero&lt;/h2&gt;\n\n&lt;p&gt;At the beginning of 2018, we heavily suffered from frequent downtime. We decided to re-design our system, from monolithic architecture with Java+MongoDB to microservice architecture. After researches and comparison, we chose to:\n* Golang based\n\u00a0* great performance\n\u00a0* simple syntax\n\u00a0* proven engineering efficiency\n\u00a0* extreme deployment experience\n\u00a0* less server resource consumption\n* Self-designed microservice architecture\n\u00a0* I have rich experience on designing microservice architectures\n\u00a0* easy to location the problems\n\u00a0* easy to extend the features&lt;/p&gt;\n\n&lt;h2&gt;2. Design considerations on go-zero&lt;/h2&gt;\n\n&lt;p&gt;By designing the microservice architecture, we expected to ensure the stability, as well as the productivity. And from just the beginning, we have the following design principles:\n* keep it simple\n* high availability\n* stable on high concurrency\n* easy to extend\n* resilience design, failure-oriented programming\n* try best to be friendly to the business logic development, encapsulate the complexity\n* one thing, one way\nAfter almost half a year, we finished the transfer from monolithic system to microservice system, and deployed on August 2018. The new system guaranteed the business growth, and the system stability.&lt;/p&gt;\n\n&lt;h2&gt;3. The implementation and features of go-zero&lt;/h2&gt;\n\n&lt;p&gt;go-zero is a web and rpc framework that integrates lots of engineering practices. The features are mainly listed below:\n* powerful tool included, less code to write\n* simple interfaces\n* fully compatible with net/http\n* middlewares are supported, easy to extend\n* high performance\n* failure-oriented programming, resilience design\n* builtin service discovery, load balancing\n* builtin concurrency control, adaptive circuit breaker, adaptive load shedding, auto trigger, auto recover\n* auto validation of API request parameters\n* chained timeout control\n* auto management of data caching\n* call tracing, metrics and monitoring\n* high concurrency protected&lt;/p&gt;\n\n&lt;p&gt;As below, go-zero protects the system with couple layers and mechanisms:\n![Resilience](&lt;a href=\"https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/resilience-en.png\"&gt;https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/resilience-en.png&lt;/a&gt;)&lt;/p&gt;\n\n&lt;h2&gt;4. Future development plans of go-zero&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;auto generate API mock server, make the client debugging eaisier&lt;/li&gt;\n&lt;li&gt;auto generate the simple integration test for the server side just from the\u00a0.api files&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;5. Installation&lt;/h2&gt;\n\n&lt;p&gt;Run the following command under your project:\n&lt;code&gt;shell\ngo get -u github.com/tal-tech/go-zero\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h2&gt;6. Quick Start&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;full examples can be checked out from below:&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/tal-tech/go-zero/blob/master/doc/shorturl-en.md\"&gt;Rapid development of microservice systems&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/tal-tech/go-zero/blob/master/doc/bookstore-en.md\"&gt;Rapid development of microservice systems - multiple RPCs&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;install goctl\n&lt;code&gt;goctl&lt;/code&gt;can be read as &lt;code&gt;go control&lt;/code&gt;. &lt;code&gt;goctl&lt;/code&gt; means not to be controlled by code, instead, we control it. The inside &lt;code&gt;go&lt;/code&gt; is not &lt;code&gt;golang&lt;/code&gt;. At the very beginning, I was expecting it to help us improve the productivity, and make our lives easier.\n&lt;code&gt;shell\n\u00a0GO111MODULE=on go get -u github.com/tal-tech/go-zero/tools/goctl\n&lt;/code&gt;\nmake sure goctl is executable.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;create the API file, like greet.api, you can install the plugin of goctl in vs code, api syntax is supported.\n&lt;code&gt;go\n\u00a0type Request struct {\n\u00a0  Name string `path:&amp;quot;name,options=you|me&amp;quot;` // parameters are auto validated\n\u00a0}\n\u00a0\n\u00a0type Response struct {\n\u00a0  Message string `json:&amp;quot;message&amp;quot;`\n\u00a0}\n\u00a0\n\u00a0service greet-api {\n\u00a0  @server(\n\u00a0handler: GreetHandler\n\u00a0  )\n\u00a0  get /greet/from/:name(Request) returns (Response);\n\u00a0}\n&lt;/code&gt;\nthe\u00a0.api files also can be generate by goctl, like below:\n&lt;code&gt;shell\n\u00a0goctl api -o greet.api\n&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;generate the go server side code\n&lt;code&gt;shell\n\u00a0goctl api go -api greet.api -dir greet\n&lt;/code&gt;\nthe generated files look like:\n&lt;code&gt;\n\u00a0\u251c\u2500\u2500 greet\n\u00a0\u2502 \u251c\u2500\u2500 etc\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 greet-api.yaml // configuration file\n\u00a0\u2502 \u251c\u2500\u2500 greet.go // main file\n\u00a0\u2502 \u2514\u2500\u2500 internal\n\u00a0\u2502 \u251c\u2500\u2500 config\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 config.go // configuration definition\n\u00a0\u2502 \u251c\u2500\u2500 handler\n\u00a0\u2502 \u2502 \u251c\u2500\u2500 greethandler.go // get/put/post/delete routes are defined here\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 routes.go // routes list\n\u00a0\u2502 \u251c\u2500\u2500 logic\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 greetlogic.go // request logic can be written here\n\u00a0\u2502 \u251c\u2500\u2500 svc\n\u00a0\u2502 \u2502 \u2514\u2500\u2500 servicecontext.go // service context, mysql/redis can be passed in here\n\u00a0\u2502 \u2514\u2500\u2500 types\n\u00a0\u2502 \u2514\u2500\u2500 types.go // request/response defined here\n\u00a0\u2514\u2500\u2500 greet.api // api description file\n&lt;/code&gt;\n\u00a0the generated code can be run directly:\n&lt;code&gt;shell\n\u00a0cd greet\n\u00a0go run greet.go -f etc/greet-api.yaml\n&lt;/code&gt;\nby default, it&amp;#39;s listening on port 8888, while it can be changed in configuration file.\nyou can check it by curl:\n&lt;code&gt;shell\n\u00a0curl -i http://localhost:8888/greet/from/you\n&lt;/code&gt;\nthe response looks like:\n&lt;code&gt;http\n\u00a0HTTP/1.1 200 OK\n\u00a0Date: Sun, 30 Aug 2020 15:32:35 GMT\n\u00a0Content-Length: 0\n&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Write the business logic code&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;the dependencies can be passed into the logic within servicecontext.go, like mysql, reds etc.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;add the logic code in logic package according to\u00a0.api file&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Generate code like Java, TypeScript, Dart, JavaScript etc. just from the api file\n&lt;code&gt;shell\n\u00a0goctl api java -api greet.api -dir greet\n\u00a0goctl api dart -api greet.api -dir greet\n\u00a0\u2026\n&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;7. Benchmark&lt;/h2&gt;\n\n&lt;p&gt;![benchmark](&lt;a href=\"https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/benchmark.png\"&gt;https://raw.githubusercontent.com/tal-tech/go-zero/master/doc/images/benchmark.png&lt;/a&gt;)\n&lt;a href=\"https://github.com/smallnest/go-web-framework-benchmark\"&gt;Checkout the test code&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;8. Documents&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/tal-tech/go-zero/blob/master/doc/shorturl-en.md\"&gt;Rapid development of microservice systems&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/tal-tech/go-zero/blob/master/doc/bookstore-en.md\"&gt;Rapid development of microservice systems - multiple RPCs&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;9. Project Home&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/tal-tech/go-zero\"&gt;https://github.com/tal-tech/go-zero&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inkdyx", "is_robot_indexable": true, "report_reasons": null, "author": "go-zero", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/inkdyx/gozero_a_cloud_native_web_and_rpc_framework/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/inkdyx/gozero_a_cloud_native_web_and_rpc_framework/", "subreddit_subscribers": 124406, "created_utc": 1599391127.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_m505l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I wrote a fast concurrent fairly strong RNG (based on xoshiro256**). Much faster than the builtin random package.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_inb8u8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 57, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 57, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599376709.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/Villenny/fastrand64-go", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inb8u8", "is_robot_indexable": true, "report_reasons": null, "author": "Villenny", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/inb8u8/i_wrote_a_fast_concurrent_fairly_strong_rng_based/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/Villenny/fastrand64-go", "subreddit_subscribers": 124406, "created_utc": 1599347909.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5nctn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gold, a local docs server and code reader, v0.1.0 released. Added several new features.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ini0xj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599406772.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/go101/gold", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ini0xj", "is_robot_indexable": true, "report_reasons": null, "author": "TapirLiu", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ini0xj/gold_a_local_docs_server_and_code_reader_v010/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/go101/gold", "subreddit_subscribers": 124406, "created_utc": 1599377972.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_81yj9s9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The httpbaselinetest package provides a framework for recording requests, responses, and the expected database changes.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_inihgd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599409327.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/trussworks/httpbaselinetest", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inihgd", "is_robot_indexable": true, "report_reasons": null, "author": "donutloop", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/inihgd/the_httpbaselinetest_package_provides_a_framework/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/trussworks/httpbaselinetest", "subreddit_subscribers": 124406, "created_utc": 1599380527.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_lwuml01", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I needed an in-browser Go compiler a while back, but couldn't find one, so I made one. Hopefully someone finds it useful. It's based on github.com/ccbrown/wasm-go-playground and currently Work-In-Progess but functional.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_in46lo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 111, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 111, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599352568.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tr-slimey.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://tr-slimey.github.io/IBGC/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 30, "resized_tier_icons": null, "id": "award_80d4d339-95d0-43ac-b051-bc3fe0a9bab8", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=16&amp;height=16&amp;auto=webp&amp;s=b1a8234a0a122785991d6e6f8a4e0342525196fb", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=32&amp;height=32&amp;auto=webp&amp;s=d18080390a3a15888b1fb45f6310b0362e97d1c9", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=48&amp;height=48&amp;auto=webp&amp;s=d19c39d1fcfc71fe7f4eb2ba1a52d18d8f063b6e", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=64&amp;height=64&amp;auto=webp&amp;s=d4bdebbc07f33dcb808bcdd14ca3a0095719bb13", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=128&amp;height=128&amp;auto=webp&amp;s=c569e8342e4e2c9c8fb9f4afab3b8e51a9fe3b2a", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Keep the community and yourself healthy and happy.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Wearing is Caring", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=16&amp;height=16&amp;auto=webp&amp;s=b1a8234a0a122785991d6e6f8a4e0342525196fb", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=32&amp;height=32&amp;auto=webp&amp;s=d18080390a3a15888b1fb45f6310b0362e97d1c9", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=48&amp;height=48&amp;auto=webp&amp;s=d19c39d1fcfc71fe7f4eb2ba1a52d18d8f063b6e", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=64&amp;height=64&amp;auto=webp&amp;s=d4bdebbc07f33dcb808bcdd14ca3a0095719bb13", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=128&amp;height=128&amp;auto=webp&amp;s=c569e8342e4e2c9c8fb9f4afab3b8e51a9fe3b2a", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "in46lo", "is_robot_indexable": true, "report_reasons": null, "author": "TR_SLimey", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/in46lo/i_needed_an_inbrowser_go_compiler_a_while_back/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://tr-slimey.github.io/IBGC/", "subreddit_subscribers": 124406, "created_utc": 1599323768.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5yn8b59a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Building a game engine with golang!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_inlvqi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599427239.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "link.medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://link.medium.com/bzx0GDeOy9", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inlvqi", "is_robot_indexable": true, "report_reasons": null, "author": "ilyes24Azzi", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/inlvqi/building_a_game_engine_with_golang/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://link.medium.com/bzx0GDeOy9", "subreddit_subscribers": 124406, "created_utc": 1599398439.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n)\n\nfunc main() {\n\thttp.ListenAndServe(\":8000\", nil)\n\tfmt.Println(\"should print this\")\n}\n\n```\n\nThe \"should print this\" is not executed\n\nHelp would be appreciated, thank you", "author_fullname": "t2_pclcg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Help] http.ListenAndServe is blocking or am I doing something wrong?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_inlgto", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599425416.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;```\npackage main&lt;/p&gt;\n\n&lt;p&gt;import (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;net/http&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;func main() {\n    http.ListenAndServe(&amp;quot;:8000&amp;quot;, nil)\n    fmt.Println(&amp;quot;should print this&amp;quot;)\n}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;The &amp;quot;should print this&amp;quot; is not executed&lt;/p&gt;\n\n&lt;p&gt;Help would be appreciated, thank you&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inlgto", "is_robot_indexable": true, "report_reasons": null, "author": "tonywei1992", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/inlgto/help_httplistenandserve_is_blocking_or_am_i_doing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/inlgto/help_httplistenandserve_is_blocking_or_am_i_doing/", "subreddit_subscribers": 124406, "created_utc": 1599396616.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "&amp;#x200B;\n\n[Trubka](https://preview.redd.it/mvw9kylf9hl51.jpg?width=481&amp;format=pjpg&amp;auto=webp&amp;s=b11f11b9b72d67f96ce4d725dfde76acc6c3c9ac)\n\n**Trubka** is a Kafka CLI tool built in [Go](https://go.dev/) which gives you everything you need to\n\n* Manage, query and troubleshoot your Kafka clusters.\n* Consume [protocol buffer](https://developers.google.com/protocol-buffers/) and plain text messages from Kafka.\n* Publish protocol buffer and plain text messages to Kafka.\n\n&amp;#x200B;\n\nA mini release of Trubka with a few new handy features is now publicly available:\n\n* Like the protocol buffer publisher, the plain text producer also supports data templates to push randomly generated messages to Kafka (Click [here](https://github.com/xitonix/trubka/wiki/Publish-to-Kafka#templates-and-random-data-generators) to find out more about data templates in trubka).\n* A new flag has been added to the produce commands (--sleep) which allows us to put a gap between messages. No more for;do;sleep;done in bash ;)\n* Last but not least, the produce commands now support **--count=0** to allow publishing to Kafka indefinitely.\n\nPlease install the new version, log bugs, suggest new features, share, contribute and have fun. \ud83e\udd73", "author_fullname": "t2_2kyb6yk5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Trubka v3.2.0 is out! \ud83d\ude80", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"mvw9kylf9hl51": {"status": "valid", "e": "Image", "m": "image/jpg", "p": [{"y": 74, "x": 108, "u": "https://preview.redd.it/mvw9kylf9hl51.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=31429d1140f816367b83b5bee1da28c96889ecb6"}, {"y": 149, "x": 216, "u": "https://preview.redd.it/mvw9kylf9hl51.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a056dcc3c85f65a03ab054519dbd17f6a4830239"}, {"y": 220, "x": 320, "u": "https://preview.redd.it/mvw9kylf9hl51.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ae2d68d7a6955d6decc32f18305df6a3c719b564"}], "s": {"y": 332, "x": 481, "u": "https://preview.redd.it/mvw9kylf9hl51.jpg?width=481&amp;format=pjpg&amp;auto=webp&amp;s=b11f11b9b72d67f96ce4d725dfde76acc6c3c9ac"}, "id": "mvw9kylf9hl51"}}, "name": "t3_inhyxq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599406459.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/mvw9kylf9hl51.jpg?width=481&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=b11f11b9b72d67f96ce4d725dfde76acc6c3c9ac\"&gt;Trubka&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Trubka&lt;/strong&gt; is a Kafka CLI tool built in &lt;a href=\"https://go.dev/\"&gt;Go&lt;/a&gt; which gives you everything you need to&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Manage, query and troubleshoot your Kafka clusters.&lt;/li&gt;\n&lt;li&gt;Consume &lt;a href=\"https://developers.google.com/protocol-buffers/\"&gt;protocol buffer&lt;/a&gt; and plain text messages from Kafka.&lt;/li&gt;\n&lt;li&gt;Publish protocol buffer and plain text messages to Kafka.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;A mini release of Trubka with a few new handy features is now publicly available:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Like the protocol buffer publisher, the plain text producer also supports data templates to push randomly generated messages to Kafka (Click &lt;a href=\"https://github.com/xitonix/trubka/wiki/Publish-to-Kafka#templates-and-random-data-generators\"&gt;here&lt;/a&gt; to find out more about data templates in trubka).&lt;/li&gt;\n&lt;li&gt;A new flag has been added to the produce commands (--sleep) which allows us to put a gap between messages. No more for;do;sleep;done in bash ;)&lt;/li&gt;\n&lt;li&gt;Last but not least, the produce commands now support &lt;strong&gt;--count=0&lt;/strong&gt; to allow publishing to Kafka indefinitely.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Please install the new version, log bugs, suggest new features, share, contribute and have fun. \ud83e\udd73&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inhyxq", "is_robot_indexable": true, "report_reasons": null, "author": "xitonix", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/inhyxq/trubka_v320_is_out/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/inhyxq/trubka_v320_is_out/", "subreddit_subscribers": 124406, "created_utc": 1599377659.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_4015onhj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Manejo de errores en Go vs Rust", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_inlab2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.22, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599424542.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "emanuelpeg.blogspot.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://emanuelpeg.blogspot.com/2020/09/manejo-de-errores-en-go-vs-rust.html#.X1TXeXfFhfw.reddit", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inlab2", "is_robot_indexable": true, "report_reasons": null, "author": "emanuelpeg", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/inlab2/manejo_de_errores_en_go_vs_rust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://emanuelpeg.blogspot.com/2020/09/manejo-de-errores-en-go-vs-rust.html#.X1TXeXfFhfw.reddit", "subreddit_subscribers": 124406, "created_utc": 1599395742.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_17iq2y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I wrote a piece about (lightweight) design patterns in Go, hope anyone finds it useful", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_iml937", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 168, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 168, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599272304.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "link.medium.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://link.medium.com/tGADr7pOv9", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "resized_tier_icons": null, "id": "award_77ba55a2-c33c-4351-ac49-807455a80148", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a2f2b927be72d2b46ebd95bab8c072c3be0fbab", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=32&amp;height=32&amp;auto=webp&amp;s=6e42b7095bcc331e53202438613aa827addf70c3", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=48&amp;height=48&amp;auto=webp&amp;s=c740f7ef642fd2042d62c2bcba98734d08dfae6c", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=64&amp;height=64&amp;auto=webp&amp;s=74e630f1072bb2423034ae48aefa241d834d7186", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=128&amp;height=128&amp;auto=webp&amp;s=0a89cd8011c8210315ee60441eefd77b973a0c82", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Prayers up for the blessed.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Bless Up", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a2f2b927be72d2b46ebd95bab8c072c3be0fbab", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=32&amp;height=32&amp;auto=webp&amp;s=6e42b7095bcc331e53202438613aa827addf70c3", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=48&amp;height=48&amp;auto=webp&amp;s=c740f7ef642fd2042d62c2bcba98734d08dfae6c", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=64&amp;height=64&amp;auto=webp&amp;s=74e630f1072bb2423034ae48aefa241d834d7186", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=128&amp;height=128&amp;auto=webp&amp;s=0a89cd8011c8210315ee60441eefd77b973a0c82", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iml937", "is_robot_indexable": true, "report_reasons": null, "author": "cookie_80", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/iml937/i_wrote_a_piece_about_lightweight_design_patterns/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://link.medium.com/tGADr7pOv9", "subreddit_subscribers": 124406, "created_utc": 1599243504.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_iml937", "before": null}}