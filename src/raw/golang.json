{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_57uz3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing the 2020 Go Developer Survey", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jeuosg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 211, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 211, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603245041.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.golang.org", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.golang.org/survey2020", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jeuosg", "is_robot_indexable": true, "report_reasons": null, "author": "spf13", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jeuosg/announcing_the_2020_go_developer_survey/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://blog.golang.org/survey2020", "subreddit_subscribers": 129185, "created_utc": 1603216241.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_51r9t", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A preview of the package site redesign is now available at https://beta.pkg.go.dev", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jlbi1o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 61, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 61, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604143869.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "beta.pkg.go.dev", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://beta.pkg.go.dev/net/http", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlbi1o", "is_robot_indexable": true, "report_reasons": null, "author": "1lann", "discussion_type": null, "num_comments": 10, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jlbi1o/a_preview_of_the_package_site_redesign_is_now/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://beta.pkg.go.dev/net/http", "subreddit_subscribers": 129185, "created_utc": 1604115069.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "**What is it?**\n\nCommand line tool that uses a character-level LSTM model to generate text that resembles a real language (including programming languages). One can both train a network from scratch or download a pretrained one (Go, JavaScript, C, C++, Python,..).\n\n**Motivation**\n\nI recently switched to touch typing and I realized that there is basically no way to practise typing of programming languages (other than actually programming). Additionally, I revisited the famous blog post [http://karpathy.github.io/2015/05/21/rnn-effectiveness/](http://karpathy.github.io/2015/05/21/rnn-effectiveness/) and thought it would be cool to use a model like this to generate infinite amount of custom text to type.\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nhttps://i.redd.it/9b9wziky5fw51.gif\n\n**Links**\n\n* docs: [https://mltype.readthedocs.io/en/latest/](https://mltype.readthedocs.io/en/latest/)\n* github: [https://github.com/jankrepl/mltype](https://github.com/jankrepl/mltype)", "author_fullname": "t2_1pui1r72", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "mltype - Typing practice for Go and other languages", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "media_metadata": {"9b9wziky5fw51": {"status": "valid", "e": "AnimatedImage", "m": "image/gif", "p": [{"y": 65, "x": 108, "u": "https://preview.redd.it/9b9wziky5fw51.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=e07fa571a68883abb66168586d605aff4949dd67"}, {"y": 131, "x": 216, "u": "https://preview.redd.it/9b9wziky5fw51.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=92b95100a6b97223846e2100fed1ff32fe8675c5"}, {"y": 194, "x": 320, "u": "https://preview.redd.it/9b9wziky5fw51.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=47eedad460ccf66db448d351dbbf8814173400e1"}], "s": {"y": 302, "gif": "https://i.redd.it/9b9wziky5fw51.gif", "mp4": "https://preview.redd.it/9b9wziky5fw51.gif?format=mp4&amp;s=c56dbaec169cbc911547860908aa29653215a5df", "x": 496}, "id": "9b9wziky5fw51"}}, "name": "t3_jlh4b7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604174088.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;What is it?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Command line tool that uses a character-level LSTM model to generate text that resembles a real language (including programming languages). One can both train a network from scratch or download a pretrained one (Go, JavaScript, C, C++, Python,..).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I recently switched to touch typing and I realized that there is basically no way to practise typing of programming languages (other than actually programming). Additionally, I revisited the famous blog post &lt;a href=\"http://karpathy.github.io/2015/05/21/rnn-effectiveness/\"&gt;http://karpathy.github.io/2015/05/21/rnn-effectiveness/&lt;/a&gt; and thought it would be cool to use a model like this to generate infinite amount of custom text to type.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.redd.it/9b9wziky5fw51.gif\"&gt;https://i.redd.it/9b9wziky5fw51.gif&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Links&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;docs: &lt;a href=\"https://mltype.readthedocs.io/en/latest/\"&gt;https://mltype.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;github: &lt;a href=\"https://github.com/jankrepl/mltype\"&gt;https://github.com/jankrepl/mltype&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlh4b7", "is_robot_indexable": true, "report_reasons": null, "author": "kjanofficial", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jlh4b7/mltype_typing_practice_for_go_and_other_languages/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jlh4b7/mltype_typing_practice_for_go_and_other_languages/", "subreddit_subscribers": 129185, "created_utc": 1604145288.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "source: [https://github.com/johnstarich/go-wasm](https://github.com/johnstarich/go-wasm)\n\nblog: [Medium](https://johnstarich.medium.com/how-to-compile-code-in-the-browser-with-webassembly-b59ffd452c2b)\n\ndemo: [https://go-wasm.johnstarich.com](https://go-wasm.johnstarich.com)  \n(I recommend Chrome or Firefox on a desktop)\n\nhttps://reddit.com/link/jkydqj/video/fneggzpd29w51/player\n\nGo Wasm is a Go development environment to help write and run code entirely *within* the browser, using WebAssembly.\n\nIt compiles using the actual Go compiler in a virtual file system. It's made up of three core WebAssembly programs: An \u201coperating system,\u201d an editor, and a shell. If you're interested, I go into much more detail on [my Medium article](https://johnstarich.medium.com/how-to-compile-code-in-the-browser-with-webassembly-b59ffd452c2b).\n\nWorking on this has been loads of fun. I'd love to hear what you think! If y'all have any questions, fire away.\n\n&amp;#x200B;\n\nIt could use a better name for sure, just haven't landed on one I liked yet :)", "author_fullname": "t2_nyzcy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go Wasm IDE: Compiling Go in the browser with WebAssembly", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"fneggzpd29w51": {"status": "valid", "e": "RedditVideo", "dashUrl": "https://v.redd.it/link/jkydqj/asset/fneggzpd29w51/DASHPlaylist.mpd?a=1606743266%2CNWNiOTU0Y2ExZDBhMzhjOGE0NDk2OGNiNmM1YmJmODllNDY5M2Q3NTUzOGQ0NzZjZmI1NWQ0ZGY2OGU3ZTYyNw%3D%3D&amp;v=1&amp;f=sd", "x": 1084, "y": 1080, "hlsUrl": "https://v.redd.it/link/jkydqj/asset/fneggzpd29w51/HLSPlaylist.m3u8?a=1606743266%2CYjkyM2FjMGZhMTA1ZWVjNjk0MDNhNzQ3OTBiYjliYTIwMDA3OWExMTRjOGI5ZDNiNzQyZTllNzMyOTYzYzI4Yw%3D%3D&amp;v=1&amp;f=sd", "id": "fneggzpd29w51", "isGif": false}}, "name": "t3_jkydqj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 111, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 111, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1604071433.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604098931.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;source: &lt;a href=\"https://github.com/johnstarich/go-wasm\"&gt;https://github.com/johnstarich/go-wasm&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;blog: &lt;a href=\"https://johnstarich.medium.com/how-to-compile-code-in-the-browser-with-webassembly-b59ffd452c2b\"&gt;Medium&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;demo: &lt;a href=\"https://go-wasm.johnstarich.com\"&gt;https://go-wasm.johnstarich.com&lt;/a&gt;&lt;br/&gt;\n(I recommend Chrome or Firefox on a desktop)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://reddit.com/link/jkydqj/video/fneggzpd29w51/player\"&gt;https://reddit.com/link/jkydqj/video/fneggzpd29w51/player&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Go Wasm is a Go development environment to help write and run code entirely &lt;em&gt;within&lt;/em&gt; the browser, using WebAssembly.&lt;/p&gt;\n\n&lt;p&gt;It compiles using the actual Go compiler in a virtual file system. It&amp;#39;s made up of three core WebAssembly programs: An \u201coperating system,\u201d an editor, and a shell. If you&amp;#39;re interested, I go into much more detail on &lt;a href=\"https://johnstarich.medium.com/how-to-compile-code-in-the-browser-with-webassembly-b59ffd452c2b\"&gt;my Medium article&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Working on this has been loads of fun. I&amp;#39;d love to hear what you think! If y&amp;#39;all have any questions, fire away.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;It could use a better name for sure, just haven&amp;#39;t landed on one I liked yet :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkydqj", "is_robot_indexable": true, "report_reasons": null, "author": "johnstarich", "discussion_type": null, "num_comments": 18, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jkydqj/go_wasm_ide_compiling_go_in_the_browser_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jkydqj/go_wasm_ide_compiling_go_in_the_browser_with/", "subreddit_subscribers": 129185, "created_utc": 1604070131.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "In my project, with development halted for a while I use\n\n[github.com/flosch/pongo2](https://github.com/flosch/pongo2)\n\nI have a ginpongo2 package that I host on my own gogs instance.  \nI'd like to bump the version in this and that package.\n\nSo I write `github.com/flosch/pongo2 master` into go.mod and mod tidy and get the following error:\n\n```\ngo: errors parsing go.mod:\nrequire github.com/flosch/pongo2: version \"v0.0.0-20201023220626-b1ab2cf68bc9\" invalid: go.mod has post-v0 module path \"github.com/flosch/pongo2/v4\" at revision b1ab2cf68bc9\n```\n\nWell but I *WANT* the master branch, not the v4 tag.\nHow do I FORCE the master branch?\n\ndisclaimer: I hate go modules", "author_fullname": "t2_2sbri9a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "invalid version: go.mod has post-v0 module path", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_jlhzke", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604178105.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In my project, with development halted for a while I use&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/flosch/pongo2\"&gt;github.com/flosch/pongo2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I have a ginpongo2 package that I host on my own gogs instance.&lt;br/&gt;\nI&amp;#39;d like to bump the version in this and that package.&lt;/p&gt;\n\n&lt;p&gt;So I write &lt;code&gt;github.com/flosch/pongo2 master&lt;/code&gt; into go.mod and mod tidy and get the following error:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\ngo: errors parsing go.mod:\nrequire github.com/flosch/pongo2: version &amp;quot;v0.0.0-20201023220626-b1ab2cf68bc9&amp;quot; invalid: go.mod has post-v0 module path &amp;quot;github.com/flosch/pongo2/v4&amp;quot; at revision b1ab2cf68bc9\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Well but I &lt;em&gt;WANT&lt;/em&gt; the master branch, not the v4 tag.\nHow do I FORCE the master branch?&lt;/p&gt;\n\n&lt;p&gt;disclaimer: I hate go modules&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlhzke", "is_robot_indexable": true, "report_reasons": null, "author": "zoluk", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jlhzke/invalid_version_gomod_has_postv0_module_path/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jlhzke/invalid_version_gomod_has_postv0_module_path/", "subreddit_subscribers": 129185, "created_utc": 1604149305.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Brothers programmers, important news! In honor of my birthday, I suggest you go and put an asterisk on the pukich programming language (release next week :))\n\nGitHub repository: [https://github.com/Ythosa/pukiclang](https://github.com/Ythosa/pukiclang)\n\nBesides my birthday there are other reasons to put an asterisk:\n\n1) funny name\n\n2) pukic\n\n3) Halloween \n\n4) I'm beautiful\n\nI've been working on it for a long time and would like to get feedback :S\n\nThank you for your support &lt;3", "author_fullname": "t2_7vj380or", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Pukiclang or astounding programming language!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_jlhr7l", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604177130.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Brothers programmers, important news! In honor of my birthday, I suggest you go and put an asterisk on the pukich programming language (release next week :))&lt;/p&gt;\n\n&lt;p&gt;GitHub repository: &lt;a href=\"https://github.com/Ythosa/pukiclang\"&gt;https://github.com/Ythosa/pukiclang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Besides my birthday there are other reasons to put an asterisk:&lt;/p&gt;\n\n&lt;p&gt;1) funny name&lt;/p&gt;\n\n&lt;p&gt;2) pukic&lt;/p&gt;\n\n&lt;p&gt;3) Halloween &lt;/p&gt;\n\n&lt;p&gt;4) I&amp;#39;m beautiful&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been working on it for a long time and would like to get feedback :S&lt;/p&gt;\n\n&lt;p&gt;Thank you for your support &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlhr7l", "is_robot_indexable": true, "report_reasons": null, "author": "Ythosa", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jlhr7l/pukiclang_or_astounding_programming_language/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jlhr7l/pukiclang_or_astounding_programming_language/", "subreddit_subscribers": 129185, "created_utc": 1604148330.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I improved myself to expose metrics of my go application via prometheus and storing it to victoria metrics db. Is there a similar solution for logs? Or what are your best practices for logs? Currently i am just storing it in a local file for each application.\n\nThank you in advance!", "author_fullname": "t2_58x2c48p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you store and monitor logs?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_jlhi36", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604175966.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I improved myself to expose metrics of my go application via prometheus and storing it to victoria metrics db. Is there a similar solution for logs? Or what are your best practices for logs? Currently i am just storing it in a local file for each application.&lt;/p&gt;\n\n&lt;p&gt;Thank you in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlhi36", "is_robot_indexable": true, "report_reasons": null, "author": "growingrice", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jlhi36/how_do_you_store_and_monitor_logs/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jlhi36/how_do_you_store_and_monitor_logs/", "subreddit_subscribers": 129185, "created_utc": 1604147166.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi, i am having a hard time figuring out how to sign payloads with multiple PGP keys. The Open Pgp lib doesn't have much doc about this. Do you know how this can be achieved?", "author_fullname": "t2_17ig6z", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Signing payload with multiple PGP keys", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jlfw13", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604167674.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, i am having a hard time figuring out how to sign payloads with multiple PGP keys. The Open Pgp lib doesn&amp;#39;t have much doc about this. Do you know how this can be achieved?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlfw13", "is_robot_indexable": true, "report_reasons": null, "author": "iamjkdn", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jlfw13/signing_payload_with_multiple_pgp_keys/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jlfw13/signing_payload_with_multiple_pgp_keys/", "subreddit_subscribers": 129185, "created_utc": 1604138874.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Grav is the third project from the Suborbital Development Platform (my humble OSS undertaking) to reach beta. \n\nBeta-1 brings a streaming transport plugin, auto-discovery of nodes on the local network, and a damn good message bus for Go that is worth it even if you don\u2019t need it to be networked!\n\nhttps://github.com/suborbital/grav", "author_fullname": "t2_e366v", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Decentralized Embedded Message Bus for Go (in-process or meshed)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jl2fck", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604111703.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Grav is the third project from the Suborbital Development Platform (my humble OSS undertaking) to reach beta. &lt;/p&gt;\n\n&lt;p&gt;Beta-1 brings a streaming transport plugin, auto-discovery of nodes on the local network, and a damn good message bus for Go that is worth it even if you don\u2019t need it to be networked!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/suborbital/grav\"&gt;https://github.com/suborbital/grav&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jl2fck", "is_robot_indexable": true, "report_reasons": null, "author": "cohix", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jl2fck/decentralized_embedded_message_bus_for_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jl2fck/decentralized_embedded_message_bus_for_go/", "subreddit_subscribers": 129185, "created_utc": 1604082903.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3b71bz0a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Getting started with go-fuzz: From zero to fuzzing a large open source project in 15 minutes", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jl2qgx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604112660.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "adalogics.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://adalogics.com/blog/getting-started-with-go-fuzz", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jl2qgx", "is_robot_indexable": true, "report_reasons": null, "author": "Appropriate_Willow2", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jl2qgx/getting_started_with_gofuzz_from_zero_to_fuzzing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://adalogics.com/blog/getting-started-with-go-fuzz", "subreddit_subscribers": 129185, "created_utc": 1604083860.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_213tklmq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Found a cool cross-platform native desktop GUI library for Go called GoVCL, wraps around Lazarus", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jku1vw", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 46, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 46, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604081272.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "z-kit.cc", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://z-kit.cc/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jku1vw", "is_robot_indexable": true, "report_reasons": null, "author": "taufeeq-mowzer", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jku1vw/found_a_cool_crossplatform_native_desktop_gui/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://z-kit.cc/", "subreddit_subscribers": 129185, "created_utc": 1604052472.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jku1vw", "before": null}}