{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "The context in Go is very popular. The most popular use case is the cancellation and setting timeouts. But, we can pass some scope-related data in it. And here's my question: do you do it?\n\nOne use case I can imagine is putting the authenticated user's details in the middleware and retrieving them in the final HTTP handler. What's your practice?\n\nI'm asking because I noticed that every time I try to put ANYTHING into the context, I have a very long discussion about it in PRs. Do you have any (in your opinion) good examples of using \\`context.WithValue\\` and similar? Should we use it this way or not?", "author_fullname": "t2_3rsjrul9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you use context.Context in your applications?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fo395d", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585076425.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The context in Go is very popular. The most popular use case is the cancellation and setting timeouts. But, we can pass some scope-related data in it. And here&amp;#39;s my question: do you do it?&lt;/p&gt;\n\n&lt;p&gt;One use case I can imagine is putting the authenticated user&amp;#39;s details in the middleware and retrieving them in the final HTTP handler. What&amp;#39;s your practice?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m asking because I noticed that every time I try to put ANYTHING into the context, I have a very long discussion about it in PRs. Do you have any (in your opinion) good examples of using `context.WithValue` and similar? Should we use it this way or not?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo395d", "is_robot_indexable": true, "report_reasons": null, "author": "bklimczak", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fo395d/how_do_you_use_contextcontext_in_your_applications/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fo395d/how_do_you_use_contextcontext_in_your_applications/", "subreddit_subscribers": 106736, "created_utc": 1585047625.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5lbq8h8d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "OpenBiohazard2: Open source reimplementation of the original Resident Evil 2 / Biohazard 2", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fnxlk6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585047310.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fnxlk6", "is_robot_indexable": true, "report_reasons": null, "author": "dimensione", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fnxlk6/openbiohazard2_open_source_reimplementation_of/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/samuelyuan/OpenBiohazard2", "subreddit_subscribers": 106736, "created_utc": 1585018510.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I wrote a blog post about how one might go about implementing event sourcing in Go and not use any frameworks.\n\n[https://victoramartinez.com/posts/event-sourcing-in-go/](https://victoramartinez.com/posts/event-sourcing-in-go/)", "author_fullname": "t2_t73cc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Event sourcing in Go.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fo2pn6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585073529.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote a blog post about how one might go about implementing event sourcing in Go and not use any frameworks.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://victoramartinez.com/posts/event-sourcing-in-go/\"&gt;https://victoramartinez.com/posts/event-sourcing-in-go/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo2pn6", "is_robot_indexable": true, "report_reasons": null, "author": "vectorhacker", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fo2pn6/event_sourcing_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fo2pn6/event_sourcing_in_go/", "subreddit_subscribers": 106736, "created_utc": 1585044729.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi, I'm building a web app in Go in which I have to use a SQLite database.\n\nShould I open a connection every time I have to access the database (in the http Handlers) or should I open a connection at startup and make it a global var ?\n\nThank you !", "author_fullname": "t2_5pidgd07", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Golang and SQLite, when to open connection ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fnygei", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585051064.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m building a web app in Go in which I have to use a SQLite database.&lt;/p&gt;\n\n&lt;p&gt;Should I open a connection every time I have to access the database (in the http Handlers) or should I open a connection at startup and make it a global var ?&lt;/p&gt;\n\n&lt;p&gt;Thank you !&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fnygei", "is_robot_indexable": true, "report_reasons": null, "author": "j1rb1", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fnygei/golang_and_sqlite_when_to_open_connection/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fnygei/golang_and_sqlite_when_to_open_connection/", "subreddit_subscribers": 106736, "created_utc": 1585022264.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I\u2019m trying to understand the overhead associate with Golang.\n\nIs Go compiled in a way where it could be use to make an OS without having to lean on C or Assembly to get bootstrapped?\n\nIf not, what is the limiting factor? Is there a runtime? Garbage collector missing? What makes it such that you need something else?", "author_fullname": "t2_1i5uo6ra", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is Go low level enough that one could write an OS in it without leveraging other languages like C?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fnuiyc", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585035307.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m trying to understand the overhead associate with Golang.&lt;/p&gt;\n\n&lt;p&gt;Is Go compiled in a way where it could be use to make an OS without having to lean on C or Assembly to get bootstrapped?&lt;/p&gt;\n\n&lt;p&gt;If not, what is the limiting factor? Is there a runtime? Garbage collector missing? What makes it such that you need something else?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fnuiyc", "is_robot_indexable": true, "report_reasons": null, "author": "JamieOvechkin", "discussion_type": null, "num_comments": 33, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fnuiyc/is_go_low_level_enough_that_one_could_write_an_os/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fnuiyc/is_go_low_level_enough_that_one_could_write_an_os/", "subreddit_subscribers": 106736, "created_utc": 1585006507.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_j15f9", "saved": false, "mod_reason_title": null, "gilded": 1, "clicked": false, "title": "Graphing COVID-19 with Go and chart.js", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fnj3xa", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 114, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 114, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_2": 1}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584995197.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 500, "id": "gid_2", "penny_donate": null, "coin_reward": 100, "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png", "days_of_premium": 7, "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png", "width": 128, "height": 128}], "icon_width": 512, "start_date": null, "is_enabled": true, "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "name": "Gold", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fnj3xa", "is_robot_indexable": true, "report_reasons": null, "author": "very-little-gravitas", "discussion_type": null, "num_comments": 24, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fnj3xa/graphing_covid19_with_go_and_chartjs/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/kennygrant/coronavirus", "subreddit_subscribers": 106736, "created_utc": 1584966397.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi :)\n\nWe are about to start collecting coverage analytics from our integration tests. For this I have instrumented the binary with coverage analysis and compiled it with go test. This all works like a charm.\n\nThe issue however, and I am not sure of this, I\u2019m not that deep in go, but I believe that the test framework does some buffering on STDIN and STDOUT. So the problem is, in our tests, the binary streams a whole disc partition from one device to another. This works fine for the regular binary, but with the go test compiled binary, I always get an: error: no space left on device stdout :(\n\nI have tried re-opening STDIN and STDOUT, in the test, to no avail :/\n\nHow should I approach this problem?\n\nAny suggestions welcome!", "author_fullname": "t2_15lsy5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Issue with coverage testing integration tests", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fo2o55", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585073317.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi :)&lt;/p&gt;\n\n&lt;p&gt;We are about to start collecting coverage analytics from our integration tests. For this I have instrumented the binary with coverage analysis and compiled it with go test. This all works like a charm.&lt;/p&gt;\n\n&lt;p&gt;The issue however, and I am not sure of this, I\u2019m not that deep in go, but I believe that the test framework does some buffering on STDIN and STDOUT. So the problem is, in our tests, the binary streams a whole disc partition from one device to another. This works fine for the regular binary, but with the go test compiled binary, I always get an: error: no space left on device stdout :(&lt;/p&gt;\n\n&lt;p&gt;I have tried re-opening STDIN and STDOUT, in the test, to no avail :/&lt;/p&gt;\n\n&lt;p&gt;How should I approach this problem?&lt;/p&gt;\n\n&lt;p&gt;Any suggestions welcome!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo2o55", "is_robot_indexable": true, "report_reasons": null, "author": "ComradeHulaHula", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fo2o55/issue_with_coverage_testing_integration_tests/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fo2o55/issue_with_coverage_testing_integration_tests/", "subreddit_subscribers": 106736, "created_utc": 1585044517.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_t73cc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Don't Use Frameworks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fo50l5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585084922.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "victoramartinez.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo50l5", "is_robot_indexable": true, "report_reasons": null, "author": "vectorhacker", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fo50l5/dont_use_frameworks/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://victoramartinez.com/posts/dont-use-frameworks/", "subreddit_subscribers": 106736, "created_utc": 1585056122.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Has anyone tried to use srt package ? I've tried to install it, but getting error:\n\n    # github.com/haivision/srtgo \n    /tmp/go-build815457234/b001/\\_cgo\\_main.o:/tmp/go-build/cgo-generated-wrappers:5: undefined reference to \\`SRT\\_INVALID\\_SOCK' \n    /tmp/go-build815457234/b001/\\_cgo\\_main.o:/tmp/go-build/cgo-generated-wrappers:2: undefined reference to \\`SRT\\_ERROR' \n    collect2: error: ld returned 1 exit status", "author_fullname": "t2_ny32wqe", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Cannot install srtgo package", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fo44ll", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585080872.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Has anyone tried to use srt package ? I&amp;#39;ve tried to install it, but getting error:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# github.com/haivision/srtgo \n/tmp/go-build815457234/b001/\\_cgo\\_main.o:/tmp/go-build/cgo-generated-wrappers:5: undefined reference to \\`SRT\\_INVALID\\_SOCK&amp;#39; \n/tmp/go-build815457234/b001/\\_cgo\\_main.o:/tmp/go-build/cgo-generated-wrappers:2: undefined reference to \\`SRT\\_ERROR&amp;#39; \ncollect2: error: ld returned 1 exit status\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo44ll", "is_robot_indexable": true, "report_reasons": null, "author": "Johnees", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fo44ll/cannot_install_srtgo_package/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fo44ll/cannot_install_srtgo_package/", "subreddit_subscribers": 106736, "created_utc": 1585052072.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi, I\u2019d like to know if the std library or other library is able to manipulate binary file, for exemple : \n- Open file.bin file\n- Read bytes from a certain offset to another one.\n- Replace bytes from an offset to another one\n- Then save or rewrite the file.\n\nIn fact, the thing I\u2019m trying to do can be done by an hex editor, but I want to make it auto :)\n\nThanks in advance", "author_fullname": "t2_4aekzzc1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Question] Manipulate binary files ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fo41sx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585080519.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I\u2019d like to know if the std library or other library is able to manipulate binary file, for exemple : \n- Open file.bin file\n- Read bytes from a certain offset to another one.\n- Replace bytes from an offset to another one\n- Then save or rewrite the file.&lt;/p&gt;\n\n&lt;p&gt;In fact, the thing I\u2019m trying to do can be done by an hex editor, but I want to make it auto :)&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fo41sx", "is_robot_indexable": true, "report_reasons": null, "author": "0x0177", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fo41sx/question_manipulate_binary_files/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fo41sx/question_manipulate_binary_files/", "subreddit_subscribers": 106736, "created_utc": 1585051719.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fo41sx", "before": null}}