{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "", "author_fullname": "t2_65mtptjf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "AWS Lambda now supports EFS. Practice hands-on with this exercise.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i5a20j", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 22, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "serverless", "can_mod_post": false, "score": 22, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1596817316.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "aws-dojo.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "http://aws-dojo.com/excercises/excercise7", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "ff0e4f90-fe51-11e8-995f-0e494176cf40", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i5a20j", "is_robot_indexable": true, "report_reasons": null, "author": "aws-dojo", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i5a20j/aws_lambda_now_supports_efs_practice_handson_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://aws-dojo.com/excercises/excercise7", "subreddit_subscribers": 134442, "created_utc": 1596788516.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "", "author_fullname": "t2_whxde", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hands-on beginner tutorial: Implementing a highly available, scalable and cost-efficient video resizing service using serverless architecture with AWS Lambda, SNS and SQS", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i4wd66", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 60, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical resource", "can_mod_post": false, "score": 60, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1596764581.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.nghdang.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "http://blog.nghdang.com/2020/08/03/implementing-a-highly-available-scalable-and-cost-efficient-video-processing-service-using-serverless-architecture-with-aws-lambda-sns-and-sqs/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "90cdeee6-b9e3-11e6-8d35-0eabbe333632", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i4wd66", "is_robot_indexable": true, "report_reasons": null, "author": "hopeful09", "discussion_type": null, "num_comments": 20, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i4wd66/handson_beginner_tutorial_implementing_a_highly/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://blog.nghdang.com/2020/08/03/implementing-a-highly-available-scalable-and-cost-efficient-video-processing-service-using-serverless-architecture-with-aws-lambda-sns-and-sqs/", "subreddit_subscribers": 134442, "created_utc": 1596735781.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Hi Everyone,\n\nI\u2019m trying to develop a slack bot that\u2019s is hosted on AWS. \n\nOriginally I thought about using Lex, Lambda, cloud watch and maybe cognito. \n\nOr could use elastic beanstalk with ec2 and s3? \n\nI am wanting to implement a CI/CD pipeline as well from my GitHub Repo.\n\nI also need to use API requests on a server not hosted on AWS to gather information for the slack bot.\n\nAny thoughts on how I could achieve this ? Never done anything like this before so looking for some ideas. TIA", "author_fullname": "t2_3a96gbbo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help with Slackbot Chatbot", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i5aolq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596820927.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi Everyone,&lt;/p&gt;\n\n&lt;p&gt;I\u2019m trying to develop a slack bot that\u2019s is hosted on AWS. &lt;/p&gt;\n\n&lt;p&gt;Originally I thought about using Lex, Lambda, cloud watch and maybe cognito. &lt;/p&gt;\n\n&lt;p&gt;Or could use elastic beanstalk with ec2 and s3? &lt;/p&gt;\n\n&lt;p&gt;I am wanting to implement a CI/CD pipeline as well from my GitHub Repo.&lt;/p&gt;\n\n&lt;p&gt;I also need to use API requests on a server not hosted on AWS to gather information for the slack bot.&lt;/p&gt;\n\n&lt;p&gt;Any thoughts on how I could achieve this ? Never done anything like this before so looking for some ideas. TIA&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5aolq", "is_robot_indexable": true, "report_reasons": null, "author": "ESumner19", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i5aolq/help_with_slackbot_chatbot/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i5aolq/help_with_slackbot_chatbot/", "subreddit_subscribers": 134442, "created_utc": 1596792127.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Hi all,\n\nI am having big trouble with getting the sourcePipelineName value out of the SNS message triggering one of my functions.\n\nWhat I have as an example is this:\n\n    def get_ami_id_from_ib_notification(ib_notification):\n        for resource in ib_notification['outputResources']['amis']:\n            if resource['region'] == os.environ['AWS_REGION']:\n                return(resource['image'])\n            else:\n                return(None)\n\n... and it works perfectly for getting the AMI-ID back. I tried to get sourcePipelineName the same way, but no luck (though I don't need to check for anything additional):\n\n    def get_asg_name_from_ib_notification(ib_notification):\n    \tfor resource in ib_notification:\n    \t\treturn(resource['sourcePipelineName'])\n\nBut it results in:\n\n    [ERROR] TypeError: string indices must be integers\n    Traceback (most recent call last):\n      File \"/var/task/lambda_function.py\", line 99, in lambda_handler\n        asg_name = get_asg_name_from_ib_notification(ib_notification)\n      File \"/var/task/lambda_function.py\", line 25, in get_asg_name_from_ib_notification\n        return(resource['sourcePipelineName'])\n\nAccording to [https://docs.aws.amazon.com/cli/latest/reference/imagebuilder/get-image.html](https://docs.aws.amazon.com/cli/latest/reference/imagebuilder/get-image.html) there should be a key called sourcePipelineName available.\n\nWhat am I doing wrong?", "author_fullname": "t2_o2xym", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to get Pipeline name from an SNS message in AWS Lambda?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_i5d2sk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical question", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1596807037.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596832841.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all,&lt;/p&gt;\n\n&lt;p&gt;I am having big trouble with getting the sourcePipelineName value out of the SNS message triggering one of my functions.&lt;/p&gt;\n\n&lt;p&gt;What I have as an example is this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def get_ami_id_from_ib_notification(ib_notification):\n    for resource in ib_notification[&amp;#39;outputResources&amp;#39;][&amp;#39;amis&amp;#39;]:\n        if resource[&amp;#39;region&amp;#39;] == os.environ[&amp;#39;AWS_REGION&amp;#39;]:\n            return(resource[&amp;#39;image&amp;#39;])\n        else:\n            return(None)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;... and it works perfectly for getting the AMI-ID back. I tried to get sourcePipelineName the same way, but no luck (though I don&amp;#39;t need to check for anything additional):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def get_asg_name_from_ib_notification(ib_notification):\n    for resource in ib_notification:\n        return(resource[&amp;#39;sourcePipelineName&amp;#39;])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But it results in:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[ERROR] TypeError: string indices must be integers\nTraceback (most recent call last):\n  File &amp;quot;/var/task/lambda_function.py&amp;quot;, line 99, in lambda_handler\n    asg_name = get_asg_name_from_ib_notification(ib_notification)\n  File &amp;quot;/var/task/lambda_function.py&amp;quot;, line 25, in get_asg_name_from_ib_notification\n    return(resource[&amp;#39;sourcePipelineName&amp;#39;])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;According to &lt;a href=\"https://docs.aws.amazon.com/cli/latest/reference/imagebuilder/get-image.html\"&gt;https://docs.aws.amazon.com/cli/latest/reference/imagebuilder/get-image.html&lt;/a&gt; there should be a key called sourcePipelineName available.&lt;/p&gt;\n\n&lt;p&gt;What am I doing wrong?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e0acaab0-fe51-11e8-b457-0e86fa5111f4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i5d2sk", "is_robot_indexable": true, "report_reasons": null, "author": "hellomynameisfi", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i5d2sk/how_to_get_pipeline_name_from_an_sns_message_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i5d2sk/how_to_get_pipeline_name_from_an_sns_message_in/", "subreddit_subscribers": 134442, "created_utc": 1596804041.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Basically I'm building a user management portal for my company, and we have users spread across different accounts. \n\nWhen I try to get the users from a difference account, I'm getting the error \"ResourceNotFoundException: User pool #### does not exist.\"\n\nI figured that this means that the user pool does not exist in this account. Whenever I switch my AWS account on my IDE, it'll get the users from that account.\n\n    const AWS = require('aws-sdk');\n    var docClient = new AWS.DynamoDB.DocumentClient();\n\n    exports.main = (event, context, callback) =&gt; {\n\n    let id = event.pathParameters.id;\n    let account = event.pathParameters.account;\n    let accessKeyId, secretAccessKey;\n    function getAccount() {\n      var table = \"accounts\";\n      var params = {\n        TableName: table,\n        Key: {\n          \"account_name\": account\n        }\n      };\n    docClient.get(params, function (err, data) {\n      if (err) {\n        callback(err, null);\n      } else {\n        console.log(data.Item);\n        try {\n          accessKeyId = data.Item.accessKeyId;\n          secretAccessKey = data.Item.secretAccessKey;\n          getUsers(accessKeyId, secretAccessKey);\n        }\n        catch (e) {\n          callback(e, null);\n        }\n\n      }\n    });\n    };\n\n     getAccount();\n\n     function getUsers({ accessKeyId, secretAccessKey }) {\n\n    AWS.config.update(\n      {\n        accessKeyId: accessKeyId,\n        secretAccessKey: secretAccessKey,\n        region: 'eu-west-1'\n      });\n\n    const cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider();\n    var params = {\n      UserPoolId: id,\n      AttributesToGet: [\n        'email',\n      ],\n    };\n    cognitoidentityserviceprovider.listUsers(params, (err, data) =&gt; {\n      if (err) {\n        console.log(err);\n        callback(err, null);\n      }\n      else {\n        console.log(\"data\", data);\n        callback(null, {\n          statusCode: 200,\n          body: JSON.stringify(data),\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n            'Access-Control-Allow-Credentials': true,\n            \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n          }\n        });\n\n      }\n    });\n  }\n};", "author_fullname": "t2_5qy3s", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is there a way to obtain the list of users of a user pool from another account?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i5a7dr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "serverless", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596818184.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Basically I&amp;#39;m building a user management portal for my company, and we have users spread across different accounts. &lt;/p&gt;\n\n&lt;p&gt;When I try to get the users from a difference account, I&amp;#39;m getting the error &amp;quot;ResourceNotFoundException: User pool #### does not exist.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;I figured that this means that the user pool does not exist in this account. Whenever I switch my AWS account on my IDE, it&amp;#39;ll get the users from that account.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const AWS = require(&amp;#39;aws-sdk&amp;#39;);\nvar docClient = new AWS.DynamoDB.DocumentClient();\n\nexports.main = (event, context, callback) =&amp;gt; {\n\nlet id = event.pathParameters.id;\nlet account = event.pathParameters.account;\nlet accessKeyId, secretAccessKey;\nfunction getAccount() {\n  var table = &amp;quot;accounts&amp;quot;;\n  var params = {\n    TableName: table,\n    Key: {\n      &amp;quot;account_name&amp;quot;: account\n    }\n  };\ndocClient.get(params, function (err, data) {\n  if (err) {\n    callback(err, null);\n  } else {\n    console.log(data.Item);\n    try {\n      accessKeyId = data.Item.accessKeyId;\n      secretAccessKey = data.Item.secretAccessKey;\n      getUsers(accessKeyId, secretAccessKey);\n    }\n    catch (e) {\n      callback(e, null);\n    }\n\n  }\n});\n};\n\n getAccount();\n\n function getUsers({ accessKeyId, secretAccessKey }) {\n\nAWS.config.update(\n  {\n    accessKeyId: accessKeyId,\n    secretAccessKey: secretAccessKey,\n    region: &amp;#39;eu-west-1&amp;#39;\n  });\n\nconst cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider();\nvar params = {\n  UserPoolId: id,\n  AttributesToGet: [\n    &amp;#39;email&amp;#39;,\n  ],\n};\ncognitoidentityserviceprovider.listUsers(params, (err, data) =&amp;gt; {\n  if (err) {\n    console.log(err);\n    callback(err, null);\n  }\n  else {\n    console.log(&amp;quot;data&amp;quot;, data);\n    callback(null, {\n      statusCode: 200,\n      body: JSON.stringify(data),\n      headers: {\n        &amp;quot;Access-Control-Allow-Origin&amp;quot;: &amp;quot;*&amp;quot;,\n        &amp;quot;Access-Control-Allow-Methods&amp;quot;: &amp;quot;GET, OPTIONS&amp;quot;,\n        &amp;#39;Access-Control-Allow-Credentials&amp;#39;: true,\n        &amp;quot;Access-Control-Allow-Headers&amp;quot;: &amp;quot;Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&amp;quot;\n      }\n    });\n\n  }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n};&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "ff0e4f90-fe51-11e8-995f-0e494176cf40", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i5a7dr", "is_robot_indexable": true, "report_reasons": null, "author": "ParkerZA", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i5a7dr/is_there_a_way_to_obtain_the_list_of_users_of_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i5a7dr/is_there_a_way_to_obtain_the_list_of_users_of_a/", "subreddit_subscribers": 134442, "created_utc": 1596789384.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "I'm a pretty new dev, so I decided to do something fun to help get exposure to other services. I created an ec2 instance to run a minecraft server. I'm using cloudwatch agent to send the minecraft logs to cloudwatch, where I have custom filters that trigger whenever a player leaves or joins to increment a custom metric called playerCount.\n\nThe problem that occurs is if there is a gap of time between triggering events, the metric goes back to '--' which I believe is the equivalent of \"no data.\" Is there a way I can set the custom metric so that it holds onto its value over time?", "author_fullname": "t2_51kn09ia", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "AWS custom metric resets to '--' without a regular flow of log events", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i5c0bo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "monitoring", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596828006.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a pretty new dev, so I decided to do something fun to help get exposure to other services. I created an ec2 instance to run a minecraft server. I&amp;#39;m using cloudwatch agent to send the minecraft logs to cloudwatch, where I have custom filters that trigger whenever a player leaves or joins to increment a custom metric called playerCount.&lt;/p&gt;\n\n&lt;p&gt;The problem that occurs is if there is a gap of time between triggering events, the metric goes back to &amp;#39;--&amp;#39; which I believe is the equivalent of &amp;quot;no data.&amp;quot; Is there a way I can set the custom metric so that it holds onto its value over time?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e6592206-1ce0-11e9-a9e6-0e7bd20fa500", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i5c0bo", "is_robot_indexable": true, "report_reasons": null, "author": "Lightly_Caffeinated", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i5c0bo/aws_custom_metric_resets_to_without_a_regular/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i5c0bo/aws_custom_metric_resets_to_without_a_regular/", "subreddit_subscribers": 134442, "created_utc": 1596799206.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Hello guys.\n\nMe and our teammates would like to create a redirect **302** using just API gateway or, in general, with less components possible.\n\nAFAIK the API gateway is able to do just 301. [The solution with less moving parts seems to be having a lambda that make this redirect hooked to the API record.](https://kennbrodhagen.net/2016/04/02/how-to-return-302-using-api-gateway-lambda/)\n\n&amp;#x200B;\n\nDo you have other ideas? Are you able to explain us why they didn't provide this ability? Is there any negative/hidden outcomes in REDIRECT 302 instead 301?", "author_fullname": "t2_3t6ay7sy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Redirect 302 with just API gateway", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i59hdd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "architecture", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1596785556.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596814136.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello guys.&lt;/p&gt;\n\n&lt;p&gt;Me and our teammates would like to create a redirect &lt;strong&gt;302&lt;/strong&gt; using just API gateway or, in general, with less components possible.&lt;/p&gt;\n\n&lt;p&gt;AFAIK the API gateway is able to do just 301. &lt;a href=\"https://kennbrodhagen.net/2016/04/02/how-to-return-302-using-api-gateway-lambda/\"&gt;The solution with less moving parts seems to be having a lambda that make this redirect hooked to the API record.&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Do you have other ideas? Are you able to explain us why they didn&amp;#39;t provide this ability? Is there any negative/hidden outcomes in REDIRECT 302 instead 301?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e18cf822-8ae6-11ea-8e8b-0edbae04a5bd", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i59hdd", "is_robot_indexable": true, "report_reasons": null, "author": "Danyaga", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i59hdd/redirect_302_with_just_api_gateway/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i59hdd/redirect_302_with_just_api_gateway/", "subreddit_subscribers": 134442, "created_utc": 1596785336.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "* i want to use it to host my game it consist of exe,mono dlls,and folders, \n* ill be using as a game server, its written in .net made with unity\n\n&amp;#x200B;\n\ni apologize if my question is odd i'm not sure where to put my game server in aws.\n\nthank you.", "author_fullname": "t2_6dw6gvgc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "is it possible to run an exe in beanstalk?or do i have to use a different service?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i59d7v", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical question", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596813490.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;i want to use it to host my game it consist of exe,mono dlls,and folders, &lt;/li&gt;\n&lt;li&gt;ill be using as a game server, its written in .net made with unity&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;i apologize if my question is odd i&amp;#39;m not sure where to put my game server in aws.&lt;/p&gt;\n\n&lt;p&gt;thank you.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e0acaab0-fe51-11e8-b457-0e86fa5111f4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i59d7v", "is_robot_indexable": true, "report_reasons": null, "author": "KommSur", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i59d7v/is_it_possible_to_run_an_exe_in_beanstalkor_do_i/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i59d7v/is_it_possible_to_run_an_exe_in_beanstalkor_do_i/", "subreddit_subscribers": 134442, "created_utc": 1596784690.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Hello, all. I'm a complete beginner when it comes to AWS. I'm doing a medium scale project that is using an instance of Connect to handle customer service interactions. We have a REST API that handles the requests of whatever information is needed by Connect. Let's say the API exposes 20 end-points, is it necessary to create 20 Lambda instances to handle all possible request or is there any better way?\n\nThanks in advance.", "author_fullname": "t2_qfx83", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's the correct way to connect Lambdas to an API?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i58ps8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical question", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596810013.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, all. I&amp;#39;m a complete beginner when it comes to AWS. I&amp;#39;m doing a medium scale project that is using an instance of Connect to handle customer service interactions. We have a REST API that handles the requests of whatever information is needed by Connect. Let&amp;#39;s say the API exposes 20 end-points, is it necessary to create 20 Lambda instances to handle all possible request or is there any better way?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e0acaab0-fe51-11e8-b457-0e86fa5111f4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i58ps8", "is_robot_indexable": true, "report_reasons": null, "author": "mslayaaa", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i58ps8/whats_the_correct_way_to_connect_lambdas_to_an_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i58ps8/whats_the_correct_way_to_connect_lambdas_to_an_api/", "subreddit_subscribers": 134442, "created_utc": 1596781213.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "I'm building a SaaS web app for small businesses, target at 10s or 100s of thousands of customers.\n\nIt is a basic accounting app, similar to Quickbooks, but aiming to simplify money management for a more math-anxious, number-averse audience.\n\nAs customers use the application, I want to have a **real-time picture of how they're hitting our services** (`/user/create`, `/transactions/list`, `/image/upload`, etc.):\n\n* how many requests (aggregations per hour, day, month and year)\n* who the customer is (aggregations per user id and tenant id)\n* where the customer is located (aggregations per city, province and country)\n* latencies they're getting\n* errors they're getting\n\nI'm handling requests with **API Gateway**, and for log emission I will simply activate my API to send **Access Logs** to the **CloudWatch Logs** services. So the log emission and sending to CloudWatch Logs I've already figured out.\n\nBut now I need to process these logs and make the aggregations I listed above.\n\nI've contemplated these options:\n\n* Streaming the logs to **Kinesis Firehose**, then processing them and sending to **Amazon Elasticsearch Service** to make the aggregations and visualize with **Kibana**\n* Streaming the logs to **Kinesis Firehose**, then processing them and making the aggregations with **Kinesis Data Analytics**, then saving the results to a **DynamoDB** table\n\nI would like a solution that will be:\n\n* **cost-efficient**, both today (with few customers and very sparse logging) and in the possible future as I get thousands of customers hitting the API all day from various locations\n* **highly scalable and self-managed** at every level of scale\n\nI know very little about these services. At this point, the **Elasticsearch** path sounds expensive to me, it sounds compute-heavy and storage-heavy. While the **Kinesis Data Analytics** seems more neat and cheap. Or, maybe both solutions are overkill for my case? I could also try **CloudWatch Insights**, but it doesn't seem to handle the particular aggregations I need.\n\nI'd like to note that I don't need very advanced ad-hoc analytics, I already know upfront the aggregations I need (as listed above).\n\nThoughts?", "author_fullname": "t2_q1xv9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "SaaS logging solutions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i54i8w", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical question", "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596791807.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m building a SaaS web app for small businesses, target at 10s or 100s of thousands of customers.&lt;/p&gt;\n\n&lt;p&gt;It is a basic accounting app, similar to Quickbooks, but aiming to simplify money management for a more math-anxious, number-averse audience.&lt;/p&gt;\n\n&lt;p&gt;As customers use the application, I want to have a &lt;strong&gt;real-time picture of how they&amp;#39;re hitting our services&lt;/strong&gt; (&lt;code&gt;/user/create&lt;/code&gt;, &lt;code&gt;/transactions/list&lt;/code&gt;, &lt;code&gt;/image/upload&lt;/code&gt;, etc.):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;how many requests (aggregations per hour, day, month and year)&lt;/li&gt;\n&lt;li&gt;who the customer is (aggregations per user id and tenant id)&lt;/li&gt;\n&lt;li&gt;where the customer is located (aggregations per city, province and country)&lt;/li&gt;\n&lt;li&gt;latencies they&amp;#39;re getting&lt;/li&gt;\n&lt;li&gt;errors they&amp;#39;re getting&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&amp;#39;m handling requests with &lt;strong&gt;API Gateway&lt;/strong&gt;, and for log emission I will simply activate my API to send &lt;strong&gt;Access Logs&lt;/strong&gt; to the &lt;strong&gt;CloudWatch Logs&lt;/strong&gt; services. So the log emission and sending to CloudWatch Logs I&amp;#39;ve already figured out.&lt;/p&gt;\n\n&lt;p&gt;But now I need to process these logs and make the aggregations I listed above.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve contemplated these options:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Streaming the logs to &lt;strong&gt;Kinesis Firehose&lt;/strong&gt;, then processing them and sending to &lt;strong&gt;Amazon Elasticsearch Service&lt;/strong&gt; to make the aggregations and visualize with &lt;strong&gt;Kibana&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;Streaming the logs to &lt;strong&gt;Kinesis Firehose&lt;/strong&gt;, then processing them and making the aggregations with &lt;strong&gt;Kinesis Data Analytics&lt;/strong&gt;, then saving the results to a &lt;strong&gt;DynamoDB&lt;/strong&gt; table&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I would like a solution that will be:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;cost-efficient&lt;/strong&gt;, both today (with few customers and very sparse logging) and in the possible future as I get thousands of customers hitting the API all day from various locations&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;highly scalable and self-managed&lt;/strong&gt; at every level of scale&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I know very little about these services. At this point, the &lt;strong&gt;Elasticsearch&lt;/strong&gt; path sounds expensive to me, it sounds compute-heavy and storage-heavy. While the &lt;strong&gt;Kinesis Data Analytics&lt;/strong&gt; seems more neat and cheap. Or, maybe both solutions are overkill for my case? I could also try &lt;strong&gt;CloudWatch Insights&lt;/strong&gt;, but it doesn&amp;#39;t seem to handle the particular aggregations I need.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d like to note that I don&amp;#39;t need very advanced ad-hoc analytics, I already know upfront the aggregations I need (as listed above).&lt;/p&gt;\n\n&lt;p&gt;Thoughts?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e0acaab0-fe51-11e8-b457-0e86fa5111f4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "i54i8w", "is_robot_indexable": true, "report_reasons": null, "author": "juancpgo", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/i54i8w/saas_logging_solutions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/i54i8w/saas_logging_solutions/", "subreddit_subscribers": 134442, "created_utc": 1596763007.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_i54i8w", "before": null}}