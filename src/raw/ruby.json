{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I built my first open-sourc project and I wrote about it and my motivations here: [https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil](https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil)", "author_fullname": "t2_9aty894", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My First open-source Project: Building AmazonPay Gem", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iy7m2f", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600885818.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I built my first open-sourc project and I wrote about it and my motivations here: &lt;a href=\"https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil\"&gt;https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iy7m2f", "is_robot_indexable": true, "report_reasons": null, "author": "bytenaija", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iy7m2f/my_first_opensource_project_building_amazonpay_gem/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/iy7m2f/my_first_opensource_project_building_amazonpay_gem/", "subreddit_subscribers": 67515, "created_utc": 1600857018.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_4lutb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails will allow a module with extend ActiveSupport::Concern to be prepended", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": true, "name": "t3_iy91jy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/zV_adxxIoF17xzG_Qicg-fLQ5XZHCxjI4nwjaKLF3vA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600892594.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.saeloun.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.saeloun.com/2020/09/23/prepend-class-methods-for-concerns.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?auto=webp&amp;s=76ff1c57159ecd0635bde7262995c5f75ea5b2bf", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba7dc7c390da46504d7dff83a3777aa34d06da09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7174576a8c7a36330f60dff22893de50e2a459da", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b1f1f8a636baeb85c444c850de8e7747c45470f", "width": 320, "height": 320}], "variants": {}, "id": "BN85dx9NXlDeVPyUnffc9FFfivOtdoHkGQhBm10KyEI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iy91jy", "is_robot_indexable": true, "report_reasons": null, "author": "jrochkind", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iy91jy/rails_will_allow_a_module_with_extend/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.saeloun.com/2020/09/23/prepend-class-methods-for-concerns.html", "subreddit_subscribers": 67515, "created_utc": 1600863794.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_63yf9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Triage with Me - 11 issues &amp; 2 PRs in 1.5 hours", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 94, "top_awarded_type": null, "hide_score": false, "name": "t3_ixrqh4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": "", "subreddit_type": "public", "ups": 37, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 37, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/RBkO0Cds9v9L8XO_zAlrN2TCp3HoJ_SduyehUweyxBQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600823676.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "schneems.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://schneems.com/2020/09/22/triage-with-me-11-issues-2-prs-in-15-hours/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/e-dugnvU9Nb1W7hyzp1MVme-Lft4K8vcHSaL9mNTWSg.jpg?auto=webp&amp;s=38ab5ec959ec19d8831c5f18d0f80a96504125ff", "width": 955, "height": 642}, "resolutions": [{"url": "https://external-preview.redd.it/e-dugnvU9Nb1W7hyzp1MVme-Lft4K8vcHSaL9mNTWSg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7bb267f14eed6d8f50c140a07592d3d6541c8277", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/e-dugnvU9Nb1W7hyzp1MVme-Lft4K8vcHSaL9mNTWSg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a607e93187b46db9d8763aae124de39e3a26e548", "width": 216, "height": 145}, {"url": "https://external-preview.redd.it/e-dugnvU9Nb1W7hyzp1MVme-Lft4K8vcHSaL9mNTWSg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3092b4fa585f9cff2a5b6efa0e548cff39c691cc", "width": 320, "height": 215}, {"url": "https://external-preview.redd.it/e-dugnvU9Nb1W7hyzp1MVme-Lft4K8vcHSaL9mNTWSg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b7335590beef766d2bf5e67f2ddd26c78f561ce3", "width": 640, "height": 430}], "variants": {}, "id": "KihxsLcqimE56zuocVYgBc39Go3LECKcYhPyFB8h5TE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "Puma maintainer", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixrqh4", "is_robot_indexable": true, "report_reasons": null, "author": "schneems", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/ruby/comments/ixrqh4/triage_with_me_11_issues_2_prs_in_15_hours/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://schneems.com/2020/09/22/triage-with-me-11-issues-2-prs-in-15-hours/", "subreddit_subscribers": 67515, "created_utc": 1600794876.0, "num_crossposts": 2, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_jp5v6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "tty-editor - new release supports opening multiple files and searches more editor commands", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_ixyq3n", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/ruby", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/UdVmP3FB6JOonB9hxzZtbJIrXfDehtk4l8DngKnHVwk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600845717.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/piotrmurach/tty-editor", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/peQDEfsViunxYVT-jpmTmFyAkINFlrydobycr1YtnKU.jpg?auto=webp&amp;s=314410c4265060acdc541ee2e1062c8d3af0645c", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/peQDEfsViunxYVT-jpmTmFyAkINFlrydobycr1YtnKU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4b0c8ff8b58186aec1ff04bced4ada92eba12d7e", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/peQDEfsViunxYVT-jpmTmFyAkINFlrydobycr1YtnKU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6ec41cb13bd57a36746a2ee455bceb5b572cfdf4", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/peQDEfsViunxYVT-jpmTmFyAkINFlrydobycr1YtnKU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=db4d3b79c023fb9f8270d1f09dd6610845045d96", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/peQDEfsViunxYVT-jpmTmFyAkINFlrydobycr1YtnKU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8068caf69b0278e5420f8f352de7f6854a301967", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/peQDEfsViunxYVT-jpmTmFyAkINFlrydobycr1YtnKU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=227d12bf54976f129c31c2e5da43b63ac5732125", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/peQDEfsViunxYVT-jpmTmFyAkINFlrydobycr1YtnKU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5e483af22f90c35e0e4b17230298ec0d5143128d", "width": 1080, "height": 540}], "variants": {}, "id": "4IbpTgyrGDqyKw22gMsEfASoSYZ66QpH7cPNPlOhrm8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d57de81a-873c-11e9-9a25-0e18d14df676", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixyq3n", "is_robot_indexable": true, "report_reasons": null, "author": "pmurach", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixyq3n/ttyeditor_new_release_supports_opening_multiple/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/piotrmurach/tty-editor", "subreddit_subscribers": 67515, "created_utc": 1600816917.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_6wc58", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Writing Good Test Descriptions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ixtuar", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1600830028.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "guilhermesimoes.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://guilhermesimoes.github.io/blog/writing-good-test-descriptions", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixtuar", "is_robot_indexable": true, "report_reasons": null, "author": "didnotseethatcoming", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixtuar/writing_good_test_descriptions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://guilhermesimoes.github.io/blog/writing-good-test-descriptions", "subreddit_subscribers": 67515, "created_utc": 1600801228.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_757lyqvn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails 6.1 deprecates rails db:structure:dump and rails db:structure:load | The Official BigBinary Blog | BigBinary", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_ixjs28", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 36, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/mgLT31iLCGvgF5JnCxb-8l3KPHD3CyUsPIcSeiBfrGs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600793918.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.bigbinary.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.bigbinary.com/2020/09/22/rails-6-1-deprecates-rails-db-structure-dump.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?auto=webp&amp;s=8503cddbb4afa6e7607bb9bd69e37b60c8277de5", "width": 1200, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5b9233ede74a4b70d3fc1bb02f8868dc0ac244b", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f9ab25c6613259424aa727e0c7ec14ac17690caa", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=256692068e925b15f9d1dd1de698cf9df7c106ae", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c42a5ce0c0eacb1c7fa5e0269698b389b15deabc", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0a98a64e4087be88191a2d856ec69b079e60f251", "width": 960, "height": 501}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a8cc0c6c354a48809d03ee1f01d4641a253e5d2e", "width": 1080, "height": 564}], "variants": {}, "id": "LuCVRyBbE00ARi7DYri8NjRvSe2GL2B8baeyQdYI0rw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixjs28", "is_robot_indexable": true, "report_reasons": null, "author": "chetansgawai", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixjs28/rails_61_deprecates_rails_dbstructuredump_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.bigbinary.com/2020/09/22/rails-6-1-deprecates-rails-db-structure-dump.html", "subreddit_subscribers": 67515, "created_utc": 1600765118.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello world,\n let's imagine we have a rails app:\n\n- 200 models \n- 400 controllers\n- 300 services\n\nand is a mess :)\n\nI want to move to roda, but I dont know how to structure the code properly\nusing:\n\n - pg\n - pg replicas\n - elasticsearch\n - redis\n - influxdb\n\nwe have api's for:\n\n - clients\n - integrations\n - desktop app\n - frontend app\n\nconnections via:\n\n - oauth\n - token\n - sessions\n\napi response:\n\n - json\n - xml\n\nwe also have:\n\n - jobs (200)\n - mailers(mailgun, sendgrid, default email from AR)\n - reports\n - import tools\n\ntests that take forever\n\ncurrently we do follow the rails mvc, but is a mess, boot time is slow, tests are slow\n\ndreams?\n\n- roda\n- sequel\n- ??\n\nany ideas will be appreciated :)", "author_fullname": "t2_v4959hb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "api code structure ideas", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ixqj0r", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1600791441.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600820045.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello world,\n let&amp;#39;s imagine we have a rails app:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;200 models &lt;/li&gt;\n&lt;li&gt;400 controllers&lt;/li&gt;\n&lt;li&gt;300 services&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;and is a mess :)&lt;/p&gt;\n\n&lt;p&gt;I want to move to roda, but I dont know how to structure the code properly\nusing:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;pg&lt;/li&gt;\n&lt;li&gt;pg replicas&lt;/li&gt;\n&lt;li&gt;elasticsearch&lt;/li&gt;\n&lt;li&gt;redis&lt;/li&gt;\n&lt;li&gt;influxdb&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;we have api&amp;#39;s for:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;clients&lt;/li&gt;\n&lt;li&gt;integrations&lt;/li&gt;\n&lt;li&gt;desktop app&lt;/li&gt;\n&lt;li&gt;frontend app&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;connections via:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;oauth&lt;/li&gt;\n&lt;li&gt;token&lt;/li&gt;\n&lt;li&gt;sessions&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;api response:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;json&lt;/li&gt;\n&lt;li&gt;xml&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;we also have:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;jobs (200)&lt;/li&gt;\n&lt;li&gt;mailers(mailgun, sendgrid, default email from AR)&lt;/li&gt;\n&lt;li&gt;reports&lt;/li&gt;\n&lt;li&gt;import tools&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;tests that take forever&lt;/p&gt;\n\n&lt;p&gt;currently we do follow the rails mvc, but is a mess, boot time is slow, tests are slow&lt;/p&gt;\n\n&lt;p&gt;dreams?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;roda&lt;/li&gt;\n&lt;li&gt;sequel&lt;/li&gt;\n&lt;li&gt;??&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;any ideas will be appreciated :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixqj0r", "is_robot_indexable": true, "report_reasons": null, "author": "zitrusgrape", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixqj0r/api_code_structure_ideas/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ixqj0r/api_code_structure_ideas/", "subreddit_subscribers": 67515, "created_utc": 1600791245.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "So in my current project we are using elastic to index data and in specs we are doing sleep after every import and sleep function to let the import finish, which slows the whole test suite a lot. What is the best way to have the data imported to elastic when testing queries, controllers?", "author_fullname": "t2_xvkg6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Testing elasticsearch", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ixvm64", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600835397.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So in my current project we are using elastic to index data and in specs we are doing sleep after every import and sleep function to let the import finish, which slows the whole test suite a lot. What is the best way to have the data imported to elastic when testing queries, controllers?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixvm64", "is_robot_indexable": true, "report_reasons": null, "author": "ptoir", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixvm64/testing_elasticsearch/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ixvm64/testing_elasticsearch/", "subreddit_subscribers": 67515, "created_utc": 1600806597.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "It seems like biggest ruby resources are screencasts, blogs and books. And yes, they offer tons of value. \n\nBut I\u2019m wondering if you folks know of effective courses to learn advanced ruby/rails concepts?\n\nAlso, has anyone tried this one \u201cAdvanced Ruby: Behind the Magic\u201d\n\nhttps://courses.gorails.com/advanced-ruby-for-rails-devs\n\n(To me, 300 bucks seems to be on the higher end for 30 screencasts..)", "author_fullname": "t2_6wefzl0n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby Courses - Advanced Ruby: Behind the Magic", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ix35gf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 29, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 29, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1600732699.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It seems like biggest ruby resources are screencasts, blogs and books. And yes, they offer tons of value. &lt;/p&gt;\n\n&lt;p&gt;But I\u2019m wondering if you folks know of effective courses to learn advanced ruby/rails concepts?&lt;/p&gt;\n\n&lt;p&gt;Also, has anyone tried this one \u201cAdvanced Ruby: Behind the Magic\u201d&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://courses.gorails.com/advanced-ruby-for-rails-devs\"&gt;https://courses.gorails.com/advanced-ruby-for-rails-devs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(To me, 300 bucks seems to be on the higher end for 30 screencasts..)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?auto=webp&amp;s=f8869df45bc8f9c0408d2b6c8e87ab9d54f617ed", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ea04e4bc27f6f79423a22ac907f8bc4e36ea6f39", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7f45c6c1c8b2ec82dfea9104908dd9ff4e8d23de", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8c7c6f8b3aa1b6d0854da5808575d379bea042b7", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0adb0527feb463f249cad25d107cc405370225f4", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=eee6f346b76bfe7bed1fcd698585926d70f3489f", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a7fa47c6b2c351a2c1d9358819a1bb3f429c4583", "width": 1080, "height": 567}], "variants": {}, "id": "PKcDfDKZm_j9SJsVX6cjk-s-pZCC19W0yfW2qijkQGw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ix35gf", "is_robot_indexable": true, "report_reasons": null, "author": "FullStack_coach", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ix35gf/ruby_courses_advanced_ruby_behind_the_magic/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ix35gf/ruby_courses_advanced_ruby_behind_the_magic/", "subreddit_subscribers": 67515, "created_utc": 1600703899.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I have this code\n\nYAML.load(File.open(env\\_file))\\[ENV\\[\"RACK\\_ENV\"\\]\\].each { |key, value| ENV\\[key.to\\_s\\] = value } if File.exists?(env\\_file)\n\nThis file loads all the secret variables, client API secrets, db secrets and everything into ENV.\n\n&amp;#x200B;\n\nThen, different gems just call ENV\\['aa\\_secret\\_key'\\] to get the secret and boot up the app\n\nsecret\\_env\\_file.yml is not uploaded on source control. So, everything stays safe.\n\n&amp;#x200B;\n\nAre there any downsides of using ENV to store all those information while the app boots up? I think ENV\\['anything\\_password'\\] is still accessible later on as long as the app is still up and running. Like for sinatra/rails etc.", "author_fullname": "t2_5o5tutm8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any downsides storing database host/username/password in ruby ENV?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ixazdi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600756359.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have this code&lt;/p&gt;\n\n&lt;p&gt;YAML.load(File.open(env_file))[ENV[&amp;quot;RACK_ENV&amp;quot;]].each { |key, value| ENV[key.to_s] = value } if File.exists?(env_file)&lt;/p&gt;\n\n&lt;p&gt;This file loads all the secret variables, client API secrets, db secrets and everything into ENV.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Then, different gems just call ENV[&amp;#39;aa_secret_key&amp;#39;] to get the secret and boot up the app&lt;/p&gt;\n\n&lt;p&gt;secret_env_file.yml is not uploaded on source control. So, everything stays safe.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Are there any downsides of using ENV to store all those information while the app boots up? I think ENV[&amp;#39;anything_password&amp;#39;] is still accessible later on as long as the app is still up and running. Like for sinatra/rails etc.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixazdi", "is_robot_indexable": true, "report_reasons": null, "author": "unkn0wn_programmer", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixazdi/any_downsides_storing_database/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ixazdi/any_downsides_storing_database/", "subreddit_subscribers": 67515, "created_utc": 1600727559.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ixazdi", "before": null}}