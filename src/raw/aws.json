{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "", "author_fullname": "t2_3m43fu2f", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Python 2 End of Life (EOL): What It Means for You, Plus Services Like AWS Lambda and Heroku", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": false, "name": "t3_fcjl8o", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 47, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "serverless", "can_mod_post": false, "score": 47, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583214244.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "icanteven.io", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "ff0e4f90-fe51-11e8-995f-0e494176cf40", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fcjl8o", "is_robot_indexable": true, "report_reasons": null, "author": "icantevenplop", "discussion_type": null, "num_comments": 18, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fcjl8o/python_2_end_of_life_eol_what_it_means_for_you/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.icanteven.io/blog/python2-eol/", "subreddit_subscribers": 111761, "created_utc": 1583185444.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Hey all,\n\nI\u2019m looking for a way to download all files (and all versions) from an s3 bucket recursively, to a local filesystem. I\u2019m hoping there\u2019s an easily distinguishable way to denote thee versioned files locally. \n\nIs there an easy way to do this with the aws-cli or is that beyond what it can do? \n\nI don\u2019t mind using a 3rd party tool either. Thanks!", "author_fullname": "t2_6afgl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "S3 download all objects", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": false, "name": "t3_fcr0q9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "storage", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583248594.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey all,&lt;/p&gt;\n\n&lt;p&gt;I\u2019m looking for a way to download all files (and all versions) from an s3 bucket recursively, to a local filesystem. I\u2019m hoping there\u2019s an easily distinguishable way to denote thee versioned files locally. &lt;/p&gt;\n\n&lt;p&gt;Is there an easy way to do this with the aws-cli or is that beyond what it can do? &lt;/p&gt;\n\n&lt;p&gt;I don\u2019t mind using a 3rd party tool either. Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "cb32bd78-fe51-11e8-8357-0e3adcef64d8", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fcr0q9", "is_robot_indexable": true, "report_reasons": null, "author": "sh4des", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fcr0q9/s3_download_all_objects/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fcr0q9/s3_download_all_objects/", "subreddit_subscribers": 111761, "created_utc": 1583219794.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Hello!\n\nMy instances are locked behind a security group that only allows traffic through ports 80 and 443. When I need access, I use a custom batch script to allow traffic through ports 22 and 5432 exclusively to my IP address. Then I proceed to access it with putty using my key pair. Once I'm done, I use another custom script to close ports 22 and 5432.\n\nAWS has CloudTrail, which records all activity for your account. I've noticed that I can monitor security group changes (such as those that I explained above) and I want to know if having these records is enough to tell if someone got into my instance.\n\nSo, my questions are:\n\n1) Can anyone access the instances behind that security group without having to open port 22 AND physically having access to my key pair file?\n\n2) Can I trust CloudTrail records, so that all breaches are guaranteed to be logged just like normal access?\n\nThanks in advance!", "author_fullname": "t2_lz0gmc1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "is it possible to leave no trail behind in this case?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": true, "name": "t3_fcthjq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "monitoring", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583265246.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello!&lt;/p&gt;\n\n&lt;p&gt;My instances are locked behind a security group that only allows traffic through ports 80 and 443. When I need access, I use a custom batch script to allow traffic through ports 22 and 5432 exclusively to my IP address. Then I proceed to access it with putty using my key pair. Once I&amp;#39;m done, I use another custom script to close ports 22 and 5432.&lt;/p&gt;\n\n&lt;p&gt;AWS has CloudTrail, which records all activity for your account. I&amp;#39;ve noticed that I can monitor security group changes (such as those that I explained above) and I want to know if having these records is enough to tell if someone got into my instance.&lt;/p&gt;\n\n&lt;p&gt;So, my questions are:&lt;/p&gt;\n\n&lt;p&gt;1) Can anyone access the instances behind that security group without having to open port 22 AND physically having access to my key pair file?&lt;/p&gt;\n\n&lt;p&gt;2) Can I trust CloudTrail records, so that all breaches are guaranteed to be logged just like normal access?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e6592206-1ce0-11e9-a9e6-0e7bd20fa500", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fcthjq", "is_robot_indexable": true, "report_reasons": null, "author": "aledmb", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fcthjq/is_it_possible_to_leave_no_trail_behind_in_this/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fcthjq/is_it_possible_to_leave_no_trail_behind_in_this/", "subreddit_subscribers": 111761, "created_utc": 1583236446.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "I have a proxy apigateway -&gt; lambda -&gt; dynamodb stack which is exposed as GET and POSTs.  I'm trying to find out the best way to cache content for a certain amount of time on the GET, and to check if the data had changed or not (for example using etags).\n\nI'm trying to prevent unnecessary calls to my lambda (which read from dynambodb) - although the data could change at any given point so its not clear how to handle that.\n\nAs far as I can tell - you can cache at api gateway, or we can use the user browser caching.\n\n&amp;#x200B;\n\n1. Are there any examples of caching at the api gateway layer, *specifically* using the Aws CDK?\n2. If caching at the user browser level, should I do this in my lambda and set the headers manually in the response?  I cannot seem to find any examples of this, perhaps its not a common approach?  A python example would be ideal.  Can we use etags, and if so do we have to manually deal with the etag as my understanding is that the server normally deals with this.\n\nSo something like:\n\nCache-Control: private, max-age=0, no-cache \n\nEtag: &lt;some\\_tag&gt;\n\nAny advantages to either approach?\n\nHopefully someone can point me in the right direction on how to cache responses and only pull the data again in the GET if it has changed.  Thanks!", "author_fullname": "t2_7d3am", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Caching content lambda or gateway", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": false, "name": "t3_fcrxc1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical question", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583254839.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a proxy apigateway -&amp;gt; lambda -&amp;gt; dynamodb stack which is exposed as GET and POSTs.  I&amp;#39;m trying to find out the best way to cache content for a certain amount of time on the GET, and to check if the data had changed or not (for example using etags).&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to prevent unnecessary calls to my lambda (which read from dynambodb) - although the data could change at any given point so its not clear how to handle that.&lt;/p&gt;\n\n&lt;p&gt;As far as I can tell - you can cache at api gateway, or we can use the user browser caching.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Are there any examples of caching at the api gateway layer, &lt;em&gt;specifically&lt;/em&gt; using the Aws CDK?&lt;/li&gt;\n&lt;li&gt;If caching at the user browser level, should I do this in my lambda and set the headers manually in the response?  I cannot seem to find any examples of this, perhaps its not a common approach?  A python example would be ideal.  Can we use etags, and if so do we have to manually deal with the etag as my understanding is that the server normally deals with this.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;So something like:&lt;/p&gt;\n\n&lt;p&gt;Cache-Control: private, max-age=0, no-cache &lt;/p&gt;\n\n&lt;p&gt;Etag: &amp;lt;some\\_tag&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;Any advantages to either approach?&lt;/p&gt;\n\n&lt;p&gt;Hopefully someone can point me in the right direction on how to cache responses and only pull the data again in the GET if it has changed.  Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e0acaab0-fe51-11e8-b457-0e86fa5111f4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fcrxc1", "is_robot_indexable": true, "report_reasons": null, "author": "chadwell", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fcrxc1/caching_content_lambda_or_gateway/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fcrxc1/caching_content_lambda_or_gateway/", "subreddit_subscribers": 111761, "created_utc": 1583226039.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Well, I've been playing with CDK for a while and became huge fan of it. I am about to introduce it to my team, but first I need to clarify some of the best practices. We've been using Terraform heavily with its \"extension\" Terragrunt. I would love to map my current experiences to the CDK world.\n\nFirst question - **how do you version your infrastructure?**  Imagine you want to add a new module with a fresh AWS RDS instance.\n\nHere's our Terraform flow - you play on your branch with the infrastructure by adding all the required resources. After it is ready, you merge it into master branch. Lastly a `git tag` is created and the change is then considered released(not deployed). When somebody wants to update the environment to the new version(deploy your changes), they bump the version in `source:@git/blahblahblah` in `terragrunt.hcl` and perform apply. Basically, we use git tags and Terragrunt to do it.\n\nHow does it look like in CDK? Do you version your infrastructure by creating node packages and the actual update is performed by updating the version in package.json, installing the new one and performing the `cdk deploy`? This is what came into my mind first, but perhaps I am missing something, and there is another way to do it.\n\nSecond question concerns **multiple environments - you always have qa, preprod, prod and \"local\" environments used by developers.** In Terraform/grunt, we have a repository with mutliple directories  `qa/terragrunt.hcl`, `preprod/terragrunt.hcl` and so on. If you want to tweak the environment(by changing its params or bumping the infra version in the source git tag), you change the adequate `terragrunt.hcl`, perform apply and commit your changes on succes. How do you solve this usecase in AWS CDK?", "author_fullname": "t2_5bvor", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "AWS CDK best practices (moving from Terraform+Terragrunt)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": true, "name": "t3_fcubc1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "discussion", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1583241273.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583269702.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Well, I&amp;#39;ve been playing with CDK for a while and became huge fan of it. I am about to introduce it to my team, but first I need to clarify some of the best practices. We&amp;#39;ve been using Terraform heavily with its &amp;quot;extension&amp;quot; Terragrunt. I would love to map my current experiences to the CDK world.&lt;/p&gt;\n\n&lt;p&gt;First question - &lt;strong&gt;how do you version your infrastructure?&lt;/strong&gt;  Imagine you want to add a new module with a fresh AWS RDS instance.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s our Terraform flow - you play on your branch with the infrastructure by adding all the required resources. After it is ready, you merge it into master branch. Lastly a &lt;code&gt;git tag&lt;/code&gt; is created and the change is then considered released(not deployed). When somebody wants to update the environment to the new version(deploy your changes), they bump the version in &lt;code&gt;source:@git/blahblahblah&lt;/code&gt; in &lt;code&gt;terragrunt.hcl&lt;/code&gt; and perform apply. Basically, we use git tags and Terragrunt to do it.&lt;/p&gt;\n\n&lt;p&gt;How does it look like in CDK? Do you version your infrastructure by creating node packages and the actual update is performed by updating the version in package.json, installing the new one and performing the &lt;code&gt;cdk deploy&lt;/code&gt;? This is what came into my mind first, but perhaps I am missing something, and there is another way to do it.&lt;/p&gt;\n\n&lt;p&gt;Second question concerns &lt;strong&gt;multiple environments - you always have qa, preprod, prod and &amp;quot;local&amp;quot; environments used by developers.&lt;/strong&gt; In Terraform/grunt, we have a repository with mutliple directories  &lt;code&gt;qa/terragrunt.hcl&lt;/code&gt;, &lt;code&gt;preprod/terragrunt.hcl&lt;/code&gt; and so on. If you want to tweak the environment(by changing its params or bumping the infra version in the source git tag), you change the adequate &lt;code&gt;terragrunt.hcl&lt;/code&gt;, perform apply and commit your changes on succes. How do you solve this usecase in AWS CDK?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "962d796e-fa9c-11e8-a3dc-0e1ba4fe1be4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fcubc1", "is_robot_indexable": true, "report_reasons": null, "author": "realfeeder", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fcubc1/aws_cdk_best_practices_moving_from/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fcubc1/aws_cdk_best_practices_moving_from/", "subreddit_subscribers": 111761, "created_utc": 1583240902.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "I heard that even at AWS, all newly services/products are built on DDB unless they have a compelling reason not to because\n\nOf the maintainability, performance and scalability benefits that DDB offers \n\nWith that in mind, when would you want to use RDS over DynamoDB?\n\nIf you need joins that are offered in SQL, you could define multiple tables in DDB and load from those tables as needed.\n\nOne other thing I noticed was that RDS has a set cost whereas in DDB, you pay for WCU and RCU usage", "author_fullname": "t2_3ev7if00", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ELI5: When should you use RDS over DynamoDB?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fchhac", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583206289.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I heard that even at AWS, all newly services/products are built on DDB unless they have a compelling reason not to because&lt;/p&gt;\n\n&lt;p&gt;Of the maintainability, performance and scalability benefits that DDB offers &lt;/p&gt;\n\n&lt;p&gt;With that in mind, when would you want to use RDS over DynamoDB?&lt;/p&gt;\n\n&lt;p&gt;If you need joins that are offered in SQL, you could define multiple tables in DDB and load from those tables as needed.&lt;/p&gt;\n\n&lt;p&gt;One other thing I noticed was that RDS has a set cost whereas in DDB, you pay for WCU and RCU usage&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fchhac", "is_robot_indexable": true, "report_reasons": null, "author": "Truetree9999", "discussion_type": null, "num_comments": 59, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fchhac/eli5_when_should_you_use_rds_over_dynamodb/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fchhac/eli5_when_should_you_use_rds_over_dynamodb/", "subreddit_subscribers": 111761, "created_utc": 1583177489.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "For some reason when retrieving the @logStream field when using cloudwatch insights, the field is no longer a link to the messages position in the log stream. \nWhen using the regular search, I can just click on the log stream link and get taken to the context of a message, this was very useful.\n\nAnyone know if something changed and whether it's possible to get this behaviour again?", "author_fullname": "t2_a1o7d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Cloudwatch Log Insights - @logStream has no link", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": true, "name": "t3_fcuhkb", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical question", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583270559.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For some reason when retrieving the @logStream field when using cloudwatch insights, the field is no longer a link to the messages position in the log stream. \nWhen using the regular search, I can just click on the log stream link and get taken to the context of a message, this was very useful.&lt;/p&gt;\n\n&lt;p&gt;Anyone know if something changed and whether it&amp;#39;s possible to get this behaviour again?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e0acaab0-fe51-11e8-b457-0e86fa5111f4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fcuhkb", "is_robot_indexable": true, "report_reasons": null, "author": "Niio", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fcuhkb/cloudwatch_log_insights_logstream_has_no_link/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fcuhkb/cloudwatch_log_insights_logstream_has_no_link/", "subreddit_subscribers": 111761, "created_utc": 1583241759.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Is there a way for me to rewrite the paths of forwarded traffic?\n\nFor example, I have a listener rule that forwards `/test/*` to target group `tg-1`. If I hit `https://url.com/test/endpoint`, I want the target container to see the request going to `/endpoint` and not `/test/endpoint`. Is this something that is possible, or am I just going to have to rewire my endpoints in the service?", "author_fullname": "t2_hx37x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rewrite Forwarded Paths from an Application Load Balancer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": true, "name": "t3_fctruy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "technical question", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583266886.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is there a way for me to rewrite the paths of forwarded traffic?&lt;/p&gt;\n\n&lt;p&gt;For example, I have a listener rule that forwards &lt;code&gt;/test/*&lt;/code&gt; to target group &lt;code&gt;tg-1&lt;/code&gt;. If I hit &lt;code&gt;https://url.com/test/endpoint&lt;/code&gt;, I want the target container to see the request going to &lt;code&gt;/endpoint&lt;/code&gt; and not &lt;code&gt;/test/endpoint&lt;/code&gt;. Is this something that is possible, or am I just going to have to rewire my endpoints in the service?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e0acaab0-fe51-11e8-b457-0e86fa5111f4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fctruy", "is_robot_indexable": true, "report_reasons": null, "author": "turkeyfied", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fctruy/rewrite_forwarded_paths_from_an_application_load/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fctruy/rewrite_forwarded_paths_from_an_application_load/", "subreddit_subscribers": 111761, "created_utc": 1583238086.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "I got charged $156 for setting up Kubernetes and an Elastic service. I'm not too seasoned with AWS and actually ended up going with GCS, leaving the AWS services untouch.\n\nSimple question: has anyone any experience getting refunds for services that went completely unused? I opened a ticket last night but then found this thread of people pleading to get their refunds honored so I'm not 100% confident. https://forums.aws.amazon.com/thread.jspa?threadID=61842", "author_fullname": "t2_cco2rlx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Refunds for unused resources?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": true, "name": "t3_fctpaq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "billing", "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583266488.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I got charged $156 for setting up Kubernetes and an Elastic service. I&amp;#39;m not too seasoned with AWS and actually ended up going with GCS, leaving the AWS services untouch.&lt;/p&gt;\n\n&lt;p&gt;Simple question: has anyone any experience getting refunds for services that went completely unused? I opened a ticket last night but then found this thread of people pleading to get their refunds honored so I&amp;#39;m not 100% confident. &lt;a href=\"https://forums.aws.amazon.com/thread.jspa?threadID=61842\"&gt;https://forums.aws.amazon.com/thread.jspa?threadID=61842&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "b130294a-1811-11e9-a2ef-0e49548b5cda", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fctpaq", "is_robot_indexable": true, "report_reasons": null, "author": "allisonmaybe", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fctpaq/refunds_for_unused_resources/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fctpaq/refunds_for_unused_resources/", "subreddit_subscribers": 111761, "created_utc": 1583237688.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "aws", "selftext": "Hi,\n\nI tried `echo $?` but then I think it just returns a response if the command is started executing successfully. It doesn't tell if the command did what it was supposed to do. Is there a way to track that in code?\n\nFor example if I run\n\n`aws ec2 stop-instance &lt;instance_ID&gt;`\n\nit should return a code after stopping the instances successfully or returns some other code if it failed due to access issues or may be due to instance not found.\n\nThanks", "author_fullname": "t2_6tx5s", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is there way to get a response for successful AWS CLI execution?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/aws", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": true, "name": "t3_fcteaq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "discussion", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583264722.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.aws", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I tried &lt;code&gt;echo $?&lt;/code&gt; but then I think it just returns a response if the command is started executing successfully. It doesn&amp;#39;t tell if the command did what it was supposed to do. Is there a way to track that in code?&lt;/p&gt;\n\n&lt;p&gt;For example if I run&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;aws ec2 stop-instance &amp;lt;instance_ID&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;it should return a code after stopping the instances successfully or returns some other code if it failed due to access issues or may be due to instance not found.&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "962d796e-fa9c-11e8-a3dc-0e1ba4fe1be4", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh84", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "fcteaq", "is_robot_indexable": true, "report_reasons": null, "author": "ashofspades", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/aws/comments/fcteaq/is_there_way_to_get_a_response_for_successful_aws/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/aws/comments/fcteaq/is_there_way_to_get_a_response_for_successful_aws/", "subreddit_subscribers": 111761, "created_utc": 1583235922.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fcteaq", "before": null}}