{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello All,  I wrote a terminal based RSS reader [https://gitlab.com/mindaslab/rss\\_reader](https://gitlab.com/mindaslab/rss_reader) , thought it might be useful for some one so am posting it here.", "author_fullname": "t2_6cs3h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A RSS reader in Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_gx38l1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591387312.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello All,  I wrote a terminal based RSS reader &lt;a href=\"https://gitlab.com/mindaslab/rss_reader\"&gt;https://gitlab.com/mindaslab/rss_reader&lt;/a&gt; , thought it might be useful for some one so am posting it here.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?auto=webp&amp;s=6b590839e21b0f0e5d45a926d1c383c41316f7fd", "width": 128, "height": 128}, "resolutions": [{"url": "https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a3dfba29f9d19dc5dd95d58e68cd2ca48d0f6551", "width": 108, "height": 108}], "variants": {}, "id": "euUE_k9o_euzwgNONmIZMM026oeSTBH_ZdvLjtUNylg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx38l1", "is_robot_indexable": true, "report_reasons": null, "author": "mindaslab", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx38l1/a_rss_reader_in_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gx38l1/a_rss_reader_in_ruby/", "subreddit_subscribers": 65586, "created_utc": 1591358512.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I've been writing Ruby since before Rails came out and I had no idea you could do this. \n\nYou can pass the token defining the heredoc as an argument, and the continue the line:\n\n    call_method(&lt;&lt;DOC).do_something(5)\n      SOME TEXT\n    DOC\n\nYou can even stack the heredocs and call them as multiple arguments:\n\n    call_method(&lt;&lt;-DOC1, &lt;&lt;~DOC2).do_something\n      this is doc 1\n    DOC1\n      this is doc 2\n    DOC2\n\nNot something that will matter very often, but a cool discovery.\n\n---\n\nEdit - Other cool stuff from this thread:\n\n/u/yxhuvud pointed out that it is possible to call methods on the heredoc too:\n\n    foo(&lt;&lt;~SQL.strip)\n      SELECT\n        foo, bar\n      FROM tables\n    SQL\n\n/u/riffraff pointed out the `DATA` and `__END__` syntax as well ([explanation link](https://www.honeybadger.io/blog/data-and-end-in-ruby/))\n\n    call_method(DATA).do_something\n\n    # some code\n\n    __END__\n    Evertyhing after the above line\n    is what will go in DATA", "author_fullname": "t2_5bruf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TIL you can pass heredocs tokens as arguments and even stack them", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gwqllv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 54, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 54, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": 1591352690.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_3": 1}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591334687.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been writing Ruby since before Rails came out and I had no idea you could do this. &lt;/p&gt;\n\n&lt;p&gt;You can pass the token defining the heredoc as an argument, and the continue the line:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;call_method(&amp;lt;&amp;lt;DOC).do_something(5)\n  SOME TEXT\nDOC\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can even stack the heredocs and call them as multiple arguments:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;call_method(&amp;lt;&amp;lt;-DOC1, &amp;lt;&amp;lt;~DOC2).do_something\n  this is doc 1\nDOC1\n  this is doc 2\nDOC2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Not something that will matter very often, but a cool discovery.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Edit - Other cool stuff from this thread:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"/u/yxhuvud\"&gt;/u/yxhuvud&lt;/a&gt; pointed out that it is possible to call methods on the heredoc too:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foo(&amp;lt;&amp;lt;~SQL.strip)\n  SELECT\n    foo, bar\n  FROM tables\nSQL\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"/u/riffraff\"&gt;/u/riffraff&lt;/a&gt; pointed out the &lt;code&gt;DATA&lt;/code&gt; and &lt;code&gt;__END__&lt;/code&gt; syntax as well (&lt;a href=\"https://www.honeybadger.io/blog/data-and-end-in-ruby/\"&gt;explanation link&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;call_method(DATA).do_something\n\n# some code\n\n__END__\nEvertyhing after the above line\nis what will go in DATA\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?auto=webp&amp;s=946dfa2b21fed19e3ce735d5cce6050591e546b8", "width": 2048, "height": 1024}, "resolutions": [{"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=95baefaf60da93e911a02b209152fcbb7d6c1cdf", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2aeff025d6e18a37377240b05e3da79e7ec963f3", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=29fc881aa01d339ea0528775350d3518f570c8d5", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8166cf64db3d115696ec6cc461ea988357e864e7", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=31ba2de3e3993c26453d2e74bb3b358f4d7e53e3", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a2601feb68388948ea92b47b54801fb557460e2b", "width": 1080, "height": 540}], "variants": {}, "id": "K_xfFOANcSVffWV8_XSK1nE4Zws0JCj6BdEwR7tfxBI"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 31, "coin_price": 1800, "id": "gid_3", "penny_donate": null, "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/platinum_512.png", "days_of_premium": 31, "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/platinum_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_128.png", "width": 128, "height": 128}], "icon_width": 512, "start_date": null, "is_enabled": true, "description": "Gives the author a month of Reddit Premium, which includes %{coin_symbol}700 Coins for that month, and shows a Platinum Award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "name": "Platinum", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gwqllv", "is_robot_indexable": true, "report_reasons": null, "author": "brainbag", "discussion_type": null, "num_comments": 32, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gwqllv/til_you_can_pass_heredocs_tokens_as_arguments_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gwqllv/til_you_can_pass_heredocs_tokens_as_arguments_and/", "subreddit_subscribers": 65586, "created_utc": 1591305887.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_msssp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Run Rails script as an ActiveJob job", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx2jzd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1591384240.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.eq8.eu", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx2jzd", "is_robot_indexable": true, "report_reasons": null, "author": "equivalent8", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx2jzd/run_rails_script_as_an_activejob_job/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.eq8.eu/til/run-script-as-a-activejob-sidekiq-job.html", "subreddit_subscribers": 65586, "created_utc": 1591355440.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I wrote this, but I have problems with my helper \"current\\_user\". I don't  know what I exactly should put there to get it into the work : [https://gist.github.com/prp-e/91ad2491ffa8926a4c5ff67268078b1f](https://slack-redir.net/link?url=https%3A%2F%2Fgist.github.com%2Fprp-e%2F91ad2491ffa8926a4c5ff67268078b1f&amp;v=3) \n\n(P.S : It's not a serious project, don't worry about it's security)", "author_fullname": "t2_1lai2din", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "session[:user_id] problem in a sinatra app", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx0ize", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591373776.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote this, but I have problems with my helper &amp;quot;current_user&amp;quot;. I don&amp;#39;t  know what I exactly should put there to get it into the work : &lt;a href=\"https://slack-redir.net/link?url=https%3A%2F%2Fgist.github.com%2Fprp-e%2F91ad2491ffa8926a4c5ff67268078b1f&amp;amp;v=3\"&gt;https://gist.github.com/prp-e/91ad2491ffa8926a4c5ff67268078b1f&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;(P.S : It&amp;#39;s not a serious project, don&amp;#39;t worry about it&amp;#39;s security)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx0ize", "is_robot_indexable": true, "report_reasons": null, "author": "Haghiri75", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx0ize/sessionuser_id_problem_in_a_sinatra_app/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gx0ize/sessionuser_id_problem_in_a_sinatra_app/", "subreddit_subscribers": 65586, "created_utc": 1591344976.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Code (file iter.rb):\n\n  \n`require(\"benchmark\")`\n\n&amp;#x200B;\n\n`array = (1..2000000).to_a()`\n\n&amp;#x200B;\n\n`class Array`\n\n  `def iter()`\n\n`yield self`\n\n  `end`\n\n`end`\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n[`Benchmark.bm`](https://Benchmark.bm)`() {|b|`\n\n  [`b.report`](https://b.report)`(\"for: \") {|b|`\n\n[`File.open`](https://File.open)`(\"for.txt\", \"w\") {|f|`\n\n`for i in array do`\n\n`f.puts(i)`\n\n`end`\n\n`}` \n\n  `}`\n\n  [`b.report`](https://b.report)`(\"iter:\") {|b|`\n\n[`File.open`](https://File.open)`(\"iter.txt\", \"w\") {|f|`\n\n`array.iter() {|i|`\n\n`f.puts(i)`\n\n`}`\n\n`}`\n\n  `}`\n\n`}` \n\n&amp;#x200B;\n\nOn my Raspberry Pi 4 (`Linux Manjaro 4.19.122-1-MANJARO-ARM #1 SMP PREEMPT Mon May 11 14:20:27 CDT 2020 aarch64 GNU/Linux`), this produces the following:  \n`user     system      total        real`\n\n`for:   4.481485   0.152160   4.633645 (  4.665762)`\n\n`iter:  2.933153   0.135692   3.068845 (  3.082631)`  \n\n\nit's a second and a half faster, just by yielding the array instead of looping into it with a for loop.", "author_fullname": "t2_57t3n9fq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Yielding an array resulting faster than doing a for loop", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx1kul", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.61, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/ruby", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591379373.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Code (file iter.rb):&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;require(&amp;quot;benchmark&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;array = (1..2000000).to_a()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;class Array&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;def iter()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;yield self&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://Benchmark.bm\"&gt;&lt;code&gt;Benchmark.bm&lt;/code&gt;&lt;/a&gt;&lt;code&gt;() {|b|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://b.report\"&gt;&lt;code&gt;b.report&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;for: &amp;quot;) {|b|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://File.open\"&gt;&lt;code&gt;File.open&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;for.txt&amp;quot;, &amp;quot;w&amp;quot;) {|f|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for i in array do&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;f.puts(i)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://b.report\"&gt;&lt;code&gt;b.report&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;iter:&amp;quot;) {|b|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://File.open\"&gt;&lt;code&gt;File.open&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;iter.txt&amp;quot;, &amp;quot;w&amp;quot;) {|f|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;array.iter() {|i|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;f.puts(i)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;On my Raspberry Pi 4 (&lt;code&gt;Linux Manjaro 4.19.122-1-MANJARO-ARM #1 SMP PREEMPT Mon May 11 14:20:27 CDT 2020 aarch64 GNU/Linux&lt;/code&gt;), this produces the following:&lt;br/&gt;\n&lt;code&gt;user     system      total        real&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for:   4.481485   0.152160   4.633645 (  4.665762)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;iter:  2.933153   0.135692   3.068845 (  3.082631)&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;it&amp;#39;s a second and a half faster, just by yielding the array instead of looping into it with a for loop.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d57de81a-873c-11e9-9a25-0e18d14df676", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx1kul", "is_robot_indexable": true, "report_reasons": null, "author": "GPhykos", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx1kul/yielding_an_array_resulting_faster_than_doing_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gx1kul/yielding_an_array_resulting_faster_than_doing_a/", "subreddit_subscribers": 65586, "created_utc": 1591350573.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_ew57u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Topaz still one of the fastest ruby implementation, even if it not developed some years, by this benchmarks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_gwt2xc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/OXS_mEEhlg4E7CrKH13JrOxcnQDCg1I4pLJbLj2TpS8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591342649.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?auto=webp&amp;s=8f301f793a2aad2e5bc38441c8d19e8cc2d92b09", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ff4a3f70697dee714da5088dc514108044cdba31", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6f1a49e66f446db147042908481ca391b03fc1a8", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=de696b5b4db130c886c6a7374d86bdc8e38bcf4b", "width": 320, "height": 320}], "variants": {}, "id": "RvPIhCR7HfTnty9-rDh8tZhw3z3n-8_CKwdsH_ax51U"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gwt2xc", "is_robot_indexable": true, "report_reasons": null, "author": "kostya27", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gwt2xc/topaz_still_one_of_the_fastest_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/kostya/jit-benchmarks", "subreddit_subscribers": 65586, "created_utc": 1591313849.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_2wqagm4q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Ruby Blend Episode 15: Rails Testing Tools and Best Practices with Jason Swett", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_gwn67u", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Podcast", "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/OQiy43fO_3Vfn2mkNQ6iGy8zkUAoyP8GoyNI52NyjVE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591324279.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "fireside.fm", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?auto=webp&amp;s=b1d150c0c68e430c03c8722a5e61d9621a009fa6", "width": 1400, "height": 1400}, "resolutions": [{"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=50f5a61511e6805f9339940e0904753732654e4d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=dbe316ee5b608e17c1a1d12113a71cb3107a7028", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2c49a7c576b83d84988fa01074a0a700c9d489e6", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=54b0bf044120b01b7af031d8e8411a5e38c4a274", "width": 640, "height": 640}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3607ddc0d69a9e0873dbd33dcb1634598a4dd96f", "width": 960, "height": 960}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=985cb34791843f2144d31ad59363e54beb5ddbaa", "width": 1080, "height": 1080}], "variants": {}, "id": "8A6wH5yJIbUbNPdNcyvYYij2lHgPaCbc7QnX5cXjjKU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "91df2474-873d-11e9-a45d-0e56054fcf08", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gwn67u", "is_robot_indexable": true, "report_reasons": null, "author": "andrewmc0des", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gwn67u/the_ruby_blend_episode_15_rails_testing_tools_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://fireside.fm/s/ouBAUjGy+C2WN3swa", "subreddit_subscribers": 65586, "created_utc": 1591295479.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I\u2019m using OmniAuth right now and things are working fine using the available strategies like \u2018omniauth-google-oauth2\u2019. \n\nI\u2019d like to write on generic strategy, where I can pass in the \u2018client_id\u2019, \u2018client_secret\u2019, a provider url, etc. It\u2019s my understanding that a generic strategy will only work if the provider is OpenId Connect compliant for standard naming, endpoints, etc. \n\nI have bit and pieces of it figured out, but struggling to put it all together.  There\u2019s a couple gems that look like generic OpenId Connect strategies, but I\u2019ve run into issues dynamically updating them in the initializer following a pattern like this [dynamic provider ](https://github.com/omniauth/omniauth/wiki/Dynamic-Providers)\n\n\nHas anyone implemented something similar?", "author_fullname": "t2_8kgflmc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Dynamic OmniAuth strategy utilizing OpenId Connect?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gw91oa", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591269068.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m using OmniAuth right now and things are working fine using the available strategies like \u2018omniauth-google-oauth2\u2019. &lt;/p&gt;\n\n&lt;p&gt;I\u2019d like to write on generic strategy, where I can pass in the \u2018client_id\u2019, \u2018client_secret\u2019, a provider url, etc. It\u2019s my understanding that a generic strategy will only work if the provider is OpenId Connect compliant for standard naming, endpoints, etc. &lt;/p&gt;\n\n&lt;p&gt;I have bit and pieces of it figured out, but struggling to put it all together.  There\u2019s a couple gems that look like generic OpenId Connect strategies, but I\u2019ve run into issues dynamically updating them in the initializer following a pattern like this &lt;a href=\"https://github.com/omniauth/omniauth/wiki/Dynamic-Providers\"&gt;dynamic provider &lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Has anyone implemented something similar?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/2RN_qEupKzBQTUgsDz0OeOT8-WjPknS4tjO6ApM2MM8.jpg?auto=webp&amp;s=9f9a7f6c33d8d7549a50f906814b9bbd6a6b4cf4", "width": 182, "height": 182}, "resolutions": [{"url": "https://external-preview.redd.it/2RN_qEupKzBQTUgsDz0OeOT8-WjPknS4tjO6ApM2MM8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=36f9b6008f7d04da211ec872064442cd89bbd9d7", "width": 108, "height": 108}], "variants": {}, "id": "jTzu5wJsoI2Uev35gmEUyR_z1QWuV2DGTycUojDuxFg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gw91oa", "is_robot_indexable": true, "report_reasons": null, "author": "spartans1311", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gw91oa/dynamic_omniauth_strategy_utilizing_openid_connect/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gw91oa/dynamic_omniauth_strategy_utilizing_openid_connect/", "subreddit_subscribers": 65586, "created_utc": 1591240268.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hey there,\n\nI've read and re-read this for typos and layout errors and am getting ready to send to the printers on Monday (8th). We'll ship anywhere for the price of the \u00a329 Alt::BrightonRuby \"ticket\" as well as access to the talks (15th June) and the ability to ask questions that I'll put to the speakers on a podcast (late June/early July).\n\nTickets and further information at https://alt.brightonruby.com\n\n[The cover](https://preview.redd.it/y19ghclw7p251.png?width=1586&amp;format=png&amp;auto=webp&amp;s=c9be747a6a499d76b7ffa862c0eb87da91b27ce2)\n\n[It's a real book.](https://preview.redd.it/6ooqvdsa8p251.jpg?width=3024&amp;format=pjpg&amp;auto=webp&amp;s=41cf241a1748acca77866d60ff9bb95387babde2)", "author_fullname": "t2_5gd2d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Shipped print copies of Why's Poignant Guide this Monday as part of Alt::BrightonRuby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 100, "top_awarded_type": null, "hide_score": false, "media_metadata": {"y19ghclw7p251": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 77, "x": 108, "u": "https://preview.redd.it/y19ghclw7p251.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=1f79d32c9523f4d52732959ef2228f74f1565afb"}, {"y": 155, "x": 216, "u": "https://preview.redd.it/y19ghclw7p251.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=4b1951860aa331afc9ec4dc5277a269eed1feb10"}, {"y": 230, "x": 320, "u": "https://preview.redd.it/y19ghclw7p251.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=5a1b52777ff53ce4715067d7122a5d3578ab8f8f"}, {"y": 460, "x": 640, "u": "https://preview.redd.it/y19ghclw7p251.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=fa3f8cad1adc9fb77d427a7766106cdc0d0320b7"}, {"y": 690, "x": 960, "u": "https://preview.redd.it/y19ghclw7p251.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=16a00a4a886567bcc238a111e04294f7760fd060"}, {"y": 776, "x": 1080, "u": "https://preview.redd.it/y19ghclw7p251.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3a1c647b0dc0c6ce18e11ba48aa1498e40d91f57"}], "s": {"y": 1140, "x": 1586, "u": "https://preview.redd.it/y19ghclw7p251.png?width=1586&amp;format=png&amp;auto=webp&amp;s=c9be747a6a499d76b7ffa862c0eb87da91b27ce2"}, "id": "y19ghclw7p251"}, "6ooqvdsa8p251": {"status": "valid", "e": "Image", "m": "image/jpg", "p": [{"y": 144, "x": 108, "u": "https://preview.redd.it/6ooqvdsa8p251.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=488336369ccbfd6717db791495cfde0a56f16b21"}, {"y": 288, "x": 216, "u": "https://preview.redd.it/6ooqvdsa8p251.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1e39b23aa3105286979b1afde47efb7bdf2c3c65"}, {"y": 426, "x": 320, "u": "https://preview.redd.it/6ooqvdsa8p251.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c32d3674b501f49eaf96e8e1a0e7dd9fe8250180"}, {"y": 853, "x": 640, "u": "https://preview.redd.it/6ooqvdsa8p251.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b88dbba620bc00ffc59cadd014eefb3331c89de1"}, {"y": 1280, "x": 960, "u": "https://preview.redd.it/6ooqvdsa8p251.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fe51289c19158cfeb9596fc91104f113d5c837ef"}, {"y": 1440, "x": 1080, "u": "https://preview.redd.it/6ooqvdsa8p251.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=837c0a7ed601d8ca0a60f53e0ed5cdc7510e585e"}], "s": {"y": 4032, "x": 3024, "u": "https://preview.redd.it/6ooqvdsa8p251.jpg?width=3024&amp;format=pjpg&amp;auto=webp&amp;s=41cf241a1748acca77866d60ff9bb95387babde2"}, "id": "6ooqvdsa8p251"}}, "name": "t3_gvu5r1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 46, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 46, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/-njwCcHxq2CLE0fxEyDAJLevyRvRRxGXJwZk_cL3B1U.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591220549.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey there,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve read and re-read this for typos and layout errors and am getting ready to send to the printers on Monday (8th). We&amp;#39;ll ship anywhere for the price of the \u00a329 Alt::BrightonRuby &amp;quot;ticket&amp;quot; as well as access to the talks (15th June) and the ability to ask questions that I&amp;#39;ll put to the speakers on a podcast (late June/early July).&lt;/p&gt;\n\n&lt;p&gt;Tickets and further information at &lt;a href=\"https://alt.brightonruby.com\"&gt;https://alt.brightonruby.com&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/y19ghclw7p251.png?width=1586&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c9be747a6a499d76b7ffa862c0eb87da91b27ce2\"&gt;The cover&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/6ooqvdsa8p251.jpg?width=3024&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=41cf241a1748acca77866d60ff9bb95387babde2\"&gt;It&amp;#39;s a real book.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/LCRUsu07Z8u3gsijb5EjCVfJ1tCaE0X9lUiez0AyOrc.jpg?auto=webp&amp;s=b86205f292b3c85b9b831a2423c90f27f9cbdd8b", "width": 1200, "height": 675}, "resolutions": [{"url": "https://external-preview.redd.it/LCRUsu07Z8u3gsijb5EjCVfJ1tCaE0X9lUiez0AyOrc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6586ed20b7ac9b6b9809e19f723e98e66b4325f2", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/LCRUsu07Z8u3gsijb5EjCVfJ1tCaE0X9lUiez0AyOrc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=57550a9dfeee65a23f9c448fc4808766936e874e", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/LCRUsu07Z8u3gsijb5EjCVfJ1tCaE0X9lUiez0AyOrc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7239437eed538f970f9e12983e6b44f07d8990f6", "width": 320, "height": 180}, {"url": "https://external-preview.redd.it/LCRUsu07Z8u3gsijb5EjCVfJ1tCaE0X9lUiez0AyOrc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=01c382fdb4a47ea230785ce1e90e1568d5f5c816", "width": 640, "height": 360}, {"url": "https://external-preview.redd.it/LCRUsu07Z8u3gsijb5EjCVfJ1tCaE0X9lUiez0AyOrc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7f026eb0bb043ec2ea45ef6894a830cd76eace5a", "width": 960, "height": 540}, {"url": "https://external-preview.redd.it/LCRUsu07Z8u3gsijb5EjCVfJ1tCaE0X9lUiez0AyOrc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ff2dbf2671d6aaa65343e6c878de30cea28b0ebd", "width": 1080, "height": 607}], "variants": {}, "id": "0LyU2GdOvMSthY5-a9JuTi4QSbSDNBBZI5Tq2u1V3EE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gvu5r1", "is_robot_indexable": true, "report_reasons": null, "author": "andycroll", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gvu5r1/shipped_print_copies_of_whys_poignant_guide_this/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gvu5r1/shipped_print_copies_of_whys_poignant_guide_this/", "subreddit_subscribers": 65586, "created_utc": 1591191749.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Noob here. I\u2019ve always found reading another spoken language once you have a handle on the pronunciation helps to cement some of the nuances of the languages just by repetitive review of structures of the language, even if I don\u2019t understand what I\u2019m reading right away the brain seems to work out the semantics. \n\nSeems like that works with programming as well so I was just curious if anyone has any suggestions for a well-documented/organized small to medium size open-sourced Ruby projects on Github that a beginner would benefit from looking through to see the file structure, documentation, etc.? Thanks for any suggestions in advance.\n\nEdit:  Thanks for all the ideas. Much appreciated.", "author_fullname": "t2_2jo1hipa", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learning from others...", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gw3bgv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1591267044.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591249140.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Noob here. I\u2019ve always found reading another spoken language once you have a handle on the pronunciation helps to cement some of the nuances of the languages just by repetitive review of structures of the language, even if I don\u2019t understand what I\u2019m reading right away the brain seems to work out the semantics. &lt;/p&gt;\n\n&lt;p&gt;Seems like that works with programming as well so I was just curious if anyone has any suggestions for a well-documented/organized small to medium size open-sourced Ruby projects on Github that a beginner would benefit from looking through to see the file structure, documentation, etc.? Thanks for any suggestions in advance.&lt;/p&gt;\n\n&lt;p&gt;Edit:  Thanks for all the ideas. Much appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gw3bgv", "is_robot_indexable": true, "report_reasons": null, "author": "dqjqb", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gw3bgv/learning_from_others/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gw3bgv/learning_from_others/", "subreddit_subscribers": 65586, "created_utc": 1591220340.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gw3bgv", "before": null}}