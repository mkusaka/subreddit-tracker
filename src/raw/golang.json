{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_f28owzo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The best kafka tool to debug brokers written in Go !", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ftgxel", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 35, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 35, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585835575.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ftgxel", "is_robot_indexable": true, "report_reasons": null, "author": "Arnhallr", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ftgxel/the_best_kafka_tool_to_debug_brokers_written_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/birdayz/kaf", "subreddit_subscribers": 107593, "created_utc": 1585806775.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_owlu3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing Go-TinyTime, Go-TinyDate's Sister Package", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ftlmxo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585860022.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "qvault.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ftlmxo", "is_robot_indexable": true, "report_reasons": null, "author": "kvothe1956", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ftlmxo/announcing_gotinytime_gotinydates_sister_package/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://qvault.io/2020/04/02/announcing-go-tinytime-go-tinydates-sister-package/", "subreddit_subscribers": 107593, "created_utc": 1585831222.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_qvtmj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Code generation in Go - constructors", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fthwok", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585840728.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "domsu.net", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fthwok", "is_robot_indexable": true, "report_reasons": null, "author": "domsu", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fthwok/code_generation_in_go_constructors/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://domsu.net/posts/code-generation-go-constructors/", "subreddit_subscribers": 107593, "created_utc": 1585811928.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello all,\nI've currently got a folder structure as follows:\n\ncmd/\nproto/\n- A/\n- - A.proto\n- B/\n- - B.proto\n\nin B.proto, i have want to import a message from A.proto.\n\nso do the following in b.proto:\n\n`import \"proto/A/A.proto\"; `\n\nHowever, the generated `b.pb.go` file looks as follows:\n\n```\nimport (\n\tfmt \"fmt\"\n\tproto \"github.com/golang/protobuf/proto\"\n\tmath \"math\"\n\t_ \"proto/A\"\n)\n\n...\n```\n\ndue to the `_ \"proto/A\"`, I keep getting the error\n```\nproto/B/b.pb.go:10:2: cannot find package \".\" in:\n        /path/to/repo/vendor/proto/A\n``` \n\nHow would I go about using proto files with go mod?\n\nAny help greatly appreciated. Thanks!", "author_fullname": "t2_162rbg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Noob Q: How do I use .proto with go mod? (imports)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fthlcv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585839079.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello all,\nI&amp;#39;ve currently got a folder structure as follows:&lt;/p&gt;\n\n&lt;p&gt;cmd/\nproto/\n- A/\n- - A.proto\n- B/\n- - B.proto&lt;/p&gt;\n\n&lt;p&gt;in B.proto, i have want to import a message from A.proto.&lt;/p&gt;\n\n&lt;p&gt;so do the following in b.proto:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import &amp;quot;proto/A/A.proto&amp;quot;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;However, the generated &lt;code&gt;b.pb.go&lt;/code&gt; file looks as follows:&lt;/p&gt;\n\n&lt;p&gt;```\nimport (\n    fmt &amp;quot;fmt&amp;quot;\n    proto &amp;quot;github.com/golang/protobuf/proto&amp;quot;\n    math &amp;quot;math&amp;quot;\n    _ &amp;quot;proto/A&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;...\n```&lt;/p&gt;\n\n&lt;p&gt;due to the &lt;code&gt;_ &amp;quot;proto/A&amp;quot;&lt;/code&gt;, I keep getting the error\n&lt;code&gt;\nproto/B/b.pb.go:10:2: cannot find package &amp;quot;.&amp;quot; in:\n        /path/to/repo/vendor/proto/A\n&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;How would I go about using proto files with go mod?&lt;/p&gt;\n\n&lt;p&gt;Any help greatly appreciated. Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fthlcv", "is_robot_indexable": true, "report_reasons": null, "author": "Mexican_TronaldDump", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fthlcv/noob_q_how_do_i_use_proto_with_go_mod_imports/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fthlcv/noob_q_how_do_i_use_proto_with_go_mod_imports/", "subreddit_subscribers": 107593, "created_utc": 1585810279.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_16g9v8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Running Golang on the browser with WebAssembly and TinyGo", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fszeix", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 122, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 122, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585775092.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "marianogappa.github.io", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fszeix", "is_robot_indexable": true, "report_reasons": null, "author": "mloga", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fszeix/running_golang_on_the_browser_with_webassembly/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://marianogappa.github.io/software/2020/04/01/webassembly-tinygo-cheesse/", "subreddit_subscribers": 107593, "created_utc": 1585746292.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Just curious about how people do this.\n\nI've set up nginx with my golang app serving local host upstream.  \n\nHow do you provision your servers? \n\nThanks!", "author_fullname": "t2_59sdhozg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you like to host a golang webservice", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fteuve", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585826057.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Just curious about how people do this.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve set up nginx with my golang app serving local host upstream.  &lt;/p&gt;\n\n&lt;p&gt;How do you provision your servers? &lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fteuve", "is_robot_indexable": true, "report_reasons": null, "author": "hallindavid", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fteuve/how_do_you_like_to_host_a_golang_webservice/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fteuve/how_do_you_like_to_host_a_golang_webservice/", "subreddit_subscribers": 107593, "created_utc": 1585797257.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "for example i could pass in \n    command subcommand --flag1 flag2 --flag3\n\nbut i just want to use the last passed flag.  I was hoping i could do something similar to this in golang.\n\n    parser.add_argument('what', choices=['1', 2', '3', '4'])\n\ni haven't been able to find something similar to this in the flags package that golang has built in.", "author_fullname": "t2_61o22c9c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "how do i only select the last given flag our of multiple flags ? is there a way to do a list of flags ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ftlhwv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585859382.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;for example i could pass in \n    command subcommand --flag1 flag2 --flag3&lt;/p&gt;\n\n&lt;p&gt;but i just want to use the last passed flag.  I was hoping i could do something similar to this in golang.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;parser.add_argument(&amp;#39;what&amp;#39;, choices=[&amp;#39;1&amp;#39;, 2&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;4&amp;#39;])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;i haven&amp;#39;t been able to find something similar to this in the flags package that golang has built in.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ftlhwv", "is_robot_indexable": true, "report_reasons": null, "author": "awkwardinno", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ftlhwv/how_do_i_only_select_the_last_given_flag_our_of/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ftlhwv/how_do_i_only_select_the_last_given_flag_our_of/", "subreddit_subscribers": 107593, "created_utc": 1585830582.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5a6qivyp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Unit Test a GORM Application With Sqlmock", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ftitio", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585845739.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ftitio", "is_robot_indexable": true, "report_reasons": null, "author": "dche423", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ftitio/how_to_unit_test_a_gorm_application_with_sqlmock/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/better-programming/how-to-unit-test-a-gorm-application-with-sqlmock-97ee73e36526", "subreddit_subscribers": 107593, "created_utc": 1585816939.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm trying to learn go with the book \"Learning Go Porgramming\".  \nSo far I had no difficulties, but I'm having a hard time on this example.\n\n[https://github.com/vladimirvivien/learning-go/blob/master/ch09/sync2.go](https://github.com/vladimirvivien/learning-go/blob/master/ch09/sync2.go)\n\n    package main\n    \n    import (\n    \t\"sync\"\n    \t\"time\"\n    )\n    \n    type Service struct {\n    \tstarted bool\n    \tstpCh   chan struct{}\n    \tmutex   sync.Mutex\n    }\n    \n    func (s *Service) Start() {\n    \ts.stpCh = make(chan struct{})\n    \tgo func() {\n    \t\ts.mutex.Lock()\n    \t\ts.started = true\n    \t\ts.mutex.Unlock()\n    \t\t&lt;-s.stpCh // wait to be closed.\n    \t}()\n    }\n    func (s *Service) Stop() {\n    \ts.mutex.Lock()\n    \tdefer s.mutex.Unlock()\n    \tif s.started {\n    \t\ts.started = false\n    \t\tclose(s.stpCh)\n    \t}\n    }\n    \n    func main() {\n    \ts := &amp;Service{}\n    \ts.Start()\n    \ttime.Sleep(time.Second) // do some work\n    \ts.Stop()\n    }\n\nWhich purpose does the stop channel stpCh serve ?Why is it necessary that the annonymous go routine in Service.Start blocks until the service has been stopped ? First I thought it's some kind of protection, which prevents from calling Start() again, but I tried it, and I can call start multiple times before calling Stop() once.", "author_fullname": "t2_1p1kvkjp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Need help unterstand example", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ftiboz", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585842976.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to learn go with the book &amp;quot;Learning Go Porgramming&amp;quot;.&lt;br/&gt;\nSo far I had no difficulties, but I&amp;#39;m having a hard time on this example.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/vladimirvivien/learning-go/blob/master/ch09/sync2.go\"&gt;https://github.com/vladimirvivien/learning-go/blob/master/ch09/sync2.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    &amp;quot;sync&amp;quot;\n    &amp;quot;time&amp;quot;\n)\n\ntype Service struct {\n    started bool\n    stpCh   chan struct{}\n    mutex   sync.Mutex\n}\n\nfunc (s *Service) Start() {\n    s.stpCh = make(chan struct{})\n    go func() {\n        s.mutex.Lock()\n        s.started = true\n        s.mutex.Unlock()\n        &amp;lt;-s.stpCh // wait to be closed.\n    }()\n}\nfunc (s *Service) Stop() {\n    s.mutex.Lock()\n    defer s.mutex.Unlock()\n    if s.started {\n        s.started = false\n        close(s.stpCh)\n    }\n}\n\nfunc main() {\n    s := &amp;amp;Service{}\n    s.Start()\n    time.Sleep(time.Second) // do some work\n    s.Stop()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which purpose does the stop channel stpCh serve ?Why is it necessary that the annonymous go routine in Service.Start blocks until the service has been stopped ? First I thought it&amp;#39;s some kind of protection, which prevents from calling Start() again, but I tried it, and I can call start multiple times before calling Stop() once.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ftiboz", "is_robot_indexable": true, "report_reasons": null, "author": "zultan32", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ftiboz/need_help_unterstand_example/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ftiboz/need_help_unterstand_example/", "subreddit_subscribers": 107593, "created_utc": 1585814176.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hey Everyone,\n\nI just started learning golang and its very fun to learn as well. \n\nI am looking for some project ideas that I can implement as a beginner. \n\nThanks..", "author_fullname": "t2_u6aceb0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Fun project ideas for golang beginner", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fthxei", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585840835.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey Everyone,&lt;/p&gt;\n\n&lt;p&gt;I just started learning golang and its very fun to learn as well. &lt;/p&gt;\n\n&lt;p&gt;I am looking for some project ideas that I can implement as a beginner. &lt;/p&gt;\n\n&lt;p&gt;Thanks..&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fthxei", "is_robot_indexable": true, "report_reasons": null, "author": "sshripa", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fthxei/fun_project_ideas_for_golang_beginner/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fthxei/fun_project_ideas_for_golang_beginner/", "subreddit_subscribers": 107593, "created_utc": 1585812035.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fthxei", "before": null}}