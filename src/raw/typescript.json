{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - January", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_eib2jh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1577865929.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "908dba50-143b-11ea-8541-0e435e5ea9e1", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eib2jh", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 8, "send_replies": false, "whitelist_status": null, "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/eib2jh/whos_hiring_typescript_developers_january/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/eib2jh/whos_hiring_typescript_developers_january/", "subreddit_subscribers": 30266, "created_utc": 1577837129.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_at13j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Algebraic Structures: Things I wish someone had explained about functional programming", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_enw3fi", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Ny0zBzAcBH_Jf2jCTRWYgk7q4zKHQnQ0bUeb1GK4y6w.jpg", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "node", "selftext": "", "author_fullname": "t2_xeaqp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Algebraic Structures: Things I wish someone had explained about functional programming", "link_flair_richtext": [], "subreddit_name_prefixed": "r/node", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_endbr1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 116, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 116, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1578805776.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "jrsinclair.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?auto=webp&amp;s=32c8c100e99fe964bdb6e0e82fd85b153b45f76a", "width": 1200, "height": 628}, "resolutions": [{"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=096c025f0942aa9d9445a2db21bd48e818640e36", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=71f9ab3d6986b98efd6623dd21bf12f49ff09a66", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e59066996c76fe1aacf1cc2a845b5ced1afb307d", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=defa05719cb76fd3a9806933f5456ac2e587dd76", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4fe9e8c7bd4b26a016b62b397dc3ac8c96781433", "width": 960, "height": 502}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=eb9ccdcec8e8431a8bad10e41f406657584ea9c3", "width": 1080, "height": 565}], "variants": {}, "id": "6AZlFgxgsMCu9XxkBo-0E4hTE2RY2XfifcTKjv83awk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2reca", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "endbr1", "is_robot_indexable": true, "report_reasons": null, "author": "fagnerbrack", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/node/comments/endbr1/algebraic_structures_things_i_wish_someone_had/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://jrsinclair.com/articles/2019/algebraic-structures-what-i-wish-someone-had-explained-about-functional-programming/", "subreddit_subscribers": 147625, "created_utc": 1578776976.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1578903385.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "jrsinclair.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?auto=webp&amp;s=32c8c100e99fe964bdb6e0e82fd85b153b45f76a", "width": 1200, "height": 628}, "resolutions": [{"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=096c025f0942aa9d9445a2db21bd48e818640e36", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=71f9ab3d6986b98efd6623dd21bf12f49ff09a66", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e59066996c76fe1aacf1cc2a845b5ced1afb307d", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=defa05719cb76fd3a9806933f5456ac2e587dd76", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4fe9e8c7bd4b26a016b62b397dc3ac8c96781433", "width": 960, "height": 502}, {"url": "https://external-preview.redd.it/i92wquAuFCYAALAAsOvfznvTUiufKh9c2Vs3JCYxAxU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=eb9ccdcec8e8431a8bad10e41f406657584ea9c3", "width": 1080, "height": 565}], "variants": {}, "id": "6AZlFgxgsMCu9XxkBo-0E4hTE2RY2XfifcTKjv83awk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "enw3fi", "is_robot_indexable": true, "report_reasons": null, "author": "feihcsim", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_endbr1", "author_flair_text_color": null, "permalink": "/r/typescript/comments/enw3fi/algebraic_structures_things_i_wish_someone_had/", "parent_whitelist_status": null, "stickied": false, "url": "https://jrsinclair.com/articles/2019/algebraic-structures-what-i-wish-someone-had-explained-about-functional-programming/", "subreddit_subscribers": 30266, "created_utc": 1578874585.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_tohngqm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A Web Server From Scratch in TypeScript and Node", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "hide_score": false, "name": "t3_enss8w", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/1BjMJBDwiAL0gbwxlYBPBC23OmnGQ2wDwKtOotCqnZ0.jpg", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1578889246.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8yrb3Jn-0RHNZhBDgegPGkL7obg6zRikHaHseN4WFIU.jpg?auto=webp&amp;s=6361c3b13787ecc690214c38ca0a7856e279fcc0", "width": 1200, "height": 801}, "resolutions": [{"url": "https://external-preview.redd.it/8yrb3Jn-0RHNZhBDgegPGkL7obg6zRikHaHseN4WFIU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=93056eb91d3a76fb3b95a0ef58688582b3c9f99e", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/8yrb3Jn-0RHNZhBDgegPGkL7obg6zRikHaHseN4WFIU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b05081f3e133e48491face01e394804c66061ab5", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/8yrb3Jn-0RHNZhBDgegPGkL7obg6zRikHaHseN4WFIU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8cb4fb2fd36642a9a652f4619a3502130b060d00", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/8yrb3Jn-0RHNZhBDgegPGkL7obg6zRikHaHseN4WFIU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7f924a84798f3da22c3117301b9f9dd27df1ecd1", "width": 640, "height": 427}, {"url": "https://external-preview.redd.it/8yrb3Jn-0RHNZhBDgegPGkL7obg6zRikHaHseN4WFIU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f14e411b6aa4c322362e4886bb4b97c342c86e57", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/8yrb3Jn-0RHNZhBDgegPGkL7obg6zRikHaHseN4WFIU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d5e217b3d8092cff0c9307f3b8addc2d9c8305db", "width": 1080, "height": 720}], "variants": {}, "id": "fBnG-fyTTF0Dr2pWxJze6SG4tsj3H_OnxthRrSeLfMM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "enss8w", "is_robot_indexable": true, "report_reasons": null, "author": "kiarash-irandoust", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/enss8w/a_web_server_from_scratch_in_typescript_and_node/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@wim.jongeneel1/a-web-server-from-scratch-in-typescript-854642a85402?source=friends_link&amp;sk=6ef0220009102d3c21245a4f2d3e63c5", "subreddit_subscribers": 30266, "created_utc": 1578860446.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm importing firebase-admin and firebase-functions while working on some methods meant to interact with Firestore. \n\nThe following code lints the title error however. I'm referencing this page when setting the data type of response: [https://firebase.google.com/docs/reference/js/firebase.firestore.CollectionReference.html#get](https://firebase.google.com/docs/reference/js/firebase.firestore.CollectionReference.html#get)\n\n        try {\n          const response: Promise&lt;QuerySnapshot&lt;T&gt;&gt; = await db\n            .collection(\"globalRules\")\n            .get();\n          const globalRules = response.map((record: any) =&gt; record.data());\n          \n        }\n        catch (e) {\n          console.log(e, `=====error=====`);\n        }\n\nThe firebase SDK comes with its own type definitions so why is QuerySnapshot not found? Removing the &lt;T&gt; doesn't help. Or the Promise&lt;&gt; syntax.", "author_fullname": "t2_3dgvi4uq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TS2304 Can not find name \"QuerySnapshot\" (firebase-admin)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_eo416c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578950511.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m importing firebase-admin and firebase-functions while working on some methods meant to interact with Firestore. &lt;/p&gt;\n\n&lt;p&gt;The following code lints the title error however. I&amp;#39;m referencing this page when setting the data type of response: &lt;a href=\"https://firebase.google.com/docs/reference/js/firebase.firestore.CollectionReference.html#get\"&gt;https://firebase.google.com/docs/reference/js/firebase.firestore.CollectionReference.html#get&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    try {\n      const response: Promise&amp;lt;QuerySnapshot&amp;lt;T&amp;gt;&amp;gt; = await db\n        .collection(&amp;quot;globalRules&amp;quot;)\n        .get();\n      const globalRules = response.map((record: any) =&amp;gt; record.data());\n\n    }\n    catch (e) {\n      console.log(e, `=====error=====`);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The firebase SDK comes with its own type definitions so why is QuerySnapshot not found? Removing the &amp;lt;T&amp;gt; doesn&amp;#39;t help. Or the Promise&amp;lt;&amp;gt; syntax.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eo416c", "is_robot_indexable": true, "report_reasons": null, "author": "javascript_dev", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/eo416c/ts2304_can_not_find_name_querysnapshot/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/eo416c/ts2304_can_not_find_name_querysnapshot/", "subreddit_subscribers": 30266, "created_utc": 1578921711.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi All,\n\nI have a small library for server-side-rendered websites I've been using for small projects on the past year. I decided to rewrite it properly with TypeScript ( add tests, create docs etc. ). My question is how to publish the library so it can be consumed as ES6 module ( ex. `import Component from \"lib\"` ) , TS module, ES5 package ready to be distributed via CDN ( ex. `&lt;script src=\"`[`cdnjs.com/lib.js`](https://cdnjs.com/lib.js)`\" /&gt;`  \\- dev version with source maps and production build ) and ship it all with type definitions? I'm using Webpack to dev/build. \n\nThis will be my **first** public library and I'm looking for a minimal examples on well done publishing/build steps. I already searched on Github how other libraries do this, but all feels \"hacky\" ( ex. set TS target to ES6, then postbuild run babel to create ES5 code ).", "author_fullname": "t2_nr132", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to publish TypeScript library the right way - TS, ES5 and ES6 targets.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_enswds", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578889720.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi All,&lt;/p&gt;\n\n&lt;p&gt;I have a small library for server-side-rendered websites I&amp;#39;ve been using for small projects on the past year. I decided to rewrite it properly with TypeScript ( add tests, create docs etc. ). My question is how to publish the library so it can be consumed as ES6 module ( ex. &lt;code&gt;import Component from &amp;quot;lib&amp;quot;&lt;/code&gt; ) , TS module, ES5 package ready to be distributed via CDN ( ex. &lt;code&gt;&amp;lt;script src=&amp;quot;&lt;/code&gt;&lt;a href=\"https://cdnjs.com/lib.js\"&gt;&lt;code&gt;cdnjs.com/lib.js&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;quot; /&amp;gt;&lt;/code&gt;  - dev version with source maps and production build ) and ship it all with type definitions? I&amp;#39;m using Webpack to dev/build. &lt;/p&gt;\n\n&lt;p&gt;This will be my &lt;strong&gt;first&lt;/strong&gt; public library and I&amp;#39;m looking for a minimal examples on well done publishing/build steps. I already searched on Github how other libraries do this, but all feels &amp;quot;hacky&amp;quot; ( ex. set TS target to ES6, then postbuild run babel to create ES5 code ).&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "enswds", "is_robot_indexable": true, "report_reasons": null, "author": "bassta", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/enswds/how_to_publish_typescript_library_the_right_way/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/enswds/how_to_publish_typescript_library_the_right_way/", "subreddit_subscribers": 30266, "created_utc": 1578860920.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "It's called [Open Kitchen](https://openk1tchen.herokuapp.com). It's a web app to keep track of all of your recipes. The code can be found [here](https://github.com/peterzernia/open-kitchen) in the client directory. Any feedback would be greatly appreciated!", "author_fullname": "t2_4vhocas0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anyone want to give me feedback on my first Typescript app? \ud83d\ude00", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_eno91h", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578869110.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s called &lt;a href=\"https://openk1tchen.herokuapp.com\"&gt;Open Kitchen&lt;/a&gt;. It&amp;#39;s a web app to keep track of all of your recipes. The code can be found &lt;a href=\"https://github.com/peterzernia/open-kitchen\"&gt;here&lt;/a&gt; in the client directory. Any feedback would be greatly appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eno91h", "is_robot_indexable": true, "report_reasons": null, "author": "peterzernia", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/eno91h/anyone_want_to_give_me_feedback_on_my_first/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/eno91h/anyone_want_to_give_me_feedback_on_my_first/", "subreddit_subscribers": 30266, "created_utc": 1578840310.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "What's the best library for the canvas element?\n\nThis it the first time I'm trying to use canvas in a website and I wanted to know if there are any good libraries out there (especially ones which work well with react).\n\nThxs in advance", "author_fullname": "t2_5b1jhiyq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's the best library for the canvas element?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_ent1dy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578890291.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What&amp;#39;s the best library for the canvas element?&lt;/p&gt;\n\n&lt;p&gt;This it the first time I&amp;#39;m trying to use canvas in a website and I wanted to know if there are any good libraries out there (especially ones which work well with react).&lt;/p&gt;\n\n&lt;p&gt;Thxs in advance&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ent1dy", "is_robot_indexable": true, "report_reasons": null, "author": "Cowman-11", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ent1dy/whats_the_best_library_for_the_canvas_element/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ent1dy/whats_the_best_library_for_the_canvas_element/", "subreddit_subscribers": 30266, "created_utc": 1578861491.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have completed a rest API of small projects. Here is  [link](https://github.com/devbinod/nodewithmongo.git). I want feedback on my code that really helps in my carrier. Thanks in advance.", "author_fullname": "t2_5f4aein5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "feedback on my first Rest API created on node Js, Typescript, Express and Mongo DB.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_enqa18", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1578878644.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have completed a rest API of small projects. Here is  &lt;a href=\"https://github.com/devbinod/nodewithmongo.git\"&gt;link&lt;/a&gt;. I want feedback on my code that really helps in my carrier. Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/y644MX6QBOI-g7CEKt7ZhSitLr5BQ-7LMr-V2DxgnWI.jpg?auto=webp&amp;s=de5757fa5a27ff619c7e2f8bcdd4a4d34aa305ef", "width": 398, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/y644MX6QBOI-g7CEKt7ZhSitLr5BQ-7LMr-V2DxgnWI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d871624c7058b690f41c670abb9ec7c53391fd76", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/y644MX6QBOI-g7CEKt7ZhSitLr5BQ-7LMr-V2DxgnWI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6c46634a35bd8b0fe19b1bf4341823d4e8a949c4", "width": 216, "height": 217}, {"url": "https://external-preview.redd.it/y644MX6QBOI-g7CEKt7ZhSitLr5BQ-7LMr-V2DxgnWI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3ef574d1eb981383adf005e7cbf115f8f3b04899", "width": 320, "height": 321}], "variants": {}, "id": "8WQ7I9JkxfQy53B__aUZX7Vtb4SHrsCUn7fomyQHw94"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "enqa18", "is_robot_indexable": true, "report_reasons": null, "author": "pantbinod", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/enqa18/feedback_on_my_first_rest_api_created_on_node_js/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/enqa18/feedback_on_my_first_rest_api_created_on_node_js/", "subreddit_subscribers": 30266, "created_utc": 1578849844.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm getting type definition error, but I'm not really sure how to add a type for this specific case. Normally, I would add an interface and assign the necessary types, but **I'm not sure how to add an interface to my deconstructed object from TimePickerAndroid.open()**. I've tried a few ways, but nothing seems to be working.\n\n**Error:**\n\n    src/DatePicker.tsx:47:15 - error TS2322: Type 'DatePickerAndroidOpenReturn' is not assignable to type 'Props'.\n      Type 'DatePickerAndroidDateSetAction' is missing the following properties from type 'Props': title, onValueChange, mode, date47\n    \n    const { action, year, month, day } : Props = await DatePickerAndroid.open({\n\n**Interface:**\n\n    // TypeScript: Types\n    interface Props {\n      title: string,\n      onValueChange: Function,\n      mode: 'calendar' | 'spinner' | 'default' | undefined,\n      action: 'dateSetAction' | 'dismissedAction',\n      date: Date | undefined,\n      minDate?: Date | undefined,\n      maxDate?: Date | undefined,\n      year?: number | Date,\n      month?: number | Date,\n      day?: number | Date,\n    }\n\n**TimePicker.tsx:**\n\n      // Toggle Modal\n      const toggleModal = async (props: Props) =&gt; {\n        try {\n          // Check Platform (iOS)\n          if (Platform.OS === 'ios') {\n            // React Hook: Toggle Modal\n            toggle((modalVisible) =&gt; !modalVisible);\n          }\n    \n          // Check Platform (Android)\n          if (Platform.OS === 'android') {\n            const { action, hour, minute } = await TimePickerAndroid.open({\n              hour: date.getHours(),\n              minute: date.getMinutes(),\n              is24Hour: false,\n              mode: props.mode,\n            });\n    \n            // Action: Time Set\n            if (action === TimePickerAndroid.timeSetAction) {\n              // New Date\n              let newDate = date;\n    \n              // Set Hours\n              newDate.setHours(hour);\n    \n              // Set Minutes\n              newDate.setMinutes(minute);\n    \n              // Select Date\n              await selectDate(newDate);\n            }\n    \n            // Action: Dismissed\n            if (action === TimePickerAndroid.dismissedAction) {\n              // Do Nothing\n            }\n          }\n        }\n        catch (error) {\n          console.log(error);\n        }\n      };", "author_fullname": "t2_cdjg8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do I add Types to deconstructed object returned by a function?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_enauq1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1578791308.0, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578795004.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m getting type definition error, but I&amp;#39;m not really sure how to add a type for this specific case. Normally, I would add an interface and assign the necessary types, but &lt;strong&gt;I&amp;#39;m not sure how to add an interface to my deconstructed object from TimePickerAndroid.open()&lt;/strong&gt;. I&amp;#39;ve tried a few ways, but nothing seems to be working.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;src/DatePicker.tsx:47:15 - error TS2322: Type &amp;#39;DatePickerAndroidOpenReturn&amp;#39; is not assignable to type &amp;#39;Props&amp;#39;.\n  Type &amp;#39;DatePickerAndroidDateSetAction&amp;#39; is missing the following properties from type &amp;#39;Props&amp;#39;: title, onValueChange, mode, date47\n\nconst { action, year, month, day } : Props = await DatePickerAndroid.open({\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Interface:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// TypeScript: Types\ninterface Props {\n  title: string,\n  onValueChange: Function,\n  mode: &amp;#39;calendar&amp;#39; | &amp;#39;spinner&amp;#39; | &amp;#39;default&amp;#39; | undefined,\n  action: &amp;#39;dateSetAction&amp;#39; | &amp;#39;dismissedAction&amp;#39;,\n  date: Date | undefined,\n  minDate?: Date | undefined,\n  maxDate?: Date | undefined,\n  year?: number | Date,\n  month?: number | Date,\n  day?: number | Date,\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;TimePicker.tsx:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  // Toggle Modal\n  const toggleModal = async (props: Props) =&amp;gt; {\n    try {\n      // Check Platform (iOS)\n      if (Platform.OS === &amp;#39;ios&amp;#39;) {\n        // React Hook: Toggle Modal\n        toggle((modalVisible) =&amp;gt; !modalVisible);\n      }\n\n      // Check Platform (Android)\n      if (Platform.OS === &amp;#39;android&amp;#39;) {\n        const { action, hour, minute } = await TimePickerAndroid.open({\n          hour: date.getHours(),\n          minute: date.getMinutes(),\n          is24Hour: false,\n          mode: props.mode,\n        });\n\n        // Action: Time Set\n        if (action === TimePickerAndroid.timeSetAction) {\n          // New Date\n          let newDate = date;\n\n          // Set Hours\n          newDate.setHours(hour);\n\n          // Set Minutes\n          newDate.setMinutes(minute);\n\n          // Select Date\n          await selectDate(newDate);\n        }\n\n        // Action: Dismissed\n        if (action === TimePickerAndroid.dismissedAction) {\n          // Do Nothing\n        }\n      }\n    }\n    catch (error) {\n      console.log(error);\n    }\n  };\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "enauq1", "is_robot_indexable": true, "report_reasons": null, "author": "Jeffylew77", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/enauq1/how_do_i_add_types_to_deconstructed_object/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/enauq1/how_do_i_add_types_to_deconstructed_object/", "subreddit_subscribers": 30266, "created_utc": 1578766204.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    const StackNavigator = createBottomTabNavigator({\n        HomeScreen: {\n        screen: HomeScreen\n    },\n    },    \n    {\n        tabBarComponent: props =&gt; &lt;TabBarComponent {...props} /&gt; // errors out here\n    }}\n\nERROR: \n\n`'TabBarComponent' refers to a value, but is being used as a type here.`\n\n    Argument of type '{ tabBarComponent: (props: any) =&gt; boolean; }' is not assignable to parameter of type 'CreateNavigatorConfig&lt;Partial&lt;Config&gt;, NavigationTabRouterConfig, Partial&lt;NavigationBottomTabOptions&gt;, NavigationTabProp&lt;...&gt;&gt;'.\n  Type '{ tabBarComponent: (props: any) =&gt; boolean; }' is not assignable to type 'Partial&lt;Config&gt;'.\n    Types of property 'tabBarComponent' are incompatible.\n      Type '(props: any) =&gt; boolean' is not assignable to type 'ComponentClass&lt;any, any&gt; | FunctionComponent&lt;any&gt; | undefined'.\n        Type '(props: any) =&gt; boolean' is not assignable to type 'FunctionComponent&lt;any&gt;'.\n          Type 'boolean' is not assignable to type 'ReactElement&lt;any, string | ((props: any) =&gt; ReactElement&lt;any, string | ... | (new (props: any) =&gt; Component&lt;any, any, any&gt;)&gt; | null) | (new (props: any) =&gt; Component&lt;any, any, any&gt;)&gt; | null'.ts(2345)\n\n**Can someone please explain why this is happening?** \n\n&amp;#x200B;\n\nTabBarComponent.tsx\n\n    const TabBarComponent = ({ navigation, ...data }) =&gt; {\n    return &lt;View&gt; ... &lt;/View&gt;\n    }\n\n&amp;#x200B;\n\nThanks", "author_fullname": "t2_bq91vod", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React Native Typescript React navigation", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_endtj8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578807936.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;const StackNavigator = createBottomTabNavigator({\n    HomeScreen: {\n    screen: HomeScreen\n},\n},    \n{\n    tabBarComponent: props =&amp;gt; &amp;lt;TabBarComponent {...props} /&amp;gt; // errors out here\n}}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ERROR: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;#39;TabBarComponent&amp;#39; refers to a value, but is being used as a type here.&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Argument of type &amp;#39;{ tabBarComponent: (props: any) =&amp;gt; boolean; }&amp;#39; is not assignable to parameter of type &amp;#39;CreateNavigatorConfig&amp;lt;Partial&amp;lt;Config&amp;gt;, NavigationTabRouterConfig, Partial&amp;lt;NavigationBottomTabOptions&amp;gt;, NavigationTabProp&amp;lt;...&amp;gt;&amp;gt;&amp;#39;.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Type &amp;#39;{ tabBarComponent: (props: any) =&amp;gt; boolean; }&amp;#39; is not assignable to type &amp;#39;Partial&amp;lt;Config&amp;gt;&amp;#39;.\n    Types of property &amp;#39;tabBarComponent&amp;#39; are incompatible.\n      Type &amp;#39;(props: any) =&amp;gt; boolean&amp;#39; is not assignable to type &amp;#39;ComponentClass&amp;lt;any, any&amp;gt; | FunctionComponent&amp;lt;any&amp;gt; | undefined&amp;#39;.\n        Type &amp;#39;(props: any) =&amp;gt; boolean&amp;#39; is not assignable to type &amp;#39;FunctionComponent&amp;lt;any&amp;gt;&amp;#39;.\n          Type &amp;#39;boolean&amp;#39; is not assignable to type &amp;#39;ReactElement&amp;lt;any, string | ((props: any) =&amp;gt; ReactElement&amp;lt;any, string | ... | (new (props: any) =&amp;gt; Component&amp;lt;any, any, any&amp;gt;)&amp;gt; | null) | (new (props: any) =&amp;gt; Component&amp;lt;any, any, any&amp;gt;)&amp;gt; | null&amp;#39;.ts(2345)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Can someone please explain why this is happening?&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;TabBarComponent.tsx&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const TabBarComponent = ({ navigation, ...data }) =&amp;gt; {\nreturn &amp;lt;View&amp;gt; ... &amp;lt;/View&amp;gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "endtj8", "is_robot_indexable": true, "report_reasons": null, "author": "killyourself3x", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/endtj8/react_native_typescript_react_navigation/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/endtj8/react_native_typescript_react_navigation/", "subreddit_subscribers": 30266, "created_utc": 1578779136.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_432e5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing TypeScript 3.8 Beta", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 87, "hide_score": false, "name": "t3_emxvdn", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 96, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 96, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/io8j9padLKtPGIc_IflAbs92Q5OQO5lLgiiqwaOi5h4.jpg", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1578722084.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "devblogs.microsoft.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?auto=webp&amp;s=14e2ac4563a760db74d10febfe85290fec246ef5", "width": 562, "height": 350}, "resolutions": [{"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa2799b11813bc3150ec85fdc02198d51cc7de02", "width": 108, "height": 67}, {"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=51391b8547d45c0aa3521161a9751727540c159d", "width": 216, "height": 134}, {"url": "https://external-preview.redd.it/RfnVYnVd1OdKDWgZjnJe40-JZpsSLqamQ7SN0iBmLGA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=03bbf25230c304c077428f6ef7a72413c8f7b203", "width": 320, "height": 199}], "variants": {}, "id": "VuFaSjtlPcLuMYjdwW1UjzANI4RMUDx4F8fNjZsRS3c"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emxvdn", "is_robot_indexable": true, "report_reasons": null, "author": "DanielRosenwasser", "discussion_type": null, "num_comments": 26, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/emxvdn/announcing_typescript_38_beta/", "parent_whitelist_status": null, "stickied": false, "url": "https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/", "subreddit_subscribers": 30266, "created_utc": 1578693284.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_emxvdn", "before": null}}