{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_17iq2y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I wrote a piece about (lightweight) design patterns in Go, hope anyone finds it useful", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_iml937", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 151, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 151, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599272304.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "link.medium.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://link.medium.com/tGADr7pOv9", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "resized_tier_icons": null, "id": "award_77ba55a2-c33c-4351-ac49-807455a80148", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a2f2b927be72d2b46ebd95bab8c072c3be0fbab", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=32&amp;height=32&amp;auto=webp&amp;s=6e42b7095bcc331e53202438613aa827addf70c3", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=48&amp;height=48&amp;auto=webp&amp;s=c740f7ef642fd2042d62c2bcba98734d08dfae6c", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=64&amp;height=64&amp;auto=webp&amp;s=74e630f1072bb2423034ae48aefa241d834d7186", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=128&amp;height=128&amp;auto=webp&amp;s=0a89cd8011c8210315ee60441eefd77b973a0c82", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Prayers up for the blessed.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Bless Up", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a2f2b927be72d2b46ebd95bab8c072c3be0fbab", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=32&amp;height=32&amp;auto=webp&amp;s=6e42b7095bcc331e53202438613aa827addf70c3", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=48&amp;height=48&amp;auto=webp&amp;s=c740f7ef642fd2042d62c2bcba98734d08dfae6c", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=64&amp;height=64&amp;auto=webp&amp;s=74e630f1072bb2423034ae48aefa241d834d7186", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=128&amp;height=128&amp;auto=webp&amp;s=0a89cd8011c8210315ee60441eefd77b973a0c82", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iml937", "is_robot_indexable": true, "report_reasons": null, "author": "cookie_80", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/iml937/i_wrote_a_piece_about_lightweight_design_patterns/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://link.medium.com/tGADr7pOv9", "subreddit_subscribers": 124328, "created_utc": 1599243504.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "hey all, I was surprised to see golang lag python and js for lambda coldstart performance. [https://medium.com/the-theam-journey/benchmarking-aws-lambda-runtimes-in-2019-part-i-b1ee459a293d](https://medium.com/the-theam-journey/benchmarking-aws-lambda-runtimes-in-2019-part-i-b1ee459a293d)\n\nseems like the binary size is the issue? i thought golang's single binary and speed would trump  interpreted languages. not sure if anyone has explored this topic and has any topics on optimizing golang in a lambda environment.\n\nit's not an issue for me yet, was just curious.", "author_fullname": "t2_okvbg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "golang performance for lambda cold restart", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_imqx3p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.74, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599291579.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hey all, I was surprised to see golang lag python and js for lambda coldstart performance. &lt;a href=\"https://medium.com/the-theam-journey/benchmarking-aws-lambda-runtimes-in-2019-part-i-b1ee459a293d\"&gt;https://medium.com/the-theam-journey/benchmarking-aws-lambda-runtimes-in-2019-part-i-b1ee459a293d&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;seems like the binary size is the issue? i thought golang&amp;#39;s single binary and speed would trump  interpreted languages. not sure if anyone has explored this topic and has any topics on optimizing golang in a lambda environment.&lt;/p&gt;\n\n&lt;p&gt;it&amp;#39;s not an issue for me yet, was just curious.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "imqx3p", "is_robot_indexable": true, "report_reasons": null, "author": "gt33m", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/imqx3p/golang_performance_for_lambda_cold_restart/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/imqx3p/golang_performance_for_lambda_cold_restart/", "subreddit_subscribers": 124328, "created_utc": 1599262779.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_15r4p1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Series on integrating a Go application with ELK", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_in0el8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599338234.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "pmihaylov.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://pmihaylov.com/series-integrating-go-with-elk/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "in0el8", "is_robot_indexable": true, "report_reasons": null, "author": "pmihaylov", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/in0el8/series_on_integrating_a_go_application_with_elk/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://pmihaylov.com/series-integrating-go-with-elk/", "subreddit_subscribers": 124328, "created_utc": 1599309434.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_7qkzhf55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made rainbow progress bar", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_im9t1v", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 236, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"reddit_video": {"fallback_url": "https://v.redd.it/t5f4qk4ub2l51/DASH_720.mp4?source=fallback", "height": 606, "width": 1280, "scrubber_media_url": "https://v.redd.it/t5f4qk4ub2l51/DASH_96.mp4", "dash_url": "https://v.redd.it/t5f4qk4ub2l51/DASHPlaylist.mpd?a=1601905756%2CNWJiNTc1OTc2MjQzZjIyNTcxMmU2YzcyMjcyYWY5OGNhNzE0MTg2NjBmZjgzYTRlMTU3MWZhOWJjYmY0M2UyOQ%3D%3D&amp;v=1&amp;f=sd", "duration": 12, "hls_url": "https://v.redd.it/t5f4qk4ub2l51/HLSPlaylist.m3u8?a=1601905756%2CYzMwYjRkZGY0YWUzMjU3YmQxY2I1ZjU1MTliZDJkNmQyODI0MjBjZDZhZTI2NTk0NjVjM2JhY2E4YmUwYzcwNQ%3D%3D&amp;v=1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 236, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599224336.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "v.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://v.redd.it/t5f4qk4ub2l51", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "im9t1v", "is_robot_indexable": true, "report_reasons": null, "author": "verabull", "discussion_type": null, "num_comments": 31, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/im9t1v/i_made_rainbow_progress_bar/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://v.redd.it/t5f4qk4ub2l51", "subreddit_subscribers": 124328, "created_utc": 1599195536.0, "num_crossposts": 0, "media": {"reddit_video": {"fallback_url": "https://v.redd.it/t5f4qk4ub2l51/DASH_720.mp4?source=fallback", "height": 606, "width": 1280, "scrubber_media_url": "https://v.redd.it/t5f4qk4ub2l51/DASH_96.mp4", "dash_url": "https://v.redd.it/t5f4qk4ub2l51/DASHPlaylist.mpd?a=1601905756%2CNWJiNTc1OTc2MjQzZjIyNTcxMmU2YzcyMjcyYWY5OGNhNzE0MTg2NjBmZjgzYTRlMTU3MWZhOWJjYmY0M2UyOQ%3D%3D&amp;v=1&amp;f=sd", "duration": 12, "hls_url": "https://v.redd.it/t5f4qk4ub2l51/HLSPlaylist.m3u8?a=1601905756%2CYzMwYjRkZGY0YWUzMjU3YmQxY2I1ZjU1MTliZDJkNmQyODI0MjBjZDZhZTI2NTk0NjVjM2JhY2E4YmUwYzcwNQ%3D%3D&amp;v=1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_video": true}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_2oxv826k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Unit Test Logs Only For Failed Inputs", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_imxl3c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599322791.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "kaue.me", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://kaue.me/wealth/career/unit-test-logs-only-for-failed-inputs/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "imxl3c", "is_robot_indexable": true, "report_reasons": null, "author": "Snoo_54686", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/imxl3c/unit_test_logs_only_for_failed_inputs/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kaue.me/wealth/career/unit-test-logs-only-for-failed-inputs/", "subreddit_subscribers": 124328, "created_utc": 1599293991.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Description pretty much says it all. I have replicated the behaviour with this simple code snippet:\n\n    func main() {\n    \tfiles, _ := os.Open(\"hosts.txt\")\n    \tdefer files.Close()\n    \tscanner := bufio.NewScanner(files)\n    \tscanner.Split(bufio.ScanLines)\n    \tfor {\n    \t\tfor scanner.Scan() {\n    \t\t\tfmt.Printf(\"Host: %s\\n\", scanner.Text())\n    \t\t}\n    \t\ttime.Sleep(3 * time.Second)\n    \t}\n    }\n\nCode will run, but will never run second, third and so on times, and I don't understand what is wrong flow-wise. Am I using bufio.Scan() wrong?", "author_fullname": "t2_xu0t3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Infinite loop: read file, do something with lines, wait and restart - What am I doing wrong?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_imunh1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599307484.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Description pretty much says it all. I have replicated the behaviour with this simple code snippet:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func main() {\n    files, _ := os.Open(&amp;quot;hosts.txt&amp;quot;)\n    defer files.Close()\n    scanner := bufio.NewScanner(files)\n    scanner.Split(bufio.ScanLines)\n    for {\n        for scanner.Scan() {\n            fmt.Printf(&amp;quot;Host: %s\\n&amp;quot;, scanner.Text())\n        }\n        time.Sleep(3 * time.Second)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Code will run, but will never run second, third and so on times, and I don&amp;#39;t understand what is wrong flow-wise. Am I using bufio.Scan() wrong?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "imunh1", "is_robot_indexable": true, "report_reasons": null, "author": "aorfanos", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/imunh1/infinite_loop_read_file_do_something_with_lines/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/imunh1/infinite_loop_read_file_do_something_with_lines/", "subreddit_subscribers": 124328, "created_utc": 1599278684.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_u2irb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "An Alternative Approach to BDD in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_iml318", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.56, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599271761.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@elliotchance/an-alternative-approach-to-bdd-in-go-776bbbc24be9", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iml318", "is_robot_indexable": true, "report_reasons": null, "author": "elliotchance", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/iml318/an_alternative_approach_to_bdd_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@elliotchance/an-alternative-approach-to-bdd-in-go-776bbbc24be9", "subreddit_subscribers": 124328, "created_utc": 1599242961.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_pqnhn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Implement struct no copy in GoLang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_imu58q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.2, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599305179.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "pixelstech.net", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.pixelstech.net/article/1599275392-Implement-struct-no-copy-in-GoLang", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "imu58q", "is_robot_indexable": true, "report_reasons": null, "author": "stackoverflooooooow", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/imu58q/implement_struct_no_copy_in_golang/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.pixelstech.net/article/1599275392-Implement-struct-no-copy-in-GoLang", "subreddit_subscribers": 124328, "created_utc": 1599276379.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hey Guys  \n\n\nI'm new to Go and want to build my own Shell as the first Project.  \nNow I'm wondering whats the best way to structure such code I had the following things in mind:  \n\n\nIf you implement custom shell commands like:  \"cd\" etc. write those as Plugin as Goshell does.  \nBut what I would like to have is just a simple file called \"cd\" in the folder modules.  \nBut how can I then import all those Modules into the main file so I don't have to maintain a list of commands?  \n\n\nAny tips on how to learn those best practices?  \n\n\nGreets", "author_fullname": "t2_mypflv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best practice on how to build a scalable Shell", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_imk3f6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599268705.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey Guys  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m new to Go and want to build my own Shell as the first Project.&lt;br/&gt;\nNow I&amp;#39;m wondering whats the best way to structure such code I had the following things in mind:  &lt;/p&gt;\n\n&lt;p&gt;If you implement custom shell commands like:  &amp;quot;cd&amp;quot; etc. write those as Plugin as Goshell does.&lt;br/&gt;\nBut what I would like to have is just a simple file called &amp;quot;cd&amp;quot; in the folder modules.&lt;br/&gt;\nBut how can I then import all those Modules into the main file so I don&amp;#39;t have to maintain a list of commands?  &lt;/p&gt;\n\n&lt;p&gt;Any tips on how to learn those best practices?  &lt;/p&gt;\n\n&lt;p&gt;Greets&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "imk3f6", "is_robot_indexable": true, "report_reasons": null, "author": "JeromeNHB", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/imk3f6/best_practice_on_how_to_build_a_scalable_shell/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/imk3f6/best_practice_on_how_to_build_a_scalable_shell/", "subreddit_subscribers": 124328, "created_utc": 1599239905.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5nxwrjjq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GORM 2.0 Release Note | GORM - The fantastic ORM library for Golang, aims to be developer friendly.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_imjvqw", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599268037.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "gorm.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://gorm.io/docs/v2_release_note.html", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "imjvqw", "is_robot_indexable": true, "report_reasons": null, "author": "pareek-narendra", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/imjvqw/gorm_20_release_note_gorm_the_fantastic_orm/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://gorm.io/docs/v2_release_note.html", "subreddit_subscribers": 124328, "created_utc": 1599239237.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_imjvqw", "before": null}}