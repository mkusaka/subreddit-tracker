{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_4bcgbt1h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Simple Downloads Folder Organiser Written In Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_gxknzc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 70, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/EIHR18KGh5EeEPbTvtlPk1kM-uPLvvXCNu-9gKZCVhs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591447989.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "projectlode.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/uM57JivDm1eRKMRzh4a5gOha_g_ST6jNWL50nb5dS0c.jpg?auto=webp&amp;s=dc8720cf3d0aad31e5df9ae0f95732cefadeba3e", "width": 96, "height": 96}, "resolutions": [], "variants": {}, "id": "nV1yDDEqi-36slU6AU1P-gv3JOVErFfjcCl15v2Y_MQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gxknzc", "is_robot_indexable": true, "report_reasons": null, "author": "johnblackape", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gxknzc/simple_downloads_folder_organiser_written_in_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://projectlode.com/projects/simple-download-folder-organiser/guides/simple-downloads-folder-organiser-written-in-ruby", "subreddit_subscribers": 65599, "created_utc": 1591419189.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I wrote this function:  \n\n\n`def tail(times)`\n\n  `return if times == 0`\n\n  `yield`\n\n  `tail(times - 1)`  \n`end`  \n\n\nthen called it with a block:  \n\n\n`tail(n) {|i| puts(i) }`  \n\n\nand I got this:  \n\n\n`tail.rb:6:in \\`tail': no block given (yield) (LocalJumpError)`\n\n  \nCan someone explain how should I do this and why I get that exception raised?", "author_fullname": "t2_57t3n9fq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "LocalJumpError given even if there is a block", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gxmrvh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591458803.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote this function:  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;def tail(times)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return if times == 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;tail(times - 1)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;end&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;then called it with a block:  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;tail(n) {|i| puts(i) }&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;and I got this:  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;tail.rb:6:in \\&lt;/code&gt;tail&amp;#39;: no block given (yield) (LocalJumpError)`&lt;/p&gt;\n\n&lt;p&gt;Can someone explain how should I do this and why I get that exception raised?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gxmrvh", "is_robot_indexable": true, "report_reasons": null, "author": "GPhykos", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gxmrvh/localjumperror_given_even_if_there_is_a_block/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gxmrvh/localjumperror_given_even_if_there_is_a_block/", "subreddit_subscribers": 65599, "created_utc": 1591430003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello All,  I wrote a terminal based RSS reader [https://gitlab.com/mindaslab/rss\\_reader](https://gitlab.com/mindaslab/rss_reader) , thought it might be useful for some one so am posting it here.", "author_fullname": "t2_6cs3h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A RSS reader in Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx38l1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 35, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 35, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 1}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591387312.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello All,  I wrote a terminal based RSS reader &lt;a href=\"https://gitlab.com/mindaslab/rss_reader\"&gt;https://gitlab.com/mindaslab/rss_reader&lt;/a&gt; , thought it might be useful for some one so am posting it here.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?auto=webp&amp;s=6b590839e21b0f0e5d45a926d1c383c41316f7fd", "width": 128, "height": 128}, "resolutions": [{"url": "https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a3dfba29f9d19dc5dd95d58e68cd2ca48d0f6551", "width": 108, "height": 108}], "variants": {}, "id": "euUE_k9o_euzwgNONmIZMM026oeSTBH_ZdvLjtUNylg"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "start_date": null, "is_enabled": true, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "name": "Silver", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx38l1", "is_robot_indexable": true, "report_reasons": null, "author": "mindaslab", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx38l1/a_rss_reader_in_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gx38l1/a_rss_reader_in_ruby/", "subreddit_subscribers": 65599, "created_utc": 1591358512.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'm looking at C++ examples and then I'm looking back at Ruby and I don't see why Ruby can't be compiled to the same performance. Imagine if they made a Ruby compiler that had C++ performance, every other programming language would instantly die as Ruby would be the easiest and fastest. Can it be done honestly or is there some limitation I can't see?", "author_fullname": "t2_237zivsx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Can Ruby be compiled into high performance assembly?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx70k9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591400771.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m looking at C++ examples and then I&amp;#39;m looking back at Ruby and I don&amp;#39;t see why Ruby can&amp;#39;t be compiled to the same performance. Imagine if they made a Ruby compiler that had C++ performance, every other programming language would instantly die as Ruby would be the easiest and fastest. Can it be done honestly or is there some limitation I can&amp;#39;t see?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx70k9", "is_robot_indexable": true, "report_reasons": null, "author": "surgery_surgery", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx70k9/can_ruby_be_compiled_into_high_performance/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gx70k9/can_ruby_be_compiled_into_high_performance/", "subreddit_subscribers": 65599, "created_utc": 1591371971.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I've been writing Ruby since before Rails came out and I had no idea you could do this. \n\nYou can pass the token defining the heredoc as an argument, and the continue the line:\n\n    call_method(&lt;&lt;DOC).do_something(5)\n      SOME TEXT\n    DOC\n\nYou can even stack the heredocs and call them as multiple arguments:\n\n    call_method(&lt;&lt;-DOC1, &lt;&lt;~DOC2).do_something\n      this is doc 1\n    DOC1\n      this is doc 2\n    DOC2\n\nNot something that will matter very often, but a cool discovery.\n\n---\n\nEdit - Other cool stuff from this thread:\n\n/u/yxhuvud pointed out that it is possible to call methods on the heredoc too:\n\n    foo(&lt;&lt;~SQL.strip)\n      SELECT\n        foo, bar\n      FROM tables\n    SQL\n\n/u/riffraff pointed out the `DATA` and `__END__` syntax as well ([explanation link](https://www.honeybadger.io/blog/data-and-end-in-ruby/))\n\n    call_method(DATA).do_something\n\n    # some code\n\n    __END__\n    Evertyhing after the above line\n    is what will go in DATA", "author_fullname": "t2_5bruf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TIL you can pass heredocs tokens as arguments and even stack them", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gwqllv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 56, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 56, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": 1591352690.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_3": 1}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591334687.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been writing Ruby since before Rails came out and I had no idea you could do this. &lt;/p&gt;\n\n&lt;p&gt;You can pass the token defining the heredoc as an argument, and the continue the line:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;call_method(&amp;lt;&amp;lt;DOC).do_something(5)\n  SOME TEXT\nDOC\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can even stack the heredocs and call them as multiple arguments:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;call_method(&amp;lt;&amp;lt;-DOC1, &amp;lt;&amp;lt;~DOC2).do_something\n  this is doc 1\nDOC1\n  this is doc 2\nDOC2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Not something that will matter very often, but a cool discovery.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Edit - Other cool stuff from this thread:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"/u/yxhuvud\"&gt;/u/yxhuvud&lt;/a&gt; pointed out that it is possible to call methods on the heredoc too:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foo(&amp;lt;&amp;lt;~SQL.strip)\n  SELECT\n    foo, bar\n  FROM tables\nSQL\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"/u/riffraff\"&gt;/u/riffraff&lt;/a&gt; pointed out the &lt;code&gt;DATA&lt;/code&gt; and &lt;code&gt;__END__&lt;/code&gt; syntax as well (&lt;a href=\"https://www.honeybadger.io/blog/data-and-end-in-ruby/\"&gt;explanation link&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;call_method(DATA).do_something\n\n# some code\n\n__END__\nEvertyhing after the above line\nis what will go in DATA\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?auto=webp&amp;s=946dfa2b21fed19e3ce735d5cce6050591e546b8", "width": 2048, "height": 1024}, "resolutions": [{"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=95baefaf60da93e911a02b209152fcbb7d6c1cdf", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2aeff025d6e18a37377240b05e3da79e7ec963f3", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=29fc881aa01d339ea0528775350d3518f570c8d5", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8166cf64db3d115696ec6cc461ea988357e864e7", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=31ba2de3e3993c26453d2e74bb3b358f4d7e53e3", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a2601feb68388948ea92b47b54801fb557460e2b", "width": 1080, "height": 540}], "variants": {}, "id": "K_xfFOANcSVffWV8_XSK1nE4Zws0JCj6BdEwR7tfxBI"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 31, "coin_price": 1800, "id": "gid_3", "penny_donate": null, "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/platinum_512.png", "days_of_premium": 31, "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/platinum_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_128.png", "width": 128, "height": 128}], "icon_width": 512, "start_date": null, "is_enabled": true, "description": "Gives the author a month of Reddit Premium, which includes %{coin_symbol}700 Coins for that month, and shows a Platinum Award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "name": "Platinum", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gwqllv", "is_robot_indexable": true, "report_reasons": null, "author": "brainbag", "discussion_type": null, "num_comments": 34, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gwqllv/til_you_can_pass_heredocs_tokens_as_arguments_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gwqllv/til_you_can_pass_heredocs_tokens_as_arguments_and/", "subreddit_subscribers": 65599, "created_utc": 1591305887.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_msssp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Run Rails script as an ActiveJob job", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx2jzd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1591384240.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.eq8.eu", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx2jzd", "is_robot_indexable": true, "report_reasons": null, "author": "equivalent8", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx2jzd/run_rails_script_as_an_activejob_job/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.eq8.eu/til/run-script-as-a-activejob-sidekiq-job.html", "subreddit_subscribers": 65599, "created_utc": 1591355440.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I wrote this, but I have problems with my helper \"current\\_user\". I don't  know what I exactly should put there to get it into the work : [https://gist.github.com/prp-e/91ad2491ffa8926a4c5ff67268078b1f](https://slack-redir.net/link?url=https%3A%2F%2Fgist.github.com%2Fprp-e%2F91ad2491ffa8926a4c5ff67268078b1f&amp;v=3) \n\n(P.S : It's not a serious project, don't worry about it's security)", "author_fullname": "t2_1lai2din", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "session[:user_id] problem in a sinatra app", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx0ize", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591373776.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote this, but I have problems with my helper &amp;quot;current_user&amp;quot;. I don&amp;#39;t  know what I exactly should put there to get it into the work : &lt;a href=\"https://slack-redir.net/link?url=https%3A%2F%2Fgist.github.com%2Fprp-e%2F91ad2491ffa8926a4c5ff67268078b1f&amp;amp;v=3\"&gt;https://gist.github.com/prp-e/91ad2491ffa8926a4c5ff67268078b1f&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;(P.S : It&amp;#39;s not a serious project, don&amp;#39;t worry about it&amp;#39;s security)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx0ize", "is_robot_indexable": true, "report_reasons": null, "author": "Haghiri75", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx0ize/sessionuser_id_problem_in_a_sinatra_app/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gx0ize/sessionuser_id_problem_in_a_sinatra_app/", "subreddit_subscribers": 65599, "created_utc": 1591344976.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Code (file iter.rb):\n\n  \n`require(\"benchmark\")`\n\n&amp;#x200B;\n\n`array = (1..2000000).to_a()`\n\n&amp;#x200B;\n\n`class Array`\n\n  `def iter()`\n\n`yield self`\n\n  `end`\n\n`end`\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n[`Benchmark.bm`](https://Benchmark.bm)`() {|b|`\n\n  [`b.report`](https://b.report)`(\"for: \") {|b|`\n\n[`File.open`](https://File.open)`(\"for.txt\", \"w\") {|f|`\n\n`for i in array do`\n\n`f.puts(i)`\n\n`end`\n\n`}` \n\n  `}`\n\n  [`b.report`](https://b.report)`(\"iter:\") {|b|`\n\n[`File.open`](https://File.open)`(\"iter.txt\", \"w\") {|f|`\n\n`array.iter() {|i|`\n\n`f.puts(i)`\n\n`}`\n\n`}`\n\n  `}`\n\n`}` \n\n&amp;#x200B;\n\nOn my Raspberry Pi 4 (`Linux Manjaro 4.19.122-1-MANJARO-ARM #1 SMP PREEMPT Mon May 11 14:20:27 CDT 2020 aarch64 GNU/Linux`), this produces the following:  \n`user     system      total        real`\n\n`for:   4.481485   0.152160   4.633645 (  4.665762)`\n\n`iter:  2.933153   0.135692   3.068845 (  3.082631)`  \n\n\nit's a second and a half faster, just by yielding the array instead of looping into it with a for loop.", "author_fullname": "t2_57t3n9fq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Yielding an array resulting faster than doing a for loop", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gx1kul", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.62, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/ruby", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591379373.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Code (file iter.rb):&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;require(&amp;quot;benchmark&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;array = (1..2000000).to_a()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;class Array&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;def iter()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;yield self&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://Benchmark.bm\"&gt;&lt;code&gt;Benchmark.bm&lt;/code&gt;&lt;/a&gt;&lt;code&gt;() {|b|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://b.report\"&gt;&lt;code&gt;b.report&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;for: &amp;quot;) {|b|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://File.open\"&gt;&lt;code&gt;File.open&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;for.txt&amp;quot;, &amp;quot;w&amp;quot;) {|f|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for i in array do&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;f.puts(i)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://b.report\"&gt;&lt;code&gt;b.report&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;iter:&amp;quot;) {|b|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://File.open\"&gt;&lt;code&gt;File.open&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&amp;quot;iter.txt&amp;quot;, &amp;quot;w&amp;quot;) {|f|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;array.iter() {|i|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;f.puts(i)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;On my Raspberry Pi 4 (&lt;code&gt;Linux Manjaro 4.19.122-1-MANJARO-ARM #1 SMP PREEMPT Mon May 11 14:20:27 CDT 2020 aarch64 GNU/Linux&lt;/code&gt;), this produces the following:&lt;br/&gt;\n&lt;code&gt;user     system      total        real&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for:   4.481485   0.152160   4.633645 (  4.665762)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;iter:  2.933153   0.135692   3.068845 (  3.082631)&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;it&amp;#39;s a second and a half faster, just by yielding the array instead of looping into it with a for loop.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d57de81a-873c-11e9-9a25-0e18d14df676", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gx1kul", "is_robot_indexable": true, "report_reasons": null, "author": "GPhykos", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gx1kul/yielding_an_array_resulting_faster_than_doing_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gx1kul/yielding_an_array_resulting_faster_than_doing_a/", "subreddit_subscribers": 65599, "created_utc": 1591350573.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_ew57u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Topaz still one of the fastest ruby implementation, even if it not developed some years, by this benchmarks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_gwt2xc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/OXS_mEEhlg4E7CrKH13JrOxcnQDCg1I4pLJbLj2TpS8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591342649.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?auto=webp&amp;s=8f301f793a2aad2e5bc38441c8d19e8cc2d92b09", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ff4a3f70697dee714da5088dc514108044cdba31", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6f1a49e66f446db147042908481ca391b03fc1a8", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/G75__ZB70GmhwNeMZgSdnoCZhQuZkAAwlEY2uOMe3b4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=de696b5b4db130c886c6a7374d86bdc8e38bcf4b", "width": 320, "height": 320}], "variants": {}, "id": "RvPIhCR7HfTnty9-rDh8tZhw3z3n-8_CKwdsH_ax51U"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gwt2xc", "is_robot_indexable": true, "report_reasons": null, "author": "kostya27", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gwt2xc/topaz_still_one_of_the_fastest_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/kostya/jit-benchmarks", "subreddit_subscribers": 65599, "created_utc": 1591313849.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "FYI, coming from Java/Python background. I've been using Ruby (on Rails) at work since last November, and I think I can understand why ruby is facing decline in popularity. A few points I feel annoyed:\n\n* I'm mostly annoyed by TIMTOWTDI, no consistency enforced, which makes it difficult to maintain code and slows down the development.\n* Also, even though there is more than one way to do, only few of them are documented properly and the rest are abandoned. Why not just move with one clear way?\n*  I feel like Ruby/Rails' duck typing does not fit well. I once had to deal with error, and it was because of type of hashes, one with \\`HashWithIndifferentAccess\\`and another one with regular \\`Hash\\`.  Unless it's a language like js where \\`{}\\` are all object, this sucks.\n\nMy overall thought on this language&amp;framework so far is that someone literally put all different features from different languages in a bag and shook it up to create the language.", "author_fullname": "t2_6fanor3w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My thought on Ruby/Rails TIMTOWTDI", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gxd32w", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.17, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591419952.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;FYI, coming from Java/Python background. I&amp;#39;ve been using Ruby (on Rails) at work since last November, and I think I can understand why ruby is facing decline in popularity. A few points I feel annoyed:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I&amp;#39;m mostly annoyed by TIMTOWTDI, no consistency enforced, which makes it difficult to maintain code and slows down the development.&lt;/li&gt;\n&lt;li&gt;Also, even though there is more than one way to do, only few of them are documented properly and the rest are abandoned. Why not just move with one clear way?&lt;/li&gt;\n&lt;li&gt; I feel like Ruby/Rails&amp;#39; duck typing does not fit well. I once had to deal with error, and it was because of type of hashes, one with `HashWithIndifferentAccess`and another one with regular `Hash`.  Unless it&amp;#39;s a language like js where `{}` are all object, this sucks.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;My overall thought on this language&amp;amp;framework so far is that someone literally put all different features from different languages in a bag and shook it up to create the language.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gxd32w", "is_robot_indexable": true, "report_reasons": null, "author": "rosanna884", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gxd32w/my_thought_on_rubyrails_timtowtdi/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gxd32w/my_thought_on_rubyrails_timtowtdi/", "subreddit_subscribers": 65599, "created_utc": 1591391152.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gxd32w", "before": null}}