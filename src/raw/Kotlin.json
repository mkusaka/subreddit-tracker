{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "[https://github.com/LukasForst/katlib](https://github.com/LukasForst/katlib)\n\n&amp;#x200B;\n\nAllow me to introduce you to **Katlib** \\- collection of extension functions I and my colleges wrote for last three years of server side Kotlin development. It contains around 70 extensions or functions that we're missing in the Kotlin standard library.\n\nFully opensourced, with test coverage between 60-70% and with minimum (1) of dependencies.", "author_fullname": "t2_6itwbcpu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Katlib - extensions functions library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i7oa3d", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597164775.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/LukasForst/katlib\"&gt;https://github.com/LukasForst/katlib&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Allow me to introduce you to &lt;strong&gt;Katlib&lt;/strong&gt; - collection of extension functions I and my colleges wrote for last three years of server side Kotlin development. It contains around 70 extensions or functions that we&amp;#39;re missing in the Kotlin standard library.&lt;/p&gt;\n\n&lt;p&gt;Fully opensourced, with test coverage between 60-70% and with minimum (1) of dependencies.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7oa3d", "is_robot_indexable": true, "report_reasons": null, "author": "Yatralalala", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i7oa3d/katlib_extensions_functions_library/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i7oa3d/katlib_extensions_functions_library/", "subreddit_subscribers": 36529, "created_utc": 1597135975.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_c14v7nc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Parameterized tests with Kotest", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i7mxpj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597157461.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "kotlintesting.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://kotlintesting.com/kotest-parameterized/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7mxpj", "is_robot_indexable": true, "report_reasons": null, "author": "rozkmin", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i7mxpj/parameterized_tests_with_kotest/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kotlintesting.com/kotest-parameterized/", "subreddit_subscribers": 36529, "created_utc": 1597128661.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_hzfkq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Midifunk - a library for processing MIDI events easily", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i7ctex", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597119911.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/stashymane/midifunk", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7ctex", "is_robot_indexable": true, "report_reasons": null, "author": "StashCat", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i7ctex/midifunk_a_library_for_processing_midi_events/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/stashymane/midifunk", "subreddit_subscribers": 36529, "created_utc": 1597091111.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_13yqbd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Quick intro into http4k \u2014 a Kotlin library for writing HTTP servers and clients", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i7ojmg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597166191.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "dmitrykandalov.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://dmitrykandalov.com/hello-http4k", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7ojmg", "is_robot_indexable": true, "report_reasons": null, "author": "dkandalov", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i7ojmg/quick_intro_into_http4k_a_kotlin_library_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://dmitrykandalov.com/hello-http4k", "subreddit_subscribers": 36529, "created_utc": 1597137391.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_7g1rkahx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to architect Android Analytics layer? || Kotlin|| Android - Finally I got back to speed, jumping back to youtube. Comments are appreciated. I have also added github repo. Feel free to check it out.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i7hc4v", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/aYeY7svVUA4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "How to architect Android Analytics layer? || Tutorial", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/aYeY7svVUA4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Foodie Dev", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/aYeY7svVUA4/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCSSnixu_IO8dvgnv9Gi1AHw"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/aYeY7svVUA4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/i7hc4v", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597134429.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://youtu.be/aYeY7svVUA4", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7hc4v", "is_robot_indexable": true, "report_reasons": null, "author": "coffeelickerr", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i7hc4v/how_to_architect_android_analytics_layer_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/aYeY7svVUA4", "subreddit_subscribers": 36529, "created_utc": 1597105629.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "How to architect Android Analytics layer? || Tutorial", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/aYeY7svVUA4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Foodie Dev", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/aYeY7svVUA4/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCSSnixu_IO8dvgnv9Gi1AHw"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_jpp71", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ktor Roadmap for 2020-2021 \u2013 Ktor Blog", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i70zbu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 56, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 56, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597076654.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.jetbrains.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.jetbrains.com/ktor/2020/08/10/ktor-roadmap-for-2020-2021/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i70zbu", "is_robot_indexable": true, "report_reasons": null, "author": "Enleur", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i70zbu/ktor_roadmap_for_20202021_ktor_blog/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.jetbrains.com/ktor/2020/08/10/ktor-roadmap-for-2020-2021/", "subreddit_subscribers": 36529, "created_utc": 1597047854.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_y00ol", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introducing Satchel: a fast, secure and modular key-value storage with batteries-included for Android and JVM", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i75ode", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597098021.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/adrielcafe/satchel", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i75ode", "is_robot_indexable": true, "report_reasons": null, "author": "adrielcafe", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i75ode/introducing_satchel_a_fast_secure_and_modular/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/adrielcafe/satchel", "subreddit_subscribers": 36529, "created_utc": 1597069221.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "For example, let's say we have a customer entity and its using inline classes:\n\n&amp;#x200B;\n\n`data class Customer(`\n\n   `val customerId: CustomerID,`\n\n   `val customerName: CustomerName,`\n\n   `val  customerEmail: CustomerEmail,`\n\n   `val customerPassword: CustomerPassword`\n\n`)`\n\n&amp;#x200B;\n\nIs it okay to be implemented this way or is it considered over-engineering? \n\nJust curious.", "author_fullname": "t2_4wefty6g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Are inline classes considered an \"over-engineering\" thing if used a lot?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i732j2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597087671.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For example, let&amp;#39;s say we have a customer entity and its using inline classes:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;data class Customer(&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;val customerId: CustomerID,&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;val customerName: CustomerName,&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;val  customerEmail: CustomerEmail,&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;val customerPassword: CustomerPassword&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Is it okay to be implemented this way or is it considered over-engineering? &lt;/p&gt;\n\n&lt;p&gt;Just curious.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i732j2", "is_robot_indexable": true, "report_reasons": null, "author": "LoneWalker20", "discussion_type": null, "num_comments": 16, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i732j2/are_inline_classes_considered_an_overengineering/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i732j2/are_inline_classes_considered_an_overengineering/", "subreddit_subscribers": 36529, "created_utc": 1597058871.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I need to generate a Hmac SHA256 digest of a string so I can authorize requests to my backend, and I nearly have a working function for it. The only problem I'm having is converting the resulting byte array into the usable string that I can send over http\n\n&amp;#x200B;\n\n    fun generateAuth(payload : String) : String {\n        val hmac = Mac.getInstance(\"HmacSHA256\")\n        hmac.init(SecretKeySpec(keyByteArray, \"HmacSHA256\"))\n    \n        val authByteArray = hmac.doFinal(payload.toByteArray())\n    \n        return authByteArray.toString() //Not what I'm expecting\n    }\n\nThis function is very close to working, but it excludes zeros from the final string?\n\n    fun generateAuth(payload : String) : String {\n        val hmac = Mac.getInstance(algorithm)\n        hmac.init(SecretKeySpec(keyByteArray, algorithm))\n    \n        val authString = StringBuilder()\n    \n        hmac.doFinal(payload.toByteArray()).iterator().forEach{byte -&gt;\n            authString.append(Integer.toHexString(0xff and byte.toInt()))\n        }\n    \n        return authString.toString()\n    }\n\nResult from above function:\n\nb761e5d1b2b942ae343b7bcd6518ea8442f656449e934534a1da29ed9fbadd\n\nActual valid key:\n\nb761e5d1b2b942ae0343b7bcd6518ea8442f656449e9340534a1da29ed9fbadd\n\n&amp;#x200B;\n\nSo what's the correct method for converting the byte array to a string?", "author_fullname": "t2_4gru8afm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Converting byte array to string", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i7b9tp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1597086710.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597115292.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I need to generate a Hmac SHA256 digest of a string so I can authorize requests to my backend, and I nearly have a working function for it. The only problem I&amp;#39;m having is converting the resulting byte array into the usable string that I can send over http&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun generateAuth(payload : String) : String {\n    val hmac = Mac.getInstance(&amp;quot;HmacSHA256&amp;quot;)\n    hmac.init(SecretKeySpec(keyByteArray, &amp;quot;HmacSHA256&amp;quot;))\n\n    val authByteArray = hmac.doFinal(payload.toByteArray())\n\n    return authByteArray.toString() //Not what I&amp;#39;m expecting\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This function is very close to working, but it excludes zeros from the final string?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun generateAuth(payload : String) : String {\n    val hmac = Mac.getInstance(algorithm)\n    hmac.init(SecretKeySpec(keyByteArray, algorithm))\n\n    val authString = StringBuilder()\n\n    hmac.doFinal(payload.toByteArray()).iterator().forEach{byte -&amp;gt;\n        authString.append(Integer.toHexString(0xff and byte.toInt()))\n    }\n\n    return authString.toString()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result from above function:&lt;/p&gt;\n\n&lt;p&gt;b761e5d1b2b942ae343b7bcd6518ea8442f656449e934534a1da29ed9fbadd&lt;/p&gt;\n\n&lt;p&gt;Actual valid key:&lt;/p&gt;\n\n&lt;p&gt;b761e5d1b2b942ae0343b7bcd6518ea8442f656449e9340534a1da29ed9fbadd&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;So what&amp;#39;s the correct method for converting the byte array to a string?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7b9tp", "is_robot_indexable": true, "report_reasons": null, "author": "issamesean", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i7b9tp/converting_byte_array_to_string/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i7b9tp/converting_byte_array_to_string/", "subreddit_subscribers": 36529, "created_utc": 1597086492.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Created an curated amazing list of all the top-rated [Kotlin courses](https://blog.coursesity.com/best-kotlin-tutorials?utm_source=reddit&amp;utm_medium=social&amp;utm_campaign=redditPost&amp;utm_term=best-kotlin-js) of all time.\n\nMany of these courses are very helpful to Kotlin for the beginners.  \n\nHighly recommend.", "author_fullname": "t2_3d5utd2m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Collection of Kotlin online courses and tutorials for rookies", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i74irs", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597093759.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Created an curated amazing list of all the top-rated &lt;a href=\"https://blog.coursesity.com/best-kotlin-tutorials?utm_source=reddit&amp;amp;utm_medium=social&amp;amp;utm_campaign=redditPost&amp;amp;utm_term=best-kotlin-js\"&gt;Kotlin courses&lt;/a&gt; of all time.&lt;/p&gt;\n\n&lt;p&gt;Many of these courses are very helpful to Kotlin for the beginners.  &lt;/p&gt;\n\n&lt;p&gt;Highly recommend.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i74irs", "is_robot_indexable": true, "report_reasons": null, "author": "gandhiN", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i74irs/collection_of_kotlin_online_courses_and_tutorials/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i74irs/collection_of_kotlin_online_courses_and_tutorials/", "subreddit_subscribers": 36529, "created_utc": 1597064959.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_i74irs", "before": null}}