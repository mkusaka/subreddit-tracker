{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin Coroutines 1.3.6 released with the new StateFlow", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gg3kv3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 65, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 65, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589007105.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gg3kv3", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gg3kv3/kotlin_coroutines_136_released_with_the_new/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/Kotlin/kotlinx.coroutines/releases/tag/1.3.6", "subreddit_subscribers": 31393, "created_utc": 1588978305.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "We wrote our native app as a hybrid app using Kotlin JS. We find it a better development experience than Native Kotlin. Here's a blog post documenting our experience. \n\n[https://narbase.com/2020/05/08/we-rewrote-our-native-app-using-kotlin-js-kunafa-and-capacitor-and-it-was-great/](https://narbase.com/2020/05/08/we-rewrote-our-native-app-using-kotlin-js-kunafa-and-capacitor-and-it-was-great/)", "author_fullname": "t2_qo6vk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "We rewrote our native app using Kotlin/JS Kunafa and Capacitor. And it was GREAT.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gg4b89", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589009665.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We wrote our native app as a hybrid app using Kotlin JS. We find it a better development experience than Native Kotlin. Here&amp;#39;s a blog post documenting our experience. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://narbase.com/2020/05/08/we-rewrote-our-native-app-using-kotlin-js-kunafa-and-capacitor-and-it-was-great/\"&gt;https://narbase.com/2020/05/08/we-rewrote-our-native-app-using-kotlin-js-kunafa-and-capacitor-and-it-was-great/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gg4b89", "is_robot_indexable": true, "report_reasons": null, "author": "suadni93", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gg4b89/we_rewrote_our_native_app_using_kotlinjs_kunafa/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gg4b89/we_rewrote_our_native_app_using_kotlinjs_kunafa/", "subreddit_subscribers": 31393, "created_utc": 1588980865.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_1o9pueq4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learn, practice &amp; ace Kotlin by leveraging flashcards - [https://sparkle.adroitcorp.com.au]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ggcfjc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589045223.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ggcfjc", "is_robot_indexable": true, "report_reasons": null, "author": "pruthvikumarbk", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ggcfjc/learn_practice_ace_kotlin_by_leveraging/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/6zs7uy5rjpx41.jpg", "subreddit_subscribers": 31393, "created_utc": 1589016423.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_57b4q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Asynchronous streams and callbacks in Java &amp; Kotlin", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gfrzuz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 30, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 30, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588968414.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "matthisk.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gfrzuz", "is_robot_indexable": true, "report_reasons": null, "author": "Matthisk", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gfrzuz/asynchronous_streams_and_callbacks_in_java_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://matthisk.com/asynchronous-streams-and-callbacks/", "subreddit_subscribers": 31393, "created_utc": 1588939614.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_p0b81n6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "small flower shop api for anyone to use", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gg8aut", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589025353.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gg8aut", "is_robot_indexable": true, "report_reasons": null, "author": "yeukfei02", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gg8aut/small_flower_shop_api_for_anyone_to_use/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/yeukfei02/flowerShopApi", "subreddit_subscribers": 31393, "created_utc": 1588996553.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hello guys, I'm a C# developer and I'm trying to do something like return a variable which is awaiting a result from a retrofit HTTP client. I don't have a background with coroutines and that's why I'm facing some problems here.\n\nMy idea is to do something like:\n\n    fun auth(username: String, password:String) : userAuthResponse { \n        var res = async authUser(username, password).await();\n        return res as userAuthResponse;\n    }\n\nThe function with the HTTP client:\n\n    fun authUser(username: String, password:String) : UserAuthResponse {\n        val callService = serviceClient.getToken(username, password)\n\n        callService.enqueue(object : Callback&lt;UserTokenResponse&gt; {\n            override fun onResponse(call: Call&lt;UserTokenResponse&gt;, response:                                             Response&lt;UserTokenResponse&gt;) {\n                if(response.isSuccessful) {\n                    val userTokenResponse = response.body()\n                    return userTokenResponse as UserAuthResponse;\n                }\n            }\n\n            override fun onFailure(call: Call&lt;UserTokenResponse&gt;, t: Throwable) {\n                t.printStackTrace()\n            }\n        })\n    }\n\nI already read bout CoroutineScope(Dispatchers.IO).launch to run async/await inside the thread, but without a way to make it synchronous to return the response outside the coroutine I can't do what I want.\n\nThe idea is to make the application wait the authentication service in backend before initialize.", "author_fullname": "t2_o4wce", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Begginer question with Async/Await", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gg3coz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589006331.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello guys, I&amp;#39;m a C# developer and I&amp;#39;m trying to do something like return a variable which is awaiting a result from a retrofit HTTP client. I don&amp;#39;t have a background with coroutines and that&amp;#39;s why I&amp;#39;m facing some problems here.&lt;/p&gt;\n\n&lt;p&gt;My idea is to do something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun auth(username: String, password:String) : userAuthResponse { \n    var res = async authUser(username, password).await();\n    return res as userAuthResponse;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The function with the HTTP client:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun authUser(username: String, password:String) : UserAuthResponse {\n    val callService = serviceClient.getToken(username, password)\n\n    callService.enqueue(object : Callback&amp;lt;UserTokenResponse&amp;gt; {\n        override fun onResponse(call: Call&amp;lt;UserTokenResponse&amp;gt;, response:                                             Response&amp;lt;UserTokenResponse&amp;gt;) {\n            if(response.isSuccessful) {\n                val userTokenResponse = response.body()\n                return userTokenResponse as UserAuthResponse;\n            }\n        }\n\n        override fun onFailure(call: Call&amp;lt;UserTokenResponse&amp;gt;, t: Throwable) {\n            t.printStackTrace()\n        }\n    })\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I already read bout CoroutineScope(Dispatchers.IO).launch to run async/await inside the thread, but without a way to make it synchronous to return the response outside the coroutine I can&amp;#39;t do what I want.&lt;/p&gt;\n\n&lt;p&gt;The idea is to make the application wait the authentication service in backend before initialize.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gg3coz", "is_robot_indexable": true, "report_reasons": null, "author": "mandrakz", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gg3coz/begginer_question_with_asyncawait/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gg3coz/begginer_question_with_asyncawait/", "subreddit_subscribers": 31393, "created_utc": 1588977531.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi, I made two simple, quick + dirty, samples to compare a few important REST features in **KTor** \\+ **Spring Boot**\n\nKTor: [https://github.com/MikeMitterer/kotlin-catshostel-kt](https://github.com/MikeMitterer/kotlin-catshostel-kt)\n\nSpring Boot: [https://github.com/MikeMitterer/kotlin-catshostel-sb](https://github.com/MikeMitterer/kotlin-catshostel-sb)\n\nIf you are interested - check it out.\n\nThe reason for me was that SparkJava seems to be dead so I have to check out some alternatives.\n\nMy first attempt was Ktor - and boy... documentation is sometimes wrong or incomplete and it took me quite a while to assemble the example. Ktor tries to avoid the SB-magic but replaces it with Extension-Function-magic. Extension-Functions are a really cool Kotlin feature but in my opinion they overused them in Ktor.\n\n    /**\n     * Reads resource from ClassPath\n     * How cool ist this!\n     */\n    fun String.asResource(): String {\n        return this.javaClass.getResource(this).readText()\n    }\n\nSecond approach - Spring Boot. I had never used SB before. Usually I stay away from these \"magic things\" but I was really surprised how well it worked and how easy it was to assemble this thing with Kotlin.\n\nThis means for my next project: Kotlin + Spring Boot", "author_fullname": "t2_2i8ji9b5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Spring Boot vs. Ktor (iBats + JWT (mimics KeyCloak))", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gfvfqt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588981213.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I made two simple, quick + dirty, samples to compare a few important REST features in &lt;strong&gt;KTor&lt;/strong&gt; + &lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;KTor: &lt;a href=\"https://github.com/MikeMitterer/kotlin-catshostel-kt\"&gt;https://github.com/MikeMitterer/kotlin-catshostel-kt&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Spring Boot: &lt;a href=\"https://github.com/MikeMitterer/kotlin-catshostel-sb\"&gt;https://github.com/MikeMitterer/kotlin-catshostel-sb&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you are interested - check it out.&lt;/p&gt;\n\n&lt;p&gt;The reason for me was that SparkJava seems to be dead so I have to check out some alternatives.&lt;/p&gt;\n\n&lt;p&gt;My first attempt was Ktor - and boy... documentation is sometimes wrong or incomplete and it took me quite a while to assemble the example. Ktor tries to avoid the SB-magic but replaces it with Extension-Function-magic. Extension-Functions are a really cool Kotlin feature but in my opinion they overused them in Ktor.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n * Reads resource from ClassPath\n * How cool ist this!\n */\nfun String.asResource(): String {\n    return this.javaClass.getResource(this).readText()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Second approach - Spring Boot. I had never used SB before. Usually I stay away from these &amp;quot;magic things&amp;quot; but I was really surprised how well it worked and how easy it was to assemble this thing with Kotlin.&lt;/p&gt;\n\n&lt;p&gt;This means for my next project: Kotlin + Spring Boot&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gfvfqt", "is_robot_indexable": true, "report_reasons": null, "author": "MikeMitterer", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gfvfqt/spring_boot_vs_ktor_ibats_jwt_mimics_keycloak/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gfvfqt/spring_boot_vs_ktor_ibats_jwt_mimics_keycloak/", "subreddit_subscribers": 31393, "created_utc": 1588952413.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_4m6b9eus", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin tutorial 02 for beginners - Keywords and Variables", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gg0cw7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/CDi7LsRSwxg?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Kotlin tutorial 02 for beginners - Keywords and Variables", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/CDi7LsRSwxg?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Tech Engineering", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/CDi7LsRSwxg/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCVHnn7bothuKx9_FtyV3sMA"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/CDi7LsRSwxg?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/gg0cw7", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588996652.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gg0cw7", "is_robot_indexable": true, "report_reasons": null, "author": "TechEngineering", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gg0cw7/kotlin_tutorial_02_for_beginners_keywords_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/CDi7LsRSwxg", "subreddit_subscribers": 31393, "created_utc": 1588967852.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Kotlin tutorial 02 for beginners - Keywords and Variables", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/CDi7LsRSwxg?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Tech Engineering", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/CDi7LsRSwxg/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCVHnn7bothuKx9_FtyV3sMA"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Is there any plan when Inline classes going to be out of Experimental state as Kotlin Time library also depends on it and it is also in Experimental state.", "author_fullname": "t2_s1s72", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Experiment Inline classes", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gfogmu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588951326.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is there any plan when Inline classes going to be out of Experimental state as Kotlin Time library also depends on it and it is also in Experimental state.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gfogmu", "is_robot_indexable": true, "report_reasons": null, "author": "atulgpt", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gfogmu/experiment_inline_classes/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gfogmu/experiment_inline_classes/", "subreddit_subscribers": 31393, "created_utc": 1588922526.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "If we have this: \n\n `class Students(val name: String, private var age: Int) {`      \n\n`init {`         \n\n`println(\"hi\");`   \n\n  `}`  \n\n `}`\n\n `fun main(args: Array&lt;String&gt;){`     \n\n`println(\"Hello World!\")`     \n\n`val students  = Students(\"john\",23)`     \n\n`println(students.name)`   \n\n  `println(students.age)` \n\n `}`\n\nHow can I access \\`age\\` here since it is private ?", "author_fullname": "t2_fmq9q2e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "private property", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gfvqvi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588982239.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If we have this: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;class Students(val name: String, private var age: Int) {&lt;/code&gt;      &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;init {&lt;/code&gt;         &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;println(&amp;quot;hi&amp;quot;);&lt;/code&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;fun main(args: Array&amp;lt;String&amp;gt;){&lt;/code&gt;     &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;println(&amp;quot;Hello World!&amp;quot;)&lt;/code&gt;     &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;val students  = Students(&amp;quot;john&amp;quot;,23)&lt;/code&gt;     &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;println(students.name)&lt;/code&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;println(students.age)&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;How can I access `age` here since it is private ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gfvqvi", "is_robot_indexable": true, "report_reasons": null, "author": "androidjunior", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gfvqvi/private_property/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gfvqvi/private_property/", "subreddit_subscribers": 31393, "created_utc": 1588953439.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gfvqvi", "before": null}}