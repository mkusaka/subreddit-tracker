{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_4mbof", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Graal vs C2. Who runs Kotlin faster?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gatx48", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588274973.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gatx48", "is_robot_indexable": true, "report_reasons": null, "author": "fundamentalparticle", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gatx48/graal_vs_c2_who_runs_kotlin_faster/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/javarevisited/graal-vs-c2-who-runs-kotlin-faster-82f03f1b11dd", "subreddit_subscribers": 30884, "created_utc": 1588246173.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Let's say I have two libraries that do the same task that are written in Java and in Kotlin. Assuming the Kotlin library is written following Kotlin best practices, what are the advantages of using the Kotlin library from a Kotlin code base? What are the disadvantages of using the one written in Java? Are there any killer features? And generally how does the Kotlin way of writing APIs differ from the one in Java?\n\nThank you.", "author_fullname": "t2_gl4vl00", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What are the idiomatic differences between Kotlin libraries and Java libraries? Is there a Kotlin way of creating library APIs?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gackvy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 30, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 30, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588206458.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s say I have two libraries that do the same task that are written in Java and in Kotlin. Assuming the Kotlin library is written following Kotlin best practices, what are the advantages of using the Kotlin library from a Kotlin code base? What are the disadvantages of using the one written in Java? Are there any killer features? And generally how does the Kotlin way of writing APIs differ from the one in Java?&lt;/p&gt;\n\n&lt;p&gt;Thank you.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gackvy", "is_robot_indexable": true, "report_reasons": null, "author": "4ipp", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gackvy/what_are_the_idiomatic_differences_between_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gackvy/what_are_the_idiomatic_differences_between_kotlin/", "subreddit_subscribers": 30884, "created_utc": 1588177658.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_qtig0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using JUnit 5 with Spring Boot 2, Kotlin and Mockito", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gajpzl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588229566.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gajpzl", "is_robot_indexable": true, "report_reasons": null, "author": "Fewthp", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gajpzl/using_junit_5_with_spring_boot_2_kotlin_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com//using-junit-5-with-spring-boot-2-kotlin-and-mockito-d5aea5b0c668?source=friends_link&amp;sk=d01893fe8bdc26687ff8c30be708b8b3", "subreddit_subscribers": 30884, "created_utc": 1588200766.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Docs: https://dellisd.github.io/spatial-k/  \nRepo: https://github.com/dellisd/spatial-k/\n\nThis is my first time going about making and publishing a library, so I'm mainly hoping for some feedback about the design of the library and its APIs before I commit to a proper first release.\n\nThe design goals of this library were to be compatible with Kotlin Multiplatform projects (i.e. written in pure Kotlin) while also having an API that could still be called from Java. \n\nThe project is made up of three libraries (which are covered in more detail in the docs): \n\n**geojson**\n\nJust contains a set of class definitions for GeoJSON objects with built in conversion to/from JSON strings.\n\n**geojson-dsl**\n\nThis library is meant for Kotlin projects only and contains a DSL for building GeoJSON objects.\n\n**turf**\n\nContains the port of Turfjs written in Kotlin that uses the geojson library for representing the GeoJSON input to the functions.\n\nThe library is still under development, mainly porting a more Turf functions, but like I mentioned at the top I'd love to hear any feedback about the library. Thanks!", "author_fullname": "t2_6x15o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Spatial K - A WIP pure Kotlin Turfjs port and implementation of GeoJSON", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gak42w", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588230908.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Docs: &lt;a href=\"https://dellisd.github.io/spatial-k/\"&gt;https://dellisd.github.io/spatial-k/&lt;/a&gt;&lt;br/&gt;\nRepo: &lt;a href=\"https://github.com/dellisd/spatial-k/\"&gt;https://github.com/dellisd/spatial-k/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is my first time going about making and publishing a library, so I&amp;#39;m mainly hoping for some feedback about the design of the library and its APIs before I commit to a proper first release.&lt;/p&gt;\n\n&lt;p&gt;The design goals of this library were to be compatible with Kotlin Multiplatform projects (i.e. written in pure Kotlin) while also having an API that could still be called from Java. &lt;/p&gt;\n\n&lt;p&gt;The project is made up of three libraries (which are covered in more detail in the docs): &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;geojson&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Just contains a set of class definitions for GeoJSON objects with built in conversion to/from JSON strings.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;geojson-dsl&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This library is meant for Kotlin projects only and contains a DSL for building GeoJSON objects.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;turf&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Contains the port of Turfjs written in Kotlin that uses the geojson library for representing the GeoJSON input to the functions.&lt;/p&gt;\n\n&lt;p&gt;The library is still under development, mainly porting a more Turf functions, but like I mentioned at the top I&amp;#39;d love to hear any feedback about the library. Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gak42w", "is_robot_indexable": true, "report_reasons": null, "author": "Pika3323", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gak42w/spatial_k_a_wip_pure_kotlin_turfjs_port_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gak42w/spatial_k_a_wip_pure_kotlin_turfjs_port_and/", "subreddit_subscribers": 30884, "created_utc": 1588202108.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I'm relatively new to Kotlin. I have some experience with Java so I picked it up easily.\n\nI built this with Kotlin and Springboot this week. I'd like you guys to take a look.\n\nhttps://github.com/BBloggsbott/ProfileServer", "author_fullname": "t2_14vn0rn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Since we're in lockdown and I had nothing interesting to do. I spent all the free time I had last week on this and I would like your feedback, bug reports, feature requests, contributions, anything. It initially started as a learning exercise but I feel others can use it too.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gaf32z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588214956.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m relatively new to Kotlin. I have some experience with Java so I picked it up easily.&lt;/p&gt;\n\n&lt;p&gt;I built this with Kotlin and Springboot this week. I&amp;#39;d like you guys to take a look.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/BBloggsbott/ProfileServer\"&gt;https://github.com/BBloggsbott/ProfileServer&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gaf32z", "is_robot_indexable": true, "report_reasons": null, "author": "BBloggsbott", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gaf32z/since_were_in_lockdown_and_i_had_nothing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gaf32z/since_were_in_lockdown_and_i_had_nothing/", "subreddit_subscribers": 30884, "created_utc": 1588186156.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": " 0\n\nI am currently taking a programming principles class with a Kotlin language focus at my school due to my growing interest in programming.\n\nI am to create a program that takes user input for an integer. After I collect this information, I need to print two triangles in a asterisk (\\*) pattern (I had no problem completing these steps).\n\nIn addition, there is potential for extra credit which I am not working on more for experience than the extra points as I am looking good grade wise. I need to take the first triangle and reflect it while maintaining the properties. So far, I am unable to figure out how I would keep the triangle hollow and get the third side on to it.\n\nMy code:\n\n    fun main() {\n    \n        // Prompt user for the triangle's size\n        print( \"How big do you want your triangles? \" )\n    \n        // Get the triangle's size from the user and store in a variable\n        var triangleSize = readLine()!!.toInt()\n    \n        // Decrementor for internal spaces\n        var decrementor = triangleSize\n    \n        // Incrementor for internal spaces\n        var incrementor = 2\n    \n        // Case given a 0 is entered\n        if ( triangleSize == 0 ) {\n    \n            // Case given 1 is entered\n        } else if ( triangleSize == 1 ) {\n    \n            println( \"*\" )\n    \n            println( \"1\" )\n    \n            for ( i in 1..( triangleSize - 1 )) {\n    \n                print( \" \" )\n    \n            }\n    \n            print( \"*\" )\n    \n            // Case given number entered that is not 0 or 1\n        } else {\n    \n            // Print the top point of the triangle\n            println( \"*\" )\n    \n            // Print the sides of the triangle\n            for ( i in 0..( triangleSize - 3 )) {\n    \n                print( \"*\" )\n    \n                for ( i in 1..( triangleSize - decrementor )) {\n    \n                    print( \" \" )\n    \n                }\n    \n                println( \"*\" )\n    \n                decrementor--\n    \n            }\n    \n            // Print the bottom of the triangle\n            for ( i in 1..triangleSize ) {\n    \n                print( \"*\" )\n    \n            }\n    \n            println()\n    \n            // Print the numbers triangle\n            for ( i in 1..triangleSize ) {\n    \n                for ( j in 1..i ) {\n    \n                    print( \"$j\" )\n    \n                }\n    \n                println()\n    \n            }\n    \n            // Print the top of the inverse triangle\n            for ( i in 1..( triangleSize - 1 )) {\n    \n                print( \" \" )\n    \n            }\n    \n            println( \"*\" )\n    \n            for ( i in 1..( triangleSize - 2 )) {\n    \n                for ( i in 1..( triangleSize - incrementor )) {\n    \n                    print( \" \" )\n    \n                }\n    \n                println( \"*\" )\n    \n                incrementor++\n    \n            }\n    \n            // Print the bottom of the inverse triangle\n            for ( i in 1..triangleSize ) {\n    \n                print( \"*\" )\n    \n            }\n    \n        }\n    \n    }", "author_fullname": "t2_3xn9l20i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Printing a reflected hollow right triangle pattern (*) in Kotlin", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gamszr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.43, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588240855.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;0&lt;/p&gt;\n\n&lt;p&gt;I am currently taking a programming principles class with a Kotlin language focus at my school due to my growing interest in programming.&lt;/p&gt;\n\n&lt;p&gt;I am to create a program that takes user input for an integer. After I collect this information, I need to print two triangles in a asterisk (*) pattern (I had no problem completing these steps).&lt;/p&gt;\n\n&lt;p&gt;In addition, there is potential for extra credit which I am not working on more for experience than the extra points as I am looking good grade wise. I need to take the first triangle and reflect it while maintaining the properties. So far, I am unable to figure out how I would keep the triangle hollow and get the third side on to it.&lt;/p&gt;\n\n&lt;p&gt;My code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun main() {\n\n    // Prompt user for the triangle&amp;#39;s size\n    print( &amp;quot;How big do you want your triangles? &amp;quot; )\n\n    // Get the triangle&amp;#39;s size from the user and store in a variable\n    var triangleSize = readLine()!!.toInt()\n\n    // Decrementor for internal spaces\n    var decrementor = triangleSize\n\n    // Incrementor for internal spaces\n    var incrementor = 2\n\n    // Case given a 0 is entered\n    if ( triangleSize == 0 ) {\n\n        // Case given 1 is entered\n    } else if ( triangleSize == 1 ) {\n\n        println( &amp;quot;*&amp;quot; )\n\n        println( &amp;quot;1&amp;quot; )\n\n        for ( i in 1..( triangleSize - 1 )) {\n\n            print( &amp;quot; &amp;quot; )\n\n        }\n\n        print( &amp;quot;*&amp;quot; )\n\n        // Case given number entered that is not 0 or 1\n    } else {\n\n        // Print the top point of the triangle\n        println( &amp;quot;*&amp;quot; )\n\n        // Print the sides of the triangle\n        for ( i in 0..( triangleSize - 3 )) {\n\n            print( &amp;quot;*&amp;quot; )\n\n            for ( i in 1..( triangleSize - decrementor )) {\n\n                print( &amp;quot; &amp;quot; )\n\n            }\n\n            println( &amp;quot;*&amp;quot; )\n\n            decrementor--\n\n        }\n\n        // Print the bottom of the triangle\n        for ( i in 1..triangleSize ) {\n\n            print( &amp;quot;*&amp;quot; )\n\n        }\n\n        println()\n\n        // Print the numbers triangle\n        for ( i in 1..triangleSize ) {\n\n            for ( j in 1..i ) {\n\n                print( &amp;quot;$j&amp;quot; )\n\n            }\n\n            println()\n\n        }\n\n        // Print the top of the inverse triangle\n        for ( i in 1..( triangleSize - 1 )) {\n\n            print( &amp;quot; &amp;quot; )\n\n        }\n\n        println( &amp;quot;*&amp;quot; )\n\n        for ( i in 1..( triangleSize - 2 )) {\n\n            for ( i in 1..( triangleSize - incrementor )) {\n\n                print( &amp;quot; &amp;quot; )\n\n            }\n\n            println( &amp;quot;*&amp;quot; )\n\n            incrementor++\n\n        }\n\n        // Print the bottom of the inverse triangle\n        for ( i in 1..triangleSize ) {\n\n            print( &amp;quot;*&amp;quot; )\n\n        }\n\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gamszr", "is_robot_indexable": true, "report_reasons": null, "author": "Jxhnnycvsh", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gamszr/printing_a_reflected_hollow_right_triangle/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gamszr/printing_a_reflected_hollow_right_triangle/", "subreddit_subscribers": 30884, "created_utc": 1588212055.0, "num_crossposts": 2, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "At work we have spring-boot and for my private projects I just use the gradle Shadow plugin. but I was just wondering if there is something better\nWhat do you guys prefer to package and distribute applications?", "author_fullname": "t2_db8xz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you package your application", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ga6obi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588183252.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;At work we have spring-boot and for my private projects I just use the gradle Shadow plugin. but I was just wondering if there is something better\nWhat do you guys prefer to package and distribute applications?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ga6obi", "is_robot_indexable": true, "report_reasons": null, "author": "SirEarl", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ga6obi/how_do_you_package_your_application/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/ga6obi/how_do_you_package_your_application/", "subreddit_subscribers": 30884, "created_utc": 1588154452.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi there! I created a DSL generator for AWS SDK 2 and started with DynamoDB:\n\n[https://github.com/cylab/awssdk-dynamodb-kotlin-dsl](https://github.com/cylab/awssdk-dynamodb-kotlin-dsl)\n\nFeel free to try it out! Any feedback would be greatly appreciated!", "author_fullname": "t2_140odx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A new DynamoDB Kotlin DSL generated based on AWS SDK v2", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ga56cg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588175143.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi there! I created a DSL generator for AWS SDK 2 and started with DynamoDB:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/cylab/awssdk-dynamodb-kotlin-dsl\"&gt;https://github.com/cylab/awssdk-dynamodb-kotlin-dsl&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Feel free to try it out! Any feedback would be greatly appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ga56cg", "is_robot_indexable": true, "report_reasons": null, "author": "cylab", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ga56cg/a_new_dynamodb_kotlin_dsl_generated_based_on_aws/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/ga56cg/a_new_dynamodb_kotlin_dsl_generated_based_on_aws/", "subreddit_subscribers": 30884, "created_utc": 1588146343.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin Coroutines", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g9ybag", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.77, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588145548.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9ybag", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g9ybag/kotlin_coroutines/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@magdamiu/kotlin-coroutines-7938b5c7a11b", "subreddit_subscribers": 30884, "created_utc": 1588116748.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I have the following code:\n\n        sealed class Tile {\n            class ResourceTile: Tile() { ... }\n            class AnotherTile: Tile() { ... }\n            ...\n        }\n     \n        class Hex&lt;out T : Tile&gt;(val tile: T) { ... }\n    \n        inline fun &lt;reified T:Tile&gt; hexes(): List&lt;Hex&lt;T&gt;&gt; {\n            return allHexes().filter { it.tile is T } as List&lt;Hex&lt;T&gt;&gt;\n        }\n    \n    \n\nThe usage is `foo = hexes&lt;ResourceTile&gt;()`, where `foo` will have the type `List&lt;Hex&lt;ResourceTile&gt;&gt;`.\n\nThis works. It compiles, it runs, life is grand. But IntelliJ flags \\`as List&lt;Hex&lt;T&gt;&gt;\\` as being an unchecked cast. IntelliJ normally knows its business; so, when it gives me a warning I try to make it happy. \n\nIs there a syntax/rewrite of this that will get rid of IntelliJ's warning message?", "author_fullname": "t2_uk9jh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Trouble with generics and asList()", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ga1kyt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588158084.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have the following code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    sealed class Tile {\n        class ResourceTile: Tile() { ... }\n        class AnotherTile: Tile() { ... }\n        ...\n    }\n\n    class Hex&amp;lt;out T : Tile&amp;gt;(val tile: T) { ... }\n\n    inline fun &amp;lt;reified T:Tile&amp;gt; hexes(): List&amp;lt;Hex&amp;lt;T&amp;gt;&amp;gt; {\n        return allHexes().filter { it.tile is T } as List&amp;lt;Hex&amp;lt;T&amp;gt;&amp;gt;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The usage is &lt;code&gt;foo = hexes&amp;lt;ResourceTile&amp;gt;()&lt;/code&gt;, where &lt;code&gt;foo&lt;/code&gt; will have the type &lt;code&gt;List&amp;lt;Hex&amp;lt;ResourceTile&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;This works. It compiles, it runs, life is grand. But IntelliJ flags `as List&amp;lt;Hex&amp;lt;T&amp;gt;&amp;gt;` as being an unchecked cast. IntelliJ normally knows its business; so, when it gives me a warning I try to make it happy. &lt;/p&gt;\n\n&lt;p&gt;Is there a syntax/rewrite of this that will get rid of IntelliJ&amp;#39;s warning message?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ga1kyt", "is_robot_indexable": true, "report_reasons": null, "author": "BestUsernameLeft", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ga1kyt/trouble_with_generics_and_aslist/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/ga1kyt/trouble_with_generics_and_aslist/", "subreddit_subscribers": 30884, "created_utc": 1588129284.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ga1kyt", "before": null}}