{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3wqjwdw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Just because you can, doesn't mean you should.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_is81vi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 486, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 486, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1600064212.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://i.redd.it/70cmh75yozm51.jpg", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 75, "id": "award_ce5f9ce6-49d9-4905-9228-22950e889206", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything's better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "is81vi", "is_robot_indexable": true, "report_reasons": null, "author": "parhelion_io", "discussion_type": null, "num_comments": 71, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/is81vi/just_because_you_can_doesnt_mean_you_should/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/70cmh75yozm51.jpg", "subreddit_subscribers": 125056, "created_utc": 1600035412.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_2yzdcuy0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tutorial: Running Go Code on iOS and Android", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_isk65w", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1600116404.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rogchap.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://rogchap.com/2020/09/14/running-go-code-on-ios-and-android/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "isk65w", "is_robot_indexable": true, "report_reasons": null, "author": "rogchap", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/isk65w/tutorial_running_go_code_on_ios_and_android/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rogchap.com/2020/09/14/running-go-code-on-ios-and-android/", "subreddit_subscribers": 125056, "created_utc": 1600087604.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "[https://www.youtube.com/watch?v=sjd2ePF3CuQ](https://www.youtube.com/watch?v=sjd2ePF3CuQ)\n\nI'm  a beginner in Go. I dont have much experience with OOPs so i' having difficulty understanding interfaces.\n\nI dont know why but I seriously dont get interfaces. I dont know how to use them correctly. Interfaces really confuses me( also dependency injection using interfaces)\n\n&amp;#x200B;\n\nIn the video he explains how to create a struct which implements the interface and now you can access different methods.\n\n&amp;#x200B;\n\nBut I could have simple a method and accessed it with that struct instead.\n\nCan anybody please explain in not so beginner friendly way?", "author_fullname": "t2_64qz98vz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Can anybody explain me the following video?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_isjttb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600114983.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=sjd2ePF3CuQ\"&gt;https://www.youtube.com/watch?v=sjd2ePF3CuQ&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m  a beginner in Go. I dont have much experience with OOPs so i&amp;#39; having difficulty understanding interfaces.&lt;/p&gt;\n\n&lt;p&gt;I dont know why but I seriously dont get interfaces. I dont know how to use them correctly. Interfaces really confuses me( also dependency injection using interfaces)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;In the video he explains how to create a struct which implements the interface and now you can access different methods.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;But I could have simple a method and accessed it with that struct instead.&lt;/p&gt;\n\n&lt;p&gt;Can anybody please explain in not so beginner friendly way?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "isjttb", "is_robot_indexable": true, "report_reasons": null, "author": "0b_1000101", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/isjttb/can_anybody_explain_me_the_following_video/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/isjttb/can_anybody_explain_me_the_following_video/", "subreddit_subscribers": 125056, "created_utc": 1600086183.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I want to introduce BitMaelum ([https://github.com/bitmaelum](https://github.com/bitmaelum)), which is a secure end-to-end email infrastructure. It's a work-in-progress and far from ready for even a beta release, and hopefully I will find some collaborators in both code and architecture.\n\nIt tries to combat (many of) the pain-points found in the current email system: spam, privacy, mail/account ownership, etc. I don't expect this project ever to be implemented. Still, I find it's a good exercise to come up with solutions without worrying about the existing email infrastructure. It also is a lovely way to get introduced into a more complex go architecture and code.\n\nIt's entirely written in Go and consists of a mail-server (bm-server), a client (bm-client), and configuration tools. It also contains a \"key-server\" which is a (centralized) system that holds information about addresses and their destinations (a bit like a DNS system), which I'm trying to figure out how to decentralize this (I've looked in detail to blockchains, DHT (ipfs) and others, but it's a challenging problem).\n\nThere is no central command (except for the key-server for now), so you are free to use any address you like and even set up organizations where you can add other users. All emails, including meta-data like headers, are fully encrypted securely (as best to my knowledge, so I guess there are many glitches).\n\nThis project is my first large project in Go, so I am still struggling a bit with all the Go idioms, and I like to have input from contributors in not only code but also on sharing ideas on how to solve some of the problems I still haven't solved.\n\nPlease take a look at [https://github.com/bitmaelum](https://github.com/bitmaelum), and I look forward to collaboration with others!", "author_fullname": "t2_4nn8tk4g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "BitMealum: an e2e encrypted email alternative written in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_isg3a7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600096113.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to introduce BitMaelum (&lt;a href=\"https://github.com/bitmaelum\"&gt;https://github.com/bitmaelum&lt;/a&gt;), which is a secure end-to-end email infrastructure. It&amp;#39;s a work-in-progress and far from ready for even a beta release, and hopefully I will find some collaborators in both code and architecture.&lt;/p&gt;\n\n&lt;p&gt;It tries to combat (many of) the pain-points found in the current email system: spam, privacy, mail/account ownership, etc. I don&amp;#39;t expect this project ever to be implemented. Still, I find it&amp;#39;s a good exercise to come up with solutions without worrying about the existing email infrastructure. It also is a lovely way to get introduced into a more complex go architecture and code.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s entirely written in Go and consists of a mail-server (bm-server), a client (bm-client), and configuration tools. It also contains a &amp;quot;key-server&amp;quot; which is a (centralized) system that holds information about addresses and their destinations (a bit like a DNS system), which I&amp;#39;m trying to figure out how to decentralize this (I&amp;#39;ve looked in detail to blockchains, DHT (ipfs) and others, but it&amp;#39;s a challenging problem).&lt;/p&gt;\n\n&lt;p&gt;There is no central command (except for the key-server for now), so you are free to use any address you like and even set up organizations where you can add other users. All emails, including meta-data like headers, are fully encrypted securely (as best to my knowledge, so I guess there are many glitches).&lt;/p&gt;\n\n&lt;p&gt;This project is my first large project in Go, so I am still struggling a bit with all the Go idioms, and I like to have input from contributors in not only code but also on sharing ideas on how to solve some of the problems I still haven&amp;#39;t solved.&lt;/p&gt;\n\n&lt;p&gt;Please take a look at &lt;a href=\"https://github.com/bitmaelum\"&gt;https://github.com/bitmaelum&lt;/a&gt;, and I look forward to collaboration with others!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "isg3a7", "is_robot_indexable": true, "report_reasons": null, "author": "jaytaph2", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/isg3a7/bitmealum_an_e2e_encrypted_email_alternative/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/isg3a7/bitmealum_an_e2e_encrypted_email_alternative/", "subreddit_subscribers": 125056, "created_utc": 1600067313.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi\n\nWhat is the best way to create folder structure of a REST service?\n\nThank you.", "author_fullname": "t2_2kem7etj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best way to create folder structure of REST service project", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_isfv2o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600095027.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi&lt;/p&gt;\n\n&lt;p&gt;What is the best way to create folder structure of a REST service?&lt;/p&gt;\n\n&lt;p&gt;Thank you.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "isfv2o", "is_robot_indexable": true, "report_reasons": null, "author": "amircodes", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/isfv2o/best_way_to_create_folder_structure_of_rest/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/isfv2o/best_way_to_create_folder_structure_of_rest/", "subreddit_subscribers": 125056, "created_utc": 1600066227.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3cl7e290", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using Dependency Inversion in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_isk490", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1600116188.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@cobbinma/using-dependency-inversion-in-go-31d8bf9b3760?source=friends_link&amp;sk=ea07f366baea72eb992f06391301a317", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "isk490", "is_robot_indexable": true, "report_reasons": null, "author": "EvoNext", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/isk490/using_dependency_inversion_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@cobbinma/using-dependency-inversion-in-go-31d8bf9b3760?source=friends_link&amp;sk=ea07f366baea72eb992f06391301a317", "subreddit_subscribers": 125056, "created_utc": 1600087388.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_4h3qs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go-Diagrams: Create architecture diagrams with Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_is8eo9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1600065460.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/blushft/go-diagrams", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "is8eo9", "is_robot_indexable": true, "report_reasons": null, "author": "tn_tobias", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/is8eo9/godiagrams_create_architecture_diagrams_with_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/blushft/go-diagrams", "subreddit_subscribers": 125056, "created_utc": 1600036660.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "[https://github.com/lucasepe/modgv](https://github.com/lucasepe/modgv)\n\n&amp;#x200B;\n\nGraphically view the dependencies of your latest project.\n\nhttps://preview.redd.it/9t2h8xumnvm51.jpg?width=1280&amp;format=pjpg&amp;auto=webp&amp;s=fa3b692eb4ddfb50f5a3192f7f820f68acc36a05", "author_fullname": "t2_mikzy6l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Converts 'go mod graph' output into Graphviz's DOT language", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"9t2h8xumnvm51": {"status": "valid", "e": "Image", "m": "image/jpg", "p": [{"y": 54, "x": 108, "u": "https://preview.redd.it/9t2h8xumnvm51.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f8522e65e7d226c242f6119a3970a4e2f3cb6934"}, {"y": 108, "x": 216, "u": "https://preview.redd.it/9t2h8xumnvm51.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=878c6f1cd0c4175b1ee89f25f25f9a98095f9bce"}, {"y": 160, "x": 320, "u": "https://preview.redd.it/9t2h8xumnvm51.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9d9f3ce99195db4cf0ac3fc30920eb65bd69f0cf"}, {"y": 320, "x": 640, "u": "https://preview.redd.it/9t2h8xumnvm51.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e6ca040ebf80e744d74318668707c2eb58c885e6"}, {"y": 480, "x": 960, "u": "https://preview.redd.it/9t2h8xumnvm51.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=102a79f4ba00b318c625745f2ee5eb0573f6e203"}, {"y": 540, "x": 1080, "u": "https://preview.redd.it/9t2h8xumnvm51.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=14309b9fc34e309b9d4cb068ba3796375b4d6099"}], "s": {"y": 640, "x": 1280, "u": "https://preview.redd.it/9t2h8xumnvm51.jpg?width=1280&amp;format=pjpg&amp;auto=webp&amp;s=fa3b692eb4ddfb50f5a3192f7f820f68acc36a05"}, "id": "9t2h8xumnvm51"}}, "name": "t3_irupxd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 136, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 136, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600015324.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/lucasepe/modgv\"&gt;https://github.com/lucasepe/modgv&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Graphically view the dependencies of your latest project.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/9t2h8xumnvm51.jpg?width=1280&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=fa3b692eb4ddfb50f5a3192f7f820f68acc36a05\"&gt;https://preview.redd.it/9t2h8xumnvm51.jpg?width=1280&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=fa3b692eb4ddfb50f5a3192f7f820f68acc36a05&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "irupxd", "is_robot_indexable": true, "report_reasons": null, "author": "lucasepe", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/irupxd/converts_go_mod_graph_output_into_graphvizs_dot/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/irupxd/converts_go_mod_graph_output_into_graphvizs_dot/", "subreddit_subscribers": 125056, "created_utc": 1599986524.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_ggysa0m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Working with Slices in Go (Golang) - Understanding How append, copy and Slice Expressions Work", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_is42mo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1600051643.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tugberkugurlu.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "http://www.tugberkugurlu.com/archive/working-with-slices-in-go-golang-understanding-how-append-copy-and-slicing-syntax-work", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "is42mo", "is_robot_indexable": true, "report_reasons": null, "author": "tugberkug", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/is42mo/working_with_slices_in_go_golang_understanding/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://www.tugberkugurlu.com/archive/working-with-slices-in-go-golang-understanding-how-append-copy-and-slicing-syntax-work", "subreddit_subscribers": 125056, "created_utc": 1600022843.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Best way to run any Jenkins Job/Build from the Command Line/Terminal without the Web interface: [https://github.com/gocruncher/jbuilder](https://github.com/gocruncher/jbuilder)", "author_fullname": "t2_6ypr7nnx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Try to run Jenkins job from the command line", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_isi5l4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1600085853.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600107050.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Best way to run any Jenkins Job/Build from the Command Line/Terminal without the Web interface: &lt;a href=\"https://github.com/gocruncher/jbuilder\"&gt;https://github.com/gocruncher/jbuilder&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "isi5l4", "is_robot_indexable": true, "report_reasons": null, "author": "Hot_Routine_72", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/isi5l4/try_to_run_jenkins_job_from_the_command_line/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/isi5l4/try_to_run_jenkins_job_from_the_command_line/", "subreddit_subscribers": 125056, "created_utc": 1600078250.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_isi5l4", "before": null}}