{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_9ugds", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "RuboCop 1.0", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jfaxse", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 3, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 2}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603308057.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "metaredux.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://metaredux.com/posts/2020/10/21/rubocop-1-0.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 300, "id": "award_28e8196b-d4e9-45bc-b612-cd4c7d3ed4b3", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=16&amp;height=16&amp;auto=webp&amp;s=c1400eb6ea235d0c96c3aa6e271c71d7f339cbd4", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=32&amp;height=32&amp;auto=webp&amp;s=77ad345b2f9b062140e028764394594326771a17", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=48&amp;height=48&amp;auto=webp&amp;s=5b5211166e4b260311ad9f3ea31d3b815110769c", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=64&amp;height=64&amp;auto=webp&amp;s=bf3a2c642ad50547087d770c65c29777970d3af3", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=128&amp;height=128&amp;auto=webp&amp;s=eae06d6a70c62c78dc66cb14f2a84651cb822cc4", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "When an upvote just isn't enough, smash the Rocket Like.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Rocket Like", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=16&amp;height=16&amp;auto=webp&amp;s=c1400eb6ea235d0c96c3aa6e271c71d7f339cbd4", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=32&amp;height=32&amp;auto=webp&amp;s=77ad345b2f9b062140e028764394594326771a17", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=48&amp;height=48&amp;auto=webp&amp;s=5b5211166e4b260311ad9f3ea31d3b815110769c", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=64&amp;height=64&amp;auto=webp&amp;s=bf3a2c642ad50547087d770c65c29777970d3af3", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png?width=128&amp;height=128&amp;auto=webp&amp;s=eae06d6a70c62c78dc66cb14f2a84651cb822cc4", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/94pn64yuas941_RocketLike.png"}, {"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 2, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfaxse", "is_robot_indexable": true, "report_reasons": null, "author": "bozhidarb", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jfaxse/rubocop_10/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://metaredux.com/posts/2020/10/21/rubocop-1-0.html", "subreddit_subscribers": 67943, "created_utc": 1603279257.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_qqcu9sy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Explaining magic behind popular Ruby code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_jekiry", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 86, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 86, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/ZuiZa9fksxgZaHxb1aqSwyh8m9U8j0XK-nCOE7VEWFk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1603206606.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "longliveruby.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://longliveruby.com/articles/the-magic-behind-ruby-code", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?auto=webp&amp;s=967d4bb1257ee8edc83901ea84d3fea14affa452", "width": 1200, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=07059b93c1a8da1b7ceb0e47954e195c53a64649", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f21c50f4b1048e3aad8d431507b5f2d1baea477f", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=88c52c186c28934b5a96ac6953d854b8d497482f", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=64bd635e35cababa8095e35067560ee66ab16d09", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5ef77a7b3e8f0aaa5775054ecd6b9060ed790bf0", "width": 960, "height": 501}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=338c1639e0903225c91a882253d37af4f80e2dff", "width": 1080, "height": 564}], "variants": {}, "id": "x7SrNpNrr1N-CaFUgVFBhmDBniTs1eJixkVzU5M7h_w"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jekiry", "is_robot_indexable": true, "report_reasons": null, "author": "pdabrowski", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jekiry/explaining_magic_behind_popular_ruby_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://longliveruby.com/articles/the-magic-behind-ruby-code", "subreddit_subscribers": 67943, "created_utc": 1603177806.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'm building a library/gem in Ruby that calls some functions from a native **custom** library written in C++. A C++ library, in a pre-compiled form, is available for Windows, Linux and MacOS, and, of course, they're 3 different files.\n\n&amp;#x200B;\n\n**Questions**:\n\nhow should I go about shipping my gem with with 1 or all 3 at once C++ libraries? \n\nShould I put them into a subdirectory of my gem? Then, how would I allow a user to download a gem with a C++ library that's been pre-compiled for his OS rather than including all 3 at once?\n\n&amp;#x200B;\n\nOr require a user to download it on its own? Then how would get a path to that library, how would a user pass it into my gem?", "author_fullname": "t2_7xy83mm0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to ship a ruby gem/library with an external custom native library as a dependency?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jeou5f", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603227044.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m building a library/gem in Ruby that calls some functions from a native &lt;strong&gt;custom&lt;/strong&gt; library written in C++. A C++ library, in a pre-compiled form, is available for Windows, Linux and MacOS, and, of course, they&amp;#39;re 3 different files.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Questions&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;how should I go about shipping my gem with with 1 or all 3 at once C++ libraries? &lt;/p&gt;\n\n&lt;p&gt;Should I put them into a subdirectory of my gem? Then, how would I allow a user to download a gem with a C++ library that&amp;#39;s been pre-compiled for his OS rather than including all 3 at once?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Or require a user to download it on its own? Then how would get a path to that library, how would a user pass it into my gem?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jeou5f", "is_robot_indexable": true, "report_reasons": null, "author": "zigra0018", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jeou5f/how_to_ship_a_ruby_gemlibrary_with_an_external/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jeou5f/how_to_ship_a_ruby_gemlibrary_with_an_external/", "subreddit_subscribers": 67943, "created_utc": 1603198244.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I have a third-party library, in which there's a function that returns \\`void\\` directly, but has a block that's used as a callback:\n\n        def my_get_data1(arg1)\n          Thread.new do\n            ExternalLib.get_data_by_block(\"arg1\") do |a, b, c|\n              # [ result of computation and some other data comes here ]\n            end\n          end\n        end\n\n&amp;#x200B;\n\nAnd there's the same kind of function that accepts a \\`proc\\` instead, and they both work identically:\n\n&amp;#x200B;\n\n        MyProc = Proc.new do |a, b, c|\n            # [ result of computation and some other data comes here ]\n        end\n    \n        def my_get_data2(arg1)\n          Thread.new do\n            ExternalLib.get_data_by_proc(arg1, MyProc)\n          end\n        end\n\n&amp;#x200B;\n\n**my\\_get\\_data1()** and **my\\_get\\_data2()** serve the purpose of an interface or wrapper of \\`ExternalLib.get\\_data()\\` for the end user, this is what I need.\n\n&amp;#x200B;\n\nQ: How can I actually allow a user to get access to the result of the computation -- to what's inside of the \\`block\\` or \\`proc\\`?\n\n&amp;#x200B;\n\nI want it to be something like this:\n\n        p1 = Proc.new do |a|\n          # [ user will access result here, via a]\n        end\n    \n        my_get_data1(arg1, p1)\n    \n    \n        my_get_data2(arg1) do do |a|\n          # [ user will access result here, via a]\n        end\n\n&amp;#x200B;\n\nP.S.\n\nI've found out that that I have to use **Thread.new** because otherwise, it'll hang when I run it as \"ruby my\\_script1.rb\", probably due to GIL. In \\`irb\\` it won't, though.", "author_fullname": "t2_854qnyc0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to create a wrapper for a function that returns a result in a callback (block or proc)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jel38y", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603209545.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a third-party library, in which there&amp;#39;s a function that returns `void` directly, but has a block that&amp;#39;s used as a callback:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    def my_get_data1(arg1)\n      Thread.new do\n        ExternalLib.get_data_by_block(&amp;quot;arg1&amp;quot;) do |a, b, c|\n          # [ result of computation and some other data comes here ]\n        end\n      end\n    end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;And there&amp;#39;s the same kind of function that accepts a `proc` instead, and they both work identically:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    MyProc = Proc.new do |a, b, c|\n        # [ result of computation and some other data comes here ]\n    end\n\n    def my_get_data2(arg1)\n      Thread.new do\n        ExternalLib.get_data_by_proc(arg1, MyProc)\n      end\n    end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;my_get_data1()&lt;/strong&gt; and &lt;strong&gt;my_get_data2()&lt;/strong&gt; serve the purpose of an interface or wrapper of `ExternalLib.get_data()` for the end user, this is what I need.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Q: How can I actually allow a user to get access to the result of the computation -- to what&amp;#39;s inside of the `block` or `proc`?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I want it to be something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    p1 = Proc.new do |a|\n      # [ user will access result here, via a]\n    end\n\n    my_get_data1(arg1, p1)\n\n\n    my_get_data2(arg1) do do |a|\n      # [ user will access result here, via a]\n    end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;P.S.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve found out that that I have to use &lt;strong&gt;Thread.new&lt;/strong&gt; because otherwise, it&amp;#39;ll hang when I run it as &amp;quot;ruby my_script1.rb&amp;quot;, probably due to GIL. In `irb` it won&amp;#39;t, though.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jel38y", "is_robot_indexable": true, "report_reasons": null, "author": "kordinashiku", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jel38y/how_to_create_a_wrapper_for_a_function_that/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jel38y/how_to_create_a_wrapper_for_a_function_that/", "subreddit_subscribers": 67943, "created_utc": 1603180745.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi everyone, hoping to get some insights into what you think of the two languages that seem to be popular with Rubyists.\n\nNo judgement just interested to see if anyone has experience with them and what they think about them.\n\nFor me I really like Crystal but is in a very new state and not even 1.0 so is a long time away from will pick up any major steam in terms of libs (complete personal opinion however!). \n\nElixir on the other hand goes into the functional world which we are all told is better but I still have issues not explaining concepts in terms of objects and state not being held closely to those objects. I love [Brian Goetz's talk on OOP vs FP](https://www.youtube.com/watch?v=HSk5fdKbd3o) where he thinks we should be object orientated on the outside and functional within.\n\nWhat do you guys think? Anyone have experience with them?", "author_fullname": "t2_6dc49", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What are your guys thoughts on Crystal and Elixir?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_je90yt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1603165334.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone, hoping to get some insights into what you think of the two languages that seem to be popular with Rubyists.&lt;/p&gt;\n\n&lt;p&gt;No judgement just interested to see if anyone has experience with them and what they think about them.&lt;/p&gt;\n\n&lt;p&gt;For me I really like Crystal but is in a very new state and not even 1.0 so is a long time away from will pick up any major steam in terms of libs (complete personal opinion however!). &lt;/p&gt;\n\n&lt;p&gt;Elixir on the other hand goes into the functional world which we are all told is better but I still have issues not explaining concepts in terms of objects and state not being held closely to those objects. I love &lt;a href=\"https://www.youtube.com/watch?v=HSk5fdKbd3o\"&gt;Brian Goetz&amp;#39;s talk on OOP vs FP&lt;/a&gt; where he thinks we should be object orientated on the outside and functional within.&lt;/p&gt;\n\n&lt;p&gt;What do you guys think? Anyone have experience with them?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BLKyfpEoMeKKdaA0I45ZlyIE07TUjXbRf5ROvTIIBFo.jpg?auto=webp&amp;s=5ff519d5b6b3c3313ca6922fd23105eba1bced2e", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/BLKyfpEoMeKKdaA0I45ZlyIE07TUjXbRf5ROvTIIBFo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a7d771e495c85cd9bd3246eeb5e2b47fd98e1db0", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/BLKyfpEoMeKKdaA0I45ZlyIE07TUjXbRf5ROvTIIBFo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=efd1783067e05c8bf54e69dda5790d6f63e0fb7e", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/BLKyfpEoMeKKdaA0I45ZlyIE07TUjXbRf5ROvTIIBFo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6d079214230e730bfa87ddf544927433164ee7e6", "width": 320, "height": 240}], "variants": {}, "id": "z5Ef09L2aYtkbEanXXF2Ph7edN7Db4xnHWjgpORh3Eo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je90yt", "is_robot_indexable": true, "report_reasons": null, "author": "Carlislee", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/je90yt/what_are_your_guys_thoughts_on_crystal_and_elixir/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/je90yt/what_are_your_guys_thoughts_on_crystal_and_elixir/", "subreddit_subscribers": 67943, "created_utc": 1603136534.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "A simplied version of the code I have is this:\n\n        def my_get_data1(arg1)\n          Thread.new do\n            ExternalLib.get_data_by_block(\"arg1\") do |a, b, c|\n              # [ result of computation and some other data comes here ]\n            end\n          end\n        end\n    \n\nI behaves differently in the terminal and in Irb. When run as a ruby script in the terminal - \\`ruby ./script1.rb\\` it hangs. When I copy the code of \\`script1.rb\\` into Irb and thus run it, it doesn't hang and returns a result.\n\n&amp;#x200B;\n\nI've heard that ruby code can behave different in such a case.\n\n&amp;#x200B;\n\nWhat can be an issue or cause?", "author_fullname": "t2_854qnyc0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby code hangs when run in the terminal via \"ruby script.rb\", whereas in Irb it doesn't hang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jenlag", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603221973.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;A simplied version of the code I have is this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    def my_get_data1(arg1)\n      Thread.new do\n        ExternalLib.get_data_by_block(&amp;quot;arg1&amp;quot;) do |a, b, c|\n          # [ result of computation and some other data comes here ]\n        end\n      end\n    end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I behaves differently in the terminal and in Irb. When run as a ruby script in the terminal - `ruby ./script1.rb` it hangs. When I copy the code of `script1.rb` into Irb and thus run it, it doesn&amp;#39;t hang and returns a result.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve heard that ruby code can behave different in such a case.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;What can be an issue or cause?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jenlag", "is_robot_indexable": true, "report_reasons": null, "author": "kordinashiku", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jenlag/ruby_code_hangs_when_run_in_the_terminal_via_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jenlag/ruby_code_hangs_when_run_in_the_terminal_via_ruby/", "subreddit_subscribers": 67943, "created_utc": 1603193173.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_301j4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Better Git diff output for Ruby, Python, Elixir, Go and more", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 72, "top_awarded_type": null, "hide_score": false, "name": "t3_je09u7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 65, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 65, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/YzTBFnIRM30tQWXXmVDpOw33eZTv6yIjvr8lkglN_6E.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1603137525.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tekin.co.uk", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://tekin.co.uk/2020/10/better-git-diff-output-for-ruby-python-elixir-and-more?src=twitter", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/mPS2Za16p4zuu0NdKKdGhSOhGZ6Lrcqz1Ws2D6v9amw.jpg?auto=webp&amp;s=09ad7e182374702f5c9d2f0c6a050d59b1a65bc5", "width": 1280, "height": 666}, "resolutions": [{"url": "https://external-preview.redd.it/mPS2Za16p4zuu0NdKKdGhSOhGZ6Lrcqz1Ws2D6v9amw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ae715f564cd84387b4a43f8362805aa7e327f4d1", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/mPS2Za16p4zuu0NdKKdGhSOhGZ6Lrcqz1Ws2D6v9amw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8492e4214071c0ece0864195ef810aac2c984d94", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/mPS2Za16p4zuu0NdKKdGhSOhGZ6Lrcqz1Ws2D6v9amw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=66e10c17384c3299970fc40aaa4f3bb095b3d913", "width": 320, "height": 166}, {"url": "https://external-preview.redd.it/mPS2Za16p4zuu0NdKKdGhSOhGZ6Lrcqz1Ws2D6v9amw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4ebb9fbdc4fd332d7097feaf8381fe5cdd6dc7ad", "width": 640, "height": 333}, {"url": "https://external-preview.redd.it/mPS2Za16p4zuu0NdKKdGhSOhGZ6Lrcqz1Ws2D6v9amw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0def28d8fdbcb37158811cc49619d987e41bb331", "width": 960, "height": 499}, {"url": "https://external-preview.redd.it/mPS2Za16p4zuu0NdKKdGhSOhGZ6Lrcqz1Ws2D6v9amw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=b4464dae349c17556c2e91a090ce14d6aaa536c4", "width": 1080, "height": 561}], "variants": {}, "id": "ztsgiDgRxh3ZQTsX7Jc52Sw9TsRKyScwYA1TSpaZdkk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je09u7", "is_robot_indexable": true, "report_reasons": null, "author": "philnash", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/je09u7/better_git_diff_output_for_ruby_python_elixir_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://tekin.co.uk/2020/10/better-git-diff-output-for-ruby-python-elixir-and-more?src=twitter", "subreddit_subscribers": 67943, "created_utc": 1603108725.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_161quf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Estimate The Size of a Rails Application", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_je718a", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/YbgnY2V6I10D07cHqUfworNsrjfQe3OeAKbOWAV8cqw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1603159824.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "fastruby.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.fastruby.io/blog/rails/code-quality/how-we-estimate-rails-application-size.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/gEIozNhMscTjX7iPRkNeBpMfi4rcLX1WLK_zB5Vqr_M.jpg?auto=webp&amp;s=0c8e4eaf2101ebeb36cc770209f4ecb8024f09cb", "width": 352, "height": 352}, "resolutions": [{"url": "https://external-preview.redd.it/gEIozNhMscTjX7iPRkNeBpMfi4rcLX1WLK_zB5Vqr_M.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fd2096bf1eda8165e2e87f8864f1f32a3fc73ba3", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/gEIozNhMscTjX7iPRkNeBpMfi4rcLX1WLK_zB5Vqr_M.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e7ebd155e8ee53e8a7b1d3fbbd08b9ecf2d3ae9d", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/gEIozNhMscTjX7iPRkNeBpMfi4rcLX1WLK_zB5Vqr_M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2746d4e54b407efc234390565e43fca2198cce1b", "width": 320, "height": 320}], "variants": {}, "id": "lzTErQRucEL_Kw_l3iSTzlaE-0QixGLRfksl8-fhOl8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je718a", "is_robot_indexable": true, "report_reasons": null, "author": "lubc32", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/je718a/how_to_estimate_the_size_of_a_rails_application/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.fastruby.io/blog/rails/code-quality/how-we-estimate-rails-application-size.html", "subreddit_subscribers": 67943, "created_utc": 1603131024.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi,\n\nLooking for someone who is an expert in Ruby who would like to be my tutor/mentor. Currently working a cli/api project, and reading \"Practical Object-Oriented Design\" by Sandi Metz. In need of someone to talk to about everything and get some help. Thanks :)", "author_fullname": "t2_7x9i9yet", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "tutor/mentor for ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jedvcc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603179927.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;Looking for someone who is an expert in Ruby who would like to be my tutor/mentor. Currently working a cli/api project, and reading &amp;quot;Practical Object-Oriented Design&amp;quot; by Sandi Metz. In need of someone to talk to about everything and get some help. Thanks :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jedvcc", "is_robot_indexable": true, "report_reasons": null, "author": "FirstForkMilkyWay", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jedvcc/tutormentor_for_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jedvcc/tutormentor_for_ruby/", "subreddit_subscribers": 67943, "created_utc": 1603151127.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello Reddit crowd!\n\nI couldn't find explanation about this, so I try my luck here!\n\nI'm trying the `openapi-generator` (4.3.1). It generates models from the API description file. \n\nFor instance, it generates this:\n\n    module OpenapiClient\n      class Thing\n        attr_accessor :id\n        attr_accessor :description\n    \n        # Attribute mapping from ruby-style variable name to JSON key.\n        def self.attribute_map\n          {\n            :'id' =&gt; :'id',\n            :'description' =&gt; :'description'\n          }\n        end\n    \n        # Attribute type mapping.\n        def self.openapi_types\n          {\n            :'id' =&gt; :'Integer',\n            :'description' =&gt; :'String'\n          }\n        end\n    \n        # ...\n      end\n    end\n\nThis behaves as expected:\n\n    # All this is expected:\n    t = OpenapiClient::Thing.new(id: 1)\n    t.valid?\n    =&gt; false\n    t.list_invalid_properties\n    =&gt; [\"invalid value for \\\"description\\\", description cannot be nil.\"]\n\nBut **this does not behave as expected**:\n\n    t = OpenapiClient::Thing.new(id: \"abc\", description: 3)\n    t.valid?\n    =&gt; true\n\n`id` should be int and `description` a string, so it fails to check the type. Is there anything I'm doing wrong?\n\n\ud83d\ude4f", "author_fullname": "t2_k83kh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "OpenAPI generator in Ruby, client code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jebsyw", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1603191241.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603173368.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello Reddit crowd!&lt;/p&gt;\n\n&lt;p&gt;I couldn&amp;#39;t find explanation about this, so I try my luck here!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying the &lt;code&gt;openapi-generator&lt;/code&gt; (4.3.1). It generates models from the API description file. &lt;/p&gt;\n\n&lt;p&gt;For instance, it generates this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module OpenapiClient\n  class Thing\n    attr_accessor :id\n    attr_accessor :description\n\n    # Attribute mapping from ruby-style variable name to JSON key.\n    def self.attribute_map\n      {\n        :&amp;#39;id&amp;#39; =&amp;gt; :&amp;#39;id&amp;#39;,\n        :&amp;#39;description&amp;#39; =&amp;gt; :&amp;#39;description&amp;#39;\n      }\n    end\n\n    # Attribute type mapping.\n    def self.openapi_types\n      {\n        :&amp;#39;id&amp;#39; =&amp;gt; :&amp;#39;Integer&amp;#39;,\n        :&amp;#39;description&amp;#39; =&amp;gt; :&amp;#39;String&amp;#39;\n      }\n    end\n\n    # ...\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This behaves as expected:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# All this is expected:\nt = OpenapiClient::Thing.new(id: 1)\nt.valid?\n=&amp;gt; false\nt.list_invalid_properties\n=&amp;gt; [&amp;quot;invalid value for \\&amp;quot;description\\&amp;quot;, description cannot be nil.&amp;quot;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But &lt;strong&gt;this does not behave as expected&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;t = OpenapiClient::Thing.new(id: &amp;quot;abc&amp;quot;, description: 3)\nt.valid?\n=&amp;gt; true\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;id&lt;/code&gt; should be int and &lt;code&gt;description&lt;/code&gt; a string, so it fails to check the type. Is there anything I&amp;#39;m doing wrong?&lt;/p&gt;\n\n&lt;p&gt;\ud83d\ude4f&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jebsyw", "is_robot_indexable": true, "report_reasons": null, "author": "0janvier", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jebsyw/openapi_generator_in_ruby_client_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jebsyw/openapi_generator_in_ruby_client_code/", "subreddit_subscribers": 67943, "created_utc": 1603144568.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jebsyw", "before": null}}