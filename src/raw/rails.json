{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Please use this thread to discuss **cool** but relatively **unknown** gems you've found.\n\nYou **should not** post popular gems such as [those listed in wiki](https://www.reddit.com/r/rails/wiki/index#wiki_popular_gems) that are already well known.\n\nPlease include a **description** and a **link** to the gem's homepage in your comment.", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gimme Gems Thursdays - Found an awesome new gem? Post it here!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jbmadq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602792387.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Please use this thread to discuss &lt;strong&gt;cool&lt;/strong&gt; but relatively &lt;strong&gt;unknown&lt;/strong&gt; gems you&amp;#39;ve found.&lt;/p&gt;\n\n&lt;p&gt;You &lt;strong&gt;should not&lt;/strong&gt; post popular gems such as &lt;a href=\"https://www.reddit.com/r/rails/wiki/index#wiki_popular_gems\"&gt;those listed in wiki&lt;/a&gt; that are already well known.&lt;/p&gt;\n\n&lt;p&gt;Please include a &lt;strong&gt;description&lt;/strong&gt; and a &lt;strong&gt;link&lt;/strong&gt; to the gem&amp;#39;s homepage in your comment.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jbmadq", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jbmadq/gimme_gems_thursdays_found_an_awesome_new_gem/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/jbmadq/gimme_gems_thursdays_found_an_awesome_new_gem/", "subreddit_subscribers": 46337, "created_utc": 1602763587.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "In this thread you can showcase your personal pet project to other redditors.\n\nNeed help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!\n\nA suggested format to get you started:\n\n1. **Name of your project**\n2. **A short description**\n3. **Application stack**\n4. **Link to Live app**\n5. **Link to GitHub**\n6. **You experience level**\n7. **Other information or areas that you would like advice on**\n\n\u00a0\n\n^(Many thanks to Kritnc for getting the ball rolling.)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Personal Projects - Show off your own project and/or ask for advice", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfcv1r", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603315962.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this thread you can showcase your personal pet project to other redditors.&lt;/p&gt;\n\n&lt;p&gt;Need help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!&lt;/p&gt;\n\n&lt;p&gt;A suggested format to get you started:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Name of your project&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;A short description&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Application stack&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to Live app&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to GitHub&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;You experience level&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Other information or areas that you would like advice on&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Many thanks to Kritnc for getting the ball rolling.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfcv1r", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfcv1r/personal_projects_show_off_your_own_project_andor/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/jfcv1r/personal_projects_show_off_your_own_project_andor/", "subreddit_subscribers": 46337, "created_utc": 1603287162.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hi, \n\nI wrote a little guide with 5 ways to fix a kind \"n+1 queries\" problem, that I called the \"latest-comment\".\n\nI called it that way because one example/instance of the problem, is when you want a list of posts with the last comment, but it can also be extrapolated to \"the last review in a list of products\", or \"the cheapest price\", etc..\n\n[https://bhserna.com/5-ways-to-fix-the-latest-comment-n-1-problem.html](https://bhserna.com/5-ways-to-fix-the-latest-comment-n-1-problem.html)\n\nI hope it can be useful for someone :)", "author_fullname": "t2_i08m8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "5 ways to fix the latest-comment n+1 problem", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jgam27", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603435966.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, &lt;/p&gt;\n\n&lt;p&gt;I wrote a little guide with 5 ways to fix a kind &amp;quot;n+1 queries&amp;quot; problem, that I called the &amp;quot;latest-comment&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;I called it that way because one example/instance of the problem, is when you want a list of posts with the last comment, but it can also be extrapolated to &amp;quot;the last review in a list of products&amp;quot;, or &amp;quot;the cheapest price&amp;quot;, etc..&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://bhserna.com/5-ways-to-fix-the-latest-comment-n-1-problem.html\"&gt;https://bhserna.com/5-ways-to-fix-the-latest-comment-n-1-problem.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I hope it can be useful for someone :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jgam27", "is_robot_indexable": true, "report_reasons": null, "author": "bhserna", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jgam27/5_ways_to_fix_the_latestcomment_n1_problem/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jgam27/5_ways_to_fix_the_latestcomment_n1_problem/", "subreddit_subscribers": 46337, "created_utc": 1603407166.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Stimulus deserves to have a big and qualitative ecosystem with plug'n'play controllers like in other modern JS frameworks. \n\nMore info here \ud83d\udc49 [https://guillaumebriday.fr/introducing-stimulus-components](https://guillaumebriday.fr/introducing-stimulus-components)\n\nAll the available controllers are here \ud83d\udc49 [https://github.com/stimulus-components](https://github.com/stimulus-components)\n\nFeel free to open PRs and issues \ud83e\udd73", "author_fullname": "t2_cirse", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introducing Stimulus components with a first class support for Rails", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfvgem", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 66, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 66, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603382238.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Stimulus deserves to have a big and qualitative ecosystem with plug&amp;#39;n&amp;#39;play controllers like in other modern JS frameworks. &lt;/p&gt;\n\n&lt;p&gt;More info here \ud83d\udc49 &lt;a href=\"https://guillaumebriday.fr/introducing-stimulus-components\"&gt;https://guillaumebriday.fr/introducing-stimulus-components&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;All the available controllers are here \ud83d\udc49 &lt;a href=\"https://github.com/stimulus-components\"&gt;https://github.com/stimulus-components&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Feel free to open PRs and issues \ud83e\udd73&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfvgem", "is_robot_indexable": true, "report_reasons": null, "author": "ZiiCEagle", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfvgem/introducing_stimulus_components_with_a_first/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfvgem/introducing_stimulus_components_with_a_first/", "subreddit_subscribers": 46337, "created_utc": 1603353438.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I was looking at [https://github.com/procore/blueprinter](https://github.com/procore/blueprinter) over ActiveModel Serializer but I'm not sure of any best practices when implementing this in a large project. I like the idea of its view and having multiple views in a single file to use for the required API.   \n\n\nI have two questions, \n\n1. Do you have any ideas from your usage of blueprinter for JSON serialization?\n2. Also, do you know of any public repo on GitHub that uses this so I can skim its code to understand how they use it?", "author_fullname": "t2_7m8mv9r7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What serializers do you use in rails API?", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jg2he7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603411529.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was looking at &lt;a href=\"https://github.com/procore/blueprinter\"&gt;https://github.com/procore/blueprinter&lt;/a&gt; over ActiveModel Serializer but I&amp;#39;m not sure of any best practices when implementing this in a large project. I like the idea of its view and having multiple views in a single file to use for the required API.   &lt;/p&gt;\n\n&lt;p&gt;I have two questions, &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Do you have any ideas from your usage of blueprinter for JSON serialization?&lt;/li&gt;\n&lt;li&gt;Also, do you know of any public repo on GitHub that uses this so I can skim its code to understand how they use it?&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jg2he7", "is_robot_indexable": true, "report_reasons": null, "author": "prosperousdoggo", "discussion_type": null, "num_comments": 16, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jg2he7/what_serializers_do_you_use_in_rails_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jg2he7/what_serializers_do_you_use_in_rails_api/", "subreddit_subscribers": 46337, "created_utc": 1603382729.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I am following a tutorial that consumes a google translate API and allows the app to translate from one language to another. Everything is going fine until I try to run the code in the controller. Then I get \"NoMethodError in TranslationsController#index\"\n\n        undefined method `[]' for nil:NilClass\n        Extracted source (around line #37):\n\n\n        languages = api_request('language/translate/v2/languages')\n\n        keys = languages['data']['languages'].map { |l| l['language'].upcase }\n\n        I18nData\n        .languages\n\n\nThis is my controller code:\n\n    class TranslationsController &lt; ApplicationController\n    before_action :set_defaults\n\n    def index\n    end\n\n    def translate\n    end\n\n    private\n\n    def set_defaults\n      @languages = fetch_languages\n    end\n\n    def api_request(path, method: :get, body: nil)\n      params = {\n        headers: {\n          'x-rapidapi-key': 'YOUR_API_KEY',\n          'content-type': 'application/x-www-form-urlencoded'\n        }\n      }\n\n     params[:body] = body if body\n\n      response = Excon.send(method,\n        \"https://google-translate1.p.rapidapi.com/#{path}\",\n        params\n      )\n\n    JSON.parse(response.body)\n    end\n\n    def fetch_languages\n      languages = api_request('language/translate/v2/languages')\n\n     keys = languages['data']['languages'].map { |l| l['language'].upcase }\n\n      I18nData\n        .languages\n        .slice(*keys)\n        .each_with_object([]) do |(iso, name), memo|\n          memo &lt;&lt; [name, iso]\n        end\n      end\n    end\n\n\n\n\n\nI don't know what I'm doing wrong.", "author_fullname": "t2_84h260cr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "No method error", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jggb6t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1603429829.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603456908.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am following a tutorial that consumes a google translate API and allows the app to translate from one language to another. Everything is going fine until I try to run the code in the controller. Then I get &amp;quot;NoMethodError in TranslationsController#index&amp;quot;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    undefined method `[]&amp;#39; for nil:NilClass\n    Extracted source (around line #37):\n\n\n    languages = api_request(&amp;#39;language/translate/v2/languages&amp;#39;)\n\n    keys = languages[&amp;#39;data&amp;#39;][&amp;#39;languages&amp;#39;].map { |l| l[&amp;#39;language&amp;#39;].upcase }\n\n    I18nData\n    .languages\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is my controller code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class TranslationsController &amp;lt; ApplicationController\nbefore_action :set_defaults\n\ndef index\nend\n\ndef translate\nend\n\nprivate\n\ndef set_defaults\n  @languages = fetch_languages\nend\n\ndef api_request(path, method: :get, body: nil)\n  params = {\n    headers: {\n      &amp;#39;x-rapidapi-key&amp;#39;: &amp;#39;YOUR_API_KEY&amp;#39;,\n      &amp;#39;content-type&amp;#39;: &amp;#39;application/x-www-form-urlencoded&amp;#39;\n    }\n  }\n\n params[:body] = body if body\n\n  response = Excon.send(method,\n    &amp;quot;https://google-translate1.p.rapidapi.com/#{path}&amp;quot;,\n    params\n  )\n\nJSON.parse(response.body)\nend\n\ndef fetch_languages\n  languages = api_request(&amp;#39;language/translate/v2/languages&amp;#39;)\n\n keys = languages[&amp;#39;data&amp;#39;][&amp;#39;languages&amp;#39;].map { |l| l[&amp;#39;language&amp;#39;].upcase }\n\n  I18nData\n    .languages\n    .slice(*keys)\n    .each_with_object([]) do |(iso, name), memo|\n      memo &amp;lt;&amp;lt; [name, iso]\n    end\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I don&amp;#39;t know what I&amp;#39;m doing wrong.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jggb6t", "is_robot_indexable": true, "report_reasons": null, "author": "BoyFromASmallTown", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jggb6t/no_method_error/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jggb6t/no_method_error/", "subreddit_subscribers": 46337, "created_utc": 1603428108.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "For example if you use dry-rb, do you still use Active Record validations ? I try to find the way to validates models elegantly enough, without over-engineer everything. Thanks for your thoughts !", "author_fullname": "t2_14z3on", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you validate your model ? Simple Active Record validation, or dry-rb, or equivalent ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jg5gx0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603420378.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For example if you use dry-rb, do you still use Active Record validations ? I try to find the way to validates models elegantly enough, without over-engineer everything. Thanks for your thoughts !&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jg5gx0", "is_robot_indexable": true, "report_reasons": null, "author": "bdavidxyz", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jg5gx0/how_do_you_validate_your_model_simple_active/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jg5gx0/how_do_you_validate_your_model_simple_active/", "subreddit_subscribers": 46337, "created_utc": 1603391578.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I am working on a rails engine. I have no access to Devise or its helper methods since those are in the host application. We also don't have a user model so we have to mock the model\n\n&amp;#x200B;\n\nI have a controller defined as\n\n&amp;#x200B;\n\n\\`\\`\\`\n\n    require_dependency \"sample/application_controller\"\n    \n    module Sample\n     class ExampleController &lt; ApplicationController\n      def list_estates\n        if current_user.has_access_to?(:communities)\n           u/estates = Estate.all\n        end\n      end\n     end\n    end\n\n\\`\\`\\`\n\n&amp;#x200B;\n\nI would like to test that the method actually performs xyz if current\\_user has access to communities.\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n\\`\\`\\`\n\n    require 'rails_helper'\n    module PremierSaAgreementSigning\n    class User\n    \n    \tattr\\_reader :email, :password\n    \n    \tdef initialize(email, password)\n    \n    \t\tu/email = email\n    \n    \t\tu/password = password\n    \n    \tend\n    \n    end\n\n&amp;#x200B;\n\n    describe ExampleController, type: :request do\n      context 'user is signed in' do\n        let(:user) { [User.new](https://User.new)('test@example.com', 'password') }\n        let(:estate) { create(:estate) }\n    \n         before do\n            ActionView::Base.any_instance.stub(:current_user) { user }\n         end\n    \n    \n         it 'returns a list of estates' do\n            get \"/sample/example/list_estates\"\n            expect(assigns(:estates)).to include(estate)\n         end\n       end\n    end\n\n\\`\\`\\`\n\n&amp;#x200B;\n\nSince I have no access to devise or a user model.\n\nHow do I get \\`current\\_user\\` instance on the \\`ExampleController\\` to be equal to the user I have created here. Then how do I get the now new current\\_user to mock the \\`has\\_access\\_to?\\` method which is also not defined in this engine.\n\n&amp;#x200B;\n\nMy method above returns\n\n    `ActionView::Base does not implement #current_user`\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nPlease note that I do not need to create or expose any session/login logic here as that is handled on the host application and not required on the engine.\n\n    I just need to mock the `current_user` object and run another fake method..`has_access_to?` on this object\n\nHow can I do this. I am a beginner and this has been quite challenging", "author_fullname": "t2_3kor3c0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rspec stub current user on a request spec for a rails engine with no access to Devise", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jg3j7y", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603414607.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am working on a rails engine. I have no access to Devise or its helper methods since those are in the host application. We also don&amp;#39;t have a user model so we have to mock the model&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I have a controller defined as&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require_dependency &amp;quot;sample/application_controller&amp;quot;\n\nmodule Sample\n class ExampleController &amp;lt; ApplicationController\n  def list_estates\n    if current_user.has_access_to?(:communities)\n       u/estates = Estate.all\n    end\n  end\n end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I would like to test that the method actually performs xyz if current_user has access to communities.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require &amp;#39;rails_helper&amp;#39;\nmodule PremierSaAgreementSigning\nclass User\n\n    attr\\_reader :email, :password\n\n    def initialize(email, password)\n\n        u/email = email\n\n        u/password = password\n\n    end\n\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;describe ExampleController, type: :request do\n  context &amp;#39;user is signed in&amp;#39; do\n    let(:user) { [User.new](https://User.new)(&amp;#39;test@example.com&amp;#39;, &amp;#39;password&amp;#39;) }\n    let(:estate) { create(:estate) }\n\n     before do\n        ActionView::Base.any_instance.stub(:current_user) { user }\n     end\n\n\n     it &amp;#39;returns a list of estates&amp;#39; do\n        get &amp;quot;/sample/example/list_estates&amp;quot;\n        expect(assigns(:estates)).to include(estate)\n     end\n   end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Since I have no access to devise or a user model.&lt;/p&gt;\n\n&lt;p&gt;How do I get `current_user` instance on the `ExampleController` to be equal to the user I have created here. Then how do I get the now new current_user to mock the `has_access_to?` method which is also not defined in this engine.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;My method above returns&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;`ActionView::Base does not implement #current_user`\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Please note that I do not need to create or expose any session/login logic here as that is handled on the host application and not required on the engine.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;I just need to mock the `current_user` object and run another fake method..`has_access_to?` on this object\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How can I do this. I am a beginner and this has been quite challenging&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jg3j7y", "is_robot_indexable": true, "report_reasons": null, "author": "coremuscle", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jg3j7y/rspec_stub_current_user_on_a_request_spec_for_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jg3j7y/rspec_stub_current_user_on_a_request_spec_for_a/", "subreddit_subscribers": 46337, "created_utc": 1603385807.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "", "author_fullname": "t2_6ptcsia4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anyone using Svelte,Elm or anything more obscure?How's your experience?", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfwvu2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603390107.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfwvu2", "is_robot_indexable": true, "report_reasons": null, "author": "Whisperecean", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfwvu2/anyone_using_svelteelm_or_anything_more/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfwvu2/anyone_using_svelteelm_or_anything_more/", "subreddit_subscribers": 46337, "created_utc": 1603361307.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Is Active Admin a free-to-use tool? I barely came across it and since I'm working on an application for a company it looks like it would help a lot", "author_fullname": "t2_1u6ziqw1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Active Admin", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jg4coy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603417028.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is Active Admin a free-to-use tool? I barely came across it and since I&amp;#39;m working on an application for a company it looks like it would help a lot&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jg4coy", "is_robot_indexable": true, "report_reasons": null, "author": "fkncharlie", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jg4coy/active_admin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jg4coy/active_admin/", "subreddit_subscribers": 46337, "created_utc": 1603388228.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "2020 is a being a very rich year for Rails **boilerplates and generators**. I've written a short article describing the most prominent ones: [https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html](https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html)\n\nHope you find it useful :)", "author_fullname": "t2_411klsg1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby on Rails: templates and generators in 2020", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfmas5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 38, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 38, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603345113.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;2020 is a being a very rich year for Rails &lt;strong&gt;boilerplates and generators&lt;/strong&gt;. I&amp;#39;ve written a short article describing the most prominent ones: &lt;a href=\"https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html\"&gt;https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hope you find it useful :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfmas5", "is_robot_indexable": true, "report_reasons": null, "author": "yarotheslav", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfmas5/ruby_on_rails_templates_and_generators_in_2020/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfmas5/ruby_on_rails_templates_and_generators_in_2020/", "subreddit_subscribers": 46337, "created_utc": 1603316313.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Is anyone doing this? I'm building a site where multiple vendors will be able to sell digital products. Seems like Spree is more for physical products. Wondering if I should try to customize it or use something else entirely. \n\nThanks!", "author_fullname": "t2_6823i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Do you use Spree to sell digital products?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jg39nc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603413841.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is anyone doing this? I&amp;#39;m building a site where multiple vendors will be able to sell digital products. Seems like Spree is more for physical products. Wondering if I should try to customize it or use something else entirely. &lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jg39nc", "is_robot_indexable": true, "report_reasons": null, "author": "mtgentry", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jg39nc/do_you_use_spree_to_sell_digital_products/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jg39nc/do_you_use_spree_to_sell_digital_products/", "subreddit_subscribers": 46337, "created_utc": 1603385041.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jg39nc", "before": null}}