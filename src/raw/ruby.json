{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3d4n4ew7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Maintaining Sanity with Ruby Under A Lockdown.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 81, "hide_score": false, "name": "t3_fs535x", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 44, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 44, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/UfnFWp9KCQ4dlU62nZkfAumaigiPZVRnibs5EdfoR3U.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585652239.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "emmanuelhayford.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/f-FjjJt1w3JsjP3Ql9xkLGJ4OUp82aqJWWD03qRhTJ8.jpg?auto=webp&amp;s=564e36e61bf24f37455fc3cc6e0f302868cc00db", "width": 1294, "height": 754}, "resolutions": [{"url": "https://external-preview.redd.it/f-FjjJt1w3JsjP3Ql9xkLGJ4OUp82aqJWWD03qRhTJ8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fe9f6197978e49df1d6238936c3bbc7275842df8", "width": 108, "height": 62}, {"url": "https://external-preview.redd.it/f-FjjJt1w3JsjP3Ql9xkLGJ4OUp82aqJWWD03qRhTJ8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a1d6570736ed151caa0674f9f2694fffa99ea97c", "width": 216, "height": 125}, {"url": "https://external-preview.redd.it/f-FjjJt1w3JsjP3Ql9xkLGJ4OUp82aqJWWD03qRhTJ8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=725a73ef79735b6487b889b6ab6cb2e62c3eb278", "width": 320, "height": 186}, {"url": "https://external-preview.redd.it/f-FjjJt1w3JsjP3Ql9xkLGJ4OUp82aqJWWD03qRhTJ8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4ff954436aaf575fb05256edf4a36a047ba3cf3e", "width": 640, "height": 372}, {"url": "https://external-preview.redd.it/f-FjjJt1w3JsjP3Ql9xkLGJ4OUp82aqJWWD03qRhTJ8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=88228a8602a6374f29279199787188138f8a8613", "width": 960, "height": 559}, {"url": "https://external-preview.redd.it/f-FjjJt1w3JsjP3Ql9xkLGJ4OUp82aqJWWD03qRhTJ8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3620eddac4359e0d8994d869e9e65b596ab42a20", "width": 1080, "height": 629}], "variants": {}, "id": "4N3RDtSfj_3NehcbohncW3Pozp0CHFqZpmlNxhpBsQ4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fs535x", "is_robot_indexable": true, "report_reasons": null, "author": "siaw30", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fs535x/maintaining_sanity_with_ruby_under_a_lockdown/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://emmanuelhayford.com/maintaining-sanity-with-ruby-under-a-lockdown/", "subreddit_subscribers": 64172, "created_utc": 1585623439.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_9khkkh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Exercising During Lockdown: a look at Ruby\u2019s Array each_cons and each_slice methods", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 92, "hide_score": false, "name": "t3_fsa6wv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/ZnCd7E0SzsafJNiWVb03URmiV0qlnLfQiL56mg5MXAo.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585677322.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "mesomorphic.co.uk", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/dY0LRQM5W_TYjW-rZx85ZrRvN4sB4OyJed3dkZ7tyTo.jpg?auto=webp&amp;s=c06b775ca1817430f34b6c60c7639ee940cb0261", "width": 1920, "height": 1271}, "resolutions": [{"url": "https://external-preview.redd.it/dY0LRQM5W_TYjW-rZx85ZrRvN4sB4OyJed3dkZ7tyTo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c9b9b850402017b63771fc7d265ac2ece0d47224", "width": 108, "height": 71}, {"url": "https://external-preview.redd.it/dY0LRQM5W_TYjW-rZx85ZrRvN4sB4OyJed3dkZ7tyTo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1cc4f9af6ecfe2cabeb05291adf0c440acc20ca1", "width": 216, "height": 142}, {"url": "https://external-preview.redd.it/dY0LRQM5W_TYjW-rZx85ZrRvN4sB4OyJed3dkZ7tyTo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=19776815cfe149ce0ff9d7b153cb53b443c72d0f", "width": 320, "height": 211}, {"url": "https://external-preview.redd.it/dY0LRQM5W_TYjW-rZx85ZrRvN4sB4OyJed3dkZ7tyTo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4e8b1b5d07491599532a319ae91fcafab7291091", "width": 640, "height": 423}, {"url": "https://external-preview.redd.it/dY0LRQM5W_TYjW-rZx85ZrRvN4sB4OyJed3dkZ7tyTo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7b0d76bab1ea32a34a9b002c8d09abc2509dde17", "width": 960, "height": 635}, {"url": "https://external-preview.redd.it/dY0LRQM5W_TYjW-rZx85ZrRvN4sB4OyJed3dkZ7tyTo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f63f436c8afb901af65bd48e0bc08ea129fb53f8", "width": 1080, "height": 714}], "variants": {}, "id": "iIcIF8pe-wZ4Nh6aim2Fqhk8xftftbqaLnOT5FVHbhs"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsa6wv", "is_robot_indexable": true, "report_reasons": null, "author": "EvilInky", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fsa6wv/exercising_during_lockdown_a_look_at_rubys_array/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.mesomorphic.co.uk/blog/2020/03/31/lockdown-push-up/", "subreddit_subscribers": 64172, "created_utc": 1585648522.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lc0kps6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learn Ruby on Rails", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 104, "hide_score": false, "name": "t3_fs8uhf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/x8WhkuuJCWWuhiKkCnkgTuW3pUX0CVocmaRrLTAsOY0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585669971.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/QdP0qU3BgHmLVsmxyRejKS2cleG36zNdGgi7gxFw0H8.jpg?auto=webp&amp;s=7ea39e45bdf942d0db492b06ce3cedcad979a2e6", "width": 795, "height": 593}, "resolutions": [{"url": "https://external-preview.redd.it/QdP0qU3BgHmLVsmxyRejKS2cleG36zNdGgi7gxFw0H8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=88e9bf4b106b68318eb8e9840a6c32e1105e5ccf", "width": 108, "height": 80}, {"url": "https://external-preview.redd.it/QdP0qU3BgHmLVsmxyRejKS2cleG36zNdGgi7gxFw0H8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=af65020ab296a40d149e0e3accc84fc37785e523", "width": 216, "height": 161}, {"url": "https://external-preview.redd.it/QdP0qU3BgHmLVsmxyRejKS2cleG36zNdGgi7gxFw0H8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c8e4f9659fd9f35c812084eca98f3aa0d72456ac", "width": 320, "height": 238}, {"url": "https://external-preview.redd.it/QdP0qU3BgHmLVsmxyRejKS2cleG36zNdGgi7gxFw0H8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=52af7fbc170d70c2d490f771a1e6c0ac672471ba", "width": 640, "height": 477}], "variants": {}, "id": "mWZ1BDjcfkt0QCMsg_ebzHQZIj_GEwTcs8boqT6kxko"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fs8uhf", "is_robot_indexable": true, "report_reasons": null, "author": "mehdifarsi", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fs8uhf/learn_ruby_on_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/rubycademy/learn-ruby-on-rails-28f5ceb609f8?sk=16eda3bb701f75eff2b37165b5466a29", "subreddit_subscribers": 64172, "created_utc": 1585641171.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_5wbh4yy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Rspec this?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_fsbowg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "rails", "selftext": "I've been assigned to write rspec tests for a bit dated legacy project as a part of training.\n\nI am to write factories and spec for existing models. Some code in those models look weird and even silly, but I can not replace/refactor any of it and should create tests for model as the are.\n\nThe model code has a class method:\n\n*def self*.filter\\_type(type\\_id)  \n *case* type\\_id  \n *when* 1  \n5  \n *when* 2  \n6  \n *when* 3  \n7  \n *when* 4  \n3  \n *when* 5  \n9  \n *when* 6  \n10  \n *else*  \n 8  \n *end*  \n*end*\n\nSo I can just create examples for each 'when' one-by-one to get rid of it but it's the 'else' case that bugs me. How do I make a proper test to include any value othere then (1..6). \n\nThere is no restriction to use only integers as 'type\\_id' in the code but let's assume there is.\n\nAny hints to this?", "author_fullname": "t2_5wbh4yy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Rspec this?", "link_flair_richtext": [{"e": "text", "t": "Testing"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "testing", "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_fsbo6p", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Testing", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585684825.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been assigned to write rspec tests for a bit dated legacy project as a part of training.&lt;/p&gt;\n\n&lt;p&gt;I am to write factories and spec for existing models. Some code in those models look weird and even silly, but I can not replace/refactor any of it and should create tests for model as the are.&lt;/p&gt;\n\n&lt;p&gt;The model code has a class method:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;def self&lt;/em&gt;.filter_type(type_id)&lt;br/&gt;\n &lt;em&gt;case&lt;/em&gt; type_id&lt;br/&gt;\n &lt;em&gt;when&lt;/em&gt; 1&lt;br/&gt;\n5&lt;br/&gt;\n &lt;em&gt;when&lt;/em&gt; 2&lt;br/&gt;\n6&lt;br/&gt;\n &lt;em&gt;when&lt;/em&gt; 3&lt;br/&gt;\n7&lt;br/&gt;\n &lt;em&gt;when&lt;/em&gt; 4&lt;br/&gt;\n3&lt;br/&gt;\n &lt;em&gt;when&lt;/em&gt; 5&lt;br/&gt;\n9&lt;br/&gt;\n &lt;em&gt;when&lt;/em&gt; 6&lt;br/&gt;\n10&lt;br/&gt;\n &lt;em&gt;else&lt;/em&gt;&lt;br/&gt;\n 8&lt;br/&gt;\n &lt;em&gt;end&lt;/em&gt;&lt;br/&gt;\n&lt;em&gt;end&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;So I can just create examples for each &amp;#39;when&amp;#39; one-by-one to get rid of it but it&amp;#39;s the &amp;#39;else&amp;#39; case that bugs me. How do I make a proper test to include any value othere then (1..6). &lt;/p&gt;\n\n&lt;p&gt;There is no restriction to use only integers as &amp;#39;type_id&amp;#39; in the code but let&amp;#39;s assume there is.&lt;/p&gt;\n\n&lt;p&gt;Any hints to this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0b5d7076-af75-11e4-82a0-22000b680abd", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsbo6p", "is_robot_indexable": true, "report_reasons": null, "author": "t3n3t", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/fsbo6p/how_to_rspec_this/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/fsbo6p/how_to_rspec_this/", "subreddit_subscribers": 43177, "created_utc": 1585656025.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1585684916.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsbowg", "is_robot_indexable": true, "stickied": false, "author": "t3n3t", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_fsbo6p", "author_flair_text_color": null, "permalink": "/r/ruby/comments/fsbowg/how_to_rspec_this/", "parent_whitelist_status": "all_ads", "report_reasons": null, "url": "/r/rails/comments/fsbo6p/how_to_rspec_this/", "subreddit_subscribers": 64172, "created_utc": 1585656116.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I am wondering if this is happening to others or it is something with my setup.\n\n[https://github.com/morhetz/gruvbox/issues/323](https://github.com/morhetz/gruvbox/issues/323)", "author_fullname": "t2_8eska", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "If you use Gruvbox as color scheme with vim/nvim, please check this", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fsatdz", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1585680629.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am wondering if this is happening to others or it is something with my setup.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/morhetz/gruvbox/issues/323\"&gt;https://github.com/morhetz/gruvbox/issues/323&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/WgWW5gBPc2kGme-3lf-udzUAxQd8XycytLQqt0X35do.jpg?auto=webp&amp;s=ca831579dd1dd21f28b89d71837c132021468bf4", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/WgWW5gBPc2kGme-3lf-udzUAxQd8XycytLQqt0X35do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a192e5bf0a5ff76cca2bd2dbf357e371853d37b8", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/WgWW5gBPc2kGme-3lf-udzUAxQd8XycytLQqt0X35do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b175b52c9242514519b4b13ebb0c124e24cd4970", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/WgWW5gBPc2kGme-3lf-udzUAxQd8XycytLQqt0X35do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6514f6c02bf527cf074eb8d8785d41fa6aefcd0a", "width": 320, "height": 320}], "variants": {}, "id": "-U3ecGI-oWbAuRUJD1LDD_yOGV5cMDLo30X9PH0hCVk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsatdz", "is_robot_indexable": true, "report_reasons": null, "author": "fladsonthiago", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fsatdz/if_you_use_gruvbox_as_color_scheme_with_vimnvim/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fsatdz/if_you_use_gruvbox_as_color_scheme_with_vimnvim/", "subreddit_subscribers": 64172, "created_utc": 1585651829.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "If you're using Rails and you'd like to try out [dry-rb](https://dry-rb.org/) then I have great news for you - the first version of dry-rails was released today and it provides built-in support for dry-system that works OOTB with both Rails 5 and 6 (works with Zeitwerk enabled too). It also gives you additional features that are integrated with the controller layer:\n\n* `safe_params` - an alternative to strong-parameters, powered by dry-schema\n* `application_contract` - an alternative to ActiveModel/Record validations powered by dry-validation\n* `controller_helpers` - a couple of convenient methods that make it easier to access your application container\n\n## Links\n\n* [0.1.0 release on GitHub](https://github.com/dry-rb/dry-rails/releases/tag/v0.1.0) and feel\n* [API docs](https://rubydoc.info/gems/dry-rails)\n* [User docs](https://dry-rb.org/gems/dry-rails)\n\nCheck it out, provide feedback and feel free to ask any questions!", "author_fullname": "t2_3x559", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The first version of dry-rails was released!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_frofpd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 73, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 73, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585593539.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re using Rails and you&amp;#39;d like to try out &lt;a href=\"https://dry-rb.org/\"&gt;dry-rb&lt;/a&gt; then I have great news for you - the first version of dry-rails was released today and it provides built-in support for dry-system that works OOTB with both Rails 5 and 6 (works with Zeitwerk enabled too). It also gives you additional features that are integrated with the controller layer:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;safe_params&lt;/code&gt; - an alternative to strong-parameters, powered by dry-schema&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;application_contract&lt;/code&gt; - an alternative to ActiveModel/Record validations powered by dry-validation&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;controller_helpers&lt;/code&gt; - a couple of convenient methods that make it easier to access your application container&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Links&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/dry-rb/dry-rails/releases/tag/v0.1.0\"&gt;0.1.0 release on GitHub&lt;/a&gt; and feel&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://rubydoc.info/gems/dry-rails\"&gt;API docs&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://dry-rb.org/gems/dry-rails\"&gt;User docs&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Check it out, provide feedback and feel free to ask any questions!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "dry-rb/rom-rb ", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "frofpd", "is_robot_indexable": true, "report_reasons": null, "author": "solnic", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/ruby/comments/frofpd/the_first_version_of_dryrails_was_released/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/frofpd/the_first_version_of_dryrails_was_released/", "subreddit_subscribers": 64172, "created_utc": 1585564739.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'm writing a scraper that uses selenium to navigate &amp; login to a certain website; search for the newest data and then store it into a database. I'm using selenium-webdriver to navigate the website, and now I'm trying to write tests for the most important edge cases.\n\nI downloaded the HTML and built a fake Sinatra website, that mimics the behavior of the original site so that I can test my code. However, I have to run the puma server separately in an environment independent of my code. \n\nI need to be able to mock everything in the same environment so that I can have better control of how the application behaves. I think I can take the same approach as the guys from Capybara do but I don't know how to start.\n\nI created a short mocking class, and it runs but as soon as puma starts RSpec is halted waiting for puma to stop its execution.\n\nWhat's the best approach that I can take to actually test this scraper correctly, are there any technologies that already exist and that I can use?\n\nEdit: Grammar", "author_fullname": "t2_3o6cc9re", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you properly test a selenium web scrapper?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fs0442", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1585618337.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585633960.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m writing a scraper that uses selenium to navigate &amp;amp; login to a certain website; search for the newest data and then store it into a database. I&amp;#39;m using selenium-webdriver to navigate the website, and now I&amp;#39;m trying to write tests for the most important edge cases.&lt;/p&gt;\n\n&lt;p&gt;I downloaded the HTML and built a fake Sinatra website, that mimics the behavior of the original site so that I can test my code. However, I have to run the puma server separately in an environment independent of my code. &lt;/p&gt;\n\n&lt;p&gt;I need to be able to mock everything in the same environment so that I can have better control of how the application behaves. I think I can take the same approach as the guys from Capybara do but I don&amp;#39;t know how to start.&lt;/p&gt;\n\n&lt;p&gt;I created a short mocking class, and it runs but as soon as puma starts RSpec is halted waiting for puma to stop its execution.&lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s the best approach that I can take to actually test this scraper correctly, are there any technologies that already exist and that I can use?&lt;/p&gt;\n\n&lt;p&gt;Edit: Grammar&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fs0442", "is_robot_indexable": true, "report_reasons": null, "author": "xchronos35x", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fs0442/how_do_you_properly_test_a_selenium_web_scrapper/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fs0442/how_do_you_properly_test_a_selenium_web_scrapper/", "subreddit_subscribers": 64172, "created_utc": 1585605160.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I was thinking about implementing Ruby on a project that I'm working on, it involves a lot of console applications for Linux, however I started to think: What's the main usage of Ruby? And if it's ok to use it for desktop/terminal applications or scripts.\n\nSo I'm asking for your opinion on this matter.\nWhat do you believe is the right usage for Ruby?\n\nIf your answer is other, please, feel free to comment your thoughts.\n\n[View Poll](https://www.reddit.com/poll/fryvuh)", "author_fullname": "t2_5zki9bkb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Main usage for Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fryvuh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585629913.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was thinking about implementing Ruby on a project that I&amp;#39;m working on, it involves a lot of console applications for Linux, however I started to think: What&amp;#39;s the main usage of Ruby? And if it&amp;#39;s ok to use it for desktop/terminal applications or scripts.&lt;/p&gt;\n\n&lt;p&gt;So I&amp;#39;m asking for your opinion on this matter.\nWhat do you believe is the right usage for Ruby?&lt;/p&gt;\n\n&lt;p&gt;If your answer is other, please, feel free to comment your thoughts.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/poll/fryvuh\"&gt;View Poll&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fryvuh", "is_robot_indexable": true, "report_reasons": null, "author": "XavierEduardo99", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "poll_data": {"user_selection": null, "options": [{"text": "Terminal scripts", "id": "106231"}, {"text": "Web backend", "id": "106232"}, {"text": "Desktop apps", "id": "106233"}, {"text": "Everything because Ruby is perfect", "id": "106234"}, {"text": "Other", "id": "106235"}], "voting_end_timestamp": 1585860313211, "total_vote_count": 74}, "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fryvuh/main_usage_for_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "mod_reports": [], "url": "https://www.reddit.com/r/ruby/comments/fryvuh/main_usage_for_ruby/", "subreddit_subscribers": 64172, "created_utc": 1585601113.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_bu67h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "footballdb-clubs gem v2020.3.30 - the world's top football clubs (2500+ and counting) from around the world", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_frvoeg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/OML75cFRMMlsv5QmPEteoauC2hMeyBDdsx-5xnr2mmY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585619953.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?auto=webp&amp;s=fcfeb2c7ed5e8865543dc1e8389788c267751203", "width": 256, "height": 256}, "resolutions": [{"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a267236eaf74e37372b928904a5056062f51b220", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fae722694a3d6d2f6053b6d843ac48e65b9b93f8", "width": 216, "height": 216}], "variants": {}, "id": "8ZTcnSVObHBt8VFL60JctEY-J_urvNxJK1UL_K1j7Ig"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "frvoeg", "is_robot_indexable": true, "report_reasons": null, "author": "geraldbauer", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/frvoeg/footballdbclubs_gem_v2020330_the_worlds_top/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/sportdb/sport.db/tree/master/footballdb-clubs", "subreddit_subscribers": 64172, "created_utc": 1585591153.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I am trying to figure out why this keeps returning the else statement. I assume it's because the array\\[i\\] is having a hard time comparing the element value. I want it to assume to take any element (string, integer, etc..)\n\n`def includes_index(array, element)`  \n  `limit = array.length`  \n `for i in 0..limit`  \n `if array[i] == element`  \n `return i`  \n `else`  \n `return -1`  \n `end`  \n `end`  \n`end`  \n`array1 = [\"baseball\", \"basketball\", \"football\", \"hockey\", \"pokemon\", \"lacrosse\", \"soccer\"]`  \n`includes_index(array1, \"lacrosse\")`", "author_fullname": "t2_cuheg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "If condition is off, returning the incorrect value", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_frv3m1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585618121.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to figure out why this keeps returning the else statement. I assume it&amp;#39;s because the array[i] is having a hard time comparing the element value. I want it to assume to take any element (string, integer, etc..)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;def includes_index(array, element)&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;limit = array.length&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;for i in 0..limit&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;if array[i] == element&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return i&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;else&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return -1&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;end&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;end&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;end&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;array1 = [&amp;quot;baseball&amp;quot;, &amp;quot;basketball&amp;quot;, &amp;quot;football&amp;quot;, &amp;quot;hockey&amp;quot;, &amp;quot;pokemon&amp;quot;, &amp;quot;lacrosse&amp;quot;, &amp;quot;soccer&amp;quot;]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;includes_index(array1, &amp;quot;lacrosse&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "frv3m1", "is_robot_indexable": true, "report_reasons": null, "author": "Marrix", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/frv3m1/if_condition_is_off_returning_the_incorrect_value/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/frv3m1/if_condition_is_off_returning_the_incorrect_value/", "subreddit_subscribers": 64172, "created_utc": 1585589321.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_frv3m1", "before": null}}