{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi Ruby community!\n\nVirtually all of our company's products are built on rails. I understand that Ruby uses a cron scheduler called sidekiq that handles tries and retries. \n\nThis is all unfamiliar territory for me because I'm not familiar with Ruby. I'm familiar however with other tools like Python. I'm curious as to what the best way of doing this would be. Is there an API I can query that would serve this exact info?", "author_fullname": "t2_k01zajj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Data Analyst new to Ruby - our devs at work need me to use Sidekiq APIs to provide visibility on the number of retries at any given point, as well as breakdown on the type of retries.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hioh4x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593556426.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi Ruby community!&lt;/p&gt;\n\n&lt;p&gt;Virtually all of our company&amp;#39;s products are built on rails. I understand that Ruby uses a cron scheduler called sidekiq that handles tries and retries. &lt;/p&gt;\n\n&lt;p&gt;This is all unfamiliar territory for me because I&amp;#39;m not familiar with Ruby. I&amp;#39;m familiar however with other tools like Python. I&amp;#39;m curious as to what the best way of doing this would be. Is there an API I can query that would serve this exact info?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hioh4x", "is_robot_indexable": true, "report_reasons": null, "author": "Lostwhispers05", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hioh4x/data_analyst_new_to_ruby_our_devs_at_work_need_me/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hioh4x/data_analyst_new_to_ruby_our_devs_at_work_need_me/", "subreddit_subscribers": 66112, "created_utc": 1593527626.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lc0kps6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Fun Facts about Ruby #7", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 68, "top_awarded_type": null, "hide_score": false, "name": "t3_hik1wb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.74, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/xtK8Y7yvBT1qG_Q1n_P58xv8P1enyVxQnn0hiIsIgzs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593538225.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://i.redd.it/vb5p3jt4o0851.png", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/vb5p3jt4o0851.png?auto=webp&amp;s=dba9171b01620d38d9a775491eda5a64fbefe48f", "width": 1588, "height": 781}, "resolutions": [{"url": "https://preview.redd.it/vb5p3jt4o0851.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=413f5f0a0b2371c2d45b73a124c4d8321dd179e9", "width": 108, "height": 53}, {"url": "https://preview.redd.it/vb5p3jt4o0851.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=5c86d1957e9b7a116c955ce10349b63eb497f9a4", "width": 216, "height": 106}, {"url": "https://preview.redd.it/vb5p3jt4o0851.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=c04c7fc911b322790d4b5c663cf368915d963002", "width": 320, "height": 157}, {"url": "https://preview.redd.it/vb5p3jt4o0851.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=b618a0d2076f8fcf9afa164511fad48fc20f84b0", "width": 640, "height": 314}, {"url": "https://preview.redd.it/vb5p3jt4o0851.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=5747fd069e5d5945529714a286d585e38a802908", "width": 960, "height": 472}, {"url": "https://preview.redd.it/vb5p3jt4o0851.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4ddb9c8fc5e6870479fc0abd75ea8c50f2c60436", "width": 1080, "height": 531}], "variants": {}, "id": "TJe7OSxRWNvYa2VZeuffTKqWQbKPR0HQTgBlK2zHnys"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hik1wb", "is_robot_indexable": true, "report_reasons": null, "author": "mehdifarsi", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hik1wb/fun_facts_about_ruby_7/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/vb5p3jt4o0851.png", "subreddit_subscribers": 66112, "created_utc": 1593509425.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_28auw7q9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails 6.1 tracks Active Storage variant in the database", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_hii694", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/tuTGr1_Mj3M2hLi_wj-FJE_ZyJS-hloDIads0c1FtaA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593528955.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.bigbinary.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.bigbinary.com/2020/06/30/rails-6-1-tracks-active-storage-variant-in-the-database.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?auto=webp&amp;s=8503cddbb4afa6e7607bb9bd69e37b60c8277de5", "width": 1200, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5b9233ede74a4b70d3fc1bb02f8868dc0ac244b", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f9ab25c6613259424aa727e0c7ec14ac17690caa", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=256692068e925b15f9d1dd1de698cf9df7c106ae", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c42a5ce0c0eacb1c7fa5e0269698b389b15deabc", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0a98a64e4087be88191a2d856ec69b079e60f251", "width": 960, "height": 501}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a8cc0c6c354a48809d03ee1f01d4641a253e5d2e", "width": 1080, "height": 564}], "variants": {}, "id": "LuCVRyBbE00ARi7DYri8NjRvSe2GL2B8baeyQdYI0rw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hii694", "is_robot_indexable": true, "report_reasons": null, "author": "abhaynikam", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hii694/rails_61_tracks_active_storage_variant_in_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.bigbinary.com/2020/06/30/rails-6-1-tracks-active-storage-variant-in-the-database.html", "subreddit_subscribers": 66112, "created_utc": 1593500155.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "My company and I are working on Ruby on Rails projects and thinking about starting blog posts.The blog post of all natures. Short, long, technical, or something like a case study.My team on average has more than 10 years of experience in developing and managing an agency company.\n\nWhat do you want to hear from us?\n\nWe are using Ruby on Rails and bunch of technology around that. At big projects, we are going without major frontend js frameworks like at basecamp and hey.", "author_fullname": "t2_pfyd408", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What type of blog posts do you want to read?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hiolnu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.65, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1593528701.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593556845.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My company and I are working on Ruby on Rails projects and thinking about starting blog posts.The blog post of all natures. Short, long, technical, or something like a case study.My team on average has more than 10 years of experience in developing and managing an agency company.&lt;/p&gt;\n\n&lt;p&gt;What do you want to hear from us?&lt;/p&gt;\n\n&lt;p&gt;We are using Ruby on Rails and bunch of technology around that. At big projects, we are going without major frontend js frameworks like at basecamp and hey.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hiolnu", "is_robot_indexable": true, "report_reasons": null, "author": "kmetJoza", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hiolnu/what_type_of_blog_posts_do_you_want_to_read/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hiolnu/what_type_of_blog_posts_do_you_want_to_read/", "subreddit_subscribers": 66112, "created_utc": 1593528045.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi! Beginner here.\n\nSo currently I'm trying to write a simple bubble sort code. In fact it works pretty well, but there's a problem with sorting at this point: gets.chomp.split(\",\") .\n\n    def bubble_sort(array)\n    n = array.length\n    loop do \n    swapped = false\n    (n-1).times do |i| \n    if array[i] &gt; array[i+1] \n    array[i], array[i+1] = array[i+1], array[i] \n    swapped = true end\n    end\n     break if not swapped\n    end \n    array \n    end\n    puts \"Type your array:\" array = gets.chomp.split(\",\")\n    p bubble_sort(array)\n\nWhen I type for example: 100,1,10 the output is correct. But then if I type: 10,1,4,66,0 the output is \\[\"0\", \"1\", \"10\", \"4\", \"66\"\\].", "author_fullname": "t2_19w9g6im", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Bubble sort", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hike73", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593539908.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi! Beginner here.&lt;/p&gt;\n\n&lt;p&gt;So currently I&amp;#39;m trying to write a simple bubble sort code. In fact it works pretty well, but there&amp;#39;s a problem with sorting at this point: gets.chomp.split(&amp;quot;,&amp;quot;) .&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def bubble_sort(array)\nn = array.length\nloop do \nswapped = false\n(n-1).times do |i| \nif array[i] &amp;gt; array[i+1] \narray[i], array[i+1] = array[i+1], array[i] \nswapped = true end\nend\n break if not swapped\nend \narray \nend\nputs &amp;quot;Type your array:&amp;quot; array = gets.chomp.split(&amp;quot;,&amp;quot;)\np bubble_sort(array)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When I type for example: 100,1,10 the output is correct. But then if I type: 10,1,4,66,0 the output is [&amp;quot;0&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;10&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;66&amp;quot;].&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hike73", "is_robot_indexable": true, "report_reasons": null, "author": "vanillawifey", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hike73/bubble_sort/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hike73/bubble_sort/", "subreddit_subscribers": 66112, "created_utc": 1593511108.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3v9zl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Build The World\u2019s Simplest ETL (Extract, Transform, Load) Pipeline in Ruby With Kiba", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_hi6loi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 40, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 40, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/eUKfuNIzBDOdSDUIOcjHs5UpAh1JOorJc-0XgvMeAJ8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593487193.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "towardsdatascience.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://towardsdatascience.com/build-the-worlds-simplest-etl-extract-transform-load-pipeline-in-ruby-with-kiba-e7093a29d35", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/7qish7eIMF3JTAPRLb35SMl9idh-QEsyJ1CxZnQCb9g.jpg?auto=webp&amp;s=146453474366376b95a47392451e7b2e04e2fe76", "width": 1200, "height": 801}, "resolutions": [{"url": "https://external-preview.redd.it/7qish7eIMF3JTAPRLb35SMl9idh-QEsyJ1CxZnQCb9g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=160d153d207389a3e587fb47b783402ad52da933", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/7qish7eIMF3JTAPRLb35SMl9idh-QEsyJ1CxZnQCb9g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=dbe9659c9c175fd46148effb4c4cb4b55287822b", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/7qish7eIMF3JTAPRLb35SMl9idh-QEsyJ1CxZnQCb9g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9826b02f40299bc4c8d43d2e503fe4575d64dc96", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/7qish7eIMF3JTAPRLb35SMl9idh-QEsyJ1CxZnQCb9g.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=02ba6162c569c95ba5085ab25e0a2d20b7c0ee89", "width": 640, "height": 427}, {"url": "https://external-preview.redd.it/7qish7eIMF3JTAPRLb35SMl9idh-QEsyJ1CxZnQCb9g.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=97254706e701a7f17cd424a7dcfa8de479d0939e", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/7qish7eIMF3JTAPRLb35SMl9idh-QEsyJ1CxZnQCb9g.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ec17467f7ad583f981433f36dcdc099000813aa7", "width": 1080, "height": 720}], "variants": {}, "id": "UWKwLEpEcW93kIGk6WVymg654DxZ7GohJ2VfSMfK-xA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hi6loi", "is_robot_indexable": true, "report_reasons": null, "author": "thibaut_barrere", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hi6loi/build_the_worlds_simplest_etl_extract_transform/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://towardsdatascience.com/build-the-worlds-simplest-etl-extract-transform-load-pipeline-in-ruby-with-kiba-e7093a29d35", "subreddit_subscribers": 66112, "created_utc": 1593458393.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_fnesn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Ruby Spec Suite Compatibility Report", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_hi5xnh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/y0UuRMLqHjMdU9EcmMXvvGW2_2lpsqpWpZCJBr-Z0xs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593485264.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "eregon.me", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://eregon.me/blog/2020/06/27/ruby-spec-compatibility-report.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/7QEqVryHBna_bAp5TK8rYcYyZH5Xlmv2ayh0rXjvQu4.jpg?auto=webp&amp;s=bcab2ab3c7bc92da0a56fcf5b8d0d1cbc77d96ab", "width": 250, "height": 250}, "resolutions": [{"url": "https://external-preview.redd.it/7QEqVryHBna_bAp5TK8rYcYyZH5Xlmv2ayh0rXjvQu4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f2319ec1716c01dfb79d9b19a9d31c22b2992b4b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/7QEqVryHBna_bAp5TK8rYcYyZH5Xlmv2ayh0rXjvQu4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e6b9361ee506a77472eee01779cd3356dad9b30a", "width": 216, "height": 216}], "variants": {}, "id": "Uk9vn9EbJnJEbPJRTH8EnKRQEoEbKinsMy_LICuajBI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hi5xnh", "is_robot_indexable": true, "report_reasons": null, "author": "chrisgseaton", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hi5xnh/the_ruby_spec_suite_compatibility_report/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://eregon.me/blog/2020/06/27/ruby-spec-compatibility-report.html", "subreddit_subscribers": 66112, "created_utc": 1593456464.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "New rails tech is coming around and new big projects are launched on rails (like basecamp has released the new awesome [hey.com](https://hey.com) email platform running on rails without any major JS frameworks).\n\nChris Oliver from gorails discussed it in the [freshest remote ruby podcast](https://remoteruby.transistor.fm/83) and said...\n\n&gt;\"It feels good to be in Rails right now\"\n\nDo you share this feeling?", "author_fullname": "t2_6wefzl0n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "\"Feels good to be in Rails right now\"", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hhm3uj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 101, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 101, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1593406023.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New rails tech is coming around and new big projects are launched on rails (like basecamp has released the new awesome &lt;a href=\"https://hey.com\"&gt;hey.com&lt;/a&gt; email platform running on rails without any major JS frameworks).&lt;/p&gt;\n\n&lt;p&gt;Chris Oliver from gorails discussed it in the &lt;a href=\"https://remoteruby.transistor.fm/83\"&gt;freshest remote ruby podcast&lt;/a&gt; and said...&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;&amp;quot;It feels good to be in Rails right now&amp;quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Do you share this feeling?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/nD4dTDq4dIKxY8Hqt3gp8EOw_4okgkg_mQy1nCPi4h0.jpg?auto=webp&amp;s=f3ecd44e144208554187509ec195fa43f9a28672", "width": 4096, "height": 2048}, "resolutions": [{"url": "https://external-preview.redd.it/nD4dTDq4dIKxY8Hqt3gp8EOw_4okgkg_mQy1nCPi4h0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b519bcab99c371ab86c1386151c824f2dc05d2a3", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/nD4dTDq4dIKxY8Hqt3gp8EOw_4okgkg_mQy1nCPi4h0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c201bc4c3a6331b61a58585962aa184fe5b4dc51", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/nD4dTDq4dIKxY8Hqt3gp8EOw_4okgkg_mQy1nCPi4h0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f4362e4ae8a4abe79b31fbb62c24df48d24271ab", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/nD4dTDq4dIKxY8Hqt3gp8EOw_4okgkg_mQy1nCPi4h0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e76b17f64fdba181203826f0e80b0170acfbc033", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/nD4dTDq4dIKxY8Hqt3gp8EOw_4okgkg_mQy1nCPi4h0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=05617352c3af56f4ba4421d5c880f43702bfee1d", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/nD4dTDq4dIKxY8Hqt3gp8EOw_4okgkg_mQy1nCPi4h0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f7ab6a3fc0c0bbccbc21539e9d1e3f0f5a02e8be", "width": 1080, "height": 540}], "variants": {}, "id": "YtyJvY1Mlc6bJKwtyH5dCg4Haxo-EhnMiStGGtIKkEw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hhm3uj", "is_robot_indexable": true, "report_reasons": null, "author": "FullStack_coach", "discussion_type": null, "num_comments": 62, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hhm3uj/feels_good_to_be_in_rails_right_now/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hhm3uj/feels_good_to_be_in_rails_right_now/", "subreddit_subscribers": 66112, "created_utc": 1593377223.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi all,\n\nNewbie at Ruby here, created a small script to do some media conversion to allow my TV to play the media files. Most of it I'm ok with apart from the new\\_filename creation, is there a cleaner way to split the pathname down multiple times?\n\nAlso any general feedback on construction would be appreciated as well.\n\n&amp;#x200B;\n\n    # frozen_string_literal: true\n    \n    require 'pathname'\n    require 'streamio-ffmpeg'\n    require 'slop'\n    \n    # Set path to recursively search directories\n    opts = Slop.parse do |o|\n      o.string '-d', '--directory', 'a directory to search'\n      o.on '-h', '--help' do\n        puts \"Usage: ruby Check-MediaFiles.rb '/enter/path/to/search/'\"\n        exit\n      end\n    end\n    \n    path = opts[:directory]\n    \n    # Search all subdirectories for mp4 and mkv files to process and begin loop\n    Pathname.glob(path + '/*/*.{mp4,mkv,avi}').each do |file|\n      # Change to each directory\n      Dir.chdir(file.dirname)\n    \n      # Instantiate movie object for processing\n      media = FFMPEG::Movie.new(file.to_s)\n    \n      # Create new filename from metadata\n      temp1_filename = file.basename.to_s\n      temp2_filename = temp1_filename.split('/')[-1]\n      temp3_filename = temp2_filename.split('.')[0]\n      new_filename = temp3_filename + '.mp4'\n    \n      # Check got ac3 audio in media file and convert if not found.\n      if file.extname == '.avi'\n        puts 'AVI detected. Re-encoding to mp4 for compatibility with Samsung TV.'\n        media.transcode(new_filename.to_s, %W[-c:v copy -c:a ac3])\n        File.delete(file)\n        next\n      elsif media.audio_codec != 'ac3'\n        puts \"AC3 audio codec not detected on #{file.basename} converting audio to AC3.\"\n        media.transcode(new_filename.to_s, %w[-c:v copy -c:a ac3])\n        puts \"Completed conversion to ac3 audio for #{new_filename}\"\n        File.delete(file)\n      else\n        puts \"No conversion required for #{file.basename}\"\n      end\n    end\n\n&amp;#x200B;", "author_fullname": "t2_3tt3f", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is there a cleaner way of splitting strings multiple times", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hhyjzx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593460773.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all,&lt;/p&gt;\n\n&lt;p&gt;Newbie at Ruby here, created a small script to do some media conversion to allow my TV to play the media files. Most of it I&amp;#39;m ok with apart from the new_filename creation, is there a cleaner way to split the pathname down multiple times?&lt;/p&gt;\n\n&lt;p&gt;Also any general feedback on construction would be appreciated as well.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# frozen_string_literal: true\n\nrequire &amp;#39;pathname&amp;#39;\nrequire &amp;#39;streamio-ffmpeg&amp;#39;\nrequire &amp;#39;slop&amp;#39;\n\n# Set path to recursively search directories\nopts = Slop.parse do |o|\n  o.string &amp;#39;-d&amp;#39;, &amp;#39;--directory&amp;#39;, &amp;#39;a directory to search&amp;#39;\n  o.on &amp;#39;-h&amp;#39;, &amp;#39;--help&amp;#39; do\n    puts &amp;quot;Usage: ruby Check-MediaFiles.rb &amp;#39;/enter/path/to/search/&amp;#39;&amp;quot;\n    exit\n  end\nend\n\npath = opts[:directory]\n\n# Search all subdirectories for mp4 and mkv files to process and begin loop\nPathname.glob(path + &amp;#39;/*/*.{mp4,mkv,avi}&amp;#39;).each do |file|\n  # Change to each directory\n  Dir.chdir(file.dirname)\n\n  # Instantiate movie object for processing\n  media = FFMPEG::Movie.new(file.to_s)\n\n  # Create new filename from metadata\n  temp1_filename = file.basename.to_s\n  temp2_filename = temp1_filename.split(&amp;#39;/&amp;#39;)[-1]\n  temp3_filename = temp2_filename.split(&amp;#39;.&amp;#39;)[0]\n  new_filename = temp3_filename + &amp;#39;.mp4&amp;#39;\n\n  # Check got ac3 audio in media file and convert if not found.\n  if file.extname == &amp;#39;.avi&amp;#39;\n    puts &amp;#39;AVI detected. Re-encoding to mp4 for compatibility with Samsung TV.&amp;#39;\n    media.transcode(new_filename.to_s, %W[-c:v copy -c:a ac3])\n    File.delete(file)\n    next\n  elsif media.audio_codec != &amp;#39;ac3&amp;#39;\n    puts &amp;quot;AC3 audio codec not detected on #{file.basename} converting audio to AC3.&amp;quot;\n    media.transcode(new_filename.to_s, %w[-c:v copy -c:a ac3])\n    puts &amp;quot;Completed conversion to ac3 audio for #{new_filename}&amp;quot;\n    File.delete(file)\n  else\n    puts &amp;quot;No conversion required for #{file.basename}&amp;quot;\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hhyjzx", "is_robot_indexable": true, "report_reasons": null, "author": "thewrinklyninja", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hhyjzx/is_there_a_cleaner_way_of_splitting_strings/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hhyjzx/is_there_a_cleaner_way_of_splitting_strings/", "subreddit_subscribers": 66112, "created_utc": 1593431973.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'm just getting started with programming, my current job is willing to pay for me to get a course or attend a conference. All though I'll probably would go for an interactive course so I can ask questions. Can I get some recommendations from the community? \n\nI like to learn the following:\nRuby \nRuby on rails\nSQL advance queries\nActiveRecord advance queries\n\nI work with a lot of data so having a depth knowledge of the last two would be awesome. Thank you in advance!", "author_fullname": "t2_19v0xs20", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Noob to Ruby master recommendations", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hhtfl0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593434397.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m just getting started with programming, my current job is willing to pay for me to get a course or attend a conference. All though I&amp;#39;ll probably would go for an interactive course so I can ask questions. Can I get some recommendations from the community? &lt;/p&gt;\n\n&lt;p&gt;I like to learn the following:\nRuby \nRuby on rails\nSQL advance queries\nActiveRecord advance queries&lt;/p&gt;\n\n&lt;p&gt;I work with a lot of data so having a depth knowledge of the last two would be awesome. Thank you in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hhtfl0", "is_robot_indexable": true, "report_reasons": null, "author": "garciar19913", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hhtfl0/noob_to_ruby_master_recommendations/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hhtfl0/noob_to_ruby_master_recommendations/", "subreddit_subscribers": 66112, "created_utc": 1593405597.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hhtfl0", "before": null}}