{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_4u6cb6j6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go just reached 70k stars on GitHub!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fjvxxk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 261, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2F7OC82j7%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2F7OC82j7&amp;image=https%3A%2F%2Fi.imgur.com%2F7OC82j7.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"1196\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 1196}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "http://imgur.com", "description": "Post with 0 votes and 2 views.", "title": "Imgur", "url": "https://imgur.com/7OC82j7", "thumbnail_width": 600, "height": 1196, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2F7OC82j7%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2F7OC82j7&amp;image=https%3A%2F%2Fi.imgur.com%2F7OC82j7.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"1196\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "version": "1.0", "provider_name": "Imgur", "thumbnail_url": "https://i.imgur.com/7OC82j7.jpg?fb", "type": "rich", "thumbnail_height": 315}, "type": "imgur.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2F7OC82j7%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2F7OC82j7&amp;image=https%3A%2F%2Fi.imgur.com%2F7OC82j7.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"1196\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/fjvxxk", "height": 1196}, "link_flair_text": null, "can_mod_post": false, "score": 261, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584434675.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "imgur.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjvxxk", "is_robot_indexable": true, "report_reasons": null, "author": "BadWithUsernames2", "discussion_type": null, "num_comments": 15, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fjvxxk/go_just_reached_70k_stars_on_github/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://imgur.com/7OC82j7", "subreddit_subscribers": 106125, "created_utc": 1584405875.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "http://imgur.com", "description": "Post with 0 votes and 2 views.", "title": "Imgur", "url": "https://imgur.com/7OC82j7", "thumbnail_width": 600, "height": 1196, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2F7OC82j7%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2F7OC82j7&amp;image=https%3A%2F%2Fi.imgur.com%2F7OC82j7.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"1196\" scrolling=\"no\" title=\"Imgur embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;", "version": "1.0", "provider_name": "Imgur", "thumbnail_url": "https://i.imgur.com/7OC82j7.jpg?fb", "type": "rich", "thumbnail_height": 315}, "type": "imgur.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_63db1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Get current coronavirus case data using Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fjzutb", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584451972.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjzutb", "is_robot_indexable": true, "report_reasons": null, "author": "anonfunction", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fjzutb/get_current_coronavirus_case_data_using_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/montanaflynn/covid-19", "subreddit_subscribers": 106125, "created_utc": 1584423172.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_81yj9s9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kafka implemented in Golang with built-in coordination (No ZK dep, single binary install, Cloud Native)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk1367", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584458761.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk1367", "is_robot_indexable": true, "report_reasons": null, "author": "donutloop", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fk1367/kafka_implemented_in_golang_with_builtin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/nash-io/jocko", "subreddit_subscribers": 106125, "created_utc": 1584429961.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm working on a project where I want to implement realtime functionality for a task management app. I'm completely fine on the front-end side of things, however, I'm struggling to conceptualize how this will work server-side. The only real examples I've found online utilize a 3rd party service which is unnecessary. The overall concept is:\n\n&amp;#x200B;\n\n* All current clients connect to a WS endpoint to receive changes (Vue + Vuex for the state, but this really isn't important for my question)\n* A client creates a new task POSTing to an API endpoint that writes to Mongo -&gt; triggers change stream\n* All *other* clients receive the changes over WS and the app's state is mutated to reflect those changes.\n\nDoes anyone have an example of how to do this? Thanks in advance!", "author_fullname": "t2_9fk8u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Does anyone have an example/reference using MongoDB Change Streams w/ Websockets?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fk55ew", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584480123.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m working on a project where I want to implement realtime functionality for a task management app. I&amp;#39;m completely fine on the front-end side of things, however, I&amp;#39;m struggling to conceptualize how this will work server-side. The only real examples I&amp;#39;ve found online utilize a 3rd party service which is unnecessary. The overall concept is:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;All current clients connect to a WS endpoint to receive changes (Vue + Vuex for the state, but this really isn&amp;#39;t important for my question)&lt;/li&gt;\n&lt;li&gt;A client creates a new task POSTing to an API endpoint that writes to Mongo -&amp;gt; triggers change stream&lt;/li&gt;\n&lt;li&gt;All &lt;em&gt;other&lt;/em&gt; clients receive the changes over WS and the app&amp;#39;s state is mutated to reflect those changes.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Does anyone have an example of how to do this? Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk55ew", "is_robot_indexable": true, "report_reasons": null, "author": "protechig", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fk55ew/does_anyone_have_an_examplereference_using/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fk55ew/does_anyone_have_an_examplereference_using/", "subreddit_subscribers": 106125, "created_utc": 1584451323.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_wstz3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "go-git has a new home! v5 and some explanations", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fjiye7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 92, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 92, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584383991.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjiye7", "is_robot_indexable": true, "report_reasons": null, "author": "_mcuadros", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fjiye7/gogit_has_a_new_home_v5_and_some_explanations/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/go-git/go-git/wiki/go-git-has-a-new-home!-v5-and-some-explanations", "subreddit_subscribers": 106125, "created_utc": 1584355191.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello i am designing a matchmaking sever for my game. I click on find match client ip is sent to server. Match is found. (here is where i don't know how to implement) how to send client the result of matchmaking? (result of matchmaking is an ip)", "author_fullname": "t2_1o73dbig", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Sending data from sever to client", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk1uw1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584463410.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello i am designing a matchmaking sever for my game. I click on find match client ip is sent to server. Match is found. (here is where i don&amp;#39;t know how to implement) how to send client the result of matchmaking? (result of matchmaking is an ip)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk1uw1", "is_robot_indexable": true, "report_reasons": null, "author": "irajsb", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fk1uw1/sending_data_from_sever_to_client/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fk1uw1/sending_data_from_sever_to_client/", "subreddit_subscribers": 106125, "created_utc": 1584434610.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I am looking at type assertions and it looks like the behavior is different based on whether you save the value to one variable, or two variables.\n\n&amp;#x200B;\n\nIs this something that's specific to type assertions, or are there other cases in which we can have this behavior ?\n\n&amp;#x200B;\n\nSample code: [https://play.golang.org/p/upnwMWeqdTk](https://play.golang.org/p/upnwMWeqdTk)", "author_fullname": "t2_26tnyus8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Different behavior based on number of arguments consumed", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk1m44", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584461885.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am looking at type assertions and it looks like the behavior is different based on whether you save the value to one variable, or two variables.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Is this something that&amp;#39;s specific to type assertions, or are there other cases in which we can have this behavior ?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Sample code: &lt;a href=\"https://play.golang.org/p/upnwMWeqdTk\"&gt;https://play.golang.org/p/upnwMWeqdTk&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk1m44", "is_robot_indexable": true, "report_reasons": null, "author": "triceraptawr", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fk1m44/different_behavior_based_on_number_of_arguments/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fk1m44/different_behavior_based_on_number_of_arguments/", "subreddit_subscribers": 106125, "created_utc": 1584433085.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I am running a task every 5 minutes and I want to log the error (if it faced the error) without exiting the program but the problem is \\`log.Fatal()\\` is exiting the program and \\`log.Panic()\\` will call \\`panic()\\` which again exits the program.  \nHow can I log the error without exiting the program?", "author_fullname": "t2_3td59k74", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to log errors without exiting the program?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk3l9n", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584473004.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am running a task every 5 minutes and I want to log the error (if it faced the error) without exiting the program but the problem is `log.Fatal()` is exiting the program and `log.Panic()` will call `panic()` which again exits the program.&lt;br/&gt;\nHow can I log the error without exiting the program?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk3l9n", "is_robot_indexable": true, "report_reasons": null, "author": "a-varf", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fk3l9n/how_to_log_errors_without_exiting_the_program/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fk3l9n/how_to_log_errors_without_exiting_the_program/", "subreddit_subscribers": 106125, "created_utc": 1584444204.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3oz08uvd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Processing in the console", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk0p5g", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "processing", "selftext": "Hello there,\n\ndue to the covid-19 quarantine im grounded and have **too much** free time.\n\nThe result of this is *drawlab*, a *cool* programming environment, just like Processing of p5.js, that allows you to draw the sketches you'd draw on canvas, in the console!\n\nThis is a small preview of what it can do :).\n\nIn case one of you might wanna look into my code or/and try it out, feel free to clone my repo! Feedback is welcomed!\n\nInstallation and usage:\n\n* Drawlab is entirely written in Golang, so you need to install that\n* Copy the project to the GOPATH\n* Type go run main.go in the cmd directory\n* If you want to write some sketch on your own, edit the code.dl file in the cmd dir :) (I know, it's dirty, but I'm far from done, so I didn't include any cli options *yet*)\n\nHope you like it :)\n\nLink to repo: [https://github.com/BartoszBurgiel/drawlab](https://github.com/BartoszBurgiel/drawlab)\n\nhttps://preview.redd.it/tnm2qc3y83n41.png?width=1245&amp;format=png&amp;auto=webp&amp;s=8636c32a82661227f6763744beba3f00b6b4f631", "author_fullname": "t2_3oz08uvd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Processing in the console", "link_flair_richtext": [], "subreddit_name_prefixed": "r/processing", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "media_metadata": {"tnm2qc3y83n41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 44, "x": 108, "u": "https://external-preview.redd.it/tnm2qc3y83n41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=b9e52b8732da33f6103d0a327bae22b73eb732e5"}, {"y": 89, "x": 216, "u": "https://external-preview.redd.it/tnm2qc3y83n41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=fdc33466668837caf9651459030044ad03ed6f6a"}, {"y": 132, "x": 320, "u": "https://external-preview.redd.it/tnm2qc3y83n41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=ea6f94e417067aa1a0e185eb53a11bea054367db"}, {"y": 264, "x": 640, "u": "https://external-preview.redd.it/tnm2qc3y83n41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=827601729112846d1e15679020ea49cb81f92806"}, {"y": 396, "x": 960, "u": "https://external-preview.redd.it/tnm2qc3y83n41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=7971db62288a7d32793bc3a24ea71dd2f6a16f5e"}, {"y": 445, "x": 1080, "u": "https://external-preview.redd.it/tnm2qc3y83n41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c7acc328502fbe78f64ecb81c3daace674cc4dff"}], "s": {"y": 514, "x": 1245, "u": "https://preview.redd.it/tnm2qc3y83n41.png?width=1245&amp;format=png&amp;auto=webp&amp;s=8636c32a82661227f6763744beba3f00b6b4f631"}, "id": "tnm2qc3y83n41"}}, "name": "t3_fjr0u6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584416556.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.processing", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello there,&lt;/p&gt;\n\n&lt;p&gt;due to the covid-19 quarantine im grounded and have &lt;strong&gt;too much&lt;/strong&gt; free time.&lt;/p&gt;\n\n&lt;p&gt;The result of this is &lt;em&gt;drawlab&lt;/em&gt;, a &lt;em&gt;cool&lt;/em&gt; programming environment, just like Processing of p5.js, that allows you to draw the sketches you&amp;#39;d draw on canvas, in the console!&lt;/p&gt;\n\n&lt;p&gt;This is a small preview of what it can do :).&lt;/p&gt;\n\n&lt;p&gt;In case one of you might wanna look into my code or/and try it out, feel free to clone my repo! Feedback is welcomed!&lt;/p&gt;\n\n&lt;p&gt;Installation and usage:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Drawlab is entirely written in Golang, so you need to install that&lt;/li&gt;\n&lt;li&gt;Copy the project to the GOPATH&lt;/li&gt;\n&lt;li&gt;Type go run main.go in the cmd directory&lt;/li&gt;\n&lt;li&gt;If you want to write some sketch on your own, edit the code.dl file in the cmd dir :) (I know, it&amp;#39;s dirty, but I&amp;#39;m far from done, so I didn&amp;#39;t include any cli options &lt;em&gt;yet&lt;/em&gt;)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Hope you like it :)&lt;/p&gt;\n\n&lt;p&gt;Link to repo: &lt;a href=\"https://github.com/BartoszBurgiel/drawlab\"&gt;https://github.com/BartoszBurgiel/drawlab&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/tnm2qc3y83n41.png?width=1245&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=8636c32a82661227f6763744beba3f00b6b4f631\"&gt;https://preview.redd.it/tnm2qc3y83n41.png?width=1245&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=8636c32a82661227f6763744beba3f00b6b4f631&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qt25", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjr0u6", "is_robot_indexable": true, "report_reasons": null, "author": "DrAdalbbert", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/processing/comments/fjr0u6/processing_in_the_console/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/processing/comments/fjr0u6/processing_in_the_console/", "subreddit_subscribers": 12965, "created_utc": 1584387756.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1584456602.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.processing", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk0p5g", "is_robot_indexable": true, "report_reasons": null, "author": "DrAdalbbert", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_fjr0u6", "author_flair_text_color": null, "permalink": "/r/golang/comments/fk0p5g/processing_in_the_console/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/processing/comments/fjr0u6/processing_in_the_console/", "subreddit_subscribers": 106125, "created_utc": 1584427802.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm new to golang and trying to use it for networking and found some Python code which is doing what I'm trying to do but uses a hash table in a way I haven't seen before.\n\nThis is the initialization\n\n    ip_dict = {}\n\nThis is the code I'm having trouble understanding\n\n    src_ip_addr_str = socket.inet_ntoa(ip_hdr.src)\n    dst_ip_addr_str = socket.inet_ntoa(ip_hdr.dst)\n    \n    if syn_flag and not ack_flag:\n        if src_ip_addr_str in ip_dict:\n            ip_dict[src_ip_addr_str]['SYN'] += 1\n        else:\n            ip_dict[src_ip_addr_str] = {'SYN':1, 'SYN-ACK':0}\n\nI'm having trouble understanding the code in the 2nd if-statement and the else statement. \n\nHow is it possible to interact with a hash table in 2 seemingly different formats? The first hash table indexing appears to need \\['SYN'\\] at the after the source's ip address string, \\[src\\_ip\\_addr\\_str\\] whereas in the else-statement, no \\['SYN'\\] is needed and the input isn't just an integer.\n\nI'm not sure how to initialize a hash table to do this. I initially tried this:\n\n    var synMap = make(map[string]int)\n    ...\n    if tcp.SYN == true &amp;&amp; tcp.ACK == false {\n        srcIPString := ip.SrcIP.String()\n        value, ok := synMap[srcIPString]\n        if ok {\n    \tvalue[\"SYN\"]++\n        } else {\n    \tsynMap[srcIPString] = {\"SYN\": 1, \"SYN-ACK\": 0}\n        }\n    }\n\nbut am getting the error for the line \"synMap\\[srcIPString\\] = {\"SYN\": 1, \"SYN-ACK\": 0}\":  \n\nsyntax error: unexpected {, expecting expression\n\nCan someone please explain what these 2 different lines are doing and how it's possible to interact with the same hash table in this way? I'm trying to convert these 2 lines to golang and having a lot of trouble.", "author_fullname": "t2_3f1yyxzm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Trying to convert Python to Golang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fjybos", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584444665.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m new to golang and trying to use it for networking and found some Python code which is doing what I&amp;#39;m trying to do but uses a hash table in a way I haven&amp;#39;t seen before.&lt;/p&gt;\n\n&lt;p&gt;This is the initialization&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ip_dict = {}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is the code I&amp;#39;m having trouble understanding&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;src_ip_addr_str = socket.inet_ntoa(ip_hdr.src)\ndst_ip_addr_str = socket.inet_ntoa(ip_hdr.dst)\n\nif syn_flag and not ack_flag:\n    if src_ip_addr_str in ip_dict:\n        ip_dict[src_ip_addr_str][&amp;#39;SYN&amp;#39;] += 1\n    else:\n        ip_dict[src_ip_addr_str] = {&amp;#39;SYN&amp;#39;:1, &amp;#39;SYN-ACK&amp;#39;:0}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m having trouble understanding the code in the 2nd if-statement and the else statement. &lt;/p&gt;\n\n&lt;p&gt;How is it possible to interact with a hash table in 2 seemingly different formats? The first hash table indexing appears to need [&amp;#39;SYN&amp;#39;] at the after the source&amp;#39;s ip address string, [src_ip_addr_str] whereas in the else-statement, no [&amp;#39;SYN&amp;#39;] is needed and the input isn&amp;#39;t just an integer.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not sure how to initialize a hash table to do this. I initially tried this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var synMap = make(map[string]int)\n...\nif tcp.SYN == true &amp;amp;&amp;amp; tcp.ACK == false {\n    srcIPString := ip.SrcIP.String()\n    value, ok := synMap[srcIPString]\n    if ok {\n    value[&amp;quot;SYN&amp;quot;]++\n    } else {\n    synMap[srcIPString] = {&amp;quot;SYN&amp;quot;: 1, &amp;quot;SYN-ACK&amp;quot;: 0}\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but am getting the error for the line &amp;quot;synMap[srcIPString] = {&amp;quot;SYN&amp;quot;: 1, &amp;quot;SYN-ACK&amp;quot;: 0}&amp;quot;:  &lt;/p&gt;\n\n&lt;p&gt;syntax error: unexpected {, expecting expression&lt;/p&gt;\n\n&lt;p&gt;Can someone please explain what these 2 different lines are doing and how it&amp;#39;s possible to interact with the same hash table in this way? I&amp;#39;m trying to convert these 2 lines to golang and having a lot of trouble.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjybos", "is_robot_indexable": true, "report_reasons": null, "author": "_SadSupermarket", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fjybos/trying_to_convert_python_to_golang/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fjybos/trying_to_convert_python_to_golang/", "subreddit_subscribers": 106125, "created_utc": 1584415865.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fjybos", "before": null}}