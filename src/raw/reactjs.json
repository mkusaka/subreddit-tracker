{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "&gt; Previous Beginner's Threads can be found in the [wiki][wiki previous threads].\n\nGot questions about React or anything else in its ecosystem?  \nStuck making progress on your app?  \nAsk away! We\u2019re a friendly bunch.\n\nNo question is too simple. \ud83d\ude42\n\n---\n\n## Want Help with your Code?\n\n1. **Improve your chances** by adding a minimal example with [JSFiddle][jsfiddle], [CodeSandbox][code sandbox], or [Stackblitz][stackblitz].\n    - Describe what you want it to do, and things you've tried. Don't just post big blocks of code!\n    - **[Formatting Code][wiki formatting code]** wiki shows how to format code in this thread.\n1. **Pay it forward!** Answer questions even if there is already an answer. Other perspectives can be helpful to beginners. Also, there's no quicker way to learn than [being wrong on the Internet][being wrong on the internet].\n\n---\n\n## New to React?\n\n### Check out the sub's **sidebar**! \ud83d\udc49\n\n\ud83c\udd93 Here are great, **free** resources!\n\n- [Read the **official** Getting Started page][official getting started page] on the docs.\n- [Microsoft Frontend Bootcamp][microsoft frontend bootcamp]\n- [Codecademy's React courses][codecademy's react courses]\n- [Scrimba's React Course][scrimba's react course]\n- [FreeCodeCamp's React course][freecodecamp's react course]\n- [Kent Dodd's Egghead.io course][kent dodd's egghead.io course]\n- New to Hooks? Check out [Amelia Wattenberger's Thinking in React Hooks][thinking in react hooks]\n- and these React Hook recipes on [useHooks.com][useHooks.com] by [Gabe Ragland](https://twitter.com/gabe_ragland)\n- What other updated resources do you suggest?\n\nAny ideas/suggestions to improve this thread - feel free to comment here!\n\n_Finally, thank you to all who post questions and those who answer them. We're a growing community and [helping each other][learn by teaching] only [strengthens it!][learn in public]_\n\n---\n\n[useHooks.com]: https://usehooks.com/\n[thinking in react hooks]: https://wattenberger.com/blog/react-hooks\n[freecodecamp's react course]: https://www.freecodecamp.org/news/learn-react-course/\n[microsoft frontend bootcamp]: https://www.reddit.com/r/reactjs/comments/auu02f/microsoft_has_open_sourced_their_frontend/\n[official getting started page]: https://reactjs.org/docs/getting-started.html\n[/u/acemarke]: https://www.reddit.com/u/acemarke\n[suggested resources for learning react]: http://blog.isquaredsoftware.com/2017/12/blogged-answers-learn-react/\n[kent dodd's egghead.io course]: http://kcd.im/beginner-react\n[codecademy's react courses]: https://www.codecademy.com/catalog/language/javascript\n[scrimba's react course]: https://scrimba.com/g/glearnreact\n[wiki formatting code]: https://www.reddit.com/r/reactjs/wiki/index#wiki_formatting_code\n[wiki previous threads]: https://www.reddit.com/r/reactjs/wiki/index#wiki_previous_threads\n[code sandbox]: https://codesandbox.io/s/new\n[jsfiddle]: https://jsfiddle.net/Luktwrdm/\n[stackblitz]: https://stackblitz.com/\n[being wrong on the internet]: https://xkcd.com/386/\n[tweet organization]: https://twitter.com/dan_abramov/status/1027245759232651270?lang=en\n[get started with redux]: https://www.reddit.com/r/reactjs/wiki/index#wiki_getting_started_with_redux\n[learn by teaching]: https://en.wikipedia.org/wiki/Learning_by_teaching\n[learn in public]: https://www.swyx.io/writing/learn-in-public/", "author_fullname": "t2_6gjgi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Beginner's Thread / Easy Questions (August 2020)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i1u5g1", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596325047.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Previous Beginner&amp;#39;s Threads can be found in the &lt;a href=\"https://www.reddit.com/r/reactjs/wiki/index#wiki_previous_threads\"&gt;wiki&lt;/a&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Got questions about React or anything else in its ecosystem?&lt;br/&gt;\nStuck making progress on your app?&lt;br/&gt;\nAsk away! We\u2019re a friendly bunch.&lt;/p&gt;\n\n&lt;p&gt;No question is too simple. \ud83d\ude42&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;Want Help with your Code?&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Improve your chances&lt;/strong&gt; by adding a minimal example with &lt;a href=\"https://jsfiddle.net/Luktwrdm/\"&gt;JSFiddle&lt;/a&gt;, &lt;a href=\"https://codesandbox.io/s/new\"&gt;CodeSandbox&lt;/a&gt;, or &lt;a href=\"https://stackblitz.com/\"&gt;Stackblitz&lt;/a&gt;.\n\n&lt;ul&gt;\n&lt;li&gt;Describe what you want it to do, and things you&amp;#39;ve tried. Don&amp;#39;t just post big blocks of code!&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=\"https://www.reddit.com/r/reactjs/wiki/index#wiki_formatting_code\"&gt;Formatting Code&lt;/a&gt;&lt;/strong&gt; wiki shows how to format code in this thread.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Pay it forward!&lt;/strong&gt; Answer questions even if there is already an answer. Other perspectives can be helpful to beginners. Also, there&amp;#39;s no quicker way to learn than &lt;a href=\"https://xkcd.com/386/\"&gt;being wrong on the Internet&lt;/a&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;New to React?&lt;/h2&gt;\n\n&lt;h3&gt;Check out the sub&amp;#39;s &lt;strong&gt;sidebar&lt;/strong&gt;! \ud83d\udc49&lt;/h3&gt;\n\n&lt;p&gt;\ud83c\udd93 Here are great, &lt;strong&gt;free&lt;/strong&gt; resources!&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://reactjs.org/docs/getting-started.html\"&gt;Read the &lt;strong&gt;official&lt;/strong&gt; Getting Started page&lt;/a&gt; on the docs.&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.reddit.com/r/reactjs/comments/auu02f/microsoft_has_open_sourced_their_frontend/\"&gt;Microsoft Frontend Bootcamp&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.codecademy.com/catalog/language/javascript\"&gt;Codecademy&amp;#39;s React courses&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://scrimba.com/g/glearnreact\"&gt;Scrimba&amp;#39;s React Course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.freecodecamp.org/news/learn-react-course/\"&gt;FreeCodeCamp&amp;#39;s React course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://kcd.im/beginner-react\"&gt;Kent Dodd&amp;#39;s Egghead.io course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;New to Hooks? Check out &lt;a href=\"https://wattenberger.com/blog/react-hooks\"&gt;Amelia Wattenberger&amp;#39;s Thinking in React Hooks&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;and these React Hook recipes on &lt;a href=\"https://usehooks.com/\"&gt;useHooks.com&lt;/a&gt; by &lt;a href=\"https://twitter.com/gabe_ragland\"&gt;Gabe Ragland&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;What other updated resources do you suggest?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Any ideas/suggestions to improve this thread - feel free to comment here!&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Finally, thank you to all who post questions and those who answer them. We&amp;#39;re a growing community and &lt;a href=\"https://en.wikipedia.org/wiki/Learning_by_teaching\"&gt;helping each other&lt;/a&gt; only &lt;a href=\"https://www.swyx.io/writing/learn-in-public/\"&gt;strengthens it!&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "i1u5g1", "is_robot_indexable": true, "report_reasons": null, "author": "dance2die", "discussion_type": null, "num_comments": 47, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i1u5g1/beginners_thread_easy_questions_august_2020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/reactjs/comments/i1u5g1/beginners_thread_easy_questions_august_2020/", "subreddit_subscribers": 205063, "created_utc": 1596296247.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "We alternate between **Who's Hiring** (on the 1st of the month, [most recent one here][hiring:most recent]) and **Who's Available** (on the 15th, [most recent one here][available:most recent])\n\nWelcome to **the biggest React job board in the world!** This is like Hacker News' **Who's Hiring** but just for React. Top Level comments must be **Job Opportunities.**\n\n\u26a0\ufe0f NEW: WE ARE REQUESTING EVERYBODY FOLLOW [THE HN Who's Hiring FORMAT][format:hiring:hn]\n\n**Company inc. | Job Title | City/State Location | Full-time/Part-Time | On-site/Remote | (Optional) Salary range | Website jobs page, other hard requirements etc.**\n\nexamples:\n\n- **Thorn | San Francisco or Remote (US based) | Full-time Contract | $100k - $150k | Software Engineer | https://www.wearethorn.org/**\n- **PolicyStat | Full-Stack Python+Django Software Engineer | Indianapolis, Vancouver, or REMOTE | Full Time | +\\$80k**\n\nPlease include as much information as possible. **If you are remote-friendly, or open to sponsoring work visas to your country, say so! These are the top 2 questions!**\n\nIf you are looking for jobs, send a PM to the poster or post in our [Who's Available thread!][available:most recent]\n\n[hiring:most recent]: https://www.reddit.com/r/reactjs/comments/hjbk8m/whos_hiring_july_2020/\n[available:most recent]: https://www.reddit.com/r/reactjs/comments/hseduu/whos_available_july_2020/", "author_fullname": "t2_6gjgi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's Hiring? [August 2020]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-careers", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i1u8a4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Careers", "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1596325322.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We alternate between &lt;strong&gt;Who&amp;#39;s Hiring&lt;/strong&gt; (on the 1st of the month, &lt;a href=\"https://www.reddit.com/r/reactjs/comments/hjbk8m/whos_hiring_july_2020/\"&gt;most recent one here&lt;/a&gt;) and &lt;strong&gt;Who&amp;#39;s Available&lt;/strong&gt; (on the 15th, &lt;a href=\"https://www.reddit.com/r/reactjs/comments/hseduu/whos_available_july_2020/\"&gt;most recent one here&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Welcome to &lt;strong&gt;the biggest React job board in the world!&lt;/strong&gt; This is like Hacker News&amp;#39; &lt;strong&gt;Who&amp;#39;s Hiring&lt;/strong&gt; but just for React. Top Level comments must be &lt;strong&gt;Job Opportunities.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;\u26a0\ufe0f NEW: WE ARE REQUESTING EVERYBODY FOLLOW [THE HN Who&amp;#39;s Hiring FORMAT][format:hiring:hn]&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Company inc. | Job Title | City/State Location | Full-time/Part-Time | On-site/Remote | (Optional) Salary range | Website jobs page, other hard requirements etc.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;examples:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Thorn | San Francisco or Remote (US based) | Full-time Contract | $100k - $150k | Software Engineer | &lt;a href=\"https://www.wearethorn.org/\"&gt;https://www.wearethorn.org/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;PolicyStat | Full-Stack Python+Django Software Engineer | Indianapolis, Vancouver, or REMOTE | Full Time | +\\$80k&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Please include as much information as possible. &lt;strong&gt;If you are remote-friendly, or open to sponsoring work visas to your country, say so! These are the top 2 questions!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you are looking for jobs, send a PM to the poster or post in our &lt;a href=\"https://www.reddit.com/r/reactjs/comments/hseduu/whos_available_july_2020/\"&gt;Who&amp;#39;s Available thread!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/DEKkidq3JiUgQLZHJbsTCwYbv_kcDBk79PoMADfFsXs.jpg?auto=webp&amp;s=1612e5ffc882a8bf593d2b1b629720fe406f172b", "width": 1200, "height": 628}, "resolutions": [{"url": "https://external-preview.redd.it/DEKkidq3JiUgQLZHJbsTCwYbv_kcDBk79PoMADfFsXs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8f7bed90aa801d6e780a1692ed41063ffa15aa1a", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/DEKkidq3JiUgQLZHJbsTCwYbv_kcDBk79PoMADfFsXs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e67816a5372266924c95074cd4a85028d426d38d", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/DEKkidq3JiUgQLZHJbsTCwYbv_kcDBk79PoMADfFsXs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=62d6806d4b83e6e80ac7a038eb8d9829ae92118a", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/DEKkidq3JiUgQLZHJbsTCwYbv_kcDBk79PoMADfFsXs.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f86858855c0765a43b86a66890ceef4f63c05d43", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/DEKkidq3JiUgQLZHJbsTCwYbv_kcDBk79PoMADfFsXs.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4644337d5ebb816cfb96c0a9c858831b50e87e37", "width": 960, "height": 502}, {"url": "https://external-preview.redd.it/DEKkidq3JiUgQLZHJbsTCwYbv_kcDBk79PoMADfFsXs.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8ff6a41d6e8a106fa273dac36a072ed17e8991d3", "width": 1080, "height": 565}], "variants": {}, "id": "GSBHf0hS7ESssI-VonsJhX7TEX0hL-Q5m9Td2CC1KRE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "8230d474-857b-11e8-8125-0ea00c291202", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#94e044", "id": "i1u8a4", "is_robot_indexable": true, "report_reasons": null, "author": "dance2die", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i1u8a4/whos_hiring_august_2020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/reactjs/comments/i1u8a4/whos_hiring_august_2020/", "subreddit_subscribers": 205063, "created_utc": 1596296522.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "So another dev and I have both been assigned to a team that has recently lost all of it's devs and we're to clean up the leftover react code.\n\nWe've both agreed to get rid of unnecessary class components and move more towards a functional approach, but i've always used \n\nReact.fc and he's always used JSX.element. Example below:\n\n    const HelloWorld: React.FC&lt;Iprops&gt; = ({name}) =&gt; &lt;div&gt;`hi ${name}`&lt;/div&gt;\n\nvs\n\n    function HelloWorld({name}: Iprops): JSX.Element {\n         return (&lt;div&gt;`hi ${name}`&lt;/div&gt;)\n    }\n\n\nI get it that React.FC is returning a ReactElement, but isn't JSX.Element also just a ReactElement without types? There would be no functional or performance difference between the two approaches correct? are there any pitfalls of using one over the other?", "author_fullname": "t2_a4aue", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React.FC vs JSX.Element", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i4jx85", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 73, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 73, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596711743.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So another dev and I have both been assigned to a team that has recently lost all of it&amp;#39;s devs and we&amp;#39;re to clean up the leftover react code.&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;ve both agreed to get rid of unnecessary class components and move more towards a functional approach, but i&amp;#39;ve always used &lt;/p&gt;\n\n&lt;p&gt;React.fc and he&amp;#39;s always used JSX.element. Example below:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const HelloWorld: React.FC&amp;lt;Iprops&amp;gt; = ({name}) =&amp;gt; &amp;lt;div&amp;gt;`hi ${name}`&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;vs&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function HelloWorld({name}: Iprops): JSX.Element {\n     return (&amp;lt;div&amp;gt;`hi ${name}`&amp;lt;/div&amp;gt;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I get it that React.FC is returning a ReactElement, but isn&amp;#39;t JSX.Element also just a ReactElement without types? There would be no functional or performance difference between the two approaches correct? are there any pitfalls of using one over the other?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "01a7aefe-4b81-11ea-bbb7-0e04580e4d4d", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "i4jx85", "is_robot_indexable": true, "report_reasons": null, "author": "denverdom303", "discussion_type": null, "num_comments": 66, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4jx85/reactfc_vs_jsxelement/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/i4jx85/reactfc_vs_jsxelement/", "subreddit_subscribers": 205063, "created_utc": 1596682943.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_3f14b", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Building an offline-first app with React + RxDB + Hasura GraphQL", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 78, "top_awarded_type": null, "hide_score": false, "name": "t3_i4q4tw", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/4mCnFWGruDrQ-emFLtzHqSErO_F37BAKdkhhVWHcShE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1596742365.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "hasura.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://hasura.io/learn/graphql/react-rxdb-offline-first/introduction/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/K4C7cGIfqkH0EATYQ7upNwjgNLpSM3eyLl7Czbf0Vww.jpg?auto=webp&amp;s=4d08dbd90b614ba931f54e7c64b7f3384e3860ce", "width": 1800, "height": 1013}, "resolutions": [{"url": "https://external-preview.redd.it/K4C7cGIfqkH0EATYQ7upNwjgNLpSM3eyLl7Czbf0Vww.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1320c4ba1daef6b570875cff4eb6515768eae8cb", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/K4C7cGIfqkH0EATYQ7upNwjgNLpSM3eyLl7Czbf0Vww.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=36e9ab2682354b3723c003fd0295876fec908dc1", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/K4C7cGIfqkH0EATYQ7upNwjgNLpSM3eyLl7Czbf0Vww.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b835c07ecd7267ad088f269938bf71b6e98df1f6", "width": 320, "height": 180}, {"url": "https://external-preview.redd.it/K4C7cGIfqkH0EATYQ7upNwjgNLpSM3eyLl7Czbf0Vww.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2d5dd20a5a283fe7c682590bbc38d71dcc54148c", "width": 640, "height": 360}, {"url": "https://external-preview.redd.it/K4C7cGIfqkH0EATYQ7upNwjgNLpSM3eyLl7Czbf0Vww.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=cfdb4cc23f7dca20a969f9b4dade0b6f2c8c7178", "width": 960, "height": 540}, {"url": "https://external-preview.redd.it/K4C7cGIfqkH0EATYQ7upNwjgNLpSM3eyLl7Czbf0Vww.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c10f008e93669fb7246738f4bf3ba65c23a74381", "width": 1080, "height": 607}], "variants": {}, "id": "0ViagnKjVOryIF81ojs97nm5Ep1zHRSn_0OfHSTpjKA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "i4q4tw", "is_robot_indexable": true, "report_reasons": null, "author": "PraveenWeb", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4q4tw/building_an_offlinefirst_app_with_react_rxdb/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://hasura.io/learn/graphql/react-rxdb-offline-first/introduction/", "subreddit_subscribers": 205063, "created_utc": 1596713565.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_2a9xoaxu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React + GraphQL boilerplate that scales easily", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 58, "top_awarded_type": null, "hide_score": false, "name": "t3_i44zx8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 179, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 179, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/SclSbPRlYaDy6v2h4zDixGhhlo9nVFSUMMZJtm6Xrx4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1596661576.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.graphqleditor.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://blog.graphqleditor.com/graphql-first-fullstack-boilerplate/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/rWqM3a-0ymswc7T35FOKq5DsI_RysUCNVFNVKt5u_4g.jpg?auto=webp&amp;s=743e303652286bdf6531f55091932ad29bb5fda9", "width": 1000, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/rWqM3a-0ymswc7T35FOKq5DsI_RysUCNVFNVKt5u_4g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e8583256a9cc89dc51b67bcabcf89be7e488984a", "width": 108, "height": 45}, {"url": "https://external-preview.redd.it/rWqM3a-0ymswc7T35FOKq5DsI_RysUCNVFNVKt5u_4g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ad53a5eac004c0944c10cb1ffc69adf0eeb3070a", "width": 216, "height": 90}, {"url": "https://external-preview.redd.it/rWqM3a-0ymswc7T35FOKq5DsI_RysUCNVFNVKt5u_4g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=03325d18f886d2fa81a64dfced300869e818c897", "width": 320, "height": 134}, {"url": "https://external-preview.redd.it/rWqM3a-0ymswc7T35FOKq5DsI_RysUCNVFNVKt5u_4g.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=32c1fab7c47d5d68c25bd7ed99e5652e1476fc02", "width": 640, "height": 268}, {"url": "https://external-preview.redd.it/rWqM3a-0ymswc7T35FOKq5DsI_RysUCNVFNVKt5u_4g.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=8d6f56486010777322301ee763b5c2adb1619bad", "width": 960, "height": 403}], "variants": {}, "id": "qgE13Kae9nK_w5WXyNhBMbKYONUsbLPtkAuQn4d_hrY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "i44zx8", "is_robot_indexable": true, "report_reasons": null, "author": "oczekkk", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i44zx8/react_graphql_boilerplate_that_scales_easily/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.graphqleditor.com/graphql-first-fullstack-boilerplate/", "subreddit_subscribers": 205063, "created_utc": 1596632776.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_10yfl9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Create simple POS with React.js, Node.js, and MongoDB #11: CRUD with Relation", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": true, "name": "t3_i4qto1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Rv5mpCVmGdHQpXppOwX10m7ZyA2n3-c-F0i64MDC-cw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1596745296.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.soshace.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://blog.soshace.com/create-simple-pos-with-react-js-node-js-and-mongodb-11-crud-with-relation/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Xg0-Ww5AP9YBbqhSbYdJm7z9unW7_2C0DT-t0-6fY7M.jpg?auto=webp&amp;s=6f5bf7c583bf91267aa11ef6c21aa7b7da52e40f", "width": 1260, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/Xg0-Ww5AP9YBbqhSbYdJm7z9unW7_2C0DT-t0-6fY7M.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f5fc3e41959d37a10e2b5d6fb19bb799af369cbf", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/Xg0-Ww5AP9YBbqhSbYdJm7z9unW7_2C0DT-t0-6fY7M.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c784f3aaf053fa7a7bded6ba03701b17cd2e727d", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/Xg0-Ww5AP9YBbqhSbYdJm7z9unW7_2C0DT-t0-6fY7M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b5c262052677f69cef191b31f6a798201e4e2e17", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/Xg0-Ww5AP9YBbqhSbYdJm7z9unW7_2C0DT-t0-6fY7M.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6533f662d331fbc77c359467f667f01b0bb5fd20", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/Xg0-Ww5AP9YBbqhSbYdJm7z9unW7_2C0DT-t0-6fY7M.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=10c5400826e6aa5a72ba4e34ed692f469639904a", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/Xg0-Ww5AP9YBbqhSbYdJm7z9unW7_2C0DT-t0-6fY7M.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a9fe2a335961116c716bb44cc337faf2c070f209", "width": 1080, "height": 540}], "variants": {}, "id": "SR3tJnk2DrrJ-WOMbhqtoByZ_7IUjE9E6XjN4bAEhnE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "i4qto1", "is_robot_indexable": true, "report_reasons": null, "author": "branikita", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4qto1/create_simple_pos_with_reactjs_nodejs_and_mongodb/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.soshace.com/create-simple-pos-with-react-js-node-js-and-mongodb-11-crud-with-relation/", "subreddit_subscribers": 205063, "created_utc": 1596716496.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_j3183", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A thread of \"advanced\" React interview questions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_i4a45q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 43, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A thread of &amp;quot;advanced&amp;quot; React interview questions.&lt;br&gt;&lt;br&gt;1/ React.memo can improve the performance of your React app. Why not use it on every component?&lt;/p&gt;&amp;mdash; Paul Shen (@_paulshen) &lt;a href=\"https://twitter.com/_paulshen/status/1291065955594862593?ref_src=twsrc%5Etfw\"&gt;August 5, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 200}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/_paulshen/status/1291065955594862593", "author_name": "Paul Shen", "height": 0, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A thread of &amp;quot;advanced&amp;quot; React interview questions.&lt;br&gt;&lt;br&gt;1/ React.memo can improve the performance of your React app. Why not use it on every component?&lt;/p&gt;&amp;mdash; Paul Shen (@_paulshen) &lt;a href=\"https://twitter.com/_paulshen/status/1291065955594862593?ref_src=twsrc%5Etfw\"&gt;August 5, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/_paulshen", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A thread of &amp;quot;advanced&amp;quot; React interview questions.&lt;br&gt;&lt;br&gt;1/ React.memo can improve the performance of your React app. Why not use it on every component?&lt;/p&gt;&amp;mdash; Paul Shen (@_paulshen) &lt;a href=\"https://twitter.com/_paulshen/status/1291065955594862593?ref_src=twsrc%5Etfw\"&gt;August 5, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/i4a45q", "height": 200}, "link_flair_text": "Resource", "can_mod_post": false, "score": 43, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/uCo5zlzg2a_5AoRe9bNf3V8UoBFZ5ed3nyfVAzC8ObQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1596678738.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://twitter.com/_paulshen/status/1291065955594862593", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/wwyekvIraJ7ddI4AZoI0KOE3JGfXcycBA3n3dzI9mFY.jpg?auto=webp&amp;s=8d676cb17462e887af3bf2848628724960af51d6", "width": 140, "height": 140}, "resolutions": [{"url": "https://external-preview.redd.it/wwyekvIraJ7ddI4AZoI0KOE3JGfXcycBA3n3dzI9mFY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=46a9438a5db39c301e3ecd02207e0854c48e4efb", "width": 108, "height": 108}], "variants": {}, "id": "nBli5bOlMRjB9U0RfvMH0yEvbPol5AzmDcEo7gLRlG0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "i4a45q", "is_robot_indexable": true, "report_reasons": null, "author": "paulshen", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4a45q/a_thread_of_advanced_react_interview_questions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/_paulshen/status/1291065955594862593", "subreddit_subscribers": 205063, "created_utc": 1596649938.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/_paulshen/status/1291065955594862593", "author_name": "Paul Shen", "height": 0, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A thread of &amp;quot;advanced&amp;quot; React interview questions.&lt;br&gt;&lt;br&gt;1/ React.memo can improve the performance of your React app. Why not use it on every component?&lt;/p&gt;&amp;mdash; Paul Shen (@_paulshen) &lt;a href=\"https://twitter.com/_paulshen/status/1291065955594862593?ref_src=twsrc%5Etfw\"&gt;August 5, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/_paulshen", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I'll explain what I need to do because I may not need to do this by creating multiple refs.\n\nMy component has multiple things which I need to animate, think of it as a menu hamburger with 3 lines and I need to animate each one separately.\n\nI need to get access to them from my parent component which is just my app.js component because I need to animate them within a timeline which involves other components.\n\nDo I need to create a forwardRef to each element (line) in my menu hamburger that I am wanting to animate?\n\nOr can I just create a forwardRef to the outter HTML element of the hamburger and then access the elements within this (somehow) when I do my animation.\n\nI'm using functional React for this.", "author_fullname": "t2_6cslinbh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Can I use React.forwardRef for mulitple refs in one component", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_i4rtbq", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596749350.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll explain what I need to do because I may not need to do this by creating multiple refs.&lt;/p&gt;\n\n&lt;p&gt;My component has multiple things which I need to animate, think of it as a menu hamburger with 3 lines and I need to animate each one separately.&lt;/p&gt;\n\n&lt;p&gt;I need to get access to them from my parent component which is just my app.js component because I need to animate them within a timeline which involves other components.&lt;/p&gt;\n\n&lt;p&gt;Do I need to create a forwardRef to each element (line) in my menu hamburger that I am wanting to animate?&lt;/p&gt;\n\n&lt;p&gt;Or can I just create a forwardRef to the outter HTML element of the hamburger and then access the elements within this (somehow) when I do my animation.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m using functional React for this.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "i4rtbq", "is_robot_indexable": true, "report_reasons": null, "author": "abc123qwerty123", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4rtbq/can_i_use_reactforwardref_for_mulitple_refs_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/i4rtbq/can_i_use_reactforwardref_for_mulitple_refs_in/", "subreddit_subscribers": 205063, "created_utc": 1596720550.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "So, I'm working on a project using ReactJS (CRA) as my front end framework and it has a blog wherein we're using [ghost.io](https://ghost.io), the idea is we're using its API for us to fetch the articles and post / show it in our website, it is working but since blog needs to have unique meta tags, SEO friendly, etc. I'm kinda having a problem with it. React snap only works when you're trying to build and deploy but if I add another one or a new blog it doesn't crawl the new one's SEO and meta tags and if you try to use FB Debugger, meta tags cannot be shown or can't be seen since the website is on production already. My option is re-build and re-deploy every time that there's a new blog for me to actually get the new meta tags or set the meta tags, this one is not really a good solution.\n\nAnyone here can help me or suggest any good dynamic SSR? Wherein I don't have to worry every time that there's a new blog. Using another framework like Next or Razzle is not an option. Thank you!", "author_fullname": "t2_14ren6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React SSR using react-snap", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_i4rrjw", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596749160.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So, I&amp;#39;m working on a project using ReactJS (CRA) as my front end framework and it has a blog wherein we&amp;#39;re using &lt;a href=\"https://ghost.io\"&gt;ghost.io&lt;/a&gt;, the idea is we&amp;#39;re using its API for us to fetch the articles and post / show it in our website, it is working but since blog needs to have unique meta tags, SEO friendly, etc. I&amp;#39;m kinda having a problem with it. React snap only works when you&amp;#39;re trying to build and deploy but if I add another one or a new blog it doesn&amp;#39;t crawl the new one&amp;#39;s SEO and meta tags and if you try to use FB Debugger, meta tags cannot be shown or can&amp;#39;t be seen since the website is on production already. My option is re-build and re-deploy every time that there&amp;#39;s a new blog for me to actually get the new meta tags or set the meta tags, this one is not really a good solution.&lt;/p&gt;\n\n&lt;p&gt;Anyone here can help me or suggest any good dynamic SSR? Wherein I don&amp;#39;t have to worry every time that there&amp;#39;s a new blog. Using another framework like Next or Razzle is not an option. Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "i4rrjw", "is_robot_indexable": true, "report_reasons": null, "author": "matchabeybe", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4rrjw/react_ssr_using_reactsnap/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/i4rrjw/react_ssr_using_reactsnap/", "subreddit_subscribers": 205063, "created_utc": 1596720360.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hi Guy \n\non my update data page use react-select for handle dropdown, and so  require to populate dropdown and make selected options. so I 've tried by using two request \n\nthe first request, populate a full list of dropdown \n\nthe second request, populate other form and make selected\n\nproblem here\n\n1. redux state will overwrite when we make first request and continue with second request because I  using same state name try solve by creating new reducer case for receive only option data\n```javascript\n   switch (type) {\n        case BRANCH_FETCHING:\n            return { ...state, isFetching: true, isError: false, result: null };\n        case BRANCH_FAILED:\n            return { ...state, isFetching: false, isError: true, result: null };\n        case BRANCH_SUCCESS:\n            return { ...state, isFetching: false, isError: false, result: payload };\n        case BRANCH_CLEAR:\n            return { ...state, result: null, isFetching: false, isError: false };\n        case FETCHOPTION_SUCCESS:\n            return { ...state, isFetching: false, isError: false, options: payload };\n        default:\n            return state;\n    }\n```\n2. react select doesn't provide method to set defaultValue after we populate dropdown solve by hold-on until data from reducer ready \n```javascript\n if (branchReducer.result) {\n                return (\n                    &lt;div class=\"form-group \"&gt;\n                        &lt;Select\n                            name=\"pos_machines\"\n                            defaultValue={branchReducer.result\n                                ? branchReducer.result.pos_machines.map(val =&gt; {\n                                    return {\n                                        'value': val._id,\n                                        'label': val.alias\n                                    }\n                                }) : null}\n                            onChange={setMultiselect}\n\n                            isMulti\n                            closeMenuOnSelect={false}\n                            options={branchReducer.options\n                                ? branchReducer.options : null}\n                        /&gt;\n                    &lt;/div&gt;\n\n                )\n            } else {\n                return null; \n            }\n````\nanything that improves code quality \nthank you for your advice", "author_fullname": "t2_20hr56h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "need someone help review code on populate react-select", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-code-review", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i4jx6x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Code Review Request", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596711740.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi Guy &lt;/p&gt;\n\n&lt;p&gt;on my update data page use react-select for handle dropdown, and so  require to populate dropdown and make selected options. so I &amp;#39;ve tried by using two request &lt;/p&gt;\n\n&lt;p&gt;the first request, populate a full list of dropdown &lt;/p&gt;\n\n&lt;p&gt;the second request, populate other form and make selected&lt;/p&gt;\n\n&lt;p&gt;problem here&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;redux state will overwrite when we make first request and continue with second request because I  using same state name try solve by creating new reducer case for receive only option data\n&lt;code&gt;javascript\nswitch (type) {\n    case BRANCH_FETCHING:\n        return { ...state, isFetching: true, isError: false, result: null };\n    case BRANCH_FAILED:\n        return { ...state, isFetching: false, isError: true, result: null };\n    case BRANCH_SUCCESS:\n        return { ...state, isFetching: false, isError: false, result: payload };\n    case BRANCH_CLEAR:\n        return { ...state, result: null, isFetching: false, isError: false };\n    case FETCHOPTION_SUCCESS:\n        return { ...state, isFetching: false, isError: false, options: payload };\n    default:\n        return state;\n}\n&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;react select doesn&amp;#39;t provide method to set defaultValue after we populate dropdown solve by hold-on until data from reducer ready \n```javascript\nif (branchReducer.result) {\n            return (\n                &amp;lt;div class=&amp;quot;form-group &amp;quot;&amp;gt;\n                    &amp;lt;Select\n                        name=&amp;quot;pos_machines&amp;quot;\n                        defaultValue={branchReducer.result\n                            ? branchReducer.result.pos_machines.map(val =&amp;gt; {\n                                return {\n                                    &amp;#39;value&amp;#39;: val._id,\n                                    &amp;#39;label&amp;#39;: val.alias\n                                }\n                            }) : null}\n                        onChange={setMultiselect}&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;                    isMulti\n                    closeMenuOnSelect={false}\n                    options={branchReducer.options\n                        ? branchReducer.options : null}\n                /&amp;gt;\n            &amp;lt;/div&amp;gt;\n\n        )\n    } else {\n        return null; \n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;````\nanything that improves code quality \nthank you for your advice&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "178ea150-4b81-11ea-89a7-0ec4d26e08ff", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "i4jx6x", "is_robot_indexable": true, "report_reasons": null, "author": "taqmanplus", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4jx6x/need_someone_help_review_code_on_populate/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/i4jx6x/need_someone_help_review_code_on_populate/", "subreddit_subscribers": 205063, "created_utc": 1596682940.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I am working on a project right now and trying to learn and use hooks more. In my component I am making a call to my api using axios and trying to store the queried json data in a useState hook like so\n\nHook:\n\nconst \\[games, setGames\\] = useState(\\[\\]);\n\n...\n\n[axios.post](https://axios.post)(url, payload)\n\n.then((res) =&gt; {\n\nsetGames(res.data);\n\n}\n\n&amp;#x200B;\n\nI know that that is not how I am supposed to use the setGames part of useState but I have tried several other methods and nothing works. I know that the post request is returning the data that I want, but when I try and put it into my components state it comes back as an empty array\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nEDIT: Problem solved. Added a useEffect hook to console.log my games state once it had been updated. Forgot about useState's asynchronous properties. Thanks to everybody for offering guidance", "author_fullname": "t2_r6xya", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Issue with hooks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_i4qx7h", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1596718050.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596745736.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am working on a project right now and trying to learn and use hooks more. In my component I am making a call to my api using axios and trying to store the queried json data in a useState hook like so&lt;/p&gt;\n\n&lt;p&gt;Hook:&lt;/p&gt;\n\n&lt;p&gt;const [games, setGames] = useState([]);&lt;/p&gt;\n\n&lt;p&gt;...&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://axios.post\"&gt;axios.post&lt;/a&gt;(url, payload)&lt;/p&gt;\n\n&lt;p&gt;.then((res) =&amp;gt; {&lt;/p&gt;\n\n&lt;p&gt;setGames(res.data);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I know that that is not how I am supposed to use the setGames part of useState but I have tried several other methods and nothing works. I know that the post request is returning the data that I want, but when I try and put it into my components state it comes back as an empty array&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;EDIT: Problem solved. Added a useEffect hook to console.log my games state once it had been updated. Forgot about useState&amp;#39;s asynchronous properties. Thanks to everybody for offering guidance&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i4qx7h", "is_robot_indexable": true, "report_reasons": null, "author": "Raskputin", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4qx7h/issue_with_hooks/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/i4qx7h/issue_with_hooks/", "subreddit_subscribers": 205063, "created_utc": 1596716936.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_igi2c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Shared State with React Hooks and Context API \ud83d\udc7e", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_i4mhxk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.57, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/SvGbNU8rE1Da-i5__YjTwh6Y9exq8ukaayZJYYRvaic.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1596723509.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.sabinthedev.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://blog.sabinthedev.com/shared-state-with-react-hooks-and-context-api-ckdhvq3eq002rlts1b9m90twt", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8OGkOuA-406cDtjOFEI2-LZm3Y_bkLnsnBP8EMeY_Ws.jpg?auto=webp&amp;s=ea396a36cef4d4991588b9cd38ab9431786168bc", "width": 800, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/8OGkOuA-406cDtjOFEI2-LZm3Y_bkLnsnBP8EMeY_Ws.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ce82cd38fce7e18d5467e16a944314fbd7ed7bf9", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/8OGkOuA-406cDtjOFEI2-LZm3Y_bkLnsnBP8EMeY_Ws.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=efb26f9743ecbc4101c0a16c50417d8ac10eaa81", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/8OGkOuA-406cDtjOFEI2-LZm3Y_bkLnsnBP8EMeY_Ws.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=10e1bddf0ce63ca6ce8b63cf2bbb060c421d2311", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/8OGkOuA-406cDtjOFEI2-LZm3Y_bkLnsnBP8EMeY_Ws.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=76bd4510b71ce199c78555c46e7a3fa29fc28966", "width": 640, "height": 336}], "variants": {}, "id": "W_VgZgxR_23wTR0VeHVZgY3FuawWQG_ZW5bIwOa--yc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "i4mhxk", "is_robot_indexable": true, "report_reasons": null, "author": "cheerfulboy", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/i4mhxk/shared_state_with_react_hooks_and_context_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.sabinthedev.com/shared-state-with-react-hooks-and-context-api-ckdhvq3eq002rlts1b9m90twt", "subreddit_subscribers": 205063, "created_utc": 1596694709.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_i4mhxk", "before": null}}