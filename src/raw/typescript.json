{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - September", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ik9rft", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1598947533.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ik9rft", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 3, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ik9rft/whos_hiring_typescript_developers_september/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/ik9rft/whos_hiring_typescript_developers_september/", "subreddit_subscribers": 49080, "created_utc": 1598918733.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_jb2bz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Not quite what I was looking for", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 78, "top_awarded_type": null, "hide_score": false, "name": "t3_iyur8c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 488}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/FarPixel/status/1309077814117904389", "author_name": "Josh Farrant", "height": 488, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/FarPixel", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/iyur8c", "height": 488}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "nsfw", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600972364.0, "link_flair_type": "text", "wls": 3, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://twitter.com/FarPixel/status/1309077814117904389", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": true, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?auto=webp&amp;s=19334802e4591d000a95ec1688a000f53cd8fb06", "width": 140, "height": 78}, "resolutions": [{"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=911ba998ebb131878d11922f218a6e70e41b31b7", "width": 108, "height": 60}], "variants": {"obfuscated": {"source": {"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?blur=40&amp;format=pjpg&amp;auto=webp&amp;s=2b04be6b3ff1a1ab4a933bae0d7054010f3f7e51", "width": 140, "height": 78}, "resolutions": [{"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?width=108&amp;crop=smart&amp;blur=10&amp;format=pjpg&amp;auto=webp&amp;s=b337b1ae341fc8a8f76bac2be3745b3216268ca7", "width": 108, "height": 60}]}, "nsfw": {"source": {"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?blur=40&amp;format=pjpg&amp;auto=webp&amp;s=2b04be6b3ff1a1ab4a933bae0d7054010f3f7e51", "width": 140, "height": 78}, "resolutions": [{"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?width=108&amp;crop=smart&amp;blur=10&amp;format=pjpg&amp;auto=webp&amp;s=b337b1ae341fc8a8f76bac2be3745b3216268ca7", "width": 108, "height": 60}]}}, "id": "PgXyxdoE48jT1md3vO0kudUXeV9EP4czO2va3kHBkLc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyur8c", "is_robot_indexable": true, "report_reasons": null, "author": "joshfarrant", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "promo_adult_nsfw", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iyur8c/not_quite_what_i_was_looking_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/FarPixel/status/1309077814117904389", "subreddit_subscribers": 49080, "created_utc": 1600943564.0, "num_crossposts": 1, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/FarPixel/status/1309077814117904389", "author_name": "Josh Farrant", "height": 488, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/FarPixel", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_4j7tc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "types vs. interfaces", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_iylqrr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 64, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "TypeScript TYPES vs INTERFACES", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Basarat Ali", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/IXAT3If0pGI/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/basaratali"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/iylqrr", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 64, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/jqMCJv7ssG-W4lhb6brZGcHnm2_tnmtUrxKo9EIIoXI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600932248.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=IXAT3If0pGI", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?auto=webp&amp;s=555b787394a3bd231192fc3078b2f8222b43b370", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=73e3c8bc85a14b3206455117a5026327d5740d7c", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8c4fb610c29590b37440e91a6d6079884a5d8b03", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d334077a2a176b74365ed6b8de56ba6a122c8d60", "width": 320, "height": 240}], "variants": {}, "id": "jd7Bj4MQbYssH-QcbdEnq_-drXKHdHRyFPCR3B4SgIM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iylqrr", "is_robot_indexable": true, "report_reasons": null, "author": "basaratali", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iylqrr/types_vs_interfaces/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=IXAT3If0pGI", "subreddit_subscribers": 49080, "created_utc": 1600903448.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "TypeScript TYPES vs INTERFACES", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Basarat Ali", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/IXAT3If0pGI/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/basaratali"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_40ofuvyl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What\u2019s Structural Typing And How Typescript Uses It To Its Benefit?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": true, "name": "t3_iywrt5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/DHsS84vF9SfDC-qpYfc4OhEXR4GZcyjJ04jRNH8HhXM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600981112.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@mahdighajary/whats-structural-typing-and-how-typescript-use-it-to-its-benefit-6cf491f1564?source=friends_link&amp;sk=e0265b7bf135cc7e5d912d9e74d57afb", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?auto=webp&amp;s=11bfb67ae133ffbfe6b057247a9e2062cdd5bde5", "width": 400, "height": 565}, "resolutions": [{"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3d8fde2173eb38ec2559ae84fba75c610e899faa", "width": 108, "height": 152}, {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8834714211a51c77e99be51f0e5367c83cd8cc63", "width": 216, "height": 305}, {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=652da248579d77e827d532717e2c7cb38c1ec1b1", "width": 320, "height": 452}], "variants": {}, "id": "WXCOt4iMdszE6zsKi-2rId4fzveZ8iGdhbDbcNxjfwA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iywrt5", "is_robot_indexable": true, "report_reasons": null, "author": "fiveMop", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iywrt5/whats_structural_typing_and_how_typescript_uses/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@mahdighajary/whats-structural-typing-and-how-typescript-use-it-to-its-benefit-6cf491f1564?source=friends_link&amp;sk=e0265b7bf135cc7e5d912d9e74d57afb", "subreddit_subscribers": 49080, "created_utc": 1600952312.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Experimenting with the upcoming TypeScript 4.1's\u00a0template literal types, I tried to define a generic type that can check property paths.\n\nUntil TS 4.1, there was no possible way to type an expression such as\u00a0'foo.bar.baz', and you would have to settle for\u00a0string. Now, with template literal types, I want to be able to type these property paths, and use them for things such as MongoDB queries and projection objects. For example:\n\n`db.someCollection.find({ 'foo.bar.baz': { $exists: true } });`\n\nThis is the type that I came up with:\n\n```ts\ntype PropsPath&lt;T&gt; =\n    T extends object\n        ? T extends any[]\n            ? number\n            : {\n                [P in keyof T]: P | `${P}.${PropsPath&lt;T[P]&gt;}`\n            }[keyof T]\n        : '';\n```\n\n[Full example in TS Playground](https://www.typescriptlang.org/play?ts=4.1.0-dev.20200921#code/C4TwDgpgBACgTgezAZxgQ2ACwDwBUB8UAvAFBTlS5QQAewEAdgCbJQIBGAVhAMbBkVBAfkrU6jFlDQMQAbQC6AwcqgiGAVwC27CHCUqKALigBvfQeWyYUAJYMoAawggEAM0rzj1gD5QABgAkJjAAvgB0QfBIqBg4uFby+CF+5gYhsk4u7riKFsYA5PkA3CQkdvRwrmg80ADKCJoQuODQZoKuCAjGbQbsaHDGGtq6JYIh+n0AXsbsnQA2ENIl4yQ8CAzIwFBgXogo6FjY9Y3NkIREUPkdCMWlaxtbYIjcfDbrXv3ANmhz2ABKvAQcCY2Ci+1iRwaTRa+AANFAhjo4PhzqZ9FdOmE+nB8sYAIwkEJFIA)\n\nSadly, this type is considered \"excessively deep or possibly infinite\" by TS compiler. Is there any way to redefine it in a way that doesn't throw an error?", "author_fullname": "t2_13t0ma", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TS4.1: Is there a way to define this property path type that isn't excessively deep?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_iywewf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600979731.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Experimenting with the upcoming TypeScript 4.1&amp;#39;s\u00a0template literal types, I tried to define a generic type that can check property paths.&lt;/p&gt;\n\n&lt;p&gt;Until TS 4.1, there was no possible way to type an expression such as\u00a0&amp;#39;foo.bar.baz&amp;#39;, and you would have to settle for\u00a0string. Now, with template literal types, I want to be able to type these property paths, and use them for things such as MongoDB queries and projection objects. For example:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;db.someCollection.find({ &amp;#39;foo.bar.baz&amp;#39;: { $exists: true } });&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This is the type that I came up with:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ts\ntype PropsPath&amp;lt;T&amp;gt; =\n    T extends object\n        ? T extends any[]\n            ? number\n            : {\n                [P in keyof T]: P | `${P}.${PropsPath&amp;lt;T[P]&amp;gt;}`\n            }[keyof T]\n        : &amp;#39;&amp;#39;;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play?ts=4.1.0-dev.20200921#code/C4TwDgpgBACgTgezAZxgQ2ACwDwBUB8UAvAFBTlS5QQAewEAdgCbJQIBGAVhAMbBkVBAfkrU6jFlDQMQAbQC6AwcqgiGAVwC27CHCUqKALigBvfQeWyYUAJYMoAawggEAM0rzj1gD5QABgAkJjAAvgB0QfBIqBg4uFby+CF+5gYhsk4u7riKFsYA5PkA3CQkdvRwrmg80ADKCJoQuODQZoKuCAjGbQbsaHDGGtq6JYIh+n0AXsbsnQA2ENIl4yQ8CAzIwFBgXogo6FjY9Y3NkIREUPkdCMWlaxtbYIjcfDbrXv3ANmhz2ABKvAQcCY2Ci+1iRwaTRa+AANFAhjo4PhzqZ9FdOmE+nB8sYAIwkEJFIA\"&gt;Full example in TS Playground&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Sadly, this type is considered &amp;quot;excessively deep or possibly infinite&amp;quot; by TS compiler. Is there any way to redefine it in a way that doesn&amp;#39;t throw an error?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iywewf", "is_robot_indexable": true, "report_reasons": null, "author": "AmitPwnz", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iywewf/ts41_is_there_a_way_to_define_this_property_path/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iywewf/ts41_is_there_a_way_to_define_this_property_path/", "subreddit_subscribers": 49080, "created_utc": 1600950931.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_40ofuvyl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What\u2019s Structural Typing And How Typescript Use It To Its Benefit?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": true, "name": "t3_iywe8t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/DHsS84vF9SfDC-qpYfc4OhEXR4GZcyjJ04jRNH8HhXM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600979657.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@mahdighajary/whats-structural-typing-and-how-typescript-use-it-to-its-benefit-6cf491f1564?source=friends_link&amp;sk=e0265b7bf135cc7e5d912d9e74d57afb", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?auto=webp&amp;s=11bfb67ae133ffbfe6b057247a9e2062cdd5bde5", "width": 400, "height": 565}, "resolutions": [{"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3d8fde2173eb38ec2559ae84fba75c610e899faa", "width": 108, "height": 152}, {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8834714211a51c77e99be51f0e5367c83cd8cc63", "width": 216, "height": 305}, {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=652da248579d77e827d532717e2c7cb38c1ec1b1", "width": 320, "height": 452}], "variants": {}, "id": "WXCOt4iMdszE6zsKi-2rId4fzveZ8iGdhbDbcNxjfwA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iywe8t", "is_robot_indexable": true, "report_reasons": null, "author": "fiveMop", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iywe8t/whats_structural_typing_and_how_typescript_use_it/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@mahdighajary/whats-structural-typing-and-how-typescript-use-it-to-its-benefit-6cf491f1564?source=friends_link&amp;sk=e0265b7bf135cc7e5d912d9e74d57afb", "subreddit_subscribers": 49080, "created_utc": 1600950857.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Spent a lot of time trying to find an explanation of the following behavior:\n\n    const stringKey = 'thisKeyDoesNotExist'\n    const hashMap: {\n        [key: string]: {\n          valueNumber: number; \n          valueString: string;\n        };\n      } = {};\n    \n    \n    // TS does not complain\n    hashMap[stringKey] = hashMap[stringKey] || {\n              valueString: stringKey,\n              valueNumber: 'string!!!!!!!!!!!',\n            };\n    // TS does not complain\n    hashMap[stringKey] = hashMap[stringKey] || \"string\";\n    \n    // Only with this syntax TS complains that there is an issue with `valueNumber`\n    hashMap[stringKey] = hashMap[stringKey] ? hashMap[stringKey] : {\n              valueString: stringKey,\n              valueNumber: 'string!!!!!!!!!!!',\n            };\n\nCan somebody explain why the first 2 assignments are passing the TS checks?", "author_fullname": "t2_iobzmc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Need some help with index signature and OR", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iyh08i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1600889155.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600917766.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Spent a lot of time trying to find an explanation of the following behavior:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const stringKey = &amp;#39;thisKeyDoesNotExist&amp;#39;\nconst hashMap: {\n    [key: string]: {\n      valueNumber: number; \n      valueString: string;\n    };\n  } = {};\n\n\n// TS does not complain\nhashMap[stringKey] = hashMap[stringKey] || {\n          valueString: stringKey,\n          valueNumber: &amp;#39;string!!!!!!!!!!!&amp;#39;,\n        };\n// TS does not complain\nhashMap[stringKey] = hashMap[stringKey] || &amp;quot;string&amp;quot;;\n\n// Only with this syntax TS complains that there is an issue with `valueNumber`\nhashMap[stringKey] = hashMap[stringKey] ? hashMap[stringKey] : {\n          valueString: stringKey,\n          valueNumber: &amp;#39;string!!!!!!!!!!!&amp;#39;,\n        };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Can somebody explain why the first 2 assignments are passing the TS checks?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyh08i", "is_robot_indexable": true, "report_reasons": null, "author": "band1khatake", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iyh08i/need_some_help_with_index_signature_and_or/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iyh08i/need_some_help_with_index_signature_and_or/", "subreddit_subscribers": 49080, "created_utc": 1600888966.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I had to use this inside a fetch request, I consider it hacky but it works:\n\n        mode: 'cors' as const, // allows string to match a string union type\n\nI learned this here but never found an explanation for it. why does asserting the string as a const variable suddenly let it match a string union type (which I saw in the error popup)?", "author_fullname": "t2_3ob6osi0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why does setting 'as const' allow a string to match a string union type?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iy8b7t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600889306.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I had to use this inside a fetch request, I consider it hacky but it works:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    mode: &amp;#39;cors&amp;#39; as const, // allows string to match a string union type\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I learned this here but never found an explanation for it. why does asserting the string as a const variable suddenly let it match a string union type (which I saw in the error popup)?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iy8b7t", "is_robot_indexable": true, "report_reasons": null, "author": "embar5", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iy8b7t/why_does_setting_as_const_allow_a_string_to_match/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iy8b7t/why_does_setting_as_const_allow_a_string_to_match/", "subreddit_subscribers": 49080, "created_utc": 1600860506.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I am working on trying to narrow some typing in a library that needs to take a user defined function. I only want to support a narrow scope of function definitions, and I'm hoping to get help from the compiler. I was able to strip things down to the smallest example of the issue I'm seeing here:\n\n    type ValidateString = (value: string) =&gt; boolean;\n    type ValidateNumber = (value: number) =&gt; boolean;\n    type ValidationType&lt;T extends Validations&gt; = \n        T extends ValidateString ? string \n        : T extends ValidateNumber ? number\n        : never\n    type Validations = ValidateString|ValidateNumber\n    function validate&lt;T extends Validations&gt;(validation: T, value: ValidationType&lt;T&gt;) {\n        return validation(value) // &lt;-- Error\n    }\n\nThe error explained under `value`:\n\n    Argument of type 'ValidationType&lt;T&gt;' is not assignable to parameter of type 'never'.\n      Type 'string | (T extends ValidateNumber ? number : never)' is not assignable to type 'never'.\n        Type 'string' is not assignable to type 'never'.\n          Type 'string | number' is not assignable to type 'never'.\n            Type 'string' is not assignable to type 'never'.(2345)\n\nUltimately this is part of a bigger library where the library will receive a \"schema\" with attributes. Each attribute could optionally have a \"validation\" property, which would include a user defined function to validate the attribute. If you know of any examples in other applications that does this, or something similar, that would also be helpful.", "author_fullname": "t2_don74", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Discriminated unions with functions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iyc8fj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600903526.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am working on trying to narrow some typing in a library that needs to take a user defined function. I only want to support a narrow scope of function definitions, and I&amp;#39;m hoping to get help from the compiler. I was able to strip things down to the smallest example of the issue I&amp;#39;m seeing here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type ValidateString = (value: string) =&amp;gt; boolean;\ntype ValidateNumber = (value: number) =&amp;gt; boolean;\ntype ValidationType&amp;lt;T extends Validations&amp;gt; = \n    T extends ValidateString ? string \n    : T extends ValidateNumber ? number\n    : never\ntype Validations = ValidateString|ValidateNumber\nfunction validate&amp;lt;T extends Validations&amp;gt;(validation: T, value: ValidationType&amp;lt;T&amp;gt;) {\n    return validation(value) // &amp;lt;-- Error\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The error explained under &lt;code&gt;value&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Argument of type &amp;#39;ValidationType&amp;lt;T&amp;gt;&amp;#39; is not assignable to parameter of type &amp;#39;never&amp;#39;.\n  Type &amp;#39;string | (T extends ValidateNumber ? number : never)&amp;#39; is not assignable to type &amp;#39;never&amp;#39;.\n    Type &amp;#39;string&amp;#39; is not assignable to type &amp;#39;never&amp;#39;.\n      Type &amp;#39;string | number&amp;#39; is not assignable to type &amp;#39;never&amp;#39;.\n        Type &amp;#39;string&amp;#39; is not assignable to type &amp;#39;never&amp;#39;.(2345)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Ultimately this is part of a bigger library where the library will receive a &amp;quot;schema&amp;quot; with attributes. Each attribute could optionally have a &amp;quot;validation&amp;quot; property, which would include a user defined function to validate the attribute. If you know of any examples in other applications that does this, or something similar, that would also be helpful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyc8fj", "is_robot_indexable": true, "report_reasons": null, "author": "dadschool", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iyc8fj/discriminated_unions_with_functions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iyc8fj/discriminated_unions_with_functions/", "subreddit_subscribers": 49080, "created_utc": 1600874726.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "**TLDR:** Im making a full-stack app (some kind of a very simple CRM system). I want to show to HR people how my app looks like from inside but in the same time people in the company I work at use this app. How to let HR people use my app in a secure and easy way without showing them real data?\n\n***Full story:***  \nI'm building a full-stack app for the small company that I am currently working at. It will be some kind of a very simple CRM.\n\nEmployees have to manage their sales. This app will help them. It provides CRUD operations with those sales, show statistics and many more nice little features.  \nThis app will be really used by the company so it will store sensitive data in the database.\n\nI want to show how it works from inside, but I know that HR people won't clone and run the repo, so I need a feature like \"LOGIN AS GUEST\".  \nGuest can look around whole app, but I can't show them any data inserted by my company.\n\nSo I have a few ideas (sorted from best one to worst one in my opinion) and I need your advice:\n\n1. Make a completely different deployment for hr people and different one for the company\n2. Make a seperate connection for guest users, they will connect to completely different DB where they can CRUD but they will connect with the same server (same deployment).\n3. Don't make guest user feature, just record a short nice video how things look, maybe put it on the landing page with some informations.\n4. Allow guests to use the app, connect them to the same database my company use but check in backend if user has role of a guest they cannot CRUD anything or they get their own tables in the database and they can CRUD. I don't feel safe when thinking about this approach\n\nI really want to give a good view on that app as I feel it will be a game-changer for my career and maybe I will land my first job as developer.\n\nPlease let me know what you think, maybe you've got some other ideas?", "author_fullname": "t2_3ofnirhz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Question] Letting HR people using my fullstack app", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iycznf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.63, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600905909.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; Im making a full-stack app (some kind of a very simple CRM system). I want to show to HR people how my app looks like from inside but in the same time people in the company I work at use this app. How to let HR people use my app in a secure and easy way without showing them real data?&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Full story:&lt;/em&gt;&lt;/strong&gt;&lt;br/&gt;\nI&amp;#39;m building a full-stack app for the small company that I am currently working at. It will be some kind of a very simple CRM.&lt;/p&gt;\n\n&lt;p&gt;Employees have to manage their sales. This app will help them. It provides CRUD operations with those sales, show statistics and many more nice little features.&lt;br/&gt;\nThis app will be really used by the company so it will store sensitive data in the database.&lt;/p&gt;\n\n&lt;p&gt;I want to show how it works from inside, but I know that HR people won&amp;#39;t clone and run the repo, so I need a feature like &amp;quot;LOGIN AS GUEST&amp;quot;.&lt;br/&gt;\nGuest can look around whole app, but I can&amp;#39;t show them any data inserted by my company.&lt;/p&gt;\n\n&lt;p&gt;So I have a few ideas (sorted from best one to worst one in my opinion) and I need your advice:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Make a completely different deployment for hr people and different one for the company&lt;/li&gt;\n&lt;li&gt;Make a seperate connection for guest users, they will connect to completely different DB where they can CRUD but they will connect with the same server (same deployment).&lt;/li&gt;\n&lt;li&gt;Don&amp;#39;t make guest user feature, just record a short nice video how things look, maybe put it on the landing page with some informations.&lt;/li&gt;\n&lt;li&gt;Allow guests to use the app, connect them to the same database my company use but check in backend if user has role of a guest they cannot CRUD anything or they get their own tables in the database and they can CRUD. I don&amp;#39;t feel safe when thinking about this approach&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I really want to give a good view on that app as I feel it will be a game-changer for my career and maybe I will land my first job as developer.&lt;/p&gt;\n\n&lt;p&gt;Please let me know what you think, maybe you&amp;#39;ve got some other ideas?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iycznf", "is_robot_indexable": true, "report_reasons": null, "author": "btckernel94", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iycznf/question_letting_hr_people_using_my_fullstack_app/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iycznf/question_letting_hr_people_using_my_fullstack_app/", "subreddit_subscribers": 49080, "created_utc": 1600877109.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Struggling to figure something out and now I'm  questioning if it's even possible. In a generator functions, the yield keyword still isn't well supported so I'm trying to wrap the utility types I've been using.\n\nInstead of:\n\n    const data: ReturnType&lt;typeof myFunction&gt; = yield myFunction();\n\nSomething like:\n\n    type\u00a0YieldReturn&lt;F&gt;\u00a0=\u00a0ReturnType&lt;typeof\u00a0F&gt;;\n    \n    const data: YieldReturn&lt;myFunction&gt; = yield myFunction();", "author_fullname": "t2_11ijf2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Wrapping Utility Types with typeof Internally", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iygdqq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600915892.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Struggling to figure something out and now I&amp;#39;m  questioning if it&amp;#39;s even possible. In a generator functions, the yield keyword still isn&amp;#39;t well supported so I&amp;#39;m trying to wrap the utility types I&amp;#39;ve been using.&lt;/p&gt;\n\n&lt;p&gt;Instead of:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const data: ReturnType&amp;lt;typeof myFunction&amp;gt; = yield myFunction();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type\u00a0YieldReturn&amp;lt;F&amp;gt;\u00a0=\u00a0ReturnType&amp;lt;typeof\u00a0F&amp;gt;;\n\nconst data: YieldReturn&amp;lt;myFunction&amp;gt; = yield myFunction();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iygdqq", "is_robot_indexable": true, "report_reasons": null, "author": "devsmack", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iygdqq/wrapping_utility_types_with_typeof_internally/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iygdqq/wrapping_utility_types_with_typeof_internally/", "subreddit_subscribers": 49080, "created_utc": 1600887092.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_iygdqq", "before": null}}