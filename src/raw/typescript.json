{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - May", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gb7km3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 49, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 49, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588320346.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gb7km3", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 3, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gb7km3/whos_hiring_typescript_developers_may/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gb7km3/whos_hiring_typescript_developers_may/", "subreddit_subscribers": 39982, "created_utc": 1588291546.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_5ffiy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using JSDoc tags to test functions [Prototype]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 111, "hide_score": false, "name": "t3_gn6sit", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 115, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 115, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/MjCPXloOQ5crur_aSnLtBHBtyG825B-Ge0R5kmNtgLI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "created": 1589988100.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?format=png8&amp;s=981570950d2e2ce1631106af7f1c5bd22e6bd0e9", "width": 709, "height": 564}, "resolutions": [{"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=d39e2a5c0b1ff0d93647f4ae76197da6782d3d9d", "width": 108, "height": 85}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=35f555bb6d4ccf9afc11934e1a4045ffe9d933d1", "width": 216, "height": 171}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=cb20aae9c6f5f488c08c4d776910e5e736fa9039", "width": 320, "height": 254}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=640&amp;crop=smart&amp;format=png8&amp;s=31c61ddf156473a5b7045848033a46404451c69d", "width": 640, "height": 509}], "variants": {"gif": {"source": {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?s=829e3ec7b28929d2718b72398de7e957f5328310", "width": 709, "height": 564}, "resolutions": [{"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=108&amp;crop=smart&amp;s=0417078e442a0f90ac100895e964b766f566a803", "width": 108, "height": 85}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=216&amp;crop=smart&amp;s=ce2a8c5e67ee678e9ec596b5b72fe9df99a2d5a3", "width": 216, "height": 171}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=320&amp;crop=smart&amp;s=32c661e3b8eb5b25674069452e96a80e84ece16f", "width": 320, "height": 254}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=640&amp;crop=smart&amp;s=da2ff05053e1352605603e1da285aa388f1b9667", "width": 640, "height": 509}]}, "mp4": {"source": {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?format=mp4&amp;s=c6495feb0fc5f57f77d11e34d55d27411b5a8c97", "width": 709, "height": 564}, "resolutions": [{"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=108&amp;format=mp4&amp;s=c06da3e37fa7b778a022e62fd3f4616a1e1b9652", "width": 108, "height": 85}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=216&amp;format=mp4&amp;s=075db2893e83683c14ae22a99caa3dc88ecdcd7a", "width": 216, "height": 171}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=320&amp;format=mp4&amp;s=14f974c44917435fa956a00ea2a7e35114aefa9e", "width": 320, "height": 254}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=640&amp;format=mp4&amp;s=d7449856e2cd1f270031701802a4bab0f9c838a6", "width": 640, "height": 509}]}}, "id": "nagrTsnplHDB5jNt9w_FtVBxSUEXrAtcv8MhxnD-UJ0"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gn6sit", "is_robot_indexable": true, "report_reasons": null, "author": "Idered", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gn6sit/using_jsdoc_tags_to_test_functions_prototype/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/8gqa8evpfvz41.gif", "subreddit_subscribers": 39982, "created_utc": 1589959300.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_15xss8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Fcaljs - extensive math expression evaluator library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_gn7ves", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/STshHNb4a3jNNdUqJAsud214MIgftnFtYWAS6tdyfeY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1589993694.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "npmjs.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?auto=webp&amp;s=dc9f3722e4f26a0d394e974bdc658bd002ee6f3d", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29849972d1063666bb20bfca982ed849dbab0739", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c2e78155bcf431bc82859db1b9cc141779445961", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7b8fc1121ee3f0761b7c5ec9e306f65c99c715db", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18cce76337e2ca3f939805374b20a68b0a1671af", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=940123d8c0b4043a88a028062a5a195676254f4d", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=70f261d64e65120035e417a634c19726e4e3576d", "width": 1080, "height": 567}], "variants": {}, "id": "3CAm7f2euOP7diXidheIHavSdc1loh3U46B-FOssKu4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gn7ves", "is_robot_indexable": true, "report_reasons": null, "author": "santhoshkumarr1096", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gn7ves/fcaljs_extensive_math_expression_evaluator_library/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.npmjs.com/package/fcal", "subreddit_subscribers": 39982, "created_utc": 1589964894.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_j1x0d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Deno: A Simple Guide", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_gnadh0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590006174.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "martinmck.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnadh0", "is_robot_indexable": true, "report_reasons": null, "author": "FrankBlizz", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gnadh0/deno_a_simple_guide/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.martinmck.com/posts/deno-a-simple-guide/", "subreddit_subscribers": 39982, "created_utc": 1589977374.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_3vf8x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Great Dropbox CoffeeScript to Typescript Migration", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_gmll5p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 91, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 91, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/XLSxFcmJLnm4nTW08_WakWLZ8zMmqzlgtjzajjjsoNo.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1589910824.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "dropbox.tech", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BzqIOslKB3E-xmkJ8I_a1hp4fG9PWqYEz5bZZc9b_YI.jpg?auto=webp&amp;s=c148af7e4a62a186012ef8cb08832103dcbb34a2", "width": 2400, "height": 1257}, "resolutions": [{"url": "https://external-preview.redd.it/BzqIOslKB3E-xmkJ8I_a1hp4fG9PWqYEz5bZZc9b_YI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=206dd00655ac3a3c68d880a1624938e67e5964af", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/BzqIOslKB3E-xmkJ8I_a1hp4fG9PWqYEz5bZZc9b_YI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=728b71e072fd18f9b29b1fdfeb6d43b518664632", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/BzqIOslKB3E-xmkJ8I_a1hp4fG9PWqYEz5bZZc9b_YI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=46fc02216595dcdced7ba2bf44f9c61daf5e1841", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/BzqIOslKB3E-xmkJ8I_a1hp4fG9PWqYEz5bZZc9b_YI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7072ae77e676983953f08f2eda65ba6eaaf7da1a", "width": 640, "height": 335}, {"url": "https://external-preview.redd.it/BzqIOslKB3E-xmkJ8I_a1hp4fG9PWqYEz5bZZc9b_YI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=29e87e3966463bd22df17d0c4b0173589bb273a2", "width": 960, "height": 502}, {"url": "https://external-preview.redd.it/BzqIOslKB3E-xmkJ8I_a1hp4fG9PWqYEz5bZZc9b_YI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4ae67303b0d08502c045ded8eb7296d3ba5719eb", "width": 1080, "height": 565}], "variants": {}, "id": "CcEXfvKUkkXr-f7kUtbcQfzF9jvyBMhsUggWpe2Ds9c"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gmll5p", "is_robot_indexable": true, "report_reasons": null, "author": "pimterry", "discussion_type": null, "num_comments": 3, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gmll5p/the_great_dropbox_coffeescript_to_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://dropbox.tech/frontend/the-great-coffeescript-to-typescript-migration-of-2017", "subreddit_subscribers": 39982, "created_utc": 1589882024.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I had typed array with an object with one optional field. Then I decided that instead of an optional prop what I really want is an array of objects not containing that property or all the elements containing such property, so I switched to a sum type.\n\n&amp;#x200B;\n\nThe problem is that this makes destructuring of such prop impossible.\n\nHere is an example of the sum type:\n\n&amp;#x200B;\n\n```js\n\ntype tab&lt;T&gt; =\n\n| { label: string }\n\n| { label: string, value: T }\n\n```\n\n\n\nThis is what I can not do:\n\n\n```\n    tabs.map(({ label, badge, value }, idx) =&gt; {\n\n        callSomeFun(value || idx)\n\n    })\n```\n\n\nThis works for flow, but not for typescript:\n\n\n```\n    tabs.map(({ label, badge, ...tab }, idx) =&gt; {\n\n        const value = tab.value || idx\n\n        callSomeFun(value)\n\n    })\n```\n\n\nAlso because of this, some other parts of the code get an inferred type of mixed, which in runtime is not correct because I'm just \"or-ing\" them:\n\n\n\nconst \\[activeTab, setActiveTab\\] = useState(tabs\\[0\\].value || initialTab)\n\n\n\nactiveTab becomes of mixed type\n\n\n\nIs there a better way of doing this while ensuring the type safety of having the prop on all items or no one?", "author_fullname": "t2_ofwfv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Destructuring and sum types", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gn7oz6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589992749.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I had typed array with an object with one optional field. Then I decided that instead of an optional prop what I really want is an array of objects not containing that property or all the elements containing such property, so I switched to a sum type.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;The problem is that this makes destructuring of such prop impossible.&lt;/p&gt;\n\n&lt;p&gt;Here is an example of the sum type:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;```js&lt;/p&gt;\n\n&lt;p&gt;type tab&amp;lt;T&amp;gt; =&lt;/p&gt;\n\n&lt;p&gt;| { label: string }&lt;/p&gt;\n\n&lt;p&gt;| { label: string, value: T }&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;This is what I can not do:&lt;/p&gt;\n\n&lt;p&gt;```\n    tabs.map(({ label, badge, value }, idx) =&amp;gt; {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    callSomeFun(value || idx)\n\n})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;This works for flow, but not for typescript:&lt;/p&gt;\n\n&lt;p&gt;```\n    tabs.map(({ label, badge, ...tab }, idx) =&amp;gt; {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    const value = tab.value || idx\n\n    callSomeFun(value)\n\n})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;Also because of this, some other parts of the code get an inferred type of mixed, which in runtime is not correct because I&amp;#39;m just &amp;quot;or-ing&amp;quot; them:&lt;/p&gt;\n\n&lt;p&gt;const [activeTab, setActiveTab] = useState(tabs[0].value || initialTab)&lt;/p&gt;\n\n&lt;p&gt;activeTab becomes of mixed type&lt;/p&gt;\n\n&lt;p&gt;Is there a better way of doing this while ensuring the type safety of having the prop on all items or no one?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gn7oz6", "is_robot_indexable": true, "report_reasons": null, "author": "danielo515", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gn7oz6/destructuring_and_sum_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gn7oz6/destructuring_and_sum_types/", "subreddit_subscribers": 39982, "created_utc": 1589963949.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I wonder if anyone knows if it is possible to send arguments to getServersideProps in Next Js.\n\nAt the end of my URL I have a hard codded page number, that fetches different movies per page, but I want to have it dynamic with getServersideProps, is it possible?\n\n\nexport const getServerSideProps: GetServerSideProps = async (\n  ctx: GetServerSidePropsContext&lt;ParsedUrlQuery&gt;\n) =&gt; {\n  console.log(ctx.query)\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.API_KEY}&amp;language=en-US&amp;page=1`\n  )\n\n  const data = await response.json()\n\n  return {\n    props: {\n      data: data.results,\n    },\n  }\n}", "author_fullname": "t2_4zf5h8w2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Pass Paramus to server side props", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gmub97", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589941945.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wonder if anyone knows if it is possible to send arguments to getServersideProps in Next Js.&lt;/p&gt;\n\n&lt;p&gt;At the end of my URL I have a hard codded page number, that fetches different movies per page, but I want to have it dynamic with getServersideProps, is it possible?&lt;/p&gt;\n\n&lt;p&gt;export const getServerSideProps: GetServerSideProps = async (\n  ctx: GetServerSidePropsContext&amp;lt;ParsedUrlQuery&amp;gt;\n) =&amp;gt; {\n  console.log(ctx.query)\n  const response = await fetch(\n    &lt;code&gt;https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.API_KEY}&amp;amp;language=en-US&amp;amp;page=1&lt;/code&gt;\n  )&lt;/p&gt;\n\n&lt;p&gt;const data = await response.json()&lt;/p&gt;\n\n&lt;p&gt;return {\n    props: {\n      data: data.results,\n    },\n  }\n}&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gmub97", "is_robot_indexable": true, "report_reasons": null, "author": "legia94m", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gmub97/pass_paramus_to_server_side_props/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gmub97/pass_paramus_to_server_side_props/", "subreddit_subscribers": 39982, "created_utc": 1589913145.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_131798", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A GitHub template featuring automation that makes it pretty darn easy to publish and maintain high-standard NPM modules.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "hide_score": false, "name": "t3_gma48m", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/FRRL8l6wSp39WfXwBGEOAy54VTtcDYo_JzLv288DbE8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1589864425.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/6Hl1F0MOV4mmeinayrdiPIJ3jJsU38mh87JeQ70PInc.jpg?auto=webp&amp;s=5257a3130a6bbffb55003970fcaa03929d27aaf8", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/6Hl1F0MOV4mmeinayrdiPIJ3jJsU38mh87JeQ70PInc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fb3f1d52e0f3532faccc3dc96522c2ef23799ce8", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/6Hl1F0MOV4mmeinayrdiPIJ3jJsU38mh87JeQ70PInc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f5c835f809b590414d984252ee9260bd9a1d0c43", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/6Hl1F0MOV4mmeinayrdiPIJ3jJsU38mh87JeQ70PInc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7682897cc0bd7a9d4495da767ae7aab2f4b0438c", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/6Hl1F0MOV4mmeinayrdiPIJ3jJsU38mh87JeQ70PInc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e5f2d6722d2546e4e3de63f3b0a094f0f088f60f", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/6Hl1F0MOV4mmeinayrdiPIJ3jJsU38mh87JeQ70PInc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=dfd7f4b793d993b052e56cd9113a1e11dc5d9906", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/6Hl1F0MOV4mmeinayrdiPIJ3jJsU38mh87JeQ70PInc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=11f4ac3129336db987572afd77310144f041f4f4", "width": 1080, "height": 540}], "variants": {}, "id": "5z8pPiz4atewGhfwWHCudNB0Tdx4gGz_Qx-wbfWSxWE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gma48m", "is_robot_indexable": true, "report_reasons": null, "author": "garronej", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gma48m/a_github_template_featuring_automation_that_makes/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/garronej/ts_ci", "subreddit_subscribers": 39982, "created_utc": 1589835625.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've been packaging all my modules lately with ES2015 as the target.\n\nIs there any reason to even think about ES5 anymore?\n\nI mean we're all moving WASM now anyway right? :P", "author_fullname": "t2_1zmgo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is ES5 dead yet?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gmr38p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.57, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589932079.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been packaging all my modules lately with ES2015 as the target.&lt;/p&gt;\n\n&lt;p&gt;Is there any reason to even think about ES5 anymore?&lt;/p&gt;\n\n&lt;p&gt;I mean we&amp;#39;re all moving WASM now anyway right? :P&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gmr38p", "is_robot_indexable": true, "report_reasons": null, "author": "electricessence", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gmr38p/is_es5_dead_yet/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gmr38p/is_es5_dead_yet/", "subreddit_subscribers": 39982, "created_utc": 1589903279.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_t54xs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hegel: An advanced static type checker for JavaScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_gm7ut0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A new type checker for JS? \ud83e\udd2f&lt;a href=\"https://t.co/eFZhsVDzWh\"&gt;https://t.co/eFZhsVDzWh&lt;/a&gt;&lt;br&gt;&lt;br&gt;Looks really interesting! Closer to Flow than TS, but implemented in JS. Focused on type inference, soundness, just JS with types (no additional features), supports .d.ts, vscode integration, etc. \ud83d\ude32&lt;br&gt;&lt;br&gt;HT &lt;a href=\"https://twitter.com/artalar_dev?ref_src=twsrc%5Etfw\"&gt;@artalar_dev&lt;/a&gt;&lt;/p&gt;&amp;mdash; Devon Govett (@devongovett) &lt;a href=\"https://twitter.com/devongovett/status/1262069817655259136?ref_src=twsrc%5Etfw\"&gt;May 17, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 392}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/devongovett/status/1262069817655259136", "author_name": "Devon Govett", "height": 392, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A new type checker for JS? \ud83e\udd2f&lt;a href=\"https://t.co/eFZhsVDzWh\"&gt;https://t.co/eFZhsVDzWh&lt;/a&gt;&lt;br&gt;&lt;br&gt;Looks really interesting! Closer to Flow than TS, but implemented in JS. Focused on type inference, soundness, just JS with types (no additional features), supports .d.ts, vscode integration, etc. \ud83d\ude32&lt;br&gt;&lt;br&gt;HT &lt;a href=\"https://twitter.com/artalar_dev?ref_src=twsrc%5Etfw\"&gt;@artalar_dev&lt;/a&gt;&lt;/p&gt;&amp;mdash; Devon Govett (@devongovett) &lt;a href=\"https://twitter.com/devongovett/status/1262069817655259136?ref_src=twsrc%5Etfw\"&gt;May 17, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/devongovett", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A new type checker for JS? \ud83e\udd2f&lt;a href=\"https://t.co/eFZhsVDzWh\"&gt;https://t.co/eFZhsVDzWh&lt;/a&gt;&lt;br&gt;&lt;br&gt;Looks really interesting! Closer to Flow than TS, but implemented in JS. Focused on type inference, soundness, just JS with types (no additional features), supports .d.ts, vscode integration, etc. \ud83d\ude32&lt;br&gt;&lt;br&gt;HT &lt;a href=\"https://twitter.com/artalar_dev?ref_src=twsrc%5Etfw\"&gt;@artalar_dev&lt;/a&gt;&lt;/p&gt;&amp;mdash; Devon Govett (@devongovett) &lt;a href=\"https://twitter.com/devongovett/status/1262069817655259136?ref_src=twsrc%5Etfw\"&gt;May 17, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/gm7ut0", "height": 392}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/nfUlc7nHQ5zPbapg1s9Vnlv4PRPwcL7aeNz1XZYfPsQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1589857581.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/s5kiRk2pfiWC01yLDqBgFiuUEKQDhrkSxOz67PD_rgo.jpg?auto=webp&amp;s=986c7cf51ab131f348dee0cd9db84bb66fb9e764", "width": 140, "height": 140}, "resolutions": [{"url": "https://external-preview.redd.it/s5kiRk2pfiWC01yLDqBgFiuUEKQDhrkSxOz67PD_rgo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b52f1c9ef318e888fe7e580177b55f048a7d9839", "width": 108, "height": 108}], "variants": {}, "id": "sEew8Z0JFJVS6aSR7h5Ax7QyJ5lpLqUkb8Oq69ueDMI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gm7ut0", "is_robot_indexable": true, "report_reasons": null, "author": "saadq_", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gm7ut0/hegel_an_advanced_static_type_checker_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/devongovett/status/1262069817655259136", "subreddit_subscribers": 39982, "created_utc": 1589828781.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/devongovett/status/1262069817655259136", "author_name": "Devon Govett", "height": 392, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;A new type checker for JS? \ud83e\udd2f&lt;a href=\"https://t.co/eFZhsVDzWh\"&gt;https://t.co/eFZhsVDzWh&lt;/a&gt;&lt;br&gt;&lt;br&gt;Looks really interesting! Closer to Flow than TS, but implemented in JS. Focused on type inference, soundness, just JS with types (no additional features), supports .d.ts, vscode integration, etc. \ud83d\ude32&lt;br&gt;&lt;br&gt;HT &lt;a href=\"https://twitter.com/artalar_dev?ref_src=twsrc%5Etfw\"&gt;@artalar_dev&lt;/a&gt;&lt;/p&gt;&amp;mdash; Devon Govett (@devongovett) &lt;a href=\"https://twitter.com/devongovett/status/1262069817655259136?ref_src=twsrc%5Etfw\"&gt;May 17, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/devongovett", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Context: I'm working on adding intersection types + parenthesis support to [typecheck.macro](https://github.com/vedantroy/typecheck.macro).\n\nIt seems like parenthesis are redundant in most cases. Examples:\n\n(A | B)\\[\\] = Array&lt;A | B&gt;\n\n(A) = A\n\n(A | B) | (C &amp; D) = A | B | C &amp; D because Typescript implicitly does parenthesize for you\n\nIt seems like the only place parenthesis affect the order of \"type operations\" is:\n\nA &amp; (B | C ) =  A &amp; B | A &amp; C. \n\nCan someone correct me if I am wrong?", "author_fullname": "t2_5yhybc1l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "When are parenthesis not redundant?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gmhh6c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1589890457.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Context: I&amp;#39;m working on adding intersection types + parenthesis support to &lt;a href=\"https://github.com/vedantroy/typecheck.macro\"&gt;typecheck.macro&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;It seems like parenthesis are redundant in most cases. Examples:&lt;/p&gt;\n\n&lt;p&gt;(A | B)[] = Array&amp;lt;A | B&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;(A) = A&lt;/p&gt;\n\n&lt;p&gt;(A | B) | (C &amp;amp; D) = A | B | C &amp;amp; D because Typescript implicitly does parenthesize for you&lt;/p&gt;\n\n&lt;p&gt;It seems like the only place parenthesis affect the order of &amp;quot;type operations&amp;quot; is:&lt;/p&gt;\n\n&lt;p&gt;A &amp;amp; (B | C ) =  A &amp;amp; B | A &amp;amp; C. &lt;/p&gt;\n\n&lt;p&gt;Can someone correct me if I am wrong?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/iC2kd8djz3_y2kodF_b3pzcykxrXVABOjciESrGjcZM.jpg?auto=webp&amp;s=a1a7ab30b673a1316e138914c1e77257b746af6a", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/iC2kd8djz3_y2kodF_b3pzcykxrXVABOjciESrGjcZM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa56990d57839e35f3a4a79de71abffa8f2e743b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/iC2kd8djz3_y2kodF_b3pzcykxrXVABOjciESrGjcZM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e83a21e3a0f9bf501c3d68e3e7ca0c4e3b81fd87", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/iC2kd8djz3_y2kodF_b3pzcykxrXVABOjciESrGjcZM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6f2029ddabaa2c07132242500a789b86b54033a3", "width": 320, "height": 320}], "variants": {}, "id": "VmX1eKihJY6byRlGX0VBKf8-I3c4ttafqyA9i763ryw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gmhh6c", "is_robot_indexable": true, "report_reasons": null, "author": "vanilla-acc", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gmhh6c/when_are_parenthesis_not_redundant/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gmhh6c/when_are_parenthesis_not_redundant/", "subreddit_subscribers": 39982, "created_utc": 1589861657.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gmhh6c", "before": null}}