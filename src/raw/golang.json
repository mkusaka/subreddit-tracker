{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Question for go programmers that know some c#.  \n[google-cloud-go](https://github.com/googleapis/google-cloud-go) **483.8k LOC**  \nvs  \n[google-cloud-dotnet](https://github.com/googleapis/google-cloud-dotnet) **1.5m LOC**  \n\n\nWhat is your subjective opinion about these repositories? Whose code is easier to maintain?", "author_fullname": "t2_1yyou7g6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Comparing c# to Go. Question about quality and easy of maintenance codebase.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_il4dg8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1599049209.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599071738.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Question for go programmers that know some c#.&lt;br/&gt;\n&lt;a href=\"https://github.com/googleapis/google-cloud-go\"&gt;google-cloud-go&lt;/a&gt; &lt;strong&gt;483.8k LOC&lt;/strong&gt;&lt;br/&gt;\nvs&lt;br/&gt;\n&lt;a href=\"https://github.com/googleapis/google-cloud-dotnet\"&gt;google-cloud-dotnet&lt;/a&gt; &lt;strong&gt;1.5m LOC&lt;/strong&gt;  &lt;/p&gt;\n\n&lt;p&gt;What is your subjective opinion about these repositories? Whose code is easier to maintain?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il4dg8", "is_robot_indexable": true, "report_reasons": null, "author": "Orelox", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/il4dg8/comparing_c_to_go_question_about_quality_and_easy/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/il4dg8/comparing_c_to_go_question_about_quality_and_easy/", "subreddit_subscribers": 124066, "created_utc": 1599042938.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_ps4wo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go 1.15.1 has been released", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_iko9do", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 131, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 131, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599008800.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "golang.org", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://golang.org/dl/go1.15.1", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 75, "resized_tier_icons": null, "id": "award_ce5f9ce6-49d9-4905-9228-22950e889206", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything's better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iko9do", "is_robot_indexable": true, "report_reasons": null, "author": "KEANO_", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/iko9do/go_1151_has_been_released/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://golang.org/dl/go1.15.1", "subreddit_subscribers": 124066, "created_utc": 1598980000.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Is there a book, recent or old, on [Go Kit](https://gokit.io/) ? I have been looking for one for a while now. It is the last check I have to do before giving a try to [Go](https://golang.org/).", "author_fullname": "t2_1xqumjge", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Looking for a book on Go Kit", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_il5brr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599076343.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is there a book, recent or old, on &lt;a href=\"https://gokit.io/\"&gt;Go Kit&lt;/a&gt; ? I have been looking for one for a while now. It is the last check I have to do before giving a try to &lt;a href=\"https://golang.org/\"&gt;Go&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il5brr", "is_robot_indexable": true, "report_reasons": null, "author": "acmoune", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/il5brr/looking_for_a_book_on_go_kit/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/il5brr/looking_for_a_book_on_go_kit/", "subreddit_subscribers": 124066, "created_utc": 1599047543.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_7ppkp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Contrasting NATS with Apache Kafka", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_il52rx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599075212.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "itnext.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://itnext.io/contrasting-nats-with-apache-kafka-1d3bdb9aa767", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il52rx", "is_robot_indexable": true, "report_reasons": null, "author": "ekoutanov", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/il52rx/contrasting_nats_with_apache_kafka/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://itnext.io/contrasting-nats-with-apache-kafka-1d3bdb9aa767", "subreddit_subscribers": 124066, "created_utc": 1599046412.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Good day to all,\n\nI am trying to find a lib to facilitate my work with my next (mostly-curd) project in Golang.\n\nI went for `gorm`, It is good, but I faced some issues with it and went through searching for other alternatives.\n\nI used `sql` and `sqlx` in previous projects, but I feel I want a higher abstraction cause the project as I mentioned is full of CRUD operations.\n\nI found another (looks relatively new) library called `rel` here [https://github.com/Fs02/rel](https://github.com/Fs02/rel)\n\nI looked at the documentation here [https://fs02.github.io/rel/#/basics?id=full-example](https://fs02.github.io/rel/#/basics?id=full-example) and find it look really good, as I feel like this one has a good thing that is not in gorm which is being **non-invasive**.\n\nHowever, I feel like I am going to bet on it since there are no many stars on GitHub (currently around 200). \n\nThis is why I cam and ask here, Does anybody have experience with it?", "author_fullname": "t2_yvr8u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any experience with Golang ORM Fs02/rel?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_il4laz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599072837.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Good day to all,&lt;/p&gt;\n\n&lt;p&gt;I am trying to find a lib to facilitate my work with my next (mostly-curd) project in Golang.&lt;/p&gt;\n\n&lt;p&gt;I went for &lt;code&gt;gorm&lt;/code&gt;, It is good, but I faced some issues with it and went through searching for other alternatives.&lt;/p&gt;\n\n&lt;p&gt;I used &lt;code&gt;sql&lt;/code&gt; and &lt;code&gt;sqlx&lt;/code&gt; in previous projects, but I feel I want a higher abstraction cause the project as I mentioned is full of CRUD operations.&lt;/p&gt;\n\n&lt;p&gt;I found another (looks relatively new) library called &lt;code&gt;rel&lt;/code&gt; here &lt;a href=\"https://github.com/Fs02/rel\"&gt;https://github.com/Fs02/rel&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I looked at the documentation here &lt;a href=\"https://fs02.github.io/rel/#/basics?id=full-example\"&gt;https://fs02.github.io/rel/#/basics?id=full-example&lt;/a&gt; and find it look really good, as I feel like this one has a good thing that is not in gorm which is being &lt;strong&gt;non-invasive&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;However, I feel like I am going to bet on it since there are no many stars on GitHub (currently around 200). &lt;/p&gt;\n\n&lt;p&gt;This is why I cam and ask here, Does anybody have experience with it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il4laz", "is_robot_indexable": true, "report_reasons": null, "author": "mhewedy", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/il4laz/any_experience_with_golang_orm_fs02rel/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/il4laz/any_experience_with_golang_orm_fs02rel/", "subreddit_subscribers": 124066, "created_utc": 1599044037.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm learning in Golang. I've finished A Tour of Go and effective go.I think effective go is not enough information after graduate A Tour of Go. (It's felt like difficult for me)Do you know nice learning article that level is between A Tour of Go and effective go?I hope to learn comprehensive things.(I'm a web developer. I hope to use Golang for this area)Thanks in advance.", "author_fullname": "t2_493gvfb9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Looking for Golang comprehensive learning article, document, course (between Tour to Go and effective go)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_il66i8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1599051656.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599079820.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m learning in Golang. I&amp;#39;ve finished A Tour of Go and effective go.I think effective go is not enough information after graduate A Tour of Go. (It&amp;#39;s felt like difficult for me)Do you know nice learning article that level is between A Tour of Go and effective go?I hope to learn comprehensive things.(I&amp;#39;m a web developer. I hope to use Golang for this area)Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il66i8", "is_robot_indexable": true, "report_reasons": null, "author": "rurikana", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/il66i8/looking_for_golang_comprehensive_learning_article/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/il66i8/looking_for_golang_comprehensive_learning_article/", "subreddit_subscribers": 124066, "created_utc": 1599051020.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_idxe8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I wrote a music video in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ikibl5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 109, "total_awards_received": 2, "media_embed": {"content": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/-_-2EpUqb9g?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 459, "scrolling": false, "height": 344}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "ENAE - The System", "type": "video", "thumbnail_width": 480, "height": 344, "width": 459, "html": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/-_-2EpUqb9g?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "ENAE", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/-_-2EpUqb9g/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCKjavmoQAboXOBpPEBp5UHw"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/-_-2EpUqb9g?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 459, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/ikibl5", "height": 344}, "link_flair_text": null, "can_mod_post": false, "score": 109, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1598987454.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=-_-2EpUqb9g", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 70, "resized_tier_icons": null, "id": "award_7becef23-fb0b-4d62-b8a6-01d5759367cb", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=16&amp;height=16&amp;auto=webp&amp;s=19c8ba1570a2447a04354e05a9463f3d2063f522", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=32&amp;height=32&amp;auto=webp&amp;s=6222517b5d76c737ce1ad1ab55c42e3ce53c11d7", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=48&amp;height=48&amp;auto=webp&amp;s=5f5d88a13a1a514298ec5c7edc6f2506750f3c4a", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=64&amp;height=64&amp;auto=webp&amp;s=3af85a35bcd871d432337f309f6ea333181b4092", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=128&amp;height=128&amp;auto=webp&amp;s=4631e5c3e2cda226cb2725e9eff118c7b419a95e", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "When goodness lifts you", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Faith In Humanity Restored", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=16&amp;height=16&amp;auto=webp&amp;s=19c8ba1570a2447a04354e05a9463f3d2063f522", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=32&amp;height=32&amp;auto=webp&amp;s=6222517b5d76c737ce1ad1ab55c42e3ce53c11d7", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=48&amp;height=48&amp;auto=webp&amp;s=5f5d88a13a1a514298ec5c7edc6f2506750f3c4a", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=64&amp;height=64&amp;auto=webp&amp;s=3af85a35bcd871d432337f309f6ea333181b4092", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=128&amp;height=128&amp;auto=webp&amp;s=4631e5c3e2cda226cb2725e9eff118c7b419a95e", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png"}, {"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 30, "resized_tier_icons": null, "id": "award_80d4d339-95d0-43ac-b051-bc3fe0a9bab8", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=16&amp;height=16&amp;auto=webp&amp;s=b1a8234a0a122785991d6e6f8a4e0342525196fb", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=32&amp;height=32&amp;auto=webp&amp;s=d18080390a3a15888b1fb45f6310b0362e97d1c9", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=48&amp;height=48&amp;auto=webp&amp;s=d19c39d1fcfc71fe7f4eb2ba1a52d18d8f063b6e", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=64&amp;height=64&amp;auto=webp&amp;s=d4bdebbc07f33dcb808bcdd14ca3a0095719bb13", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=128&amp;height=128&amp;auto=webp&amp;s=c569e8342e4e2c9c8fb9f4afab3b8e51a9fe3b2a", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Keep the community and yourself healthy and happy.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Wearing is Caring", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=16&amp;height=16&amp;auto=webp&amp;s=b1a8234a0a122785991d6e6f8a4e0342525196fb", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=32&amp;height=32&amp;auto=webp&amp;s=d18080390a3a15888b1fb45f6310b0362e97d1c9", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=48&amp;height=48&amp;auto=webp&amp;s=d19c39d1fcfc71fe7f4eb2ba1a52d18d8f063b6e", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=64&amp;height=64&amp;auto=webp&amp;s=d4bdebbc07f33dcb808bcdd14ca3a0095719bb13", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png?width=128&amp;height=128&amp;auto=webp&amp;s=c569e8342e4e2c9c8fb9f4afab3b8e51a9fe3b2a", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/lcswc5d07hb51_WearingisCaring.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ikibl5", "is_robot_indexable": true, "report_reasons": null, "author": "devilyoushy", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ikibl5/i_wrote_a_music_video_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=-_-2EpUqb9g", "subreddit_subscribers": 124066, "created_utc": 1598958654.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "ENAE - The System", "type": "video", "thumbnail_width": 480, "height": 344, "width": 459, "html": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/-_-2EpUqb9g?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "ENAE", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/-_-2EpUqb9g/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCKjavmoQAboXOBpPEBp5UHw"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "hi\n\nI'm looking for a CLI parsing package to parse arguments with the following specific feature:\n\n* allow multiple arguments and then multiple options on each argument:\n   * `myapp foo` - process foo\n   * `myapp -n 5 foo` - process foo 5 times\n   * `myapp -p 3 foo` - process foo with 3 cores max\n   * `myapp foo bar` - process foo and bar\n   * `myapp -n 5 foo -n 4 bar` - process foo 5 times and bar 4 times\n   * `myapp -n 5 foo -n 4 -p 2 bar` - process foo 5 times and bar 4 times using 2 cores max so basically: `myapp [arg] ... [arg] with arg = [-n int] [-p int] string` with -n defaulting to 1 and -p to -1 (or whatever value I set).\n\nI've quickly looked at cobra ([https://github.com/spf13/cobra](https://github.com/spf13/cobra)) and ffcli ( [https://pkg.go.dev/github.com/peterbourgon/ff/v3@v3.0.0?tab=doc](https://pkg.go.dev/github.com/peterbourgon/ff/v3@v3.0.0?tab=doc) ) not sure they can do that. But before investing more times into them to see if they can I'd rather ask here if someone knows (or knows of another package that can do it).\n\nThx", "author_fullname": "t2_d06wo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "looking for CLI parsing", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_il5h9g", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1599048422.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599076982.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hi&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m looking for a CLI parsing package to parse arguments with the following specific feature:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;allow multiple arguments and then multiple options on each argument:\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;myapp foo&lt;/code&gt; - process foo&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;myapp -n 5 foo&lt;/code&gt; - process foo 5 times&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;myapp -p 3 foo&lt;/code&gt; - process foo with 3 cores max&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;myapp foo bar&lt;/code&gt; - process foo and bar&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;myapp -n 5 foo -n 4 bar&lt;/code&gt; - process foo 5 times and bar 4 times&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;myapp -n 5 foo -n 4 -p 2 bar&lt;/code&gt; - process foo 5 times and bar 4 times using 2 cores max so basically: &lt;code&gt;myapp [arg] ... [arg] with arg = [-n int] [-p int] string&lt;/code&gt; with -n defaulting to 1 and -p to -1 (or whatever value I set).&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&amp;#39;ve quickly looked at cobra (&lt;a href=\"https://github.com/spf13/cobra\"&gt;https://github.com/spf13/cobra&lt;/a&gt;) and ffcli ( &lt;a href=\"https://pkg.go.dev/github.com/peterbourgon/ff/v3@v3.0.0?tab=doc\"&gt;https://pkg.go.dev/github.com/peterbourgon/ff/v3@v3.0.0?tab=doc&lt;/a&gt; ) not sure they can do that. But before investing more times into them to see if they can I&amp;#39;d rather ask here if someone knows (or knows of another package that can do it).&lt;/p&gt;\n\n&lt;p&gt;Thx&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il5h9g", "is_robot_indexable": true, "report_reasons": null, "author": "kgjv", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/il5h9g/looking_for_cli_parsing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/il5h9g/looking_for_cli_parsing/", "subreddit_subscribers": 124066, "created_utc": 1599048182.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_pvgw1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "First Steps from Scipy to Gonum/Optimize | Retro Refractions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ikt3un", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599023769.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "retrorefractions.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.retrorefractions.com/blog/first-steps-gonum-optimize/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ikt3un", "is_robot_indexable": true, "report_reasons": null, "author": "sbinet", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ikt3un/first_steps_from_scipy_to_gonumoptimize_retro/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.retrorefractions.com/blog/first-steps-gonum-optimize/", "subreddit_subscribers": 124066, "created_utc": 1598994969.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_u0y24", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "el10savio/gcounter-crdt: A GCounter CRDT Cluster implemented in Go &amp; Docker", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ikzb4p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599046212.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/el10savio/gcounter-crdt", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ikzb4p", "is_robot_indexable": true, "report_reasons": null, "author": "el10savio", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ikzb4p/el10saviogcountercrdt_a_gcounter_crdt_cluster/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/el10savio/gcounter-crdt", "subreddit_subscribers": 124066, "created_utc": 1599017412.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ikzb4p", "before": null}}