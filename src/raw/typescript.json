{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - June", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gua247", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590998803.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gua247", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "subreddit_subscribers": 42095, "created_utc": 1590970003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "VSCode doesn't lint if I set the return type as a static value. I have an orchestrator method that should only ever err or return true:\n\n       public run(): true {\n\nAnother option is to just set it to `void`. That actually sounds more sensible.\n\nDoes it ever make sense to set the return type to a static non-void value?", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Single value as a return type?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ha1pog", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592333647.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;VSCode doesn&amp;#39;t lint if I set the return type as a static value. I have an orchestrator method that should only ever err or return true:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   public run(): true {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another option is to just set it to &lt;code&gt;void&lt;/code&gt;. That actually sounds more sensible.&lt;/p&gt;\n\n&lt;p&gt;Does it ever make sense to set the return type to a static non-void value?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ha1pog", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ha1pog/single_value_as_a_return_type/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ha1pog/single_value_as_a_return_type/", "subreddit_subscribers": 42095, "created_utc": 1592304847.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_ceruq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "thetutlage/japa the missing Typescript-Typescript unit test library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_h9p03q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/t6B_hXOKbRy6GjxPH8rZXkbqUZRlRgf99CSyO_sQiZ4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592284282.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/pZ56u6phuqgztEIx7oNhfcNJKPVI1sFZJngaMBqNMEE.jpg?auto=webp&amp;s=cc6b32f88d8aef9d2ccdc821e2857ffbbbf52e09", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/pZ56u6phuqgztEIx7oNhfcNJKPVI1sFZJngaMBqNMEE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=df0b45cff1de229a1b9e5b8c65de775ed3ce190d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/pZ56u6phuqgztEIx7oNhfcNJKPVI1sFZJngaMBqNMEE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=84951289535a50d7b15d553ae83260e0dee2c5c7", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/pZ56u6phuqgztEIx7oNhfcNJKPVI1sFZJngaMBqNMEE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1344ede72aa3bf9d1b990ee3f6372272870a21d5", "width": 320, "height": 320}], "variants": {}, "id": "TjJqYcJSwP4i88ZOmu7LeP8eHKEz1Jtg9scd8Ka7moM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9p03q", "is_robot_indexable": true, "report_reasons": null, "author": "loxaxs", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9p03q/thetutlagejapa_the_missing_typescripttypescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/thetutlage/japa", "subreddit_subscribers": 42095, "created_utc": 1592255482.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_4qt04", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Show Reddit: Computing with types in TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_h9vaxq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/3cieEcfiyYQizD9HrZaFZw3SFXugph6Wwuaa2MZFAKA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592305670.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "2ality.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/6JUUYwq5530YSCpkqGS3R5WKeGF5-i0B4Xrh4UHlLUQ.jpg?auto=webp&amp;s=0c2f2541ae462d007a268bdd74d5e1330ae4f5df", "width": 525, "height": 750}, "resolutions": [{"url": "https://external-preview.redd.it/6JUUYwq5530YSCpkqGS3R5WKeGF5-i0B4Xrh4UHlLUQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=69b54c712503d1bc9ed38e06e09c9a0c6df3917e", "width": 108, "height": 154}, {"url": "https://external-preview.redd.it/6JUUYwq5530YSCpkqGS3R5WKeGF5-i0B4Xrh4UHlLUQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=036aedc62a9f78ee6bc4add82e77750e8256f2a4", "width": 216, "height": 308}, {"url": "https://external-preview.redd.it/6JUUYwq5530YSCpkqGS3R5WKeGF5-i0B4Xrh4UHlLUQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ca407cabd8751eb606fe0e7deba040b0abaa728", "width": 320, "height": 457}], "variants": {}, "id": "G_pciAKbqB6Hr0tL1n48IRsj4PR99PiHGZGkasiYJhM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9vaxq", "is_robot_indexable": true, "report_reasons": null, "author": "rauschma", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9vaxq/show_reddit_computing_with_types_in_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://2ality.com/2020/06/computing-with-types.html", "subreddit_subscribers": 42095, "created_utc": 1592276870.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I came accros this code! I'm a bit confused on the first code and what the differences between the 2 are! \n\n    // first\n    const logNumber: (i: number) =&gt; void = (i: number) =&gt; {\n      console.log(i);\n    };\n    //Annotating the  variable with (i:number)? And the function must return void? \n    //Why are we anotating the variable with (i:number)?\n     \n    // second\n    const logNumber = (i:number): void =&gt; {\n      console.log(i);\n    };\n    //annotaitng the function, where i must be a number, return type must be void", "author_fullname": "t2_jgqit", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Newbie] Type annotations for functions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h9xl4p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592314681.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I came accros this code! I&amp;#39;m a bit confused on the first code and what the differences between the 2 are! &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// first\nconst logNumber: (i: number) =&amp;gt; void = (i: number) =&amp;gt; {\n  console.log(i);\n};\n//Annotating the  variable with (i:number)? And the function must return void? \n//Why are we anotating the variable with (i:number)?\n\n// second\nconst logNumber = (i:number): void =&amp;gt; {\n  console.log(i);\n};\n//annotaitng the function, where i must be a number, return type must be void\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9xl4p", "is_robot_indexable": true, "report_reasons": null, "author": "badboyzpwns", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9xl4p/newbie_type_annotations_for_functions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h9xl4p/newbie_type_annotations_for_functions/", "subreddit_subscribers": 42095, "created_utc": 1592285881.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Idk if I found a bug or something is going over my head, but I've written out a super simplified example of code I wrote where the type error is displayed, and one where it is not.\n\n[example code 1 (error)](https://www.typescriptlang.org/play/#code/MYewdgzgLgBAygFQKIAUD6BJAIjAvDAbwCgZSYAzASwCdoAueATwFsAjEAGwDpyRqAKAOQBGQQEoANCTIQApqDAATBnBbtuvAYIBM4qQF8iRKIwAOs+FFmm8haaUrKYENZwDc9mGFkAPKAH4VK1MPQyIFaGdgiCDrAG0AXVs4z2IydJhHFWR0bB4aaCkMsm8-BgJMp0RUTCwuOQVFGH0isha7YocqnNr6+XBFVuLSqAYAVyVZKm9Bz0MEjyJyCeAoSnAKSiU4YIAhRgxFfmhrQ4YAa1lGEHIYE3Mb+B7sMQ6yDllYE9NYmwAfGATRRTLayJr4b4QOIABgWRnSlFu-AAhN9XmlOtRPmNqGAPOkwukAO4AC0oHxgx2CXEcMGRuHw1VyWDi30OCXRnnSEVgI1s3y4I0WnUySORI1eWKgOLx8M631sQrmctIUplUWsoSIQA)\n\n[example code 2 (working)](https://www.typescriptlang.org/play/#code/MYewdgzgLgBAygFQKIAUD6BJAIjAvDAbwCgZSYAzASwCdoAueATwFsAjEAGwDpyRqAKAOQBGQQEoANCTIQApqDAATBnBbtuvAYIBM4qQF8iRKIwAOs+FFmm8haaUrKYENZwDc9mGFkAPKAH4VK1MPQyIFaGdgiCDrAG0AXVs4z2IydJhHFWR0bB4aaCkMsm8-BgJMp0RUTCwuOQVFGH0isha7YocqnNr6+XBFVuLSqAYAVyVZKm9Bz0MEjyJyCeAoSnAKSiU4YIAhRgxFfmhrQ4YAa1lGEHIYE3Mb+B7sMQ6yDllYE9NYmwAfGATRRTLayJr4b4QOIABgWRnSlFu-AAhN9XmlOtRPmNqGAPOkwukAO4AC0oHxgx2CXEcMGRuHw1VyWDi30OCXRngRSNR1JGryxUBxePhnW+tm+XBG+LaotIguFUWsoSIQA)\n\nDoes anyone know why the guard at line 24-26 in example code 1 does not work, but does work in example 2? I'm fairly confident in my TypeScript abilities but this one is not making sense in my brain.", "author_fullname": "t2_5w0e8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type guard is acting strange. Is this a bug, or am I confused?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h9isnt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592264670.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Idk if I found a bug or something is going over my head, but I&amp;#39;ve written out a super simplified example of code I wrote where the type error is displayed, and one where it is not.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play/#code/MYewdgzgLgBAygFQKIAUD6BJAIjAvDAbwCgZSYAzASwCdoAueATwFsAjEAGwDpyRqAKAOQBGQQEoANCTIQApqDAATBnBbtuvAYIBM4qQF8iRKIwAOs+FFmm8haaUrKYENZwDc9mGFkAPKAH4VK1MPQyIFaGdgiCDrAG0AXVs4z2IydJhHFWR0bB4aaCkMsm8-BgJMp0RUTCwuOQVFGH0isha7YocqnNr6+XBFVuLSqAYAVyVZKm9Bz0MEjyJyCeAoSnAKSiU4YIAhRgxFfmhrQ4YAa1lGEHIYE3Mb+B7sMQ6yDllYE9NYmwAfGATRRTLayJr4b4QOIABgWRnSlFu-AAhN9XmlOtRPmNqGAPOkwukAO4AC0oHxgx2CXEcMGRuHw1VyWDi30OCXRnnSEVgI1s3y4I0WnUySORI1eWKgOLx8M631sQrmctIUplUWsoSIQA\"&gt;example code 1 (error)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play/#code/MYewdgzgLgBAygFQKIAUD6BJAIjAvDAbwCgZSYAzASwCdoAueATwFsAjEAGwDpyRqAKAOQBGQQEoANCTIQApqDAATBnBbtuvAYIBM4qQF8iRKIwAOs+FFmm8haaUrKYENZwDc9mGFkAPKAH4VK1MPQyIFaGdgiCDrAG0AXVs4z2IydJhHFWR0bB4aaCkMsm8-BgJMp0RUTCwuOQVFGH0isha7YocqnNr6+XBFVuLSqAYAVyVZKm9Bz0MEjyJyCeAoSnAKSiU4YIAhRgxFfmhrQ4YAa1lGEHIYE3Mb+B7sMQ6yDllYE9NYmwAfGATRRTLayJr4b4QOIABgWRnSlFu-AAhN9XmlOtRPmNqGAPOkwukAO4AC0oHxgx2CXEcMGRuHw1VyWDi30OCXRngRSNR1JGryxUBxePhnW+tm+XBG+LaotIguFUWsoSIQA\"&gt;example code 2 (working)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Does anyone know why the guard at line 24-26 in example code 1 does not work, but does work in example 2? I&amp;#39;m fairly confident in my TypeScript abilities but this one is not making sense in my brain.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9isnt", "is_robot_indexable": true, "report_reasons": null, "author": "blukkie", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9isnt/type_guard_is_acting_strange_is_this_a_bug_or_am/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h9isnt/type_guard_is_acting_strange_is_this_a_bug_or_am/", "subreddit_subscribers": 42095, "created_utc": 1592235870.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "An example of a branded type is:\n\n`type USD = number &amp; {__brand: \"USD\"}`\n\nYou can then cast numbers to this type with \\`as USD\\`. However, I don't understand how this works. How can you intersect a primitive with an object? I thought objects could only be intersected with other objects, `object`, or `any`.", "author_fullname": "t2_5yhybc1l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How are branded types valid types?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h9udyv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592302401.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;An example of a branded type is:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;type USD = number &amp;amp; {__brand: &amp;quot;USD&amp;quot;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;You can then cast numbers to this type with `as USD`. However, I don&amp;#39;t understand how this works. How can you intersect a primitive with an object? I thought objects could only be intersected with other objects, &lt;code&gt;object&lt;/code&gt;, or &lt;code&gt;any&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9udyv", "is_robot_indexable": true, "report_reasons": null, "author": "vanilla-acc", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9udyv/how_are_branded_types_valid_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h9udyv/how_are_branded_types_valid_types/", "subreddit_subscribers": 42095, "created_utc": 1592273601.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    async homeApi(_source: any, _args: any) { const body = {           door: _args.door,           window: _args.window         }; }\n\nI have a typescript code like above where I create a JSON Object called bodyusing doorand windowarguments. Typically the body should be:\n\n    {     door: 3,     window: 4 }\n\nWhat I want is if \\_args.dooris empty/blank, the bodyshould be\n\n    {window: 4}\n\nIt should not be: {         door: undefined,         window: 4        }", "author_fullname": "t2_2rc2wgo7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to create a JSON Object's element based on if it is null or not?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h9xfpa", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1592286815.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592314047.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;async homeApi(_source: any, _args: any) { const body = {           door: _args.door,           window: _args.window         }; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I have a typescript code like above where I create a JSON Object called bodyusing doorand windowarguments. Typically the body should be:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{     door: 3,     window: 4 }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What I want is if _args.dooris empty/blank, the bodyshould be&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{window: 4}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It should not be: {         door: undefined,         window: 4        }&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9xfpa", "is_robot_indexable": true, "report_reasons": null, "author": "sulavtims", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9xfpa/how_to_create_a_json_objects_element_based_on_if/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h9xfpa/how_to_create_a_json_objects_element_based_on_if/", "subreddit_subscribers": 42095, "created_utc": 1592285247.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello everyone!\n\nI\u2019m currently working on a react component library for my own personal use and so far I\u2019ve built my components, compiled them to JS and it all works as expected when I import my lib from a new project.\n\nHowever when I import the lib, TS demands a .d.ts file... to override this while working on my lib I just had TS ignore the missing .d.ts file.\n\nBut now I\u2019m ready to actually supply this file and I\u2019ve never written one.\n\nI read some of the TS docs this morning and although I\u2019ll appreciate any input, my main question is:\n\nWhere does the .d.ts file go?\n\nDo I put it in the root of the lib where node_modules is?\n\nDo I put it inside of the src folder?\n\nOr am I creating a .d.ts file for every module of my lib?\n\nI\u2019m just throwing this out there, any input is appreciated! Thank you! \ud83d\ude4f\ud83c\udffd", "author_fullname": "t2_5twecqgy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Beginner needs help writing his first .d.ts file", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h9o9g9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592281920.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone!&lt;/p&gt;\n\n&lt;p&gt;I\u2019m currently working on a react component library for my own personal use and so far I\u2019ve built my components, compiled them to JS and it all works as expected when I import my lib from a new project.&lt;/p&gt;\n\n&lt;p&gt;However when I import the lib, TS demands a .d.ts file... to override this while working on my lib I just had TS ignore the missing .d.ts file.&lt;/p&gt;\n\n&lt;p&gt;But now I\u2019m ready to actually supply this file and I\u2019ve never written one.&lt;/p&gt;\n\n&lt;p&gt;I read some of the TS docs this morning and although I\u2019ll appreciate any input, my main question is:&lt;/p&gt;\n\n&lt;p&gt;Where does the .d.ts file go?&lt;/p&gt;\n\n&lt;p&gt;Do I put it in the root of the lib where node_modules is?&lt;/p&gt;\n\n&lt;p&gt;Do I put it inside of the src folder?&lt;/p&gt;\n\n&lt;p&gt;Or am I creating a .d.ts file for every module of my lib?&lt;/p&gt;\n\n&lt;p&gt;I\u2019m just throwing this out there, any input is appreciated! Thank you! \ud83d\ude4f\ud83c\udffd&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9o9g9", "is_robot_indexable": true, "report_reasons": null, "author": "iontiveros", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9o9g9/beginner_needs_help_writing_his_first_dts_file/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h9o9g9/beginner_needs_help_writing_his_first_dts_file/", "subreddit_subscribers": 42095, "created_utc": 1592253120.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm trying to propagate a string literal through a function argument while also accepting another generic type. What I'm trying to do is get the result of the action and put it in a list of actions for a switch case Here is where I'm at.\n```\nexport function generateAction&lt;Payload, T extends string = string&gt;(\n\ttype: T\n): [T, (payload: Payload) =&gt; { type: T; payload: Payload }] {\n\treturn [type, payload =&gt; ({ type, payload })];\n}\n\nexport const [SWITCH_SECTION, switchSection] = generateAction&lt;{ section: number }&gt;('SWITCH_SECTION');\nexport const [SWITCH_SUBSECTION, switchSubsection] = generateAction&lt;{ subsection: number }, 'SWITCH_SUBSECTION'&gt;(\n\ntype actionTypes = ReturnType&lt;typeof switchSection&gt; | ReturnType&lt;typeof switchSubsection&gt;;\n```\n\nBy specifying the payload type it makes the string generic dumb and doesn't use the string literal. If I use the below the string literal is preserved.\n\n```\nexport const [SWITCH_SECTION, switchSection] = generateAction('SWITCH_SECTION');\nexport const [SWITCH_SUBSECTION, switchSubsection] = generateAction('SWITCH_SUBSECTION');\n\ntype actionTypes = ReturnType&lt;typeof switchSection&gt; | ReturnType&lt;typeof switchSubsection&gt;;\n```\n[Playground Link](https://www.staging-typescript.org/play?#code/KYDwDg9gTgLgBAMwK4DsDGMCWEVwObArBQCGMwAghtigDwAKJAngDYQkAmANHACpyhyKDgGc4ImFEwo8cALzjJ0vAD4AFACg42uDCZhgALj4aAlMYDavHmrDM2nY41bsOp+SrgBvXfqN8Abjg7F0c4ZwcOOABfAF1vLR0oYBgkKFwLPQMeEMiPODUfLOAc+1cY01iAjWiNDVBIWDg0HAk4CwBlAHUASV4AYQAJAH0OgFF+3h6AeQA5HhEAd0wYNAALDuBqHHiFAiJSciosHFofES2TlGMUJABbACNiGPUAcm6+odGJqbnX02qDWg8BaKDanV6AxGHQAqgAhcaTGbzcTLVYbJAPC7bFC7fCEYhkSg4s7iTHYq43e5PKAxHjvSFfWEIn7I15vD5Q0bwxG-Wb-QHgYHNVrwCGfaE81lzABMCzR602OJleP2hKOOLUDIl3JZSNlArqxTgJBxvD8YgUACUUmkUOaDLRihAEKiVorLjRPAAfOA21LpB3AJ1+F1u9EdcmenA+v22wN+EMGMNLd0baMoGUqAJAA)\nAny idea how to preserve the string literal while also specifying another generic?", "author_fullname": "t2_11ijf2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "String Literal Propagation Issue", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h9laux", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1592271008.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592272689.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to propagate a string literal through a function argument while also accepting another generic type. What I&amp;#39;m trying to do is get the result of the action and put it in a list of actions for a switch case Here is where I&amp;#39;m at.\n```\nexport function generateAction&amp;lt;Payload, T extends string = string&amp;gt;(\n    type: T\n): [T, (payload: Payload) =&amp;gt; { type: T; payload: Payload }] {\n    return [type, payload =&amp;gt; ({ type, payload })];\n}&lt;/p&gt;\n\n&lt;p&gt;export const [SWITCH_SECTION, switchSection] = generateAction&amp;lt;{ section: number }&amp;gt;(&amp;#39;SWITCH_SECTION&amp;#39;);\nexport const [SWITCH_SUBSECTION, switchSubsection] = generateAction&amp;lt;{ subsection: number }, &amp;#39;SWITCH_SUBSECTION&amp;#39;&amp;gt;(&lt;/p&gt;\n\n&lt;p&gt;type actionTypes = ReturnType&amp;lt;typeof switchSection&amp;gt; | ReturnType&amp;lt;typeof switchSubsection&amp;gt;;\n```&lt;/p&gt;\n\n&lt;p&gt;By specifying the payload type it makes the string generic dumb and doesn&amp;#39;t use the string literal. If I use the below the string literal is preserved.&lt;/p&gt;\n\n&lt;p&gt;```\nexport const [SWITCH_SECTION, switchSection] = generateAction(&amp;#39;SWITCH_SECTION&amp;#39;);\nexport const [SWITCH_SUBSECTION, switchSubsection] = generateAction(&amp;#39;SWITCH_SUBSECTION&amp;#39;);&lt;/p&gt;\n\n&lt;p&gt;type actionTypes = ReturnType&amp;lt;typeof switchSection&amp;gt; | ReturnType&amp;lt;typeof switchSubsection&amp;gt;;\n```\n&lt;a href=\"https://www.staging-typescript.org/play?#code/KYDwDg9gTgLgBAMwK4DsDGMCWEVwObArBQCGMwAghtigDwAKJAngDYQkAmANHACpyhyKDgGc4ImFEwo8cALzjJ0vAD4AFACg42uDCZhgALj4aAlMYDavHmrDM2nY41bsOp+SrgBvXfqN8Abjg7F0c4ZwcOOABfAF1vLR0oYBgkKFwLPQMeEMiPODUfLOAc+1cY01iAjWiNDVBIWDg0HAk4CwBlAHUASV4AYQAJAH0OgFF+3h6AeQA5HhEAd0wYNAALDuBqHHiFAiJSciosHFofES2TlGMUJABbACNiGPUAcm6+odGJqbnX02qDWg8BaKDanV6AxGHQAqgAhcaTGbzcTLVYbJAPC7bFC7fCEYhkSg4s7iTHYq43e5PKAxHjvSFfWEIn7I15vD5Q0bwxG-Wb-QHgYHNVrwCGfaE81lzABMCzR602OJleP2hKOOLUDIl3JZSNlArqxTgJBxvD8YgUACUUmkUOaDLRihAEKiVorLjRPAAfOA21LpB3AJ1+F1u9EdcmenA+v22wN+EMGMNLd0baMoGUqAJAA\"&gt;Playground Link&lt;/a&gt;\nAny idea how to preserve the string literal while also specifying another generic?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9laux", "is_robot_indexable": true, "report_reasons": null, "author": "devsmack", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9laux/string_literal_propagation_issue/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h9laux/string_literal_propagation_issue/", "subreddit_subscribers": 42095, "created_utc": 1592243889.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have something like this:\n\n    abstract class Base {\n        protected description: string = ``;\n    }\n    \n    class Subclass extends Base {\n        private description: string = ``;\n    \n    }\n    \n    /* class Subclass\n    Class 'Subclass' incorrectly extends base class 'Base'.\n      Property 'description' is private in type 'Subclass' but not in type 'Base'.ts(2415) */\n\nI don't plan to extend `Subclass` so I thought marking `description` as `protected` would not be necessary or very clear to others. I therefore thought `description` in `Subclass` should be marked `private`, but only the `protected` keyword avoids errors.\n\nCan anyone help me understand why `protected` is needed here?\n\nIs the case simply that any time you extend a class you must identify overwritten members with the `protected` keyword?", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Must I always extend protected members to be protected?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h9g59c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592255758.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;abstract class Base {\n    protected description: string = ``;\n}\n\nclass Subclass extends Base {\n    private description: string = ``;\n\n}\n\n/* class Subclass\nClass &amp;#39;Subclass&amp;#39; incorrectly extends base class &amp;#39;Base&amp;#39;.\n  Property &amp;#39;description&amp;#39; is private in type &amp;#39;Subclass&amp;#39; but not in type &amp;#39;Base&amp;#39;.ts(2415) */\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I don&amp;#39;t plan to extend &lt;code&gt;Subclass&lt;/code&gt; so I thought marking &lt;code&gt;description&lt;/code&gt; as &lt;code&gt;protected&lt;/code&gt; would not be necessary or very clear to others. I therefore thought &lt;code&gt;description&lt;/code&gt; in &lt;code&gt;Subclass&lt;/code&gt; should be marked &lt;code&gt;private&lt;/code&gt;, but only the &lt;code&gt;protected&lt;/code&gt; keyword avoids errors.&lt;/p&gt;\n\n&lt;p&gt;Can anyone help me understand why &lt;code&gt;protected&lt;/code&gt; is needed here?&lt;/p&gt;\n\n&lt;p&gt;Is the case simply that any time you extend a class you must identify overwritten members with the &lt;code&gt;protected&lt;/code&gt; keyword?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9g59c", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h9g59c/must_i_always_extend_protected_members_to_be/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h9g59c/must_i_always_extend_protected_members_to_be/", "subreddit_subscribers": 42095, "created_utc": 1592226958.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_h9g59c", "before": null}}