{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - June", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gua247", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 36, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590998803.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gua247", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 4, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "subreddit_subscribers": 42846, "created_utc": 1590970003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_62cfrebl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introduction React Native, Typescript, Redux, Rxjs, Node.js, Mongo, Mongoose, Nexus Aurora Platform", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_hg5g8z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/06wsg2f76hQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Introduction React Native, Typescript, Redux, Rxjs, Node.js, Mongo, Mongoose. Nexus Aurora Platform", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/06wsg2f76hQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Nexus Aurora", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/06wsg2f76hQ/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCYfzb1700uKEgzO9LPAC-zg"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/06wsg2f76hQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hg5g8z", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/1kA9C33c_2I1ZXix6QzLosSNm-krYn0F-b7De9rfA_g.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593198228.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=06wsg2f76hQ", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/K9TJebCOdaJCMWl3HI8OPtMzc9nLbSelvkTfe6ym-wQ.jpg?auto=webp&amp;s=06f35a2bdb9cb4762b286b9f6e823e0a7812a9ed", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/K9TJebCOdaJCMWl3HI8OPtMzc9nLbSelvkTfe6ym-wQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=79d423dbc5b2bae9ec2f5ee6ac73356ab6ecf1ad", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/K9TJebCOdaJCMWl3HI8OPtMzc9nLbSelvkTfe6ym-wQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2a77e4f42cd956300b7feaf5eafa65d4bf0c5380", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/K9TJebCOdaJCMWl3HI8OPtMzc9nLbSelvkTfe6ym-wQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4f1ba226a2b3828b3c270cce148bc866cd198fc8", "width": 320, "height": 240}], "variants": {}, "id": "kMxcV5RaP31nlw3T6UzLH2zqvKVmYdcgvQ9AzrWuUSo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hg5g8z", "is_robot_indexable": true, "report_reasons": null, "author": "SpaceInstructor", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hg5g8z/introduction_react_native_typescript_redux_rxjs/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=06wsg2f76hQ", "subreddit_subscribers": 42846, "created_utc": 1593169428.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Introduction React Native, Typescript, Redux, Rxjs, Node.js, Mongo, Mongoose. Nexus Aurora Platform", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/06wsg2f76hQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Nexus Aurora", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/06wsg2f76hQ/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCYfzb1700uKEgzO9LPAC-zg"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_3e6hh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Stryker Plugin in Webstorm for easier Mutation Testing", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_hfrnm0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 24, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 24, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/T_THGCbKYJF2CzFSrs6UkIfTX9IsBLxcg1mzIl_-4RE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593139557.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "plugins.jetbrains.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://plugins.jetbrains.com/plugin/14482-stryker", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/fWBDnSKfb6pAp_0ObTmnQI6s8NJw0fLICCyfavUrXDY.jpg?auto=webp&amp;s=9e2e01e2d9258fcc31ee25924497027698bfad2b", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/fWBDnSKfb6pAp_0ObTmnQI6s8NJw0fLICCyfavUrXDY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=dc3b586fb5d425ff6e0d9fe5cfe4e68e53f40961", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/fWBDnSKfb6pAp_0ObTmnQI6s8NJw0fLICCyfavUrXDY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=de6aa63a2051abe3cd735cbbff1a11ad54812a9b", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/fWBDnSKfb6pAp_0ObTmnQI6s8NJw0fLICCyfavUrXDY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1c1d4ffc7bb0ad0f277a28651f84e836abddd8f9", "width": 320, "height": 320}], "variants": {}, "id": "7hwgmDkrk_gDYrIzP1mc2XlkPEV6CI8Y8z1NFjpX6r8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hfrnm0", "is_robot_indexable": true, "report_reasons": null, "author": "Garethp", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hfrnm0/stryker_plugin_in_webstorm_for_easier_mutation/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://plugins.jetbrains.com/plugin/14482-stryker", "subreddit_subscribers": 42846, "created_utc": 1593110757.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "So, I am not really sure what to search to find out more about this concept, and therefore I apologise in advance if this is a duplicate, but I have been stuck for a day now and need some help.\n\nI am using TS 3.6.4 in a React project, and I am using an interface to validate props passed to a component.\n\nSo, let's say I have an interface called IButton as follows:\n\n    interface IButton {\n      label: string;\n      iconName?: string;\n      iconColor?: string;\n    }\n\nIs there a way I can only require `iconColor` be supplied only if `iconName` is present, and if `iconName` is not present, then have both required to be undefined?\n\nFor some context, the reason I want to do this is because the button may not always have an icon, but when an icon is being used, the color for said icon is required alongside it.", "author_fullname": "t2_fwysy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Requiring property on a type based on the presence of another property.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hg52p4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593196238.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So, I am not really sure what to search to find out more about this concept, and therefore I apologise in advance if this is a duplicate, but I have been stuck for a day now and need some help.&lt;/p&gt;\n\n&lt;p&gt;I am using TS 3.6.4 in a React project, and I am using an interface to validate props passed to a component.&lt;/p&gt;\n\n&lt;p&gt;So, let&amp;#39;s say I have an interface called IButton as follows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;interface IButton {\n  label: string;\n  iconName?: string;\n  iconColor?: string;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is there a way I can only require &lt;code&gt;iconColor&lt;/code&gt; be supplied only if &lt;code&gt;iconName&lt;/code&gt; is present, and if &lt;code&gt;iconName&lt;/code&gt; is not present, then have both required to be undefined?&lt;/p&gt;\n\n&lt;p&gt;For some context, the reason I want to do this is because the button may not always have an icon, but when an icon is being used, the color for said icon is required alongside it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hg52p4", "is_robot_indexable": true, "report_reasons": null, "author": "gapark", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hg52p4/requiring_property_on_a_type_based_on_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hg52p4/requiring_property_on_a_type_based_on_the/", "subreddit_subscribers": 42846, "created_utc": 1593167438.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_hlxfs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A naive ECS implementation in typescript!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_hfnjsn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/d5UY-XZeSNSUkc43T55rRn-n7noNS2AUMOyx8xL45aM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593125969.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/Avokadoen/ts-ecs-waveshoot", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/XOmUoHPs8zlvjcbWhUmL23FiLsi98kgke-eEKWMU4iU.jpg?auto=webp&amp;s=0768ae691a7ebb018ebfdb2d635d5f6965296f2a", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/XOmUoHPs8zlvjcbWhUmL23FiLsi98kgke-eEKWMU4iU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6591baa0783b3fe8a8be3edb083c0fdb6dca64e7", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/XOmUoHPs8zlvjcbWhUmL23FiLsi98kgke-eEKWMU4iU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c2ef88c7ad0ed90f54ab8542fa17673fc970efb6", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/XOmUoHPs8zlvjcbWhUmL23FiLsi98kgke-eEKWMU4iU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=87767d20b9ea519364b170d46b87f28064377940", "width": 320, "height": 320}], "variants": {}, "id": "G0YqxpWcLC2VDw2w7kmZ0Hc-Q4Lw6mv248JpcnrGdoo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hfnjsn", "is_robot_indexable": true, "report_reasons": null, "author": "hallajs", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hfnjsn/a_naive_ecs_implementation_in_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/Avokadoen/ts-ecs-waveshoot", "subreddit_subscribers": 42846, "created_utc": 1593097169.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Let's say I have a list of patrons, People&lt;&gt;. What is the best pattern to have a single source of truth for who their family members are? (Parties of people, no need for family trees.) Do I need to create Family objects?", "author_fullname": "t2_gfrlw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best way to handle family members in People objects?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hfu5cz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.71, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593147890.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s say I have a list of patrons, People&amp;lt;&amp;gt;. What is the best pattern to have a single source of truth for who their family members are? (Parties of people, no need for family trees.) Do I need to create Family objects?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hfu5cz", "is_robot_indexable": true, "report_reasons": null, "author": "theredwillow", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hfu5cz/best_way_to_handle_family_members_in_people/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hfu5cz/best_way_to_handle_family_members_in_people/", "subreddit_subscribers": 42846, "created_utc": 1593119090.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_4015onhj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Intersecci\u00f3n de tipos en Typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_hg42h0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.3, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/2Cp6W7tOzXrzn3vGtLdyKpg3wxb8JcC8AhZ2YSQk2d0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593190530.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "emanuelpeg.blogspot.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://emanuelpeg.blogspot.com/2020/06/interseccion-de-tipos-en-typescript.html#.XvW3595FkMw.reddit", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/kXRm5gnCXEURd0ddac8X0da-E5FpC_IngE4gSz-R7PE.jpg?auto=webp&amp;s=01cb54596e4e4cc69aa7c9092cee8555366a502c", "width": 225, "height": 118}, "resolutions": [{"url": "https://external-preview.redd.it/kXRm5gnCXEURd0ddac8X0da-E5FpC_IngE4gSz-R7PE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f88377817124973c24257630823b80c8ef88adb8", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/kXRm5gnCXEURd0ddac8X0da-E5FpC_IngE4gSz-R7PE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=810216585da115e53defc6df3b80909b2f7c0a4d", "width": 216, "height": 113}], "variants": {}, "id": "oVPsaD83VtgwlNi97t4qcHVyY-nwfeFGNb84MPFDwXA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hg42h0", "is_robot_indexable": true, "report_reasons": null, "author": "emanuelpeg", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hg42h0/intersecci\u00f3n_de_tipos_en_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://emanuelpeg.blogspot.com/2020/06/interseccion-de-tipos-en-typescript.html#.XvW3595FkMw.reddit", "subreddit_subscribers": 42846, "created_utc": 1593161730.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_6bq779u6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is New in Angular 10?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_hfmox0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.56, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/28RsPsqQPffVQmYkIh1OwB15PUO3R9nkO4Iu3gKdzj0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593122821.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "volosoft.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://volosoft.com/blog/what-is-new-in-angular-10", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/w5-397c6ijLhitH_14r6kdSxT8nY65VOhbGcZ8bRYIA.jpg?auto=webp&amp;s=a184018af285c87c23aec0523706dec434ce26d0", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/w5-397c6ijLhitH_14r6kdSxT8nY65VOhbGcZ8bRYIA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=764cb58111ca3c6bbc4a09f5de92a1b0335161be", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/w5-397c6ijLhitH_14r6kdSxT8nY65VOhbGcZ8bRYIA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1a927623e0e7f182bca29894971a383bc506b179", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/w5-397c6ijLhitH_14r6kdSxT8nY65VOhbGcZ8bRYIA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=660ffe76715beaadbb4f7ee2345971ea69707d13", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/w5-397c6ijLhitH_14r6kdSxT8nY65VOhbGcZ8bRYIA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ceb8ba976b979b6b7e7f9b009e29d35b362a6d20", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/w5-397c6ijLhitH_14r6kdSxT8nY65VOhbGcZ8bRYIA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b910ac3c4f1e5630d72d6f7b4d61adeca77e6e6e", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/w5-397c6ijLhitH_14r6kdSxT8nY65VOhbGcZ8bRYIA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6dbc27e1351fa04e73d81c8daeae9a6803bd9bc9", "width": 1080, "height": 540}], "variants": {}, "id": "gDrYO2M9Slt47GSCe5gimcD4-_dXuVB6bXA7cAavOhU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hfmox0", "is_robot_indexable": true, "report_reasons": null, "author": "Volosoft", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hfmox0/what_is_new_in_angular_10/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://volosoft.com/blog/what-is-new-in-angular-10", "subreddit_subscribers": 42846, "created_utc": 1593094021.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Method was looking good until I had to convert it to async because I needed to await another internal method that makes an API call.\n\nI still have trouble with return types on async functions and this current error totally confuses me, hopefully someone knows what it means:\n\n    /* \n       Asks for the foreign word\n       \n       Gets a definition, asks for confirmation or an adjustment.\n       Returns an object with the foreign word and definition pair\n       \n       Returns false if user marks \"done\" commands\n       */\n       async protected getForeignWordAndDefinition()\n          : Promise&lt;ForeignWordDefinitionPair&gt; | Promise&lt;false&gt; {\n        // (alias) interface ForeignWordDefinitionPair\n        // import ForeignWordDefinitionPair\n        // Type 'Promise&lt;ForeignWordDefinitionPair&gt; | Promise&lt;false&gt;' \n        // is not a valid async function return type in ES5/ES3 because \n        // it does not refer to a Promise-compatible constructor value. ts(1055)\n    \n        // Originally it was   : ForeignWordDefinitionPair | false\n        // same error occured\n    \n          console.log(\"prompt text\")\n          const userInput = readLine.question();\n    \n          const userHasExited = this.isDone(userInput);\n          if (userHasExited) return false;\n    \n          // translate foreign to english\n          const foreignWord = userInput;\n    \n          const googleOfferedDefinition: string = await this.textTranslate(\n             foreignWord, translationDirection.toEnglish\n          );\n    \n          console.log(\"prompt text\")\n          console.log(googleOfferedDefinition);\n          const userDefinition: string = readLine.question();\n    \n          let acceptedDefinition = googleOfferedDefinition;\n          if (userDefinition !== \"\") {\n             acceptedDefinition = userDefinition;\n          } \n    \n          // shape the object and return it\n          const foreignWordDefinitionPair: ForeignWordDefinitionPair = {\n             foreignWord\n             , englishDefinition: acceptedDefinition\n          }\n    \n          return foreignWordDefinitionPair;\n       }", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type 'Promise&lt;X&gt;' is not a valid async function return type in ES5/ES3 because it does not refer to a Promise-compatible constructor value.ts(1055)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hfq8co", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.56, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1593106354.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593134869.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Method was looking good until I had to convert it to async because I needed to await another internal method that makes an API call.&lt;/p&gt;\n\n&lt;p&gt;I still have trouble with return types on async functions and this current error totally confuses me, hopefully someone knows what it means:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/* \n   Asks for the foreign word\n\n   Gets a definition, asks for confirmation or an adjustment.\n   Returns an object with the foreign word and definition pair\n\n   Returns false if user marks &amp;quot;done&amp;quot; commands\n   */\n   async protected getForeignWordAndDefinition()\n      : Promise&amp;lt;ForeignWordDefinitionPair&amp;gt; | Promise&amp;lt;false&amp;gt; {\n    // (alias) interface ForeignWordDefinitionPair\n    // import ForeignWordDefinitionPair\n    // Type &amp;#39;Promise&amp;lt;ForeignWordDefinitionPair&amp;gt; | Promise&amp;lt;false&amp;gt;&amp;#39; \n    // is not a valid async function return type in ES5/ES3 because \n    // it does not refer to a Promise-compatible constructor value. ts(1055)\n\n    // Originally it was   : ForeignWordDefinitionPair | false\n    // same error occured\n\n      console.log(&amp;quot;prompt text&amp;quot;)\n      const userInput = readLine.question();\n\n      const userHasExited = this.isDone(userInput);\n      if (userHasExited) return false;\n\n      // translate foreign to english\n      const foreignWord = userInput;\n\n      const googleOfferedDefinition: string = await this.textTranslate(\n         foreignWord, translationDirection.toEnglish\n      );\n\n      console.log(&amp;quot;prompt text&amp;quot;)\n      console.log(googleOfferedDefinition);\n      const userDefinition: string = readLine.question();\n\n      let acceptedDefinition = googleOfferedDefinition;\n      if (userDefinition !== &amp;quot;&amp;quot;) {\n         acceptedDefinition = userDefinition;\n      } \n\n      // shape the object and return it\n      const foreignWordDefinitionPair: ForeignWordDefinitionPair = {\n         foreignWord\n         , englishDefinition: acceptedDefinition\n      }\n\n      return foreignWordDefinitionPair;\n   }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hfq8co", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hfq8co/type_promisex_is_not_a_valid_async_function/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hfq8co/type_promisex_is_not_a_valid_async_function/", "subreddit_subscribers": 42846, "created_utc": 1593106069.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "A simple little app to visualize reversing an array.   \n\n\nWant to start doing more algorithms as well as visualizing them.   \n\n\nStarting off very basic! \n\n&amp;#x200B;\n\n [https://github.com/risingBirdSong/visualizeReverseArray](https://github.com/risingBirdSong/visualizeReverseArray)", "author_fullname": "t2_1iv9u0qf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "simple algo visualizer -- reverse an array", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hfcnnp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1593074023.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;A simple little app to visualize reversing an array.   &lt;/p&gt;\n\n&lt;p&gt;Want to start doing more algorithms as well as visualizing them.   &lt;/p&gt;\n\n&lt;p&gt;Starting off very basic! &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/risingBirdSong/visualizeReverseArray\"&gt;https://github.com/risingBirdSong/visualizeReverseArray&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/m1gIvGknDk0DQqM-yUnqVlMGuRJfF98kO9JGMJ3ev_g.jpg?auto=webp&amp;s=2e7e3ffa8377b46c8e7379d9e7fe132113dfbc03", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/m1gIvGknDk0DQqM-yUnqVlMGuRJfF98kO9JGMJ3ev_g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6659952747d4e27a4328a750a3583152c64a8d34", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/m1gIvGknDk0DQqM-yUnqVlMGuRJfF98kO9JGMJ3ev_g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1fe5126f21338ad9ad263b1cf2d6a25df214e959", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/m1gIvGknDk0DQqM-yUnqVlMGuRJfF98kO9JGMJ3ev_g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c04350e6aedc52f8c75ee70f955bf5b2b255eb51", "width": 320, "height": 320}], "variants": {}, "id": "0dgofSbD3XnAvvent6IxqqPq1HHdwYA9hWL-Y2_qrUE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hfcnnp", "is_robot_indexable": true, "report_reasons": null, "author": "weather-headed", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hfcnnp/simple_algo_visualizer_reverse_an_array/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hfcnnp/simple_algo_visualizer_reverse_an_array/", "subreddit_subscribers": 42846, "created_utc": 1593045223.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_35unu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "8 Visual Studio Code Assistant rules for nasty TypeScript / Angular bugs", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 108, "top_awarded_type": null, "hide_score": false, "name": "t3_hfhu2t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/XHQ5eXNqO5vsL_QszmCwy1KxcjXh_frNDmDTvVNot-k.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1593098713.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@tomaszs2/8-visual-studio-code-assistant-rules-for-nasty-angular-bugs-9f186277e0ab", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/xhJzfq9e0wRrpUKFH_6LrJ1lr4KbuKa3sTEnxKE3uCg.jpg?auto=webp&amp;s=4ddae1606cf61f6613fa3e2fbcaeff35e28ab617", "width": 1200, "height": 928}, "resolutions": [{"url": "https://external-preview.redd.it/xhJzfq9e0wRrpUKFH_6LrJ1lr4KbuKa3sTEnxKE3uCg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4c48f328f432ac9b711063bec006d368f1e92368", "width": 108, "height": 83}, {"url": "https://external-preview.redd.it/xhJzfq9e0wRrpUKFH_6LrJ1lr4KbuKa3sTEnxKE3uCg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f1bed92c8ce4cabed54005adeaf79195c424d089", "width": 216, "height": 167}, {"url": "https://external-preview.redd.it/xhJzfq9e0wRrpUKFH_6LrJ1lr4KbuKa3sTEnxKE3uCg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e74dae877c38bcefffac4055ddccb35c4be6bf8a", "width": 320, "height": 247}, {"url": "https://external-preview.redd.it/xhJzfq9e0wRrpUKFH_6LrJ1lr4KbuKa3sTEnxKE3uCg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6f6b3665f5913a66a19d8bfb02771f6ee3b9538a", "width": 640, "height": 494}, {"url": "https://external-preview.redd.it/xhJzfq9e0wRrpUKFH_6LrJ1lr4KbuKa3sTEnxKE3uCg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e2f915e585a39bde9c7a8ef29b5acd90d6aab06c", "width": 960, "height": 742}, {"url": "https://external-preview.redd.it/xhJzfq9e0wRrpUKFH_6LrJ1lr4KbuKa3sTEnxKE3uCg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=283f40f73b25ae9ffdd3e12f2de242fb538c2989", "width": 1080, "height": 835}], "variants": {}, "id": "gBNEByQ7qY4Nn7IF4Ggx2D3VXdKrJa2WTlKIH1ZrZ8k"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hfhu2t", "is_robot_indexable": true, "report_reasons": null, "author": "bear007", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hfhu2t/8_visual_studio_code_assistant_rules_for_nasty/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@tomaszs2/8-visual-studio-code-assistant-rules-for-nasty-angular-bugs-9f186277e0ab", "subreddit_subscribers": 42846, "created_utc": 1593069913.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hfhu2t", "before": null}}