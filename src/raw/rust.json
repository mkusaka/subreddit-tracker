{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nAlso check out [last weeks' thread](https://reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (46/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": "easyquestions", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqrkpa", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": "", "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "\ud83d\ude4b questions", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604927583.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last weeks&amp;#39; thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "e86091d6-dfe6-11ea-a6d0-0eaf4ae01c99", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#f7f5ff", "id": "jqrkpa", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/jqrkpa/hey_rustaceans_got_an_easy_question_ask_here/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/jqrkpa/hey_rustaceans_got_an_easy_question_ask_here/", "subreddit_subscribers": 117546, "created_utc": 1604898783.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "New week, new Rust! What are you folks up to? Answer here or over at [rust-users](https://users.rust-lang.org/t/whats-everyone-working-on-this-week-46-2020/51226?u=llogiq)!", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What\u2019s everyone working on this week (46/2020)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": "workingon", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqrmqn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": "", "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "\ud83d\udee0\ufe0f workings", "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604927813.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New week, new Rust! What are you folks up to? Answer here or over at &lt;a href=\"https://users.rust-lang.org/t/whats-everyone-working-on-this-week-46-2020/51226?u=llogiq\"&gt;rust-users&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "bcf7a574-dfe7-11ea-a8e3-0e6d3227496b", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#fff0f5", "id": "jqrmqn", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/jqrmqn/whats_everyone_working_on_this_week_462020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/jqrmqn/whats_everyone_working_on_this_week_462020/", "subreddit_subscribers": 117546, "created_utc": 1604899013.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_3eyhb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why Rust is the Future of Game Development", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqux1s", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 113, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 113, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604944638.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "thefuntastic.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://thefuntastic.com/blog/why-rust-is-the-future-game-dev", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqux1s", "is_robot_indexable": true, "report_reasons": null, "author": "FluffyCheese", "discussion_type": null, "num_comments": 31, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqux1s/why_rust_is_the_future_of_game_development/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://thefuntastic.com/blog/why-rust-is-the-future-game-dev", "subreddit_subscribers": 117546, "created_utc": 1604915838.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_6jlon", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "rust-analyzer changelog #50", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_jqwfoj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604952332.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rust-analyzer.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://rust-analyzer.github.io/thisweek/2020/11/09/changelog-50.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqwfoj", "is_robot_indexable": true, "report_reasons": null, "author": "WellMakeItSomehow", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqwfoj/rustanalyzer_changelog_50/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rust-analyzer.github.io/thisweek/2020/11/09/changelog-50.html", "subreddit_subscribers": 117546, "created_utc": 1604923532.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_a384e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Pijul: Towards 1.0", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jquu9r", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": "", "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 34, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604944193.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "pijul.org", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://pijul.org/posts/2020-11-07-towards-1.0/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "leaf \u00b7 collenchyma", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jquu9r", "is_robot_indexable": true, "report_reasons": null, "author": "Hobofan94", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/jquu9r/pijul_towards_10/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://pijul.org/posts/2020-11-07-towards-1.0/", "subreddit_subscribers": 117546, "created_utc": 1604915393.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_18k7g75w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I wrote a programming language/interpreter as a Rust library, so that you can easily integrate it into your Rust projects and use it to allow user-definable logic.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqms89", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 144, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 144, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604909212.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "crates.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://crates.io/crates/xbasic", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqms89", "is_robot_indexable": true, "report_reasons": null, "author": "scd31", "discussion_type": null, "num_comments": 32, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqms89/i_wrote_a_programming_languageinterpreter_as_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://crates.io/crates/xbasic", "subreddit_subscribers": 117546, "created_utc": 1604880412.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "So Polly. It's LLVM's loop fusion and data locality optimizer. LLVM does not include it by default and the [last attempt](https://github.com/rust-lang/rust/pull/51061) to add it to Rust was 2 years ago so I took a shot at it.\n\n[Ported](https://github.com/JRF63/polybench-rs) the benchmark that Polly uses (PolyBench/C). Performance gains are massive in some tests with deep nested loops but there are also slowdowns.\n\nThe [PR](https://github.com/rust-lang/rust/pull/78566) on this isn't merged yet. But if anyone cares to try, it's a one-liner change (disregarding the conditional compilation).", "author_fullname": "t2_8r1zab8r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Benchmarking LLVM Polly in Rust", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqw0ka", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604950293.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So Polly. It&amp;#39;s LLVM&amp;#39;s loop fusion and data locality optimizer. LLVM does not include it by default and the &lt;a href=\"https://github.com/rust-lang/rust/pull/51061\"&gt;last attempt&lt;/a&gt; to add it to Rust was 2 years ago so I took a shot at it.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JRF63/polybench-rs\"&gt;Ported&lt;/a&gt; the benchmark that Polly uses (PolyBench/C). Performance gains are massive in some tests with deep nested loops but there are also slowdowns.&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=\"https://github.com/rust-lang/rust/pull/78566\"&gt;PR&lt;/a&gt; on this isn&amp;#39;t merged yet. But if anyone cares to try, it&amp;#39;s a one-liner change (disregarding the conditional compilation).&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqw0ka", "is_robot_indexable": true, "report_reasons": null, "author": "jrf63", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqw0ka/benchmarking_llvm_polly_in_rust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/jqw0ka/benchmarking_llvm_polly_in_rust/", "subreddit_subscribers": 117546, "created_utc": 1604921493.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Hi everyone,\n\nI just released [normpath](https://crates.io/crates/normpath) \\- a crate meant to make correct path manipulation easier. It lets you to avoid doing [canonicalization](https://doc.rust-lang.org/std/fs/fn.canonicalize.html) that is often unnecessary on Windows and unreliable: [\\#45067](https://github.com/rust-lang/rust/issues/45067), [\\#48249](https://github.com/rust-lang/rust/issues/48249), [\\#52440](https://github.com/rust-lang/rust/issues/52440), [\\#55812](https://github.com/rust-lang/rust/issues/55812), [\\#58613](https://github.com/rust-lang/rust/issues/58613), [\\#59107](https://github.com/rust-lang/rust/issues/59107), [\\#74327](https://github.com/rust-lang/rust/issues/74327). Canonicalization can cause errors for some valid paths (e.g., shared partitions) and always returns a verbatim path, which is usually unexpected. Normalization is probably what you want instead, which this crate provides with [`PathExt::normalize`](https://docs.rs/normpath/0.1.0/normpath/trait.PathExt.html#tymethod.normalize).\n\nIt also defines [`BasePath`](https://docs.rs/normpath/0.1.0/normpath/struct.BasePath.html) and [`BasePathBuf`](https://docs.rs/normpath/0.1.0/normpath/struct.BasePathBuf.html), which improve the API of [`Path`](https://doc.rust-lang.org/std/path/struct.Path.html) and [`PathBuf`](https://doc.rust-lang.org/std/path/struct.PathBuf.html) and handle more edge cases when joining paths. For example, you can use them to join verbatim paths without [custom workarounds](https://github.com/rust-lang/cargo/blob/master/src/cargo/util/paths.rs#L61-L86).\n\n[Documentation](https://docs.rs/normpath) | [Repository](https://github.com/dylni/normpath) | [crates.io](https://crates.io/crates/normpath)", "author_fullname": "t2_5solygi8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "normpath - More reliable path manipulation", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_jqx8hf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": "4c3a495a-89df-11e3-a482-12313d27e9a3", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604955878.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone,&lt;/p&gt;\n\n&lt;p&gt;I just released &lt;a href=\"https://crates.io/crates/normpath\"&gt;normpath&lt;/a&gt; - a crate meant to make correct path manipulation easier. It lets you to avoid doing &lt;a href=\"https://doc.rust-lang.org/std/fs/fn.canonicalize.html\"&gt;canonicalization&lt;/a&gt; that is often unnecessary on Windows and unreliable: &lt;a href=\"https://github.com/rust-lang/rust/issues/45067\"&gt;#45067&lt;/a&gt;, &lt;a href=\"https://github.com/rust-lang/rust/issues/48249\"&gt;#48249&lt;/a&gt;, &lt;a href=\"https://github.com/rust-lang/rust/issues/52440\"&gt;#52440&lt;/a&gt;, &lt;a href=\"https://github.com/rust-lang/rust/issues/55812\"&gt;#55812&lt;/a&gt;, &lt;a href=\"https://github.com/rust-lang/rust/issues/58613\"&gt;#58613&lt;/a&gt;, &lt;a href=\"https://github.com/rust-lang/rust/issues/59107\"&gt;#59107&lt;/a&gt;, &lt;a href=\"https://github.com/rust-lang/rust/issues/74327\"&gt;#74327&lt;/a&gt;. Canonicalization can cause errors for some valid paths (e.g., shared partitions) and always returns a verbatim path, which is usually unexpected. Normalization is probably what you want instead, which this crate provides with &lt;a href=\"https://docs.rs/normpath/0.1.0/normpath/trait.PathExt.html#tymethod.normalize\"&gt;&lt;code&gt;PathExt::normalize&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;It also defines &lt;a href=\"https://docs.rs/normpath/0.1.0/normpath/struct.BasePath.html\"&gt;&lt;code&gt;BasePath&lt;/code&gt;&lt;/a&gt; and &lt;a href=\"https://docs.rs/normpath/0.1.0/normpath/struct.BasePathBuf.html\"&gt;&lt;code&gt;BasePathBuf&lt;/code&gt;&lt;/a&gt;, which improve the API of &lt;a href=\"https://doc.rust-lang.org/std/path/struct.Path.html\"&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html\"&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; and handle more edge cases when joining paths. For example, you can use them to join verbatim paths without &lt;a href=\"https://github.com/rust-lang/cargo/blob/master/src/cargo/util/paths.rs#L61-L86\"&gt;custom workarounds&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://docs.rs/normpath\"&gt;Documentation&lt;/a&gt; | &lt;a href=\"https://github.com/dylni/normpath\"&gt;Repository&lt;/a&gt; | &lt;a href=\"https://crates.io/crates/normpath\"&gt;crates.io&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "os_str_bytes \u00b7 process_control \u00b7 quit", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqx8hf", "is_robot_indexable": true, "report_reasons": null, "author": "_dylni", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/jqx8hf/normpath_more_reliable_path_manipulation/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/jqx8hf/normpath_more_reliable_path_manipulation/", "subreddit_subscribers": 117546, "created_utc": 1604927078.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Hi, rustacenas!\n\nI decided to write a CLI tool with some nice graphs as well as an easy api for gathering system information (dumping info like cpu, network, memory, processes... as JSON, yaml). Maybe some of you might find it interesting or have suggestions on what to improve.\n\nHere is the [repository](https://github.com/wojciechkepka/rsys-cli).\n\nHere is a demo of the graph functionality:\n\nhttps://i.redd.it/ga4o29p602y51.gif\n\nedit:  \nI should probably add that in the current state it's probably only usable on linux.  \n", "author_fullname": "t2_43mplwry", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "rsys - CLI tool with graphs and more", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"ga4o29p602y51": {"status": "valid", "e": "AnimatedImage", "m": "image/gif", "p": [{"y": 75, "x": 108, "u": "https://preview.redd.it/ga4o29p602y51.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=b4f43a0215cb576213ae5bfc655a534494f0fc1f"}, {"y": 150, "x": 216, "u": "https://preview.redd.it/ga4o29p602y51.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=0688eebb42a4aeb5992f0030f0867af9224883f5"}, {"y": 222, "x": 320, "u": "https://preview.redd.it/ga4o29p602y51.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=25a9b5b4d9c9f51eee43ba983835ac90fcf699df"}, {"y": 445, "x": 640, "u": "https://preview.redd.it/ga4o29p602y51.gif?width=640&amp;crop=smart&amp;format=png8&amp;s=9715e9947dfdccb9da48c44c815e10030dedcf7a"}, {"y": 667, "x": 960, "u": "https://preview.redd.it/ga4o29p602y51.gif?width=960&amp;crop=smart&amp;format=png8&amp;s=0e9bae5d60169c4f09bc7aef050c9dfaa36de33c"}, {"y": 751, "x": 1080, "u": "https://preview.redd.it/ga4o29p602y51.gif?width=1080&amp;crop=smart&amp;format=png8&amp;s=d58bff5c22de26c12cb4b40752847e2c7af5fcd6"}], "s": {"y": 991, "gif": "https://i.redd.it/ga4o29p602y51.gif", "mp4": "https://preview.redd.it/ga4o29p602y51.gif?format=mp4&amp;s=28d6a77f996dedf52c78c4b174775009e511b43c", "x": 1425}, "id": "ga4o29p602y51"}}, "name": "t3_jqfytu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 140, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 140, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604886511.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, rustacenas!&lt;/p&gt;\n\n&lt;p&gt;I decided to write a CLI tool with some nice graphs as well as an easy api for gathering system information (dumping info like cpu, network, memory, processes... as JSON, yaml). Maybe some of you might find it interesting or have suggestions on what to improve.&lt;/p&gt;\n\n&lt;p&gt;Here is the &lt;a href=\"https://github.com/wojciechkepka/rsys-cli\"&gt;repository&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Here is a demo of the graph functionality:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.redd.it/ga4o29p602y51.gif\"&gt;https://i.redd.it/ga4o29p602y51.gif&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;edit:&lt;br/&gt;\nI should probably add that in the current state it&amp;#39;s probably only usable on linux.  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqfytu", "is_robot_indexable": true, "report_reasons": null, "author": "wwojtekk", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqfytu/rsys_cli_tool_with_graphs_and_more/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/jqfytu/rsys_cli_tool_with_graphs_and_more/", "subreddit_subscribers": 117546, "created_utc": 1604857711.0, "num_crossposts": 2, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_6i1gvemq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "xsv - a command-line toolkit (for CSV data) written in Rust is crushing it in performance", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqiwpj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 82, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 82, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604896183.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "ezzeddinabdullah.medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://ezzeddinabdullah.medium.com/how-to-clean-csv-data-at-the-command-line-part-2-207215881c34", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqiwpj", "is_robot_indexable": true, "report_reasons": null, "author": "ezzeddinabdallah", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqiwpj/xsv_a_commandline_toolkit_for_csv_data_written_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://ezzeddinabdullah.medium.com/how-to-clean-csv-data-at-the-command-line-part-2-207215881c34", "subreddit_subscribers": 117546, "created_utc": 1604867383.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Recently started with rust and I love it, it's the first language which I (think) I understand and want to stick to it. I also really enjoy making things with a raspberry pi but hate python so I wanted to use rust on the pi.\n\nI know there's already a library out there for gpio and the pi however I would like to put something together myself.\n\nI'm at that awkward stage where I understand the basics of the language but not well enough to implement any real projects. I've made some console apps which have been very helpful", "author_fullname": "t2_3yq1mbxy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using rust to communicate with gpio. Is that too advanced for a beginner?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqv3cm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604945584.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Recently started with rust and I love it, it&amp;#39;s the first language which I (think) I understand and want to stick to it. I also really enjoy making things with a raspberry pi but hate python so I wanted to use rust on the pi.&lt;/p&gt;\n\n&lt;p&gt;I know there&amp;#39;s already a library out there for gpio and the pi however I would like to put something together myself.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m at that awkward stage where I understand the basics of the language but not well enough to implement any real projects. I&amp;#39;ve made some console apps which have been very helpful&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqv3cm", "is_robot_indexable": true, "report_reasons": null, "author": "MightyGiant21", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqv3cm/using_rust_to_communicate_with_gpio_is_that_too/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/jqv3cm/using_rust_to_communicate_with_gpio_is_that_too/", "subreddit_subscribers": 117546, "created_utc": 1604916784.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "I started exploring rust (for one of my courses) and I was wondering how rust does type checking? I looked through official sources but couldn't find anything useful. I hope someone could help me.", "author_fullname": "t2_7tyq9vza", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rust type checking?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jqm0rv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604906507.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I started exploring rust (for one of my courses) and I was wondering how rust does type checking? I looked through official sources but couldn&amp;#39;t find anything useful. I hope someone could help me.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jqm0rv", "is_robot_indexable": true, "report_reasons": null, "author": "the_tortoise_girl", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/jqm0rv/rust_type_checking/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/jqm0rv/rust_type_checking/", "subreddit_subscribers": 117546, "created_utc": 1604877707.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jqm0rv", "before": null}}