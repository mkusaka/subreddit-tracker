{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_jxff6u5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Coroutines: a practical vocabulary", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fmnllf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 39, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 39, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584856319.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rockandnull.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fmnllf", "is_robot_indexable": true, "report_reasons": null, "author": "palebt", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fmnllf/coroutines_a_practical_vocabulary/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.rockandnull.com/coroutines-practical/", "subreddit_subscribers": 28646, "created_utc": 1584827519.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_hfwx8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A template for building Alfred workflows in Kotlin/JS", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fmu4hu", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I&amp;#39;ve created a template to allow people easily build &lt;a href=\"https://twitter.com/alfredapp?ref_src=twsrc%5Etfw\"&gt;@alfredapp&lt;/a&gt; workflows using &lt;a href=\"https://twitter.com/kotlin?ref_src=twsrc%5Etfw\"&gt;@kotlin&lt;/a&gt; (JS).&lt;br&gt;&lt;br&gt;Find it here: &lt;a href=\"https://t.co/FciwKL9ZRZ\"&gt;https://t.co/FciwKL9ZRZ&lt;/a&gt;&lt;br&gt;&lt;br&gt;It&amp;#39;s what I&amp;#39;ve used to build my FuzzyDate workflow &lt;a href=\"https://t.co/S6UYd5oyiP\"&gt;https://t.co/S6UYd5oyiP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Vladyslav Sitalo (@VladyslavSitalo) &lt;a href=\"https://twitter.com/VladyslavSitalo/status/1241584247812448256?ref_src=twsrc%5Etfw\"&gt;March 22, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 798}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/VladyslavSitalo/status/1241584247812448256", "author_name": "Vladyslav Sitalo", "height": 798, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I&amp;#39;ve created a template to allow people easily build &lt;a href=\"https://twitter.com/alfredapp?ref_src=twsrc%5Etfw\"&gt;@alfredapp&lt;/a&gt; workflows using &lt;a href=\"https://twitter.com/kotlin?ref_src=twsrc%5Etfw\"&gt;@kotlin&lt;/a&gt; (JS).&lt;br&gt;&lt;br&gt;Find it here: &lt;a href=\"https://t.co/FciwKL9ZRZ\"&gt;https://t.co/FciwKL9ZRZ&lt;/a&gt;&lt;br&gt;&lt;br&gt;It&amp;#39;s what I&amp;#39;ve used to build my FuzzyDate workflow &lt;a href=\"https://t.co/S6UYd5oyiP\"&gt;https://t.co/S6UYd5oyiP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Vladyslav Sitalo (@VladyslavSitalo) &lt;a href=\"https://twitter.com/VladyslavSitalo/status/1241584247812448256?ref_src=twsrc%5Etfw\"&gt;March 22, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/VladyslavSitalo", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I&amp;#39;ve created a template to allow people easily build &lt;a href=\"https://twitter.com/alfredapp?ref_src=twsrc%5Etfw\"&gt;@alfredapp&lt;/a&gt; workflows using &lt;a href=\"https://twitter.com/kotlin?ref_src=twsrc%5Etfw\"&gt;@kotlin&lt;/a&gt; (JS).&lt;br&gt;&lt;br&gt;Find it here: &lt;a href=\"https://t.co/FciwKL9ZRZ\"&gt;https://t.co/FciwKL9ZRZ&lt;/a&gt;&lt;br&gt;&lt;br&gt;It&amp;#39;s what I&amp;#39;ve used to build my FuzzyDate workflow &lt;a href=\"https://t.co/S6UYd5oyiP\"&gt;https://t.co/S6UYd5oyiP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Vladyslav Sitalo (@VladyslavSitalo) &lt;a href=\"https://twitter.com/VladyslavSitalo/status/1241584247812448256?ref_src=twsrc%5Etfw\"&gt;March 22, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/fmu4hu", "height": 798}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584880785.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fmu4hu", "is_robot_indexable": true, "report_reasons": null, "author": "stvad", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fmu4hu/a_template_for_building_alfred_workflows_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/VladyslavSitalo/status/1241584247812448256?s=20", "subreddit_subscribers": 28646, "created_utc": 1584851985.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/VladyslavSitalo/status/1241584247812448256", "author_name": "Vladyslav Sitalo", "height": 798, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I&amp;#39;ve created a template to allow people easily build &lt;a href=\"https://twitter.com/alfredapp?ref_src=twsrc%5Etfw\"&gt;@alfredapp&lt;/a&gt; workflows using &lt;a href=\"https://twitter.com/kotlin?ref_src=twsrc%5Etfw\"&gt;@kotlin&lt;/a&gt; (JS).&lt;br&gt;&lt;br&gt;Find it here: &lt;a href=\"https://t.co/FciwKL9ZRZ\"&gt;https://t.co/FciwKL9ZRZ&lt;/a&gt;&lt;br&gt;&lt;br&gt;It&amp;#39;s what I&amp;#39;ve used to build my FuzzyDate workflow &lt;a href=\"https://t.co/S6UYd5oyiP\"&gt;https://t.co/S6UYd5oyiP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Vladyslav Sitalo (@VladyslavSitalo) &lt;a href=\"https://twitter.com/VladyslavSitalo/status/1241584247812448256?ref_src=twsrc%5Etfw\"&gt;March 22, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/VladyslavSitalo", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_51zatpzq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A sample app built with Kotlin, Coroutines, Flow, Dagger 2, Architecture Components, MVVM, Room, Retrofit, Moshi, Material Components and other Jetpack libraries.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fm91pb", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 73, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 73, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584792236.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fm91pb", "is_robot_indexable": true, "report_reasons": null, "author": "shreyaspatil99", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fm91pb/a_sample_app_built_with_kotlin_coroutines_flow/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/PatilShreyas/Foodium", "subreddit_subscribers": 28646, "created_utc": 1584763436.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hey folks, I'm sharing my personal library that I use in every project of mine, it has things found working from StackOverflow to things I've written personally to take shortcuts, copied some from Github and modified them to work as intended just to make the Android development easier.\n\n[Github Link](https://github.com/CraZyLegenD/Set-Of-Useful-Kotlin-Extensions-and-Helpers)\n\nIt lacks documentation at some places, but the methods are quite self explanatory, feel free to contribute or to use it in your projects, pull requests are welcomed as well as if something doesn't work feel free to open an issue or if you find your code add headers/credits that's yours and make a pull request.", "author_fullname": "t2_16w8pc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My personal library of Kotlin extensions for Android development", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fmkwcl", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584848607.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey folks, I&amp;#39;m sharing my personal library that I use in every project of mine, it has things found working from StackOverflow to things I&amp;#39;ve written personally to take shortcuts, copied some from Github and modified them to work as intended just to make the Android development easier.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/CraZyLegenD/Set-Of-Useful-Kotlin-Extensions-and-Helpers\"&gt;Github Link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It lacks documentation at some places, but the methods are quite self explanatory, feel free to contribute or to use it in your projects, pull requests are welcomed as well as if something doesn&amp;#39;t work feel free to open an issue or if you find your code add headers/credits that&amp;#39;s yours and make a pull request.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fmkwcl", "is_robot_indexable": true, "report_reasons": null, "author": "CraZy_LegenD", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fmkwcl/my_personal_library_of_kotlin_extensions_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fmkwcl/my_personal_library_of_kotlin_extensions_for/", "subreddit_subscribers": 28646, "created_utc": 1584819807.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Which is the best way to make friends for talk and code?", "author_fullname": "t2_3z16ed7i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Try make code friends", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fmnen3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584855790.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Which is the best way to make friends for talk and code?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fmnen3", "is_robot_indexable": true, "report_reasons": null, "author": "JuanGarzon", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fmnen3/try_make_code_friends/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fmnen3/try_make_code_friends/", "subreddit_subscribers": 28646, "created_utc": 1584826990.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hello,\n\n&amp;#x200B;\n\nI'm trying to create a shared library of entities (target for Android, JVM and JS).\n\n&amp;#x200B;\n\nEverything goes well until implementing annotations. My goal is to have validator annotations directly written in the entities classes. I want to use JSR 303 (Bean validation) compliant annotation to validate the entities for JVM and Android and write a fallback for Javascript (using the npm class-validator package).\n\n    import validation.Min\n    \n    class Marketable : Salable() {\n    \n        @Min(0)\n        var stockAmount: Int = 0\n    }\n\nMy approach is to define a set of \"generic\" (expected) annotations like this :\n\n    package validation.Min \n    expect annotation class Min\n\nAnd in JVM implementation\n\n    package validation.Min \n    \n    actual typealias Min = javax.validation.constraints.Min\n    // ^----- error : Actual class 'Min' \n    // has no corresponding members for expected class members \n\nWhat I would like to achieve is to \"proxy\" the calls to the \"actual\" annotations because the parameters list is not the same for javax.validation.\\* and the annotations from the class-validator npm package.\n\n&amp;#x200B;\n\nIn Javascript/Typescript (and even Python), we can wrap decorator into decorator like this (since decorators are simply functions) :\n\n    function MinValidator(value, message, ...) {\n        // ... the base Min validator\n        return function(target) {}\n    }\n    \n    function MinProxy(value) {\n        return MinValidator(value, \"Some message\", ...)\n    }\n\nThanks", "author_fullname": "t2_5zq9zss6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin multiplatform annotation", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fmhlm0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584836886.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to create a shared library of entities (target for Android, JVM and JS).&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Everything goes well until implementing annotations. My goal is to have validator annotations directly written in the entities classes. I want to use JSR 303 (Bean validation) compliant annotation to validate the entities for JVM and Android and write a fallback for Javascript (using the npm class-validator package).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import validation.Min\n\nclass Marketable : Salable() {\n\n    @Min(0)\n    var stockAmount: Int = 0\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My approach is to define a set of &amp;quot;generic&amp;quot; (expected) annotations like this :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package validation.Min \nexpect annotation class Min\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And in JVM implementation&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package validation.Min \n\nactual typealias Min = javax.validation.constraints.Min\n// ^----- error : Actual class &amp;#39;Min&amp;#39; \n// has no corresponding members for expected class members \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What I would like to achieve is to &amp;quot;proxy&amp;quot; the calls to the &amp;quot;actual&amp;quot; annotations because the parameters list is not the same for javax.validation.* and the annotations from the class-validator npm package.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;In Javascript/Typescript (and even Python), we can wrap decorator into decorator like this (since decorators are simply functions) :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function MinValidator(value, message, ...) {\n    // ... the base Min validator\n    return function(target) {}\n}\n\nfunction MinProxy(value) {\n    return MinValidator(value, &amp;quot;Some message&amp;quot;, ...)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fmhlm0", "is_robot_indexable": true, "report_reasons": null, "author": "davidatdare", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fmhlm0/kotlin_multiplatform_annotation/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fmhlm0/kotlin_multiplatform_annotation/", "subreddit_subscribers": 28646, "created_utc": 1584808086.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_3yfyt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "KotlinConf 2020 has been postponed until 2021", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fluber", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 72, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 72, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584736647.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "kotlinconf.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fluber", "is_robot_indexable": true, "report_reasons": null, "author": "spork_king", "discussion_type": null, "num_comments": 15, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fluber/kotlinconf_2020_has_been_postponed_until_2021/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kotlinconf.com/?2020Postponed", "subreddit_subscribers": 28646, "created_utc": 1584707847.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I know that react supports kotlin now.  There are a number of videos showing web applications being built with kotlin-react.  But are there any full websites made with kotlin that you can point me to?\n\nThanks in advance!", "author_fullname": "t2_5ffjeoj4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Are there any examples of websites built with kotlin/kotlinJS/react?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fm3qa3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584770664.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I know that react supports kotlin now.  There are a number of videos showing web applications being built with kotlin-react.  But are there any full websites made with kotlin that you can point me to?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fm3qa3", "is_robot_indexable": true, "report_reasons": null, "author": "leafOnTheRiver", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fm3qa3/are_there_any_examples_of_websites_built_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fm3qa3/are_there_any_examples_of_websites_built_with/", "subreddit_subscribers": 28646, "created_utc": 1584741864.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Now I'm sure that there's something out there for this, but I haven't found it yet. I need a YAML parsing library that lets me access the keys(?) (I dunno the terminology, here) in a file, using the dot notation (like how we do in Spring Boot).\n\nFor example, say I have a YAML file like this . . .\n\n```\nsome-property: C:\\some\\folder\\path\n\nroot:\n  foo: sample text\n  bar: 1234\n  baz: some@random.text\n```\n\n. . . and let's say that I wanna access ```\"root.foo\"``` . . . **is there a way to do so _without_ having to create nested maps or creating DTOs or (basically) data classes?**", "author_fullname": "t2_1181di", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help needed with YAML parsing and accessing specific keys(?)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fm2jat", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584766382.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Now I&amp;#39;m sure that there&amp;#39;s something out there for this, but I haven&amp;#39;t found it yet. I need a YAML parsing library that lets me access the keys(?) (I dunno the terminology, here) in a file, using the dot notation (like how we do in Spring Boot).&lt;/p&gt;\n\n&lt;p&gt;For example, say I have a YAML file like this . . .&lt;/p&gt;\n\n&lt;p&gt;```\nsome-property: C:\\some\\folder\\path&lt;/p&gt;\n\n&lt;p&gt;root:\n  foo: sample text\n  bar: 1234\n  baz: &lt;a href=\"mailto:some@random.text\"&gt;some@random.text&lt;/a&gt;\n```&lt;/p&gt;\n\n&lt;p&gt;. . . and let&amp;#39;s say that I wanna access &lt;code&gt;&amp;quot;root.foo&amp;quot;&lt;/code&gt; . . . &lt;strong&gt;is there a way to do so &lt;em&gt;without&lt;/em&gt; having to create nested maps or creating DTOs or (basically) data classes?&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fm2jat", "is_robot_indexable": true, "report_reasons": null, "author": "AniruddhaSen", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fm2jat/help_needed_with_yaml_parsing_and_accessing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fm2jat/help_needed_with_yaml_parsing_and_accessing/", "subreddit_subscribers": 28646, "created_utc": 1584737582.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hey all, I am trying to set up a tornadoFX project. I have openjdk 8, and I need to get javafx in there somewhere, preferably through gradle. Whats the best way to do this? Thanks!", "author_fullname": "t2_3niv5tpl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TornadoFX Help", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fm0acd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584758629.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey all, I am trying to set up a tornadoFX project. I have openjdk 8, and I need to get javafx in there somewhere, preferably through gradle. Whats the best way to do this? Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fm0acd", "is_robot_indexable": true, "report_reasons": null, "author": "ulu_", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fm0acd/tornadofx_help/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fm0acd/tornadofx_help/", "subreddit_subscribers": 28646, "created_utc": 1584729829.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fm0acd", "before": null}}