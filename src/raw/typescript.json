{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - May", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gb7km3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 51, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 51, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588320346.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gb7km3", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 4, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gb7km3/whos_hiring_typescript_developers_may/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gb7km3/whos_hiring_typescript_developers_may/", "subreddit_subscribers": 40063, "created_utc": 1588291546.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "As a longtime JS dev who now accepts TS as my lord and saviour - what are the best resources for 'deeply' learning TS fundamentals?\n\nAre there any equivalent resources like 'Eloquent Javascript', 'You don't know JS yet' etc. for TS?\n\nVideo series/course suggestions also welcome.\n\nThanks!", "author_fullname": "t2_bpiyj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best resources for learning typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_gnvyd3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590092913.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As a longtime JS dev who now accepts TS as my lord and saviour - what are the best resources for &amp;#39;deeply&amp;#39; learning TS fundamentals?&lt;/p&gt;\n\n&lt;p&gt;Are there any equivalent resources like &amp;#39;Eloquent Javascript&amp;#39;, &amp;#39;You don&amp;#39;t know JS yet&amp;#39; etc. for TS?&lt;/p&gt;\n\n&lt;p&gt;Video series/course suggestions also welcome.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnvyd3", "is_robot_indexable": true, "report_reasons": null, "author": "zebbadee", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gnvyd3/best_resources_for_learning_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gnvyd3/best_resources_for_learning_typescript/", "subreddit_subscribers": 40063, "created_utc": 1590064113.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I was trying to type return value of \\_.[defaultsDeep](https://lodash.com/docs/4.17.15#defaultsDeep)\n\nHeres the return type for 2 arguments\n\n`type Primitive = string | number | boolean | null`  \n`type DeepDefault&lt;T, K&gt; = T extends Primitive ? T : Omit&lt;T, keyof K&gt; &amp; {`  \n  `[Key in keyof K]: Key extends keyof T ? DeepDefault&lt;T[Key], K[Key]&gt; : K[Key]`  \n`} ;`  \nHeres the link to [playground](https://www.typescriptlang.org/play/?ssl=5&amp;ssc=4&amp;pln=1&amp;pc=1#code/C4TwDgpgBACgTgSwLYOAgbtAvFAzsRAOwHMoAfKQgVyQCMI5ypaB7FgGwgENCnr32AKEGhIUACIQIYSQDMuVdsAA8AFQA0UANIA+KDlVQIAD2ARCAE1yxEKNJigB+KIYBcUAPJ21mgNYQQFlltPQAyKABvQSgoAG0tAKgEXn9A4K0AXXcEkCNTcysoVKCXJwkpGQh5RRVVeICMzS16kAy9bJaMwQBfKABuYVFoFloAKwBGfUjoqC53cfUZ2nd8ImJFmIh3KJiY2QQ4fHcCKggZ7pnZbZm9g6OoAHJEYgALYAfznsHwYbGAJimOygAGN5hsoBYVgRkusZltprs8BBgSxLO55OxcGcYhc9tdEftDsB3A8AO5wVHED44r4iH5QACSHjAYC4U0k0jkCiUyhGE00fL+OkEKMI+CgLBZc0ZzNZgJm0oWS3cACJVjCVeDQVAlTFIVA1dCSJq4fjdoT7icIOCYljRfqMVjzuCrgjzXdiY9nm9qVALhcgA)   \nThe problem is typing the general case of N parameters   \nI know i can just add overloads for up to \\~10 parameters for example like so  \n`DeepDefaultFor3&lt;T,K,J&gt; = DeepDefault&lt;T, DeepDefault&lt;K,J&gt;&gt;`  \nbut that doesn't seem right  \nDoes any one have ideas about hot one would type  \\_.[defaultsDeep](https://lodash.com/docs/4.17.15#defaultsDeep) of N parameters  when N is unknown?", "author_fullname": "t2_6it0u108", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Typing some complex lodash stuff", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gnsseg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590077444.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was trying to type return value of _.&lt;a href=\"https://lodash.com/docs/4.17.15#defaultsDeep\"&gt;defaultsDeep&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Heres the return type for 2 arguments&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;type Primitive = string | number | boolean | null&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;type DeepDefault&amp;lt;T, K&amp;gt; = T extends Primitive ? T : Omit&amp;lt;T, keyof K&amp;gt; &amp;amp; {&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;[Key in keyof K]: Key extends keyof T ? DeepDefault&amp;lt;T[Key], K[Key]&amp;gt; : K[Key]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;} ;&lt;/code&gt;&lt;br/&gt;\nHeres the link to &lt;a href=\"https://www.typescriptlang.org/play/?ssl=5&amp;amp;ssc=4&amp;amp;pln=1&amp;amp;pc=1#code/C4TwDgpgBACgTgSwLYOAgbtAvFAzsRAOwHMoAfKQgVyQCMI5ypaB7FgGwgENCnr32AKEGhIUACIQIYSQDMuVdsAA8AFQA0UANIA+KDlVQIAD2ARCAE1yxEKNJigB+KIYBcUAPJ21mgNYQQFlltPQAyKABvQSgoAG0tAKgEXn9A4K0AXXcEkCNTcysoVKCXJwkpGQh5RRVVeICMzS16kAy9bJaMwQBfKABuYVFoFloAKwBGfUjoqC53cfUZ2nd8ImJFmIh3KJiY2QQ4fHcCKggZ7pnZbZm9g6OoAHJEYgALYAfznsHwYbGAJimOygAGN5hsoBYVgRkusZltprs8BBgSxLO55OxcGcYhc9tdEftDsB3A8AO5wVHED44r4iH5QACSHjAYC4U0k0jkCiUyhGE00fL+OkEKMI+CgLBZc0ZzNZgJm0oWS3cACJVjCVeDQVAlTFIVA1dCSJq4fjdoT7icIOCYljRfqMVjzuCrgjzXdiY9nm9qVALhcgA\"&gt;playground&lt;/a&gt;&lt;br/&gt;\nThe problem is typing the general case of N parameters&lt;br/&gt;\nI know i can just add overloads for up to ~10 parameters for example like so&lt;br/&gt;\n&lt;code&gt;DeepDefaultFor3&amp;lt;T,K,J&amp;gt; = DeepDefault&amp;lt;T, DeepDefault&amp;lt;K,J&amp;gt;&amp;gt;&lt;/code&gt;&lt;br/&gt;\nbut that doesn&amp;#39;t seem right&lt;br/&gt;\nDoes any one have ideas about hot one would type  _.&lt;a href=\"https://lodash.com/docs/4.17.15#defaultsDeep\"&gt;defaultsDeep&lt;/a&gt; of N parameters  when N is unknown?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnsseg", "is_robot_indexable": true, "report_reasons": null, "author": "nybumipdeeuwuenyvx", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gnsseg/typing_some_complex_lodash_stuff/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gnsseg/typing_some_complex_lodash_stuff/", "subreddit_subscribers": 40063, "created_utc": 1590048644.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_5ffiy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using JSDoc tags to test functions [Prototype]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 111, "hide_score": false, "name": "t3_gn6sit", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 237, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 237, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/MjCPXloOQ5crur_aSnLtBHBtyG825B-Ge0R5kmNtgLI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "created": 1589988100.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?format=png8&amp;s=981570950d2e2ce1631106af7f1c5bd22e6bd0e9", "width": 709, "height": 564}, "resolutions": [{"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=d39e2a5c0b1ff0d93647f4ae76197da6782d3d9d", "width": 108, "height": 85}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=35f555bb6d4ccf9afc11934e1a4045ffe9d933d1", "width": 216, "height": 171}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=cb20aae9c6f5f488c08c4d776910e5e736fa9039", "width": 320, "height": 254}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=640&amp;crop=smart&amp;format=png8&amp;s=31c61ddf156473a5b7045848033a46404451c69d", "width": 640, "height": 509}], "variants": {"gif": {"source": {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?s=829e3ec7b28929d2718b72398de7e957f5328310", "width": 709, "height": 564}, "resolutions": [{"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=108&amp;crop=smart&amp;s=0417078e442a0f90ac100895e964b766f566a803", "width": 108, "height": 85}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=216&amp;crop=smart&amp;s=ce2a8c5e67ee678e9ec596b5b72fe9df99a2d5a3", "width": 216, "height": 171}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=320&amp;crop=smart&amp;s=32c661e3b8eb5b25674069452e96a80e84ece16f", "width": 320, "height": 254}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=640&amp;crop=smart&amp;s=da2ff05053e1352605603e1da285aa388f1b9667", "width": 640, "height": 509}]}, "mp4": {"source": {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?format=mp4&amp;s=c6495feb0fc5f57f77d11e34d55d27411b5a8c97", "width": 709, "height": 564}, "resolutions": [{"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=108&amp;format=mp4&amp;s=c06da3e37fa7b778a022e62fd3f4616a1e1b9652", "width": 108, "height": 85}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=216&amp;format=mp4&amp;s=075db2893e83683c14ae22a99caa3dc88ecdcd7a", "width": 216, "height": 171}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=320&amp;format=mp4&amp;s=14f974c44917435fa956a00ea2a7e35114aefa9e", "width": 320, "height": 254}, {"url": "https://preview.redd.it/8gqa8evpfvz41.gif?width=640&amp;format=mp4&amp;s=d7449856e2cd1f270031701802a4bab0f9c838a6", "width": 640, "height": 509}]}}, "id": "nagrTsnplHDB5jNt9w_FtVBxSUEXrAtcv8MhxnD-UJ0"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gn6sit", "is_robot_indexable": true, "report_reasons": null, "author": "Idered", "discussion_type": null, "num_comments": 49, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gn6sit/using_jsdoc_tags_to_test_functions_prototype/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/8gqa8evpfvz41.gif", "subreddit_subscribers": 40063, "created_utc": 1589959300.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Section [https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#eslint-configs](https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#eslint-configs) lists two list of ESLint rules:\n\n* Airbnb's ESLint config - [https://www.npmjs.com/package/eslint-config-airbnb-typescript](https://www.npmjs.com/package/eslint-config-airbnb-typescript)\n* Standard - [https://www.npmjs.com/package/eslint-config-standard-with-typescript](https://www.npmjs.com/package/eslint-config-standard-with-typescript)\n\nWhat are the main differences between them?", "author_fullname": "t2_3pqgqp9n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ESLint - What are the main differences between \"eslint-config-airbnb-typescript\" and \"eslint-config-standard-with-typescript\" conventions?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gney1v", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590022154.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Section &lt;a href=\"https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#eslint-configs\"&gt;https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#eslint-configs&lt;/a&gt; lists two list of ESLint rules:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Airbnb&amp;#39;s ESLint config - &lt;a href=\"https://www.npmjs.com/package/eslint-config-airbnb-typescript\"&gt;https://www.npmjs.com/package/eslint-config-airbnb-typescript&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Standard - &lt;a href=\"https://www.npmjs.com/package/eslint-config-standard-with-typescript\"&gt;https://www.npmjs.com/package/eslint-config-standard-with-typescript&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;What are the main differences between them?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?auto=webp&amp;s=12a59667a07a6234eb179a62037989ff0b306dda", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c06264ace3761372e7790e8479c1da36adc911ee", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f730da904312773548eacf58c92917a34338f905", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/39ErySAtawwYBhApsFZEbEFMdHy7TFLrSMWb7INHkNI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=87644d5ac854d803f280deab8fedb9d6ac1db18a", "width": 320, "height": 320}], "variants": {}, "id": "9hPlBp-1WJVS34g_GxQR_Z0mSmhZoKiT8OxUbCXUPvA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gney1v", "is_robot_indexable": true, "report_reasons": null, "author": "iwiik", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gney1v/eslint_what_are_the_main_differences_between/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gney1v/eslint_what_are_the_main_differences_between/", "subreddit_subscribers": 40063, "created_utc": 1589993354.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi. Consider a TypeScript project which uses `foo` and `bar` dependencies.  Should the corresponding `@types/foo` and `@types/bar` belong to `devDependencies` XOR `dependencies`?\n\nThe `create-react-app` boiler template lists `@types/*` in `dependencies`.  But I just don't know where to put it.\n\nDoes it really matter where they are?", "author_fullname": "t2_1262th", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[question] Which type of dependency should @types/foobar belong to?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gni4gr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590031914.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi. Consider a TypeScript project which uses &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; dependencies.  Should the corresponding &lt;code&gt;@types/foo&lt;/code&gt; and &lt;code&gt;@types/bar&lt;/code&gt; belong to &lt;code&gt;devDependencies&lt;/code&gt; XOR &lt;code&gt;dependencies&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;create-react-app&lt;/code&gt; boiler template lists &lt;code&gt;@types/*&lt;/code&gt; in &lt;code&gt;dependencies&lt;/code&gt;.  But I just don&amp;#39;t know where to put it.&lt;/p&gt;\n\n&lt;p&gt;Does it really matter where they are?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gni4gr", "is_robot_indexable": true, "report_reasons": null, "author": "acagastya", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gni4gr/question_which_type_of_dependency_should/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gni4gr/question_which_type_of_dependency_should/", "subreddit_subscribers": 40063, "created_utc": 1590003114.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have an angular ionic 5 app running on a cordova android emulator. What I need to do is use the ionic Geolocation plugin to find the speed of the user. I need to record the user's speed every second, and make sure it falls in the range of 0.7 &lt; x &lt; 2.5 m/s. If it does not, continue recording every second until it does. I need to record 10 valid speed measurements using this method. Then determine the average speed from that set of data. Here is a link to my Stackoverflow [post](https://stackoverflow.com/questions/61920194/finding-speed-of-an-interval-of-10-seconds), and here is my typescript file:\n\n`import { Component } from '@angular/core';`\n\n`import { Geolocation } from '@ionic-native/geolocation/ngx';`\n\n\n\n`u/Component({`\n\n`selector: 'app-home',`\n\n`templateUrl: 'home.page.html',`\n\n`styleUrls: ['home.page.scss'],`\n\n`})`\n\n`export class HomePage {`\n\n`framework = 'At exact boarding time';`\n\n\n\n`constructor(private geolocation: Geolocation) {}`\n\n\n\n`latitude: any = 0; //latitude`\n\n`longitude: any = 0; //longitude`\n\n`speed: any = 1; //speed`\n\n\n\n`choices = {`\n\n`timeout: 10000,` \n\n`enableHighAccuracy: true,` \n\n`maximumAge: 3600`\n\n`};`\n\n\n\n`average_walking_speed(){`\n\n`this.geolocation.getCurrentPosition(this.choices).then((resp) =&gt; {`\n\n`this.speed = resp.coords.speed;`\n\n`console.log(this.speed);`\n\n`}).catch((error) =&gt; {`\n\n`console.log('Error getting speed', error);`\n\n`});`\n\n`}`\n\n\n\n`// use geolocation to get user's device coordinates`\n\n`getCurrentCoordinates() {`\n\n`this.geolocation.getCurrentPosition().then((resp) =&gt; {`\n\n`this.latitude = resp.coords.latitude;`\n\n`this.longitude = resp.coords.longitude;`\n\n`this.speed = resp.coords.speed;`\n\n`}).catch((error) =&gt; {`\n\n`console.log('Error getting location', error);`\n\n`});`\n\n\n\n`document.getElementById(\"updater\").innerHTML = ' ' + this.speed +\" m/s\"`\n\n`}`    \n\n`}`", "author_fullname": "t2_5w246sv1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Trying to gather Geolocation speed data over an interval", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gngvfz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590028086.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have an angular ionic 5 app running on a cordova android emulator. What I need to do is use the ionic Geolocation plugin to find the speed of the user. I need to record the user&amp;#39;s speed every second, and make sure it falls in the range of 0.7 &amp;lt; x &amp;lt; 2.5 m/s. If it does not, continue recording every second until it does. I need to record 10 valid speed measurements using this method. Then determine the average speed from that set of data. Here is a link to my Stackoverflow &lt;a href=\"https://stackoverflow.com/questions/61920194/finding-speed-of-an-interval-of-10-seconds\"&gt;post&lt;/a&gt;, and here is my typescript file:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import { Component } from &amp;#39;@angular/core&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import { Geolocation } from &amp;#39;@ionic-native/geolocation/ngx&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;u/Component({&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;selector: &amp;#39;app-home&amp;#39;,&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;templateUrl: &amp;#39;home.page.html&amp;#39;,&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;styleUrls: [&amp;#39;home.page.scss&amp;#39;],&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;})&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export class HomePage {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;framework = &amp;#39;At exact boarding time&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;constructor(private geolocation: Geolocation) {}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;latitude: any = 0; //latitude&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;longitude: any = 0; //longitude&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;speed: any = 1; //speed&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;choices = {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;timeout: 10000,&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;enableHighAccuracy: true,&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;maximumAge: 3600&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;};&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;average_walking_speed(){&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;this.geolocation.getCurrentPosition(this.choices).then((resp) =&amp;gt; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;this.speed = resp.coords.speed;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;console.log(this.speed);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}).catch((error) =&amp;gt; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;console.log(&amp;#39;Error getting speed&amp;#39;, error);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;});&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;// use geolocation to get user&amp;#39;s device coordinates&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;getCurrentCoordinates() {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;this.geolocation.getCurrentPosition().then((resp) =&amp;gt; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;this.latitude = resp.coords.latitude;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;this.longitude = resp.coords.longitude;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;this.speed = resp.coords.speed;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}).catch((error) =&amp;gt; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;console.log(&amp;#39;Error getting location&amp;#39;, error);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;});&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;document.getElementById(&amp;quot;updater&amp;quot;).innerHTML = &amp;#39; &amp;#39; + this.speed +&amp;quot; m/s&amp;quot;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;    &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799", "width": 316, "height": 316}, "resolutions": [{"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda", "width": 216, "height": 216}], "variants": {}, "id": "nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gngvfz", "is_robot_indexable": true, "report_reasons": null, "author": "DapperBluebird", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gngvfz/trying_to_gather_geolocation_speed_data_over_an/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gngvfz/trying_to_gather_geolocation_speed_data_over_an/", "subreddit_subscribers": 40063, "created_utc": 1589999286.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "So I've installed the '@types/\\[library\\]' for what I need. I can't figure out how to leverage that .d.ts file so I can use those types in my own code. Is that what it is supposed to do? For example I'm using express and install it's types. I pass the req object to a function and I want to typecheck that parameter when writing the function for expresses req object but I don't know how to do it.", "author_fullname": "t2_15er9e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Vanilla library types", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gncmsy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590014763.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I&amp;#39;ve installed the &amp;#39;@types/[library]&amp;#39; for what I need. I can&amp;#39;t figure out how to leverage that .d.ts file so I can use those types in my own code. Is that what it is supposed to do? For example I&amp;#39;m using express and install it&amp;#39;s types. I pass the req object to a function and I want to typecheck that parameter when writing the function for expresses req object but I don&amp;#39;t know how to do it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gncmsy", "is_robot_indexable": true, "report_reasons": null, "author": "Stripestar", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gncmsy/vanilla_library_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gncmsy/vanilla_library_types/", "subreddit_subscribers": 40063, "created_utc": 1589985963.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Today I released version 1.0.0 of [myzod](https://www.npmjs.com/package/myzod)! \n\nI just want to thank everybody who has given feedback and participated over the past month or two.\n\nHope you guys find it useful.", "author_fullname": "t2_zr27l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "myzod v1.0.0 is out", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gncnh6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590014828.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Today I released version 1.0.0 of &lt;a href=\"https://www.npmjs.com/package/myzod\"&gt;myzod&lt;/a&gt;! &lt;/p&gt;\n\n&lt;p&gt;I just want to thank everybody who has given feedback and participated over the past month or two.&lt;/p&gt;\n\n&lt;p&gt;Hope you guys find it useful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?auto=webp&amp;s=dc9f3722e4f26a0d394e974bdc658bd002ee6f3d", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29849972d1063666bb20bfca982ed849dbab0739", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c2e78155bcf431bc82859db1b9cc141779445961", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7b8fc1121ee3f0761b7c5ec9e306f65c99c715db", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18cce76337e2ca3f939805374b20a68b0a1671af", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=940123d8c0b4043a88a028062a5a195676254f4d", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=70f261d64e65120035e417a634c19726e4e3576d", "width": 1080, "height": 567}], "variants": {}, "id": "3CAm7f2euOP7diXidheIHavSdc1loh3U46B-FOssKu4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gncnh6", "is_robot_indexable": true, "report_reasons": null, "author": "davidmdm", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gncnh6/myzod_v100_is_out/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gncnh6/myzod_v100_is_out/", "subreddit_subscribers": 40063, "created_utc": 1589986028.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_15xss8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Fcaljs - extensive math expression evaluator library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_gn7ves", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/STshHNb4a3jNNdUqJAsud214MIgftnFtYWAS6tdyfeY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1589993694.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "npmjs.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?auto=webp&amp;s=dc9f3722e4f26a0d394e974bdc658bd002ee6f3d", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29849972d1063666bb20bfca982ed849dbab0739", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c2e78155bcf431bc82859db1b9cc141779445961", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7b8fc1121ee3f0761b7c5ec9e306f65c99c715db", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18cce76337e2ca3f939805374b20a68b0a1671af", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=940123d8c0b4043a88a028062a5a195676254f4d", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=70f261d64e65120035e417a634c19726e4e3576d", "width": 1080, "height": 567}], "variants": {}, "id": "3CAm7f2euOP7diXidheIHavSdc1loh3U46B-FOssKu4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gn7ves", "is_robot_indexable": true, "report_reasons": null, "author": "santhoshkumarr1096", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gn7ves/fcaljs_extensive_math_expression_evaluator_library/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.npmjs.com/package/fcal", "subreddit_subscribers": 40063, "created_utc": 1589964894.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I had typed array with an object with one optional field. Then I decided that instead of an optional prop what I really want is an array of objects not containing that property or all the elements containing such property, so I switched to a sum type.\n\n&amp;#x200B;\n\nThe problem is that this makes destructuring of such prop impossible.\n\nHere is an example of the sum type:\n\n&amp;#x200B;\n\n```js\n\ntype tab&lt;T&gt; =\n\n| { label: string }\n\n| { label: string, value: T }\n\n```\n\n\n\nThis is what I can not do:\n\n\n```\n    tabs.map(({ label, badge, value }, idx) =&gt; {\n\n        callSomeFun(value || idx)\n\n    })\n```\n\n\nThis works for flow, but not for typescript:\n\n\n```\n    tabs.map(({ label, badge, ...tab }, idx) =&gt; {\n\n        const value = tab.value || idx\n\n        callSomeFun(value)\n\n    })\n```\n\n\nAlso because of this, some other parts of the code get an inferred type of mixed, which in runtime is not correct because I'm just \"or-ing\" them:\n\n\n\nconst \\[activeTab, setActiveTab\\] = useState(tabs\\[0\\].value || initialTab)\n\n\n\nactiveTab becomes of mixed type\n\n\n\nIs there a better way of doing this while ensuring the type safety of having the prop on all items or no one?", "author_fullname": "t2_ofwfv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Destructuring and sum types", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gn7oz6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589992749.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I had typed array with an object with one optional field. Then I decided that instead of an optional prop what I really want is an array of objects not containing that property or all the elements containing such property, so I switched to a sum type.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;The problem is that this makes destructuring of such prop impossible.&lt;/p&gt;\n\n&lt;p&gt;Here is an example of the sum type:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;```js&lt;/p&gt;\n\n&lt;p&gt;type tab&amp;lt;T&amp;gt; =&lt;/p&gt;\n\n&lt;p&gt;| { label: string }&lt;/p&gt;\n\n&lt;p&gt;| { label: string, value: T }&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;This is what I can not do:&lt;/p&gt;\n\n&lt;p&gt;```\n    tabs.map(({ label, badge, value }, idx) =&amp;gt; {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    callSomeFun(value || idx)\n\n})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;This works for flow, but not for typescript:&lt;/p&gt;\n\n&lt;p&gt;```\n    tabs.map(({ label, badge, ...tab }, idx) =&amp;gt; {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    const value = tab.value || idx\n\n    callSomeFun(value)\n\n})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;Also because of this, some other parts of the code get an inferred type of mixed, which in runtime is not correct because I&amp;#39;m just &amp;quot;or-ing&amp;quot; them:&lt;/p&gt;\n\n&lt;p&gt;const [activeTab, setActiveTab] = useState(tabs[0].value || initialTab)&lt;/p&gt;\n\n&lt;p&gt;activeTab becomes of mixed type&lt;/p&gt;\n\n&lt;p&gt;Is there a better way of doing this while ensuring the type safety of having the prop on all items or no one?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gn7oz6", "is_robot_indexable": true, "report_reasons": null, "author": "danielo515", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gn7oz6/destructuring_and_sum_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gn7oz6/destructuring_and_sum_types/", "subreddit_subscribers": 40063, "created_utc": 1589963949.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gn7oz6", "before": null}}