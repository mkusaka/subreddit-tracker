{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - March", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fbll8c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1583049956.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "908dba50-143b-11ea-8541-0e435e5ea9e1", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fbll8c", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 4, "send_replies": false, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fbll8c/whos_hiring_typescript_developers_march/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/fbll8c/whos_hiring_typescript_developers_march/", "subreddit_subscribers": 34336, "created_utc": 1583021156.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_2wnbhbec", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TypeBox - Mapping TypeScript as JSONSchema", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fdoolj", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 24, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 24, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/GOW1UAtPb7-RQE513ztA-bm2pzIJ2drX9gq0UNAcFr0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1583405764.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/qtThDQcAYclfl7Av6-yUjH5usGP02-hbZYf74hJBWUU.jpg?auto=webp&amp;s=b3a24376fed6c2d428dc51e52c03714febcc32fe", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/qtThDQcAYclfl7Av6-yUjH5usGP02-hbZYf74hJBWUU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=534f544375a4def1dc081f3f982067408d069336", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/qtThDQcAYclfl7Av6-yUjH5usGP02-hbZYf74hJBWUU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=dece2cf2bff36ffbbd57cf5517b1e411272b7b67", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/qtThDQcAYclfl7Av6-yUjH5usGP02-hbZYf74hJBWUU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a7d57d9df90e791ee54e83c10cc89d50d673e460", "width": 320, "height": 320}], "variants": {}, "id": "f7e298Xs1RKKrQ1kbkQjHLh7ZYRgA8ATib0y35Z2MuM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdoolj", "is_robot_indexable": true, "report_reasons": null, "author": "sinclair_zx81", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdoolj/typebox_mapping_typescript_as_jsonschema/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/sinclairzx81/typebox", "subreddit_subscribers": 34336, "created_utc": 1583376964.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm trying to write a wrapper around fs.readFile that will return JSON if the option is set to true.\n\nHaving a hard time to let TS figure out when it should return JSON and a string.\n\nTrying to avoid having to do this (since I already know it is going to be JSON):\n\n\\`\\`\\`\n\nconst f = await readFile(\u2026, { json: true });\n\nif (typeof f !== 'string') {\n\n  return f.a;\n\n}\n\n\\`\\`\\`\n\nhttps://preview.redd.it/peb06d2q6uk41.png?width=1300&amp;format=png&amp;auto=webp&amp;s=aec55267486ff42d3f9720d2e6f926c32b18ab6c", "author_fullname": "t2_jakhr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to conditionally determine return value in a Promise", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 102, "hide_score": false, "media_metadata": {"peb06d2q6uk41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 79, "x": 108, "u": "https://external-preview.redd.it/peb06d2q6uk41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=21b02c3fe62ec47bc90b7045d671739502be7cb1"}, {"y": 158, "x": 216, "u": "https://external-preview.redd.it/peb06d2q6uk41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=30a662dfdeebb97d587df65121eeff2605fb9596"}, {"y": 234, "x": 320, "u": "https://external-preview.redd.it/peb06d2q6uk41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=e01510e8bd9e3559933a201d8d54cfa08f6e2357"}, {"y": 469, "x": 640, "u": "https://external-preview.redd.it/peb06d2q6uk41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=2e84b94d2df38a5194677d5c6d1e23b17f12f8e2"}, {"y": 704, "x": 960, "u": "https://external-preview.redd.it/peb06d2q6uk41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=8c9e936c5cf332bd7429dc3a0e37ffa04275097a"}, {"y": 792, "x": 1080, "u": "https://external-preview.redd.it/peb06d2q6uk41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f5973296d91b0a5cd450c135e9e81309ce211da2"}], "s": {"y": 954, "x": 1300, "u": "https://preview.redd.it/peb06d2q6uk41.png?width=1300&amp;format=png&amp;auto=webp&amp;s=aec55267486ff42d3f9720d2e6f926c32b18ab6c"}, "id": "peb06d2q6uk41"}}, "name": "t3_fdtpov", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/T1JKwyW3gRyZqwSPdJO0C-pBtKyG0eD6ak0_EpTIqnE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583435319.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to write a wrapper around fs.readFile that will return JSON if the option is set to true.&lt;/p&gt;\n\n&lt;p&gt;Having a hard time to let TS figure out when it should return JSON and a string.&lt;/p&gt;\n\n&lt;p&gt;Trying to avoid having to do this (since I already know it is going to be JSON):&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;const f = await readFile(\u2026, { json: true });&lt;/p&gt;\n\n&lt;p&gt;if (typeof f !== &amp;#39;string&amp;#39;) {&lt;/p&gt;\n\n&lt;p&gt;return f.a;&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/peb06d2q6uk41.png?width=1300&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=aec55267486ff42d3f9720d2e6f926c32b18ab6c\"&gt;https://preview.redd.it/peb06d2q6uk41.png?width=1300&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=aec55267486ff42d3f9720d2e6f926c32b18ab6c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdtpov", "is_robot_indexable": true, "report_reasons": null, "author": "thibmaek", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdtpov/how_to_conditionally_determine_return_value_in_a/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fdtpov/how_to_conditionally_determine_return_value_in_a/", "subreddit_subscribers": 34336, "created_utc": 1583406519.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Could anyone please explain to me (Java/Kotlin lad) how to get modules working? I am very comfortable with vanilla JS but was busy playing with the JVM when the whole Node / ES module thing went down.\n\nI'm not creating a Node app here... just transpiling multiple TS files to JS, for use in a very basic, boring site.\n\nI have satisfied both my ATE (VSC, fwiw) and the TSC (transpiler irl?) by using the `export` and `import` keywords (at least the notion of *import* is familiar) ... but when I load the app, on good ol' localhost, in browser, i'm understandably seeing the *exports undefined* exception in the console (RIP Firebug)... is it as simple as including a `common.js` script in the client, to satisfy this unfamiliar concept of *exports* or am I going about this wrong?\n\nI just want to visit my static site with multiple, minifed JS files that were generated by TSC, understanding that multiple TS files rely on definitions from multiple files without too many complications in the build / compilation process..?\n\nCheers lads.", "author_fullname": "t2_14j1jv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Static Site with JS from TS using exports?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fdtoqt", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583435145.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Could anyone please explain to me (Java/Kotlin lad) how to get modules working? I am very comfortable with vanilla JS but was busy playing with the JVM when the whole Node / ES module thing went down.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not creating a Node app here... just transpiling multiple TS files to JS, for use in a very basic, boring site.&lt;/p&gt;\n\n&lt;p&gt;I have satisfied both my ATE (VSC, fwiw) and the TSC (transpiler irl?) by using the &lt;code&gt;export&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt; keywords (at least the notion of &lt;em&gt;import&lt;/em&gt; is familiar) ... but when I load the app, on good ol&amp;#39; localhost, in browser, i&amp;#39;m understandably seeing the &lt;em&gt;exports undefined&lt;/em&gt; exception in the console (RIP Firebug)... is it as simple as including a &lt;code&gt;common.js&lt;/code&gt; script in the client, to satisfy this unfamiliar concept of &lt;em&gt;exports&lt;/em&gt; or am I going about this wrong?&lt;/p&gt;\n\n&lt;p&gt;I just want to visit my static site with multiple, minifed JS files that were generated by TSC, understanding that multiple TS files rely on definitions from multiple files without too many complications in the build / compilation process..?&lt;/p&gt;\n\n&lt;p&gt;Cheers lads.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdtoqt", "is_robot_indexable": true, "report_reasons": null, "author": "SleepyFox89", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdtoqt/static_site_with_js_from_ts_using_exports/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fdtoqt/static_site_with_js_from_ts_using_exports/", "subreddit_subscribers": 34336, "created_utc": 1583406345.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_4dltii3c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TypeScript Migration Strategy (from JavaScript)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "hide_score": false, "name": "t3_fdhx6f", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/4kii5sVb9TOzxd169eOtGLLGvcRz8m9d3-XgQs92hH0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "WebdevTutorials", "selftext": "", "author_fullname": "t2_4dltii3c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TypeScript Migration Strategy (from JavaScript)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/WebdevTutorials", "hidden": false, "pwls": 7, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "hide_score": false, "name": "t3_fcs7i9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/v3lI29trIN8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Next.js Tutorial - Part 3 | TypeScript Migration", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/v3lI29trIN8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Bruno Antunes", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/v3lI29trIN8/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCyU0mNYdX9EHY7rc5yucIZA"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/v3lI29trIN8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/fcs7i9", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 34, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/4kii5sVb9TOzxd169eOtGLLGvcRz8m9d3-XgQs92hH0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1583256883.0, "link_flair_type": "text", "wls": 7, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?auto=webp&amp;s=78653acf23f007beb82259fb4c2d325fae37ce3a", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d020bc441f12a64f997bbc84b98042eb0e6bc46a", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8142568f5c249446f8ffb6e2f096a527cf870fb2", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4ddd32d2a90745d1f98f0befc2535cab5b1bd64f", "width": 320, "height": 240}], "variants": {}, "id": "jXsyoyIYTnALeoykE2XAkifquVtKnoySKm7sCPaCyYQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_3iugx", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fcs7i9", "is_robot_indexable": true, "report_reasons": null, "author": "bmvantunes", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "some_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/WebdevTutorials/comments/fcs7i9/typescript_migration_strategy_from_javascript/", "parent_whitelist_status": "some_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=v3lI29trIN8&amp;feature=share", "subreddit_subscribers": 19976, "created_utc": 1583228083.0, "num_crossposts": 2, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Next.js Tutorial - Part 3 | TypeScript Migration", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/v3lI29trIN8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Bruno Antunes", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/v3lI29trIN8/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCyU0mNYdX9EHY7rc5yucIZA"}, "type": "youtube.com"}, "is_video": false}], "created": 1583377589.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?auto=webp&amp;s=78653acf23f007beb82259fb4c2d325fae37ce3a", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d020bc441f12a64f997bbc84b98042eb0e6bc46a", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8142568f5c249446f8ffb6e2f096a527cf870fb2", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/De1yOwNbl8xy_0GVYX15xDB1vHFfTAED6b5Rj4ziXVI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4ddd32d2a90745d1f98f0befc2535cab5b1bd64f", "width": 320, "height": 240}], "variants": {}, "id": "jXsyoyIYTnALeoykE2XAkifquVtKnoySKm7sCPaCyYQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdhx6f", "is_robot_indexable": true, "report_reasons": null, "author": "bmvantunes", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_fcs7i9", "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdhx6f/typescript_migration_strategy_from_javascript/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.youtube.com/watch?v=v3lI29trIN8&amp;feature=share", "subreddit_subscribers": 34336, "created_utc": 1583348789.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi,\n\nIf I have a union type like:\n\n    type KeyType = 'one' | 'two' | 'three';\n\nAnd I want to declare an interface that has all those keys (of a given type, say number) plus additional properties. E.g.:\n\n    interface MyInterface {\n        [key in KeyType]: number;\n        anotherProperty: string;\n    }\n\nBasically I want an interface that ensures that keys won't clash, and specify that all the keys in a given union will be there, plus any number of additional properties I like.\n\nThe above doesn't work.\n\nThanks!", "author_fullname": "t2_ki8gz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is this even possible in TS?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fdkxcp", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583389314.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;If I have a union type like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type KeyType = &amp;#39;one&amp;#39; | &amp;#39;two&amp;#39; | &amp;#39;three&amp;#39;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And I want to declare an interface that has all those keys (of a given type, say number) plus additional properties. E.g.:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;interface MyInterface {\n    [key in KeyType]: number;\n    anotherProperty: string;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Basically I want an interface that ensures that keys won&amp;#39;t clash, and specify that all the keys in a given union will be there, plus any number of additional properties I like.&lt;/p&gt;\n\n&lt;p&gt;The above doesn&amp;#39;t work.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdkxcp", "is_robot_indexable": true, "report_reasons": null, "author": "ElCerebroDeLaBestia", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdkxcp/is_this_even_possible_in_ts/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fdkxcp/is_this_even_possible_in_ts/", "subreddit_subscribers": 34336, "created_utc": 1583360514.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_522hncs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Typescript Pick utility type! It constructs a type by explicitly picking props from another type.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 101, "hide_score": false, "name": "t3_fd5j72", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 80, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 80, "approved_by": null, "author_premium": true, "thumbnail": "https://b.thumbs.redditmedia.com/yP2kcJLf_e6WWTQZmKE0z1PeWdnODO9vAcvws4Qgzxk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "LearnTypescript", "selftext": "", "author_fullname": "t2_522hncs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Typescript Pick utility type! It constructs a type by explicitly picking props from another type.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/LearnTypescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 101, "hide_score": false, "name": "t3_fd5gs5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 34, "approved_by": null, "author_premium": true, "thumbnail": "https://b.thumbs.redditmedia.com/yP2kcJLf_e6WWTQZmKE0z1PeWdnODO9vAcvws4Qgzxk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "created": 1583314905.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/ld9xbryt8kk41.png?auto=webp&amp;s=252bf2e84a61bc2700a3f49f95d349e0e77c4f22", "width": 1002, "height": 725}, "resolutions": [{"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6b6899f35a063ad6084907fa30e14c67748c2ab", "width": 108, "height": 78}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=4e16a4a8aab9026be579cd8b376547941597fdf3", "width": 216, "height": 156}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=7bf459535e2ad49912b04929d830b55fa154a083", "width": 320, "height": 231}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=81f32df82112e6140940f8df751831940b898a75", "width": 640, "height": 463}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=9df36cda870cbca695106118392cfed34c5b3f0d", "width": 960, "height": 694}], "variants": {}, "id": "r-NxtH3s_BGdc_qwT6J5AenqGNtp6Tq0GZHKXFshlNU"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2g9hf0", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fd5gs5", "is_robot_indexable": true, "report_reasons": null, "author": "ctrlaltdelmarva", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/LearnTypescript/comments/fd5gs5/the_typescript_pick_utility_type_it_constructs_a/", "parent_whitelist_status": null, "stickied": false, "url": "https://i.redd.it/ld9xbryt8kk41.png", "subreddit_subscribers": 1075, "created_utc": 1583286105.0, "num_crossposts": 2, "media": null, "is_video": false}], "created": 1583315201.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/ld9xbryt8kk41.png?auto=webp&amp;s=252bf2e84a61bc2700a3f49f95d349e0e77c4f22", "width": 1002, "height": 725}, "resolutions": [{"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6b6899f35a063ad6084907fa30e14c67748c2ab", "width": 108, "height": 78}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=4e16a4a8aab9026be579cd8b376547941597fdf3", "width": 216, "height": 156}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=7bf459535e2ad49912b04929d830b55fa154a083", "width": 320, "height": 231}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=81f32df82112e6140940f8df751831940b898a75", "width": 640, "height": 463}, {"url": "https://preview.redd.it/ld9xbryt8kk41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=9df36cda870cbca695106118392cfed34c5b3f0d", "width": 960, "height": 694}], "variants": {}, "id": "r-NxtH3s_BGdc_qwT6J5AenqGNtp6Tq0GZHKXFshlNU"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fd5j72", "is_robot_indexable": true, "report_reasons": null, "author": "ctrlaltdelmarva", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_fd5gs5", "author_flair_text_color": null, "permalink": "/r/typescript/comments/fd5j72/the_typescript_pick_utility_type_it_constructs_a/", "parent_whitelist_status": null, "stickied": false, "url": "https://i.redd.it/ld9xbryt8kk41.png", "subreddit_subscribers": 34336, "created_utc": 1583286401.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_10yxradh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React TypeScript: Basics and Best Practices", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 84, "hide_score": false, "name": "t3_fdgqj8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/gm8dS6XsOlB_xkcACvjmDfpgcY6owESitObWh8Vx434.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1583372994.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.bitsrc.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8UMNqXCwnd6eQ09ZsLWCVpFGHJs3UCdjYQUmgT-whoE.jpg?auto=webp&amp;s=276fb2f926bda32a38c4da6a3f1f14a3c887f869", "width": 1200, "height": 720}, "resolutions": [{"url": "https://external-preview.redd.it/8UMNqXCwnd6eQ09ZsLWCVpFGHJs3UCdjYQUmgT-whoE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c97ecae125ce3c7fd15e055a9bfd4a808d3b59f3", "width": 108, "height": 64}, {"url": "https://external-preview.redd.it/8UMNqXCwnd6eQ09ZsLWCVpFGHJs3UCdjYQUmgT-whoE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f167342d597701de99029689023edeeb4d70f533", "width": 216, "height": 129}, {"url": "https://external-preview.redd.it/8UMNqXCwnd6eQ09ZsLWCVpFGHJs3UCdjYQUmgT-whoE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=291488c7c69e1d5306c628fa61fd071beb84d349", "width": 320, "height": 192}, {"url": "https://external-preview.redd.it/8UMNqXCwnd6eQ09ZsLWCVpFGHJs3UCdjYQUmgT-whoE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=be8cf18e563cecb62683dcef7bad9b70143e1654", "width": 640, "height": 384}, {"url": "https://external-preview.redd.it/8UMNqXCwnd6eQ09ZsLWCVpFGHJs3UCdjYQUmgT-whoE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2bab0d38f9a6bcaedd3e6074d804081de9b388cc", "width": 960, "height": 576}, {"url": "https://external-preview.redd.it/8UMNqXCwnd6eQ09ZsLWCVpFGHJs3UCdjYQUmgT-whoE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=78c8ec48bd33a8ddbc2f8dc0b12293121d5e167e", "width": 1080, "height": 648}], "variants": {}, "id": "RX63rjLbHN7e0rYKhdAxzaHT2SSnLPRhnpJ2V3u0jcI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdgqj8", "is_robot_indexable": true, "report_reasons": null, "author": "JSislife", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdgqj8/react_typescript_basics_and_best_practices/", "parent_whitelist_status": null, "stickied": false, "url": "https://blog.bitsrc.io/react-typescript-cheetsheet-2b6fa2cecfe2", "subreddit_subscribers": 34336, "created_utc": 1583344194.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The Eval type can perform basic arithmetic, comparisons, conditionals (if expresions), define local variables and lambda expressions.\n\ne.g. this type `_` \"evaluates\" to `16` at compile time.\n\n```\nexport type _ = Eval&lt;\n  [Let, 'square', [Lambda, X, [X, '*', X]], ['square', 4]]\n  &gt;;\n```\n\n[Typescript Playground](https://www.typescriptlang.org/play/#code/PTAEBUE8AcFMFoAysBusA2oCSA7ALrAOawBOoAsgIZ4AWoAljhDLAM4DGJ90eAUCKHhDhI0WPET4-YNNBzQAPlAAxAPZkAwpXTsArulU4A5KwYBbM+rzbQrVfoA0oQrranasUDl1mARqWwjM1BaRgBrRkJQVQAzWXklOSFQACVVX1U8UAARVHp0aXi5JQAichKixXlkgAUafPRuUAApADoVEkhCgRr0WEpWTwATQyMs3UGQ+tNGUGgSVSHddjx6Q1AACixQdkpjLPozSkJGTwB3GmpQSHsjIdAR2TP6WgY8Vo-QGPoAD1gh+CsegAL3+oDQK3UrAA-ABKN4mUB7UCwH5wLhmWD4BhMGiqM6gMzLOhnTy7HCyXY6fTUTxXSghFjwPpoTCzPAsDhcHitbpgADqsCMJE8IvmbCxqxwUUYBGIJFMAy8bAI90oJBIlEgrCcF1IngABgAtUiqA0Mdw0TywMw8SBIjVa2R7e4AagAjBbQGKRYN8GDfPazproNBIkimLKiAFZntMlayCyMNEYqBfJr2GFYHhWLyQLINuBpqALqo+oTFvpPPRTL4BvQqeh7cisexFuHYqAANpwOMOl40TGrdgAXQ2NDweGgrAAXCAsa1nhE4EN6JRWupCMAl-RgDV+jhVAB9Sg-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-IvJEozU45JfAWB5ElwWa6-EpAnCcXYOwZd5rXCpwi+nYNJ6QtkGvRGySK70MCIWGejiQcgsMwiwodLbdvPQC435gLuXBiutpjUJLLrMsLpy3l8LkXy5vKSyBlh4S-UWsDUYBLBHSJeZ85KQLVWBF1ZoiVsreB-PGLG+pCbpISBOAysdWT+NTgAEddDaDPoshQPbN7sR7Y58Uk57T9FYJRlKhxjE2klM6UAJ2nYKYtQwfFpsrFDvnmQPY9oozylMC7DSTh2A+yc0iRQP23so2hk7F7FtiXIFYKwIsexQokBmjt7QS6aJepQ6YGldz-tMv9Z4PmA2haJQAOIilpCQdHOBMfY92+gPHSEUdo8uMzrHOP2dPoZutojTAPDqCDH8qu4pUfgtXETIE6wlT2UYALSYsRZASbo0mnAmmDhMHmG9VYkwXigTYL+H+osr4bFGpGOy0xj70HuD-OlWRDCuaONOAGgOAhy5rI+Ol6Koc-bAFYvUjnKDsYEL4JwesrHqjpFfb3CpYRuKKIlAAiroTIql8DsWyE1R3zMnD5-l+oAJZqcgF7sMlwnqXPDcxL4XzefNG9iU3il09Eq89V-UHS29HMmW4z5qy0gQyNuMezBVUVoADTk4NKnjxiUjw0Xap1hr2X2LFVUE4LfZP3uU7tWPsAQctNWkmBkV4Io8BT5nwN+f+TPGgGX0hVfHestd-pZjJKcU6FD6+IftPJiZ-FQXeNfTvRdLfPvO9DGQfNuKnI2YSaNdAe4RKBYTIG9EjMjc4LUXXEIMBZKX8fwczSgUMZsDIPRF4doTiQgBBHVMAReL0CSSGB-JfKbRBLIFLabXzIqZKHfGgPKPfFGA-ENI-duCg-vZFS6eTUXfGexFKS4NBOsVgLMPABfa5JiNITIdiZiYLZbemZiNfLg0belSrRbWrPQuhUw19NlQAiiYAzQjiTaCcPggQ61P2NgraQwkbXPEwvLGqTKSwhZaw0fI2ZifET8LIfNS4KVCWMEe+RSUVawfARUazdEbXJRGQm0UWSkcWJgqHEVZSHPLIa7WeH4aIUXVQWxTsE3exEsLgMzIEeRVFMAVEaXBXafPWVAZGWkMyMwGTAUIUK+JQqSfGEo6wMo2yV+UwQgTUCwdUGPHjAwQYVzJUfNckB-VosgeCGcHtexYIAAHxEivkOPh02Klxr3mCKEbBaR2POOiDSPsQuKCg8UqLOUeN5iQiMFdFbkOKMHgB+ISVrQBKMAAD1gSTtgTDtkkPFqBVBghtjG1QBDjPRDiiIkTQAABmdEgAFnRIAFZ0SAA2dEgAdnRIAA50SABOdE90JtCvFpeQQ48ndEgbPkYlGaUmdAObdnGaJwGaHAFAKLUADlPYhsc4twc+B0TwVNExM5TAbwPwAIEKVgFdAQNY+wZA2wGxUrEgLISwRzPTM-RbTSdZYsFeLEewBaX7NUsABkExPAcsMSSwFdWEswPmGaNfVCeCbmH9bY0AT0lLHCH0uvIrD0tfEiEMrfMMgMtfDEorbmfwmMwM2vbEhMkAiqZMtfPE9MgaHBf0lMqlUwQk9MyaLMlLEk0sm3cs2vck9MpwvgAstfKk9Mw6NLJsoM70+QRMrEGsoskIC1dM8nPs6hNkkMsc+QcMlLLMG4VMAUlAeswUtfFZNZIrDLecrsGaEcNc4IoKf0kfd9W037L4XQC6WVRsHRfNI4FxbZfGZBYIJUBka-e7TxQ2OQfMd8s1Lsc4pwV40zXvO47cz8ldRsI8XAb4H4Kc2vLselO5L4owKAgIIOIC7s9pAOTk7QHkvxec+rDC7kirfkwU4REc0JGCiQhmJwIwIExCsgZC9M8AxwrkrCu5HC-kpigigMoiwrDs6C2Cyi-4mi9uFCjLA1R1diPC5iwioUtizCjinC7iyc2MlLMi6AuCsEwSuikMow3PCSgLFioimS-C+bQXeSkilmFSgIOCqEjS4SuhOnZjRnHnFnfncS9i+bfS6SgMtygXKS4ini-siysgOCiEmy9MrnJnZytnVy2S9y3ywyrCkyrimMg8oWT8-yMjXwIYJUEUTEJUsgeyLEImBYHATEbEDwCXRzaVMERgDSKRSgEBI88q6UnYJYiqKtTLbMDkbUxzBgleBkEUHbNeB7bEZBV+aUVUtK7BWBI0L4X4f4eAUrWURSPwRgWEvc9KvwLKqCgKowe8TaygBCnEaAmodUMjDSxYSAWy7mE62YtfMVSIHc7mcORk+CaAU690gRd69OF6tMC6+OC676l6wqj0wUwG+CMuHc4fN9ZKt9VKo49Aba6hQKlQU8wSkrEgK6hmLWSAaKoy9nZQVGzizy3S+bdG3yhSoDFK0iNKjYeHAgbebGVpWAeELo4hWkUwEoemvAEoAGJyG+SYWo1m3bAgI82AAcAITmq0HAHmhSEoNJCoOQaGRG0iowaGQ6+lXaCyQSqeHXI6gIGaENTGkm9nTWjTImpQFLYcxk7mY2zfKW3yyGrymK3kkNB2-0+AldPoVQpS6C3a7MdW8i7xQSgANTJnOqGEuvTO8TussgeutqdrxpLguqktAAADJQBQ5uxvFYAAcmBvERwPTvL2JQ7iFFscLQAy4KbFKDyYabCK5CykbdqMqsrDr7rpQY8cBI6Msm79qkMfaAr-tc1Y726Iwu66EjBQLwLfg+6G6Va1aO7+VR6F6UKG41bsN+7G6vbW7h7CAF7l74Mt717Z7zLB7R6V6ElGw+6jA3Tx5qcmJvMqV2Jo6Us27d7QBg7fKaJwBHccaV1nr5Auxs7c7QB86+Zg704y406itQozAXhxLBSnBvFCtjpEpv6I72IUh6YUg18UgpF1Ahh2JT7SdwN-74JAGIUZzOwUgC7UhAGBJwb16qbiVOJsa2owt6ZlA19-63rZi+Z6UbqyN04MgI6+HyKg4AaV1ga9ayB5yGIIaMsBHggX6d76yi7xGI7+SUM853qwtyba7SBGHYbZBjbwEr50R7zYEqQ1FtdcCTcr8p9FRlQLIWNHQgxZJcF8ZJILJwwxIeA6AFN8Y9gnEAhTT9EPpsR7TTlNQFSfB-B8qWB+iIBRiywtJwUsAjBmo5FPAbFwFXgFMHFNRRULGnybFywvHM0DRmIDRj5apbFZRbt8AUoSmXzOw+hpRXhKnzQskpb9IX57IDQ2nCBaBzRqjTFw10nmpY6wRajU1ajzH1Bgh7I-z0jyiQhSnPBBnaBbHijaoLxcF5CTdGhYGcxCRiQUR1RGhSBeRWirBH90YcBcHoBN96ZwA18WTDiBs6FXm+Z7n5JkDN8nBYIFAuw-b2maBb7BIwBNV7gAAJJVO84q13VMV5jYC4Bsfxxx588sDZOdJjbudiGFnfNff7IF52ccfoIYPmQl0AD4VoawfIPmcAeEBCJQf7Fm2vDYFdWlxoCyUR6A9GXgZl1lzu8DAVymox2QDQJSUgHSJxzNLFzwDYQKWBnlKUGUJgFsW0LqhVzZAcKHBV0ybwa6Dxq4S4UwTZugWAfneFzwcp8MJMAoXVOQU8v5+4WCOQN6b7JECLSoF1ssN13QOCT1miP1rU3QTYcUOATeI1zAT12dAQSGQgdoUNt1vCAiFpd13iGNpwGN7cipaxW9f17sdCNN-CAiTN7sbNrwfQdAHNmtut66bcxKX5-1vxFrYlzu0lk1FdZCVONfd1thCLXc9OA2ShZSz-OCbmFt-5r-fOKNghqtlrYRYdj9SuZSyds2Pmd0CeRKRAZuhkT4vazKg6+qCiAADRoiMB+CMFPc8GQCyEPf9sI1sBSlAOgGBTozsVIFtUulTWDBINMBMa2QxgeffA7qdyFBFGVgpZu2WuOblQ6JoMUSyDkUsBwEBCxEmD1gNL2w5F4Bub1MfzwvEvpnucedxqwr5IzsruFxYnCLWORBAVgSFrWv8noD6emDUPkAABJH9gDiP0IMTKLvinBsSRxKLqLQAiIRwRF1C7CaJ3Q0z8PONCPWCkJiOV0ux73KLWAccRRDqtP92nAz3AWTPATDqz38JAWTA9OhRRP8IV0sogA)", "author_fullname": "t2_6vrvq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A Type-Level Lisp Interpreter (-ish)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fda3pw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583339495.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The Eval type can perform basic arithmetic, comparisons, conditionals (if expresions), define local variables and lambda expressions.&lt;/p&gt;\n\n&lt;p&gt;e.g. this type &lt;code&gt;_&lt;/code&gt; &amp;quot;evaluates&amp;quot; to &lt;code&gt;16&lt;/code&gt; at compile time.&lt;/p&gt;\n\n&lt;p&gt;```\nexport type _ = Eval&amp;lt;\n  [Let, &amp;#39;square&amp;#39;, [Lambda, X, [X, &amp;#39;*&amp;#39;, X]], [&amp;#39;square&amp;#39;, 4]]&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;;\n```&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play/#code/PTAEBUE8AcFMFoAysBusA2oCSA7ALrAOawBOoAsgIZ4AWoAljhDLAM4DGJ90eAUCKHhDhI0WPET4-YNNBzQAPlAAxAPZkAwpXTsArulU4A5KwYBbM+rzbQrVfoA0oQrranasUDl1mARqWwjM1BaRgBrRkJQVQAzWXklOSFQACVVX1U8UAARVHp0aXi5JQAichKixXlkgAUafPRuUAApADoVEkhCgRr0WEpWTwATQyMs3UGQ+tNGUGgSVSHddjx6Q1AACixQdkpjLPozSkJGTwB3GmpQSHsjIdAR2TP6WgY8Vo-QGPoAD1gh+CsegAL3+oDQK3UrAA-ABKN4mUB7UCwH5wLhmWD4BhMGiqM6gMzLOhnTy7HCyXY6fTUTxXSghFjwPpoTCzPAsDhcHitbpgADqsCMJE8IvmbCxqxwUUYBGIJFMAy8bAI90oJBIlEgrCcF1IngABgAtUiqA0Mdw0TywMw8SBIjVa2R7e4AagAjBbQGKRYN8GDfPazproNBIkimLKiAFZntMlayCyMNEYqBfJr2GFYHhWLyQLINuBpqALqo+oTFvpPPRTL4BvQqeh7cisexFuHYqAANpwOMOl40TGrdgAXQ2NDweGgrAAXCAsa1nhE4EN6JRWupCMAl-RgDV+jhVAB9Sg-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-IvJEozU45JfAWB5ElwWa6-EpAnCcXYOwZd5rXCpwi+nYNJ6QtkGvRGySK70MCIWGejiQcgsMwiwodLbdvPQC435gLuXBiutpjUJLLrMsLpy3l8LkXy5vKSyBlh4S-UWsDUYBLBHSJeZ85KQLVWBF1ZoiVsreB-PGLG+pCbpISBOAysdWT+NTgAEddDaDPoshQPbN7sR7Y58Uk57T9FYJRlKhxjE2klM6UAJ2nYKYtQwfFpsrFDvnmQPY9oozylMC7DSTh2A+yc0iRQP23so2hk7F7FtiXIFYKwIsexQokBmjt7QS6aJepQ6YGldz-tMv9Z4PmA2haJQAOIilpCQdHOBMfY92+gPHSEUdo8uMzrHOP2dPoZutojTAPDqCDH8qu4pUfgtXETIE6wlT2UYALSYsRZASbo0mnAmmDhMHmG9VYkwXigTYL+H+osr4bFGpGOy0xj70HuD-OlWRDCuaONOAGgOAhy5rI+Ol6Koc-bAFYvUjnKDsYEL4JwesrHqjpFfb3CpYRuKKIlAAiroTIql8DsWyE1R3zMnD5-l+oAJZqcgF7sMlwnqXPDcxL4XzefNG9iU3il09Eq89V-UHS29HMmW4z5qy0gQyNuMezBVUVoADTk4NKnjxiUjw0Xap1hr2X2LFVUE4LfZP3uU7tWPsAQctNWkmBkV4Io8BT5nwN+f+TPGgGX0hVfHestd-pZjJKcU6FD6+IftPJiZ-FQXeNfTvRdLfPvO9DGQfNuKnI2YSaNdAe4RKBYTIG9EjMjc4LUXXEIMBZKX8fwczSgUMZsDIPRF4doTiQgBBHVMAReL0CSSGB-JfKbRBLIFLabXzIqZKHfGgPKPfFGA-ENI-duCg-vZFS6eTUXfGexFKS4NBOsVgLMPABfa5JiNITIdiZiYLZbemZiNfLg0belSrRbWrPQuhUw19NlQAiiYAzQjiTaCcPggQ61P2NgraQwkbXPEwvLGqTKSwhZaw0fI2ZifET8LIfNS4KVCWMEe+RSUVawfARUazdEbXJRGQm0UWSkcWJgqHEVZSHPLIa7WeH4aIUXVQWxTsE3exEsLgMzIEeRVFMAVEaXBXafPWVAZGWkMyMwGTAUIUK+JQqSfGEo6wMo2yV+UwQgTUCwdUGPHjAwQYVzJUfNckB-VosgeCGcHtexYIAAHxEivkOPh02Klxr3mCKEbBaR2POOiDSPsQuKCg8UqLOUeN5iQiMFdFbkOKMHgB+ISVrQBKMAAD1gSTtgTDtkkPFqBVBghtjG1QBDjPRDiiIkTQAABmdEgAFnRIAFZ0SAA2dEgAdnRIAA50SABOdE90JtCvFpeQQ48ndEgbPkYlGaUmdAObdnGaJwGaHAFAKLUADlPYhsc4twc+B0TwVNExM5TAbwPwAIEKVgFdAQNY+wZA2wGxUrEgLISwRzPTM-RbTSdZYsFeLEewBaX7NUsABkExPAcsMSSwFdWEswPmGaNfVCeCbmH9bY0AT0lLHCH0uvIrD0tfEiEMrfMMgMtfDEorbmfwmMwM2vbEhMkAiqZMtfPE9MgaHBf0lMqlUwQk9MyaLMlLEk0sm3cs2vck9MpwvgAstfKk9Mw6NLJsoM70+QRMrEGsoskIC1dM8nPs6hNkkMsc+QcMlLLMG4VMAUlAeswUtfFZNZIrDLecrsGaEcNc4IoKf0kfd9W037L4XQC6WVRsHRfNI4FxbZfGZBYIJUBka-e7TxQ2OQfMd8s1Lsc4pwV40zXvO47cz8ldRsI8XAb4H4Kc2vLselO5L4owKAgIIOIC7s9pAOTk7QHkvxec+rDC7kirfkwU4REc0JGCiQhmJwIwIExCsgZC9M8AxwrkrCu5HC-kpigigMoiwrDs6C2Cyi-4mi9uFCjLA1R1diPC5iwioUtizCjinC7iyc2MlLMi6AuCsEwSuikMow3PCSgLFioimS-C+bQXeSkilmFSgIOCqEjS4SuhOnZjRnHnFnfncS9i+bfS6SgMtygXKS4ini-siysgOCiEmy9MrnJnZytnVy2S9y3ywyrCkyrimMg8oWT8-yMjXwIYJUEUTEJUsgeyLEImBYHATEbEDwCXRzaVMERgDSKRSgEBI88q6UnYJYiqKtTLbMDkbUxzBgleBkEUHbNeB7bEZBV+aUVUtK7BWBI0L4X4f4eAUrWURSPwRgWEvc9KvwLKqCgKowe8TaygBCnEaAmodUMjDSxYSAWy7mE62YtfMVSIHc7mcORk+CaAU690gRd69OF6tMC6+OC676l6wqj0wUwG+CMuHc4fN9ZKt9VKo49Aba6hQKlQU8wSkrEgK6hmLWSAaKoy9nZQVGzizy3S+bdG3yhSoDFK0iNKjYeHAgbebGVpWAeELo4hWkUwEoemvAEoAGJyG+SYWo1m3bAgI82AAcAITmq0HAHmhSEoNJCoOQaGRG0iowaGQ6+lXaCyQSqeHXI6gIGaENTGkm9nTWjTImpQFLYcxk7mY2zfKW3yyGrymK3kkNB2-0+AldPoVQpS6C3a7MdW8i7xQSgANTJnOqGEuvTO8TussgeutqdrxpLguqktAAADJQBQ5uxvFYAAcmBvERwPTvL2JQ7iFFscLQAy4KbFKDyYabCK5CykbdqMqsrDr7rpQY8cBI6Msm79qkMfaAr-tc1Y726Iwu66EjBQLwLfg+6G6Va1aO7+VR6F6UKG41bsN+7G6vbW7h7CAF7l74Mt717Z7zLB7R6V6ElGw+6jA3Tx5qcmJvMqV2Jo6Us27d7QBg7fKaJwBHccaV1nr5Auxs7c7QB86+Zg704y406itQozAXhxLBSnBvFCtjpEpv6I72IUh6YUg18UgpF1Ahh2JT7SdwN-74JAGIUZzOwUgC7UhAGBJwb16qbiVOJsa2owt6ZlA19-63rZi+Z6UbqyN04MgI6+HyKg4AaV1ga9ayB5yGIIaMsBHggX6d76yi7xGI7+SUM853qwtyba7SBGHYbZBjbwEr50R7zYEqQ1FtdcCTcr8p9FRlQLIWNHQgxZJcF8ZJILJwwxIeA6AFN8Y9gnEAhTT9EPpsR7TTlNQFSfB-B8qWB+iIBRiywtJwUsAjBmo5FPAbFwFXgFMHFNRRULGnybFywvHM0DRmIDRj5apbFZRbt8AUoSmXzOw+hpRXhKnzQskpb9IX57IDQ2nCBaBzRqjTFw10nmpY6wRajU1ajzH1Bgh7I-z0jyiQhSnPBBnaBbHijaoLxcF5CTdGhYGcxCRiQUR1RGhSBeRWirBH90YcBcHoBN96ZwA18WTDiBs6FXm+Z7n5JkDN8nBYIFAuw-b2maBb7BIwBNV7gAAJJVO84q13VMV5jYC4Bsfxxx588sDZOdJjbudiGFnfNff7IF52ccfoIYPmQl0AD4VoawfIPmcAeEBCJQf7Fm2vDYFdWlxoCyUR6A9GXgZl1lzu8DAVymox2QDQJSUgHSJxzNLFzwDYQKWBnlKUGUJgFsW0LqhVzZAcKHBV0ybwa6Dxq4S4UwTZugWAfneFzwcp8MJMAoXVOQU8v5+4WCOQN6b7JECLSoF1ssN13QOCT1miP1rU3QTYcUOATeI1zAT12dAQSGQgdoUNt1vCAiFpd13iGNpwGN7cipaxW9f17sdCNN-CAiTN7sbNrwfQdAHNmtut66bcxKX5-1vxFrYlzu0lk1FdZCVONfd1thCLXc9OA2ShZSz-OCbmFt-5r-fOKNghqtlrYRYdj9SuZSyds2Pmd0CeRKRAZuhkT4vazKg6+qCiAADRoiMB+CMFPc8GQCyEPf9sI1sBSlAOgGBTozsVIFtUulTWDBINMBMa2QxgeffA7qdyFBFGVgpZu2WuOblQ6JoMUSyDkUsBwEBCxEmD1gNL2w5F4Bub1MfzwvEvpnucedxqwr5IzsruFxYnCLWORBAVgSFrWv8noD6emDUPkAABJH9gDiP0IMTKLvinBsSRxKLqLQAiIRwRF1C7CaJ3Q0z8PONCPWCkJiOV0ux73KLWAccRRDqtP92nAz3AWTPATDqz38JAWTA9OhRRP8IV0sogA\"&gt;Typescript Playground&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fda3pw", "is_robot_indexable": true, "report_reasons": null, "author": "sharkbrain", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fda3pw/a_typelevel_lisp_interpreter_ish/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/fda3pw/a_typelevel_lisp_interpreter_ish/", "subreddit_subscribers": 34336, "created_utc": 1583310695.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_69l7x3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Browser-based Snake game written in Typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_fdkfcf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/8tn1U9zWofU8cN1mpy0D-hsqpmUR6N-EwSktPl7a4rQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1583387357.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/0qTl2flHzfPYFeHeZCBqC7R48UmocVfMxjrvdisAGIQ.jpg?auto=webp&amp;s=3cf30c5b696052172c908d8826164d58a324c1f2", "width": 389, "height": 389}, "resolutions": [{"url": "https://external-preview.redd.it/0qTl2flHzfPYFeHeZCBqC7R48UmocVfMxjrvdisAGIQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2276d8895d4f65c6cef2778c4714c9012691ddad", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/0qTl2flHzfPYFeHeZCBqC7R48UmocVfMxjrvdisAGIQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c9dcdb22262bbe21476c5e62748ee4f3b8a5119b", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/0qTl2flHzfPYFeHeZCBqC7R48UmocVfMxjrvdisAGIQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=36cf13a289cc21492069b7dae263219629b67449", "width": 320, "height": 320}], "variants": {}, "id": "hujoxczDXwtOQYlTC6jw5lWJS376GG0FexH-6t4lJF8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdkfcf", "is_robot_indexable": true, "report_reasons": null, "author": "finallyanonymous", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdkfcf/browserbased_snake_game_written_in_typescript/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/ayoisaiah/snake", "subreddit_subscribers": 34336, "created_utc": 1583358557.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_n6ed2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introducing AdonisJS (v5 Preview)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 112, "hide_score": false, "name": "t3_fdaojh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": true, "thumbnail": "https://a.thumbs.redditmedia.com/3LRMBr5GW6DoRo54RD9fPNxI6fGRqAB1gROh2E4W3w4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "node", "selftext": "", "author_fullname": "t2_n6ed2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introducing AdonisJS (v5 Preview)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/node", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 112, "hide_score": false, "name": "t3_fc0e9t", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 67, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 67, "approved_by": null, "author_premium": true, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1583124572.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.adonisjs.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?auto=webp&amp;s=dc5a4218b54f77dc175dc213f395e6d43e5a5952", "width": 1924, "height": 1542}, "resolutions": [{"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a570e9ac10ef97a0efca4f11675b32a9ee1d994e", "width": 108, "height": 86}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=87156dd455275550c200c468de19e683c2a0fc60", "width": 216, "height": 173}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=27186bbec6e7f1e75db6621e575b59652ce27d72", "width": 320, "height": 256}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=199fe945799c30622a11b11b345661c22d516b37", "width": 640, "height": 512}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6f6e8dd9ee0ef3a5e6579ae60d48ab3e7b983537", "width": 960, "height": 769}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=da96e8d3fd95fa365393ca8d3070462172bd0774", "width": 1080, "height": 865}], "variants": {}, "id": "tIG_AbJ1DUcI2RCiRO-9xP4I4wpKACSb9v-uIz0Ot80"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2reca", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fc0e9t", "is_robot_indexable": true, "report_reasons": null, "author": "romainlanz", "discussion_type": null, "num_comments": 41, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/node/comments/fc0e9t/introducing_adonisjs_v5_preview/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.adonisjs.com/introducing-adonisjs-v5", "subreddit_subscribers": 154123, "created_utc": 1583095772.0, "num_crossposts": 4, "media": null, "is_video": false}], "created": 1583343541.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.adonisjs.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?auto=webp&amp;s=dc5a4218b54f77dc175dc213f395e6d43e5a5952", "width": 1924, "height": 1542}, "resolutions": [{"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a570e9ac10ef97a0efca4f11675b32a9ee1d994e", "width": 108, "height": 86}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=87156dd455275550c200c468de19e683c2a0fc60", "width": 216, "height": 173}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=27186bbec6e7f1e75db6621e575b59652ce27d72", "width": 320, "height": 256}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=199fe945799c30622a11b11b345661c22d516b37", "width": 640, "height": 512}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6f6e8dd9ee0ef3a5e6579ae60d48ab3e7b983537", "width": 960, "height": 769}, {"url": "https://external-preview.redd.it/8ghjOpJCA9Moy8wcvkSEZ8VKHlKfxWS24ITfAEIdUxo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=da96e8d3fd95fa365393ca8d3070462172bd0774", "width": 1080, "height": 865}], "variants": {}, "id": "tIG_AbJ1DUcI2RCiRO-9xP4I4wpKACSb9v-uIz0Ot80"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fdaojh", "is_robot_indexable": true, "report_reasons": null, "author": "romainlanz", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_fc0e9t", "author_flair_text_color": null, "permalink": "/r/typescript/comments/fdaojh/introducing_adonisjs_v5_preview/", "parent_whitelist_status": null, "stickied": false, "url": "https://blog.adonisjs.com/introducing-adonisjs-v5", "subreddit_subscribers": 34336, "created_utc": 1583314741.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fdaojh", "before": null}}