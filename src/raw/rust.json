{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nAlso check out [last week's thread](https://reddit.com/r/rust/comments/fc7h20/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (11/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fg0p1v", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583812548.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/fc7h20/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last week&amp;#39;s thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fg0p1v", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 95, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fg0p1v/hey_rustaceans_got_an_easy_question_ask_here/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/fg0p1v/hey_rustaceans_got_an_easy_question_ask_here/", "subreddit_subscribers": 93486, "created_utc": 1583783748.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_pmcr0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "This Week in Rust 329", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fhcuec", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 135, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 135, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584028536.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "this-week-in-rust.org", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "twir", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fhcuec", "is_robot_indexable": true, "report_reasons": null, "author": "nasa42", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fhcuec/this_week_in_rust_329/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://this-week-in-rust.org/blog/2020/03/10/this-week-in-rust-329/", "subreddit_subscribers": 93486, "created_utc": 1583999736.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_7qgbo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kondo \ud83e\uddf9 v0.3 released, now with GUI \ud83c\udf89!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fixsyj", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 45, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 45, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584286739.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fixsyj", "is_robot_indexable": true, "report_reasons": null, "author": "villiger2", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fixsyj/kondo_v03_released_now_with_gui/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/q80b5uregsm41.png", "subreddit_subscribers": 93486, "created_utc": 1584257939.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Out of the Box Dynamic Dispatch", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fiprk7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 127, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 127, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584249646.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "llogiq.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fiprk7", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fiprk7/out_of_the_box_dynamic_dispatch/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://llogiq.github.io/2020/03/14/ootb.html", "subreddit_subscribers": 93486, "created_utc": 1584220846.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Suppose I have a struct `BoolPadded`\n\n    struct BoolPadded {\n        _x: u16,\n        _y: u8,\n        _z: bool,\n    }\n\nThen `Option&lt;BoolPadded&gt;` takes up 4 bytes in memory. I assume this is because the compiler is smart enough to use the invalid bit patterns of `bool` to represent the enum tag of `Option&lt;T&gt;`.\n\nHowever, if I remove the bool member:\n\n    struct Unpadded {\n        _x: u16,\n        _y: u8,\n    }\n\nNow `Option&lt;Unpadded&gt;` takes up 6 bytes in memory. It seems as though now the compiler can't determine that `Unpadded`, when aligned at a 2-byte boundary, will have unused padding bits at the end.\n\nIs there some sort of memory layout or ABI stability guarantee that is preventing this kind of optimization?\n\n[Playground Example](https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=14ff93f1a0b204cba11bb3b47c7a9c58)", "author_fullname": "t2_1n17t6yu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Reducing the size of `Option&lt;T&gt;` by adding members to `T`?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fimbo3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 167, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 167, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584236975.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Suppose I have a struct &lt;code&gt;BoolPadded&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct BoolPadded {\n    _x: u16,\n    _y: u8,\n    _z: bool,\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then &lt;code&gt;Option&amp;lt;BoolPadded&amp;gt;&lt;/code&gt; takes up 4 bytes in memory. I assume this is because the compiler is smart enough to use the invalid bit patterns of &lt;code&gt;bool&lt;/code&gt; to represent the enum tag of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;However, if I remove the bool member:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct Unpadded {\n    _x: u16,\n    _y: u8,\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now &lt;code&gt;Option&amp;lt;Unpadded&amp;gt;&lt;/code&gt; takes up 6 bytes in memory. It seems as though now the compiler can&amp;#39;t determine that &lt;code&gt;Unpadded&lt;/code&gt;, when aligned at a 2-byte boundary, will have unused padding bits at the end.&lt;/p&gt;\n\n&lt;p&gt;Is there some sort of memory layout or ABI stability guarantee that is preventing this kind of optimization?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2018&amp;amp;gist=14ff93f1a0b204cba11bb3b47c7a9c58\"&gt;Playground Example&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fimbo3", "is_robot_indexable": true, "report_reasons": null, "author": "ryanavella", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fimbo3/reducing_the_size_of_optiont_by_adding_members_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/fimbo3/reducing_the_size_of_optiont_by_adding_members_to/", "subreddit_subscribers": 93486, "created_utc": 1584208175.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_g3g1z", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Flume, a 100% safe MPSC that's faster than std and gives crossbeam a run for its money", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fj17z6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584307250.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fj17z6", "is_robot_indexable": true, "report_reasons": null, "author": "zesterer", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fj17z6/flume_a_100_safe_mpsc_thats_faster_than_std_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/zesterer/flume", "subreddit_subscribers": 93486, "created_utc": 1584278450.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_40yxe", "saved": false, "mod_reason_title": null, "gilded": 2, "clicked": false, "title": "Redox OS - pkgar introduction", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fim6ju", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 155, "total_awards_received": 2, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 155, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {"gid_2": 2}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584236450.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "redox-os.org", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 500, "id": "gid_2", "penny_donate": null, "coin_reward": 100, "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png", "days_of_premium": 7, "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png", "width": 128, "height": 128}], "icon_width": 512, "start_date": null, "is_enabled": true, "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.", "end_date": null, "subreddit_coin_reward": 0, "count": 2, "name": "Gold", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "redox", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fim6ju", "is_robot_indexable": true, "report_reasons": null, "author": "jackpot51", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fim6ju/redox_os_pkgar_introduction/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.redox-os.org/news/pkgar-introduction/", "subreddit_subscribers": 93486, "created_utc": 1584207650.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_di6c8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Parsing Library in Rust pt. 2 - Testing", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fj086p", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584301976.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.frondeus.pl", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fj086p", "is_robot_indexable": true, "report_reasons": null, "author": "frondeus", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fj086p/parsing_library_in_rust_pt_2_testing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.frondeus.pl/parser-2/", "subreddit_subscribers": 93486, "created_utc": 1584273176.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_58l27ov5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "StaticVec 0.9.0: now with a fixed-capacity StaticHeap based on std::collections::BinaryHeap, a const-context-compatible macro constructor for StaticString, const trait impls, and more!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fis6dd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584259107.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fis6dd", "is_robot_indexable": true, "report_reasons": null, "author": "SlightlyOutOfPhase3B", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fis6dd/staticvec_090_now_with_a_fixedcapacity_staticheap/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/slightlyoutofphase/staticvec", "subreddit_subscribers": 93486, "created_utc": 1584230307.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Markup languages like *Markdown*, *ReStructuredText*, *asciidoc*, *textile*,\n*txt2tags* or *mediawiki* are perfectly suited for fast note-taking. Type\nyour notes with your favourite editor and chose your favourite markup\nlanguage[^1].\n\n_Tp-Note_ helps you to quickly get started writing notes with its powerful\ntemplate system. As _Tp-Note_ takes care that the note's filename is always\nsynchronized with its document title, you will find back your notes easily.\n\n_Tp-Note_ is available for Linux, Windows and iOS. The manual illustrates\nits main use-cases and how to get started:\n\n1. Fast start note-taking (when the lecture starts).\n2. Take a note about an existing (downloaded) file.\n3. Bookmark and comment a hyperlink.\n\nIf you want to customize _Tp-Note_ with own templates, another markup\nlanguage, please consult the [man-page] for more technical details.\n\nThe project is hosted on Github:\n[getreu/tp-note](https://github.com/getreu/tp-note). The project's webpage is on\n[http://blog.getreu.net](http://blog.getreu.net/projects/tp-note/).\nThe documentation of this project is dived into tow parts:\n\n* User manual\n\n  [tp-note user manual - html](https://blog.getreu.net/projects/tp-note/tp-note--manual.html)\\\n  [tp-note user manual - pdf](https://blog.getreu.net/_downloads/tp-note--manual.pdf)\n\n* Unix man-page (more technical)\n\n  [tp-note manual page - html](https://blog.getreu.net/projects/tp-note/tp-note--manpage.html)\\\n  [tp-note manual page - pdf](https://blog.getreu.net/_downloads/tp-note--manpage.pdf)\n\nDownload _tp-note_:\n\n* Binaries and packages:\n\n  - Executable for Windows:\n\n    [x86_64-pc-windows-gnu/release/tp-note.exe](https://blog.getreu.net/projects/tp-note/_downloads/x86_64-pc-windows-gnu/release/tp-note.exe)\n\n  - Binary for Linux:\n\n    [x86_64-unknown-linux-gnu/release/tp-note](https://blog.getreu.net/projects/tp-note/_downloads/x86_64-unknown-linux-gnu/release/tp-note) \\\n    [x86_64-unknown-linux-musl/release/tp-note](https://blog.getreu.net/projects/tp-note/_downloads/x86_64-unknown-linux-musl/release/tp-note)\n\n  - Package for Debian and Ubuntu:\n\n    [x86_64-unknown-linux-gnu/debian/tp-note_1.0.0_amd64.deb](https://blog.getreu.net/projects/tp-note/_downloads/x86_64-unknown-linux-gnu/debian/tp-note_1.0.0_amd64.deb)\n\nAs this project follows [Semantic Versioning](https://semver.org/), version 1.0.0 comes with a stable API.", "author_fullname": "t2_p7jm7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TpNote - fast note talking with templates and filename-synchronization V1.0.0 is out", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fiyq5s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584292758.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Markup languages like &lt;em&gt;Markdown&lt;/em&gt;, &lt;em&gt;ReStructuredText&lt;/em&gt;, &lt;em&gt;asciidoc&lt;/em&gt;, &lt;em&gt;textile&lt;/em&gt;,\n&lt;em&gt;txt2tags&lt;/em&gt; or &lt;em&gt;mediawiki&lt;/em&gt; are perfectly suited for fast note-taking. Type\nyour notes with your favourite editor and chose your favourite markup\nlanguage[&lt;sup&gt;1].&lt;/sup&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Tp-Note&lt;/em&gt; helps you to quickly get started writing notes with its powerful\ntemplate system. As &lt;em&gt;Tp-Note&lt;/em&gt; takes care that the note&amp;#39;s filename is always\nsynchronized with its document title, you will find back your notes easily.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Tp-Note&lt;/em&gt; is available for Linux, Windows and iOS. The manual illustrates\nits main use-cases and how to get started:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Fast start note-taking (when the lecture starts).&lt;/li&gt;\n&lt;li&gt;Take a note about an existing (downloaded) file.&lt;/li&gt;\n&lt;li&gt;Bookmark and comment a hyperlink.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;If you want to customize &lt;em&gt;Tp-Note&lt;/em&gt; with own templates, another markup\nlanguage, please consult the [man-page] for more technical details.&lt;/p&gt;\n\n&lt;p&gt;The project is hosted on Github:\n&lt;a href=\"https://github.com/getreu/tp-note\"&gt;getreu/tp-note&lt;/a&gt;. The project&amp;#39;s webpage is on\n&lt;a href=\"http://blog.getreu.net/projects/tp-note/\"&gt;http://blog.getreu.net&lt;/a&gt;.\nThe documentation of this project is dived into tow parts:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;User manual&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.getreu.net/projects/tp-note/tp-note--manual.html\"&gt;tp-note user manual - html&lt;/a&gt;\\\n&lt;a href=\"https://blog.getreu.net/_downloads/tp-note--manual.pdf\"&gt;tp-note user manual - pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Unix man-page (more technical)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.getreu.net/projects/tp-note/tp-note--manpage.html\"&gt;tp-note manual page - html&lt;/a&gt;\\\n&lt;a href=\"https://blog.getreu.net/_downloads/tp-note--manpage.pdf\"&gt;tp-note manual page - pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Download &lt;em&gt;tp-note&lt;/em&gt;:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Binaries and packages:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Executable for Windows:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.getreu.net/projects/tp-note/_downloads/x86_64-pc-windows-gnu/release/tp-note.exe\"&gt;x86_64-pc-windows-gnu/release/tp-note.exe&lt;/a&gt;\n- Binary for Linux:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.getreu.net/projects/tp-note/_downloads/x86_64-unknown-linux-gnu/release/tp-note\"&gt;x86_64-unknown-linux-gnu/release/tp-note&lt;/a&gt; \\\n&lt;a href=\"https://blog.getreu.net/projects/tp-note/_downloads/x86_64-unknown-linux-musl/release/tp-note\"&gt;x86_64-unknown-linux-musl/release/tp-note&lt;/a&gt;\n- Package for Debian and Ubuntu:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.getreu.net/projects/tp-note/_downloads/x86_64-unknown-linux-gnu/debian/tp-note_1.0.0_amd64.deb\"&gt;x86_64-unknown-linux-gnu/debian/tp-note_1.0.0_amd64.deb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;As this project follows &lt;a href=\"https://semver.org/\"&gt;Semantic Versioning&lt;/a&gt;, version 1.0.0 comes with a stable API.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fiyq5s", "is_robot_indexable": true, "report_reasons": null, "author": "getreu", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fiyq5s/tpnote_fast_note_talking_with_templates_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/fiyq5s/tpnote_fast_note_talking_with_templates_and/", "subreddit_subscribers": 93486, "created_utc": 1584263958.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_31ro7wek", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Optimizations That Aren't, or are they?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fill1q", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 97, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 97, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584234252.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "oribenshir.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fill1q", "is_robot_indexable": true, "report_reasons": null, "author": "laserdo", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fill1q/optimizations_that_arent_or_are_they/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://oribenshir.github.io/afternoon_rusting/blog/copy-on-write", "subreddit_subscribers": 93486, "created_utc": 1584205452.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "In a project I'm working on I have a few lines of code like this:\n\n    str::from_utf8(&amp;string_bytes).map_err(\n        |utf8_err| DeserializationError::InvalidUTF8(utf8_err),\n    )?\n\nwhere `DeserializationError` is an enum and `InvalidUTF8` is a tuple variant. Clippy corrected this to the following, which also compiles:\n\n    str::from_utf8(&amp;string_bytes)\n        .map_err(DeserializationError::InvalidUTF8)?\n\n`map_err` takes a `FnOnce(E) -&gt; F` , so I was curious why the name of the enum variant also works. Is the construction of a tuple variant like calling a function? Yes, as it turns out!\n\nFrom [this 2017 thread](https://users.rust-lang.org/t/enum-variants-and-newtype-as-functions-closures/14706) in the rust-lang users forum:\n\n&gt;Unit structs, newtypes and tuple structs all live simultaneously in both  the type/module namespace and the value/function namespace.  Only standard, braced structs live exclusively in the type/module namespace.\n\n    struct Unit; // exists as a value\n    struct Unit2(); // exists in value namespace as a 0-arg function\n    struct Newtype(u8); // exists in value namespace as a 1-arg function\n    struct Tuple(u8, u8); // exists in value namespace as a 2-arg function\n    struct Regular { value: u8 }\n    \n    // fn Unit() {} // the name `Unit` is defined multiple times\n    // fn Unit2() {} // the name `Unit2` is defined multiple times\n    // fn Newtype() {} // the name `Newtype` is defined multiple times\n    // fn Tuple() {} // the name `Tuple` is defined multiple times\n    fn Regular() {} // ok\n\nThought that was a neat syntactical coincidence, though it tripped me up for a second.", "author_fullname": "t2_s1baovs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tuple structs are functions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_firk1r", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584256597.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In a project I&amp;#39;m working on I have a few lines of code like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;str::from_utf8(&amp;amp;string_bytes).map_err(\n    |utf8_err| DeserializationError::InvalidUTF8(utf8_err),\n)?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;where &lt;code&gt;DeserializationError&lt;/code&gt; is an enum and &lt;code&gt;InvalidUTF8&lt;/code&gt; is a tuple variant. Clippy corrected this to the following, which also compiles:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;str::from_utf8(&amp;amp;string_bytes)\n    .map_err(DeserializationError::InvalidUTF8)?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;map_err&lt;/code&gt; takes a &lt;code&gt;FnOnce(E) -&amp;gt; F&lt;/code&gt; , so I was curious why the name of the enum variant also works. Is the construction of a tuple variant like calling a function? Yes, as it turns out!&lt;/p&gt;\n\n&lt;p&gt;From &lt;a href=\"https://users.rust-lang.org/t/enum-variants-and-newtype-as-functions-closures/14706\"&gt;this 2017 thread&lt;/a&gt; in the rust-lang users forum:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Unit structs, newtypes and tuple structs all live simultaneously in both  the type/module namespace and the value/function namespace.  Only standard, braced structs live exclusively in the type/module namespace.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre&gt;&lt;code&gt;struct Unit; // exists as a value\nstruct Unit2(); // exists in value namespace as a 0-arg function\nstruct Newtype(u8); // exists in value namespace as a 1-arg function\nstruct Tuple(u8, u8); // exists in value namespace as a 2-arg function\nstruct Regular { value: u8 }\n\n// fn Unit() {} // the name `Unit` is defined multiple times\n// fn Unit2() {} // the name `Unit2` is defined multiple times\n// fn Newtype() {} // the name `Newtype` is defined multiple times\n// fn Tuple() {} // the name `Tuple` is defined multiple times\nfn Regular() {} // ok\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thought that was a neat syntactical coincidence, though it tripped me up for a second.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "firk1r", "is_robot_indexable": true, "report_reasons": null, "author": "lucis-fluxum", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/firk1r/tuple_structs_are_functions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/firk1r/tuple_structs_are_functions/", "subreddit_subscribers": 93486, "created_utc": 1584227797.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_firk1r", "before": null}}