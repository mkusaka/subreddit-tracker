{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_ewto0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learn Go test-first with 'For the Love of Go: Fundamentals'", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jelx8o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 46, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 46, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603213880.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "bitfieldconsulting.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://bitfieldconsulting.com/books/fundamentals", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jelx8o", "is_robot_indexable": true, "report_reasons": null, "author": "bitfieldconsulting", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jelx8o/learn_go_testfirst_with_for_the_love_of_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://bitfieldconsulting.com/books/fundamentals", "subreddit_subscribers": 128136, "created_utc": 1603185080.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_163a33", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is the most production ready GraphQL server library written for Golang?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jemm91", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603217479.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jemm91", "is_robot_indexable": true, "report_reasons": null, "author": "OneTinker", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jemm91/what_is_the_most_production_ready_graphql_server/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jemm91/what_is_the_most_production_ready_graphql_server/", "subreddit_subscribers": 128136, "created_utc": 1603188679.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hey, we\u2019re hiring at [spacelift.io](https://spacelift.io)!\n\n100% Remote (office in Warsaw if you fancy, but we\u2019re working in a remote-first fashion). We\u2019re looking for developers in Europe, which are available most of the working day in CET.\n\n$50-120k per annum  \nMid-Senior\n\nWe\u2019re a VC-funded startup building an automation platform for Infrastructure-as-Code, adding a Policy-as-Code layer above it, in order to make IaC usable in bigger companies, where you have to take care of state consistency, selective permissions, a usable git flow, etc.\n\nOn the backend we\u2019re using 100% Go with AWS primitives.  \nWe\u2019re looking for developers who like doing DevOps\u2019ish stuff sometimes (because in a way it\u2019s the spirit of our company) , though that\u2019s not required. Ideally you\u2019d have experience working with an IaC tool, i.e. Terraform, Ansible, CloudFormation, or SaltStack.\n\nOverall we have a deeply technical product, trying to build something customers love to use, and already have multiple happy and satisfied potential clients.\n\nWe promise interesting work, the ability to open source parts of the project which don\u2019t give us a business advantage, as well as sane working hours.\n\nIf that sounds like fun to you, or you have any questions, send me a private message with your email, and I\u2019ll get back to you! You can also directly email me at kubam at spacelift dot io.\n\nPS: Fear not, no whiteboarding!", "author_fullname": "t2_sej7n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "We're Hiring Remotely @Spacelift! \ud83d\ude80", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_je3qug", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 128, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 128, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1603122088.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603150143.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey, we\u2019re hiring at &lt;a href=\"https://spacelift.io\"&gt;spacelift.io&lt;/a&gt;!&lt;/p&gt;\n\n&lt;p&gt;100% Remote (office in Warsaw if you fancy, but we\u2019re working in a remote-first fashion). We\u2019re looking for developers in Europe, which are available most of the working day in CET.&lt;/p&gt;\n\n&lt;p&gt;$50-120k per annum&lt;br/&gt;\nMid-Senior&lt;/p&gt;\n\n&lt;p&gt;We\u2019re a VC-funded startup building an automation platform for Infrastructure-as-Code, adding a Policy-as-Code layer above it, in order to make IaC usable in bigger companies, where you have to take care of state consistency, selective permissions, a usable git flow, etc.&lt;/p&gt;\n\n&lt;p&gt;On the backend we\u2019re using 100% Go with AWS primitives.&lt;br/&gt;\nWe\u2019re looking for developers who like doing DevOps\u2019ish stuff sometimes (because in a way it\u2019s the spirit of our company) , though that\u2019s not required. Ideally you\u2019d have experience working with an IaC tool, i.e. Terraform, Ansible, CloudFormation, or SaltStack.&lt;/p&gt;\n\n&lt;p&gt;Overall we have a deeply technical product, trying to build something customers love to use, and already have multiple happy and satisfied potential clients.&lt;/p&gt;\n\n&lt;p&gt;We promise interesting work, the ability to open source parts of the project which don\u2019t give us a business advantage, as well as sane working hours.&lt;/p&gt;\n\n&lt;p&gt;If that sounds like fun to you, or you have any questions, send me a private message with your email, and I\u2019ll get back to you! You can also directly email me at kubam at spacelift dot io.&lt;/p&gt;\n\n&lt;p&gt;PS: Fear not, no whiteboarding!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je3qug", "is_robot_indexable": true, "report_reasons": null, "author": "cube2222", "discussion_type": null, "num_comments": 43, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/je3qug/were_hiring_remotely_spacelift/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/je3qug/were_hiring_remotely_spacelift/", "subreddit_subscribers": 128136, "created_utc": 1603121343.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_f86yc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Determine prominent colors in a picture, your first AWS Lambda in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jem8ri", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603215556.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "buddy.works", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://buddy.works/tutorials/determine-prominent-colors-in-a-picture-your-first-aws-lambda-in-go", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jem8ri", "is_robot_indexable": true, "report_reasons": null, "author": "loigiani", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jem8ri/determine_prominent_colors_in_a_picture_your/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://buddy.works/tutorials/determine-prominent-colors-in-a-picture-your-first-aws-lambda-in-go", "subreddit_subscribers": 128136, "created_utc": 1603186756.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi everyone, I would share this beta project that can be used to monitoring services (and different protocols).\n\nThe tool is lightweight and therefore it can be used also in embedded devices, such as Raspberry Pi (zero to 4) or similar.\n\nIn addition, the tool is extensible in terms of custom services/protocols implementation.\n\nThe project is actually divided in two parts:\n\n* BigBro ([https://github.com/bigbroproject/BigBro](https://github.com/bigbroproject/BigBro)) - is the main tool and provides an user interface via webserver and it is based on BigBroCore\n* BigBroCore ([https://github.com/bigbroproject/BigBroCore](https://github.com/bigbroproject/BigBroCore)) - is the core of the project, basically is BigBro without user interface.\n\nLet us know about suggestions, issues or anything about the project!", "author_fullname": "t2_5triyud4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "BigBro: An extensible monitoring tool for user defined services and protocols", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_je8rfd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1603136191.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603164599.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone, I would share this beta project that can be used to monitoring services (and different protocols).&lt;/p&gt;\n\n&lt;p&gt;The tool is lightweight and therefore it can be used also in embedded devices, such as Raspberry Pi (zero to 4) or similar.&lt;/p&gt;\n\n&lt;p&gt;In addition, the tool is extensible in terms of custom services/protocols implementation.&lt;/p&gt;\n\n&lt;p&gt;The project is actually divided in two parts:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;BigBro (&lt;a href=\"https://github.com/bigbroproject/BigBro\"&gt;https://github.com/bigbroproject/BigBro&lt;/a&gt;) - is the main tool and provides an user interface via webserver and it is based on BigBroCore&lt;/li&gt;\n&lt;li&gt;BigBroCore (&lt;a href=\"https://github.com/bigbroproject/BigBroCore\"&gt;https://github.com/bigbroproject/BigBroCore&lt;/a&gt;) - is the core of the project, basically is BigBro without user interface.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Let us know about suggestions, issues or anything about the project!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je8rfd", "is_robot_indexable": true, "report_reasons": null, "author": "fili91", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/je8rfd/bigbro_an_extensible_monitoring_tool_for_user/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/je8rfd/bigbro_an_extensible_monitoring_tool_for_user/", "subreddit_subscribers": 128136, "created_utc": 1603135799.0, "num_crossposts": 3, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hey! I'm looking at the source code of the `container/list` package in the standard library and came across [this line](https://golang.org/src/container/list/list.go#L49).\n\nI'm curious about the idea behind this implementation where we keep track of an element that's not actually an element in the linked list. Can someone explain?", "author_fullname": "t2_164ab8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is a \"sentinel\" element?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jehceb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603192234.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey! I&amp;#39;m looking at the source code of the &lt;code&gt;container/list&lt;/code&gt; package in the standard library and came across &lt;a href=\"https://golang.org/src/container/list/list.go#L49\"&gt;this line&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m curious about the idea behind this implementation where we keep track of an element that&amp;#39;s not actually an element in the linked list. Can someone explain?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jehceb", "is_robot_indexable": true, "report_reasons": null, "author": "v_95", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jehceb/what_is_a_sentinel_element/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jehceb/what_is_a_sentinel_element/", "subreddit_subscribers": 128136, "created_utc": 1603163434.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hey folks! I threw together a quick library that supports sending metrics to Google Analytics from Go applications as well as generating URLs that you can embed in emails and other applications. No more needing to remember or look up the parameters. Just put in your information and go...\n\nLet me know what you think!\n\n[https://github.com/mjpitz/go-ga](https://github.com/mjpitz/go-ga)", "author_fullname": "t2_4dvtzthx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Golang library for Google Analytics", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jedg5u", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603178502.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey folks! I threw together a quick library that supports sending metrics to Google Analytics from Go applications as well as generating URLs that you can embed in emails and other applications. No more needing to remember or look up the parameters. Just put in your information and go...&lt;/p&gt;\n\n&lt;p&gt;Let me know what you think!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mjpitz/go-ga\"&gt;https://github.com/mjpitz/go-ga&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jedg5u", "is_robot_indexable": true, "report_reasons": null, "author": "mjpitz", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jedg5u/golang_library_for_google_analytics/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jedg5u/golang_library_for_google_analytics/", "subreddit_subscribers": 128136, "created_utc": 1603149702.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Delve doesn't seem to work for me on my Ubuntu virtual machine (not WSL, an actual VM).\n\nI get a \"Failed to continue\" error, and my debug console says \"exit status 2, Process exiting with code: 1\"\n\nThe program executes fine without the debugger.\n\nI tried looking at the following [https://github.com/golang/vscode-go/blob/master/docs/debugging.md](https://github.com/golang/vscode-go/blob/master/docs/debugging.md)\n\nRan the following in terminal: go get github.com/go-delve/delve/cmd/dlv\n\nAnd then updated dlv from the command palette, but it's still not working. I should also say, I do have the Go extension installed.\n\nHas anyone ever experienced something similar? I'm not getting any substantial error messages, so I have not been able to find much by just googling.", "author_fullname": "t2_66izy58w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "VSCode Debugging", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jej4rp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603199728.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Delve doesn&amp;#39;t seem to work for me on my Ubuntu virtual machine (not WSL, an actual VM).&lt;/p&gt;\n\n&lt;p&gt;I get a &amp;quot;Failed to continue&amp;quot; error, and my debug console says &amp;quot;exit status 2, Process exiting with code: 1&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;The program executes fine without the debugger.&lt;/p&gt;\n\n&lt;p&gt;I tried looking at the following &lt;a href=\"https://github.com/golang/vscode-go/blob/master/docs/debugging.md\"&gt;https://github.com/golang/vscode-go/blob/master/docs/debugging.md&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ran the following in terminal: go get github.com/go-delve/delve/cmd/dlv&lt;/p&gt;\n\n&lt;p&gt;And then updated dlv from the command palette, but it&amp;#39;s still not working. I should also say, I do have the Go extension installed.&lt;/p&gt;\n\n&lt;p&gt;Has anyone ever experienced something similar? I&amp;#39;m not getting any substantial error messages, so I have not been able to find much by just googling.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jej4rp", "is_robot_indexable": true, "report_reasons": null, "author": "hikanron", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jej4rp/vscode_debugging/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jej4rp/vscode_debugging/", "subreddit_subscribers": 128136, "created_utc": 1603170928.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_egl55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Implementing fast lightweight containers in Go with bst and btrfs (Part 1)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_je1kwx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "programming", "selftext": "[deleted]", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Implementing fast lightweight containers in Go with bst and btrfs (Part 1)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/programming", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_je1kf3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": "", "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603142654.0, "link_flair_type": "text", "wls": 6, "removed_by_category": "deleted", "banned_by": null, "domain": "snai.pe", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://snai.pe/posts/lightweight-containers-part-1", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2fwo", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je1kf3", "is_robot_indexable": false, "report_reasons": null, "author": "[deleted]", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_flair_text_color": "dark", "permalink": "/r/programming/comments/je1kf3/implementing_fast_lightweight_containers_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://snai.pe/posts/lightweight-containers-part-1", "subreddit_subscribers": 2942489, "created_utc": 1603113854.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1603142708.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "snai.pe", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://snai.pe/posts/lightweight-containers-part-1", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je1kwx", "is_robot_indexable": true, "report_reasons": null, "author": "Snaipe_S", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_je1kf3", "author_flair_text_color": null, "permalink": "/r/golang/comments/je1kwx/implementing_fast_lightweight_containers_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://snai.pe/posts/lightweight-containers-part-1", "subreddit_subscribers": 128136, "created_utc": 1603113908.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm thinking about rewriting an application in Go, that I built with Python and PyQt for the Raspberry Pi. It needs to access the GPIO pins and has a GUI to control them. Is this generally a good idea? I would use Go because of the easier use of concurrency and because I just like the language. For the GUI I would use fyne, but which library should I use for the GPIOs? I've seen a lot of different ones, some of them aren't maintained anymore, so which GPIO library would you recommend?", "author_fullname": "t2_1om6ii6q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rewrite Raspberry Pi Python project in Go? (GPIO)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_je38sl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603148522.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m thinking about rewriting an application in Go, that I built with Python and PyQt for the Raspberry Pi. It needs to access the GPIO pins and has a GUI to control them. Is this generally a good idea? I would use Go because of the easier use of concurrency and because I just like the language. For the GUI I would use fyne, but which library should I use for the GPIOs? I&amp;#39;ve seen a lot of different ones, some of them aren&amp;#39;t maintained anymore, so which GPIO library would you recommend?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "je38sl", "is_robot_indexable": true, "report_reasons": null, "author": "Palexer", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/je38sl/rewrite_raspberry_pi_python_project_in_go_gpio/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/je38sl/rewrite_raspberry_pi_python_project_in_go_gpio/", "subreddit_subscribers": 128136, "created_utc": 1603119722.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_je38sl", "before": null}}