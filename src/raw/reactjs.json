{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "&gt; Previous Beginner's Threads can be found in the [wiki][wiki previous threads].\n\nAsk about React or anything else in its ecosystem :)\n\nStuck making progress on your app?  \nStill Ask away! We\u2019re a friendly bunch.\n\nNo question is too simple. \ud83d\ude42\n\n---\n\n## Want Help with your Code?\n\n1. **Improve your chances** of reply by\n   1. adding minimal example with [JSFiddle][jsfiddle], [CodeSandbox][code sandbox], or [Stackblitz][stackblitz] links\n   1. describing what you want it to do (ask yourself if it's an [XY problem](https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem))\n   1. things you've tried. (Don't just post big blocks of code!)\n1. **[Formatting Code][wiki formatting code]** wiki shows how to format code in this thread.\n1. **Pay it forward!** Answer questions even if there is already an answer. Other perspectives can be helpful to beginners. Also, there's no quicker way to learn than [being wrong on the Internet][being wrong on the internet].\n\n---\n\n## New to React?\n\n### Check out the sub's **sidebar**! \ud83d\udc49\n\n\ud83c\udd93 Here are great, **free** resources!\n\n- [Read the **official** Getting Started page][official getting started page] on the docs.\n- [Microsoft Frontend Bootcamp][microsoft frontend bootcamp]\n- [Codecademy's React courses][codecademy's react courses]\n- [Scrimba's React Course][scrimba's react course]\n- [FreeCodeCamp's React course][freecodecamp's react course]\n- [Kent Dodd's Egghead.io course][kent dodd's egghead.io course]\n- New to Hooks? Check out [Amelia Wattenberger's Thinking in React Hooks][thinking in react hooks]\n- and these React Hook recipes on [useHooks.com][usehooks.com] by [Gabe Ragland](https://twitter.com/gabe_ragland)\n- What other updated resources do you suggest?\n\nAny ideas/suggestions to improve this thread - feel free to comment here!\n\n_Finally, thank you to all who post questions and those who answer them. We're a growing community and [helping each other][learn by teaching] only [strengthens it!][learn in public]_\n\n---\n\n[usehooks.com]: https://usehooks.com/\n[thinking in react hooks]: https://wattenberger.com/blog/react-hooks\n[freecodecamp's react course]: https://www.freecodecamp.org/news/learn-react-course/\n[microsoft frontend bootcamp]: https://www.reddit.com/r/reactjs/comments/auu02f/microsoft_has_open_sourced_their_frontend/\n[official getting started page]: https://reactjs.org/docs/getting-started.html\n[/u/acemarke]: https://www.reddit.com/u/acemarke\n[suggested resources for learning react]: http://blog.isquaredsoftware.com/2017/12/blogged-answers-learn-react/\n[kent dodd's egghead.io course]: http://kcd.im/beginner-react\n[codecademy's react courses]: https://www.codecademy.com/catalog/language/javascript\n[scrimba's react course]: https://scrimba.com/g/glearnreact\n[wiki formatting code]: https://www.reddit.com/r/reactjs/wiki/index#wiki_formatting_code\n[wiki previous threads]: https://www.reddit.com/r/reactjs/wiki/index#wiki_previous_threads\n[code sandbox]: https://codesandbox.io/s/new\n[jsfiddle]: https://jsfiddle.net/Luktwrdm/\n[stackblitz]: https://stackblitz.com/\n[being wrong on the internet]: https://xkcd.com/386/\n[tweet organization]: https://twitter.com/dan_abramov/status/1027245759232651270?lang=en\n[get started with redux]: https://www.reddit.com/r/reactjs/wiki/index#wiki_getting_started_with_redux\n[learn by teaching]: https://en.wikipedia.org/wiki/Learning_by_teaching\n[learn in public]: https://www.swyx.io/writing/learn-in-public/", "author_fullname": "t2_6gjgi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Beginner's Thread / Easy Questions (October 2020)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j31umf", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 3, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 1}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601555545.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Previous Beginner&amp;#39;s Threads can be found in the &lt;a href=\"https://www.reddit.com/r/reactjs/wiki/index#wiki_previous_threads\"&gt;wiki&lt;/a&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Ask about React or anything else in its ecosystem :)&lt;/p&gt;\n\n&lt;p&gt;Stuck making progress on your app?&lt;br/&gt;\nStill Ask away! We\u2019re a friendly bunch.&lt;/p&gt;\n\n&lt;p&gt;No question is too simple. \ud83d\ude42&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;Want Help with your Code?&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Improve your chances&lt;/strong&gt; of reply by\n\n&lt;ol&gt;\n&lt;li&gt;adding minimal example with &lt;a href=\"https://jsfiddle.net/Luktwrdm/\"&gt;JSFiddle&lt;/a&gt;, &lt;a href=\"https://codesandbox.io/s/new\"&gt;CodeSandbox&lt;/a&gt;, or &lt;a href=\"https://stackblitz.com/\"&gt;Stackblitz&lt;/a&gt; links&lt;/li&gt;\n&lt;li&gt;describing what you want it to do (ask yourself if it&amp;#39;s an &lt;a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\"&gt;XY problem&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;things you&amp;#39;ve tried. (Don&amp;#39;t just post big blocks of code!)&lt;/li&gt;\n&lt;/ol&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=\"https://www.reddit.com/r/reactjs/wiki/index#wiki_formatting_code\"&gt;Formatting Code&lt;/a&gt;&lt;/strong&gt; wiki shows how to format code in this thread.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Pay it forward!&lt;/strong&gt; Answer questions even if there is already an answer. Other perspectives can be helpful to beginners. Also, there&amp;#39;s no quicker way to learn than &lt;a href=\"https://xkcd.com/386/\"&gt;being wrong on the Internet&lt;/a&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;New to React?&lt;/h2&gt;\n\n&lt;h3&gt;Check out the sub&amp;#39;s &lt;strong&gt;sidebar&lt;/strong&gt;! \ud83d\udc49&lt;/h3&gt;\n\n&lt;p&gt;\ud83c\udd93 Here are great, &lt;strong&gt;free&lt;/strong&gt; resources!&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://reactjs.org/docs/getting-started.html\"&gt;Read the &lt;strong&gt;official&lt;/strong&gt; Getting Started page&lt;/a&gt; on the docs.&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.reddit.com/r/reactjs/comments/auu02f/microsoft_has_open_sourced_their_frontend/\"&gt;Microsoft Frontend Bootcamp&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.codecademy.com/catalog/language/javascript\"&gt;Codecademy&amp;#39;s React courses&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://scrimba.com/g/glearnreact\"&gt;Scrimba&amp;#39;s React Course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.freecodecamp.org/news/learn-react-course/\"&gt;FreeCodeCamp&amp;#39;s React course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://kcd.im/beginner-react\"&gt;Kent Dodd&amp;#39;s Egghead.io course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;New to Hooks? Check out &lt;a href=\"https://wattenberger.com/blog/react-hooks\"&gt;Amelia Wattenberger&amp;#39;s Thinking in React Hooks&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;and these React Hook recipes on &lt;a href=\"https://usehooks.com/\"&gt;useHooks.com&lt;/a&gt; by &lt;a href=\"https://twitter.com/gabe_ragland\"&gt;Gabe Ragland&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;What other updated resources do you suggest?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Any ideas/suggestions to improve this thread - feel free to comment here!&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Finally, thank you to all who post questions and those who answer them. We&amp;#39;re a growing community and &lt;a href=\"https://en.wikipedia.org/wiki/Learning_by_teaching\"&gt;helping each other&lt;/a&gt; only &lt;a href=\"https://www.swyx.io/writing/learn-in-public/\"&gt;strengthens it!&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "id": "award_f44611f1-b89e-46dc-97fe-892280b13b82", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Thank you stranger. Shows the award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Helpful", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png"}, {"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}, {"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "award_74fe5152-7906-4991-9016-bc2d8e261200", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=16&amp;height=16&amp;auto=webp&amp;s=094da86916604f4fc9f7f63c827e31c976f00928", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=32&amp;height=32&amp;auto=webp&amp;s=52886a42b9871ec69a4465609472a864dbab27b1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=48&amp;height=48&amp;auto=webp&amp;s=63a8f5eff627778a221c58daffbfbbb87b7fe350", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=64&amp;height=64&amp;auto=webp&amp;s=da0d9de08517646db45b766dbb0e7b94d2e97312", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=128&amp;height=128&amp;auto=webp&amp;s=58d3501a4314be9d47349a1f7925e18f30a832e5", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "I don't know what to do with my hands!", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Excited", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=16&amp;height=16&amp;auto=webp&amp;s=094da86916604f4fc9f7f63c827e31c976f00928", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=32&amp;height=32&amp;auto=webp&amp;s=52886a42b9871ec69a4465609472a864dbab27b1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=48&amp;height=48&amp;auto=webp&amp;s=63a8f5eff627778a221c58daffbfbbb87b7fe350", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=64&amp;height=64&amp;auto=webp&amp;s=da0d9de08517646db45b766dbb0e7b94d2e97312", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png?width=128&amp;height=128&amp;auto=webp&amp;s=58d3501a4314be9d47349a1f7925e18f30a832e5", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/x069ow7ewnf51_Excited.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "j31umf", "is_robot_indexable": true, "report_reasons": null, "author": "dance2die", "discussion_type": null, "num_comments": 331, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/j31umf/beginners_thread_easy_questions_october_2020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/reactjs/comments/j31umf/beginners_thread_easy_questions_october_2020/", "subreddit_subscribers": 221007, "created_utc": 1601526745.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_3yrph2qj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help the React team write new docs\u2014take the 2020 React Community Survey", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-core-team", "downs": 0, "thumbnail_height": 75, "top_awarded_type": null, "hide_score": false, "name": "t3_j5iqj3", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 88, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "React Core Team", "can_mod_post": false, "score": 88, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/E_dK_JyX5beQe99IHLB5KBxrCcLl9TacWbDNOcqBtB0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601930775.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "surveymonkey.co.uk", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://www.surveymonkey.co.uk/r/T58DPNS", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zBfU-XcHoq4RfUwssr7z--WGIkGYPkSSH0Cv8ZO9BwY.jpg?auto=webp&amp;s=dbc75a5e672f50fddeda20047b11d60e3cb9cdaa", "width": 1600, "height": 868}, "resolutions": [{"url": "https://external-preview.redd.it/zBfU-XcHoq4RfUwssr7z--WGIkGYPkSSH0Cv8ZO9BwY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6cb416d4988209852027f5306d120c51dfdab919", "width": 108, "height": 58}, {"url": "https://external-preview.redd.it/zBfU-XcHoq4RfUwssr7z--WGIkGYPkSSH0Cv8ZO9BwY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=be562f480c47c7c197ec4dbeab117459a6ce1cde", "width": 216, "height": 117}, {"url": "https://external-preview.redd.it/zBfU-XcHoq4RfUwssr7z--WGIkGYPkSSH0Cv8ZO9BwY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f66ec49a7c9e80b78d22082ac0f699242b318135", "width": 320, "height": 173}, {"url": "https://external-preview.redd.it/zBfU-XcHoq4RfUwssr7z--WGIkGYPkSSH0Cv8ZO9BwY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c5e4cf3d1a8b0b1e37d2c63a4793672164e596a4", "width": 640, "height": 347}, {"url": "https://external-preview.redd.it/zBfU-XcHoq4RfUwssr7z--WGIkGYPkSSH0Cv8ZO9BwY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7c3f87cf9397c3421f4d20aa3b2bdafa5704128d", "width": 960, "height": 520}, {"url": "https://external-preview.redd.it/zBfU-XcHoq4RfUwssr7z--WGIkGYPkSSH0Cv8ZO9BwY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=37903485e378c8cc18022250baed120fed5ba9e8", "width": 1080, "height": 585}], "variants": {}, "id": "F0g-PREuNyA_y2SyX06Qh9kRvFesoCFD4b3rp7thY6c"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "a5b8cdc8-b79b-11e8-b9d6-0e39ed813446", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#014980", "id": "j5iqj3", "is_robot_indexable": true, "report_reasons": null, "author": "nextdoorNabors", "discussion_type": null, "num_comments": 43, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/j5iqj3/help_the_react_team_write_new_docstake_the_2020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.surveymonkey.co.uk/r/T58DPNS", "subreddit_subscribers": 221007, "created_utc": 1601901975.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_go2ti", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Content Security Policy - protect your website from XSS attacks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jleg5w", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Mb8BFcUcyGg0UdPgufr4jRsyA-BAp7FTwTcF9LPHvDY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604159093.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "itsopensource.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://itsopensource.com/content-security-policy/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/YT7pYzY5SNYGl2bgmn8Z5OO8qsJgNiltQkGbf0QfE58.jpg?auto=webp&amp;s=87f535a2e5cf35f38cc575a58c7f9b486890b4aa", "width": 512, "height": 512}, "resolutions": [{"url": "https://external-preview.redd.it/YT7pYzY5SNYGl2bgmn8Z5OO8qsJgNiltQkGbf0QfE58.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7cce6e0b5110eeb9fc88810a27784ab52c1d8743", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/YT7pYzY5SNYGl2bgmn8Z5OO8qsJgNiltQkGbf0QfE58.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a9ad00772489e5eb4e6524ec2a8032cb9539fbe7", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/YT7pYzY5SNYGl2bgmn8Z5OO8qsJgNiltQkGbf0QfE58.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0a0deac423355d556e0a133d3a636c78727fe605", "width": 320, "height": 320}], "variants": {}, "id": "OZpMD-yPiwSjbu0WZA7FZCjWnr-ZJzkVJxXf0kbGuxY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "jleg5w", "is_robot_indexable": true, "report_reasons": null, "author": "tsl143", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jleg5w/content_security_policy_protect_your_website_from/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://itsopensource.com/content-security-policy/", "subreddit_subscribers": 221007, "created_utc": 1604130293.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_77uys", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Run your React Native app on the web with React Native for Web", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jlgo5q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.77, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/mbwhAG0NhdjuDerVFWfekKqOKuQF0Cku8iLKRfaTbos.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604171728.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "mmazzarolo.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://mmazzarolo.com/blog/2020-10-24-adding-react-native-web/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/h_G1K8qS82D1l5WNOt0StvV644nzfjg_JUpmUw51WqU.jpg?auto=webp&amp;s=857e4e04a0acee780e22f318029be8fc9e466e75", "width": 160, "height": 160}, "resolutions": [{"url": "https://external-preview.redd.it/h_G1K8qS82D1l5WNOt0StvV644nzfjg_JUpmUw51WqU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5d867ae0c33c791b963c664c97e26019843885db", "width": 108, "height": 108}], "variants": {}, "id": "DCeffUnfwMpT5H9GMWPRf_Z5-8mhV92UxiIx70GWs-E"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "jlgo5q", "is_robot_indexable": true, "report_reasons": null, "author": "mazzaaaaa", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jlgo5q/run_your_react_native_app_on_the_web_with_react/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://mmazzarolo.com/blog/2020-10-24-adding-react-native-web/", "subreddit_subscribers": 221007, "created_utc": 1604142928.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_2eylxa7y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A responsive, composable react charting library with a hand-drawn style.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-show", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jkvvrp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 339, "total_awards_received": 5, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/reactjs", "can_mod_post": false, "score": 339, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1604089967.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "beizhedenglong.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://beizhedenglong.github.io/rough-charts/?path=/docs/roughcharts--page", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 1000, "id": "award_35c78e6e-507b-4f1d-b3d8-ed43840909a8", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 800, "icon_url": "https://i.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=16&amp;height=16&amp;auto=webp&amp;s=b526df7459c0ef19b3ce55c151630ddb0a05aec2", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=32&amp;height=32&amp;auto=webp&amp;s=0c72d02304e16f4dd21e2c5aaf3ae61c3722b55b", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=48&amp;height=48&amp;auto=webp&amp;s=f8c095e695a7aed5181912f5485c822d16c6fe69", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=64&amp;height=64&amp;auto=webp&amp;s=2f7cdb5c16a5641797137e4fba0825d4e34b78cb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=128&amp;height=128&amp;auto=webp&amp;s=3c4d7aa4f4987e610f27556d43e2d011c9a4d5b0", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "The treasure at the end of the rainbow. Gives the author 800 Coins to do with as they please.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Pot o' Coins", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=16&amp;height=16&amp;auto=webp&amp;s=b526df7459c0ef19b3ce55c151630ddb0a05aec2", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=32&amp;height=32&amp;auto=webp&amp;s=0c72d02304e16f4dd21e2c5aaf3ae61c3722b55b", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=48&amp;height=48&amp;auto=webp&amp;s=f8c095e695a7aed5181912f5485c822d16c6fe69", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=64&amp;height=64&amp;auto=webp&amp;s=2f7cdb5c16a5641797137e4fba0825d4e34b78cb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png?width=128&amp;height=128&amp;auto=webp&amp;s=3c4d7aa4f4987e610f27556d43e2d011c9a4d5b0", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/wg3lzllyg9n41_PotoCoins.png"}, {"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "award_19860e30-3331-4bac-b3d1-bd28de0c7974", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=16&amp;height=16&amp;auto=webp&amp;s=4e50438bd2d72ae5398e839ac2bdcccf323fca79", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=32&amp;height=32&amp;auto=webp&amp;s=e730f68de038499700c6301470812c29ef6a8555", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=48&amp;height=48&amp;auto=webp&amp;s=8d7c7fa22e6ff3b1b0a347839e42f493eb5f6cbc", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=64&amp;height=64&amp;auto=webp&amp;s=11ec2a72e2724017bb8479639edce8a7f2ba64f4", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=128&amp;height=128&amp;auto=webp&amp;s=1e936ae571e89abb5a5aaa2efd2d7cfb0ed1b537", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "I needed this today", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Heartwarming", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=16&amp;height=16&amp;auto=webp&amp;s=4e50438bd2d72ae5398e839ac2bdcccf323fca79", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=32&amp;height=32&amp;auto=webp&amp;s=e730f68de038499700c6301470812c29ef6a8555", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=48&amp;height=48&amp;auto=webp&amp;s=8d7c7fa22e6ff3b1b0a347839e42f493eb5f6cbc", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=64&amp;height=64&amp;auto=webp&amp;s=11ec2a72e2724017bb8479639edce8a7f2ba64f4", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=128&amp;height=128&amp;auto=webp&amp;s=1e936ae571e89abb5a5aaa2efd2d7cfb0ed1b537", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png"}, {"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 2, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}, {"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 70, "id": "award_7becef23-fb0b-4d62-b8a6-01d5759367cb", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=16&amp;height=16&amp;auto=webp&amp;s=19c8ba1570a2447a04354e05a9463f3d2063f522", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=32&amp;height=32&amp;auto=webp&amp;s=6222517b5d76c737ce1ad1ab55c42e3ce53c11d7", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=48&amp;height=48&amp;auto=webp&amp;s=5f5d88a13a1a514298ec5c7edc6f2506750f3c4a", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=64&amp;height=64&amp;auto=webp&amp;s=3af85a35bcd871d432337f309f6ea333181b4092", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=128&amp;height=128&amp;auto=webp&amp;s=4631e5c3e2cda226cb2725e9eff118c7b419a95e", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "When goodness lifts you", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Faith In Humanity Restored", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=16&amp;height=16&amp;auto=webp&amp;s=19c8ba1570a2447a04354e05a9463f3d2063f522", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=32&amp;height=32&amp;auto=webp&amp;s=6222517b5d76c737ce1ad1ab55c42e3ce53c11d7", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=48&amp;height=48&amp;auto=webp&amp;s=5f5d88a13a1a514298ec5c7edc6f2506750f3c4a", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=64&amp;height=64&amp;auto=webp&amp;s=3af85a35bcd871d432337f309f6ea333181b4092", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png?width=128&amp;height=128&amp;auto=webp&amp;s=4631e5c3e2cda226cb2725e9eff118c7b419a95e", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/gva4vt20qc751_FaithInHumanityRestored.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ab912b", "id": "jkvvrp", "is_robot_indexable": true, "report_reasons": null, "author": "beizhedenglong", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jkvvrp/a_responsive_composable_react_charting_library/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://beizhedenglong.github.io/rough-charts/?path=/docs/roughcharts--page", "subreddit_subscribers": 221007, "created_utc": 1604061167.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "If you are sick of adding hundreds of dependencies in order to do a simple task, then this article is for you.  \ud83d\udc7b\n\nThis is how to implement a simple themes switcher with default dark mode step by step:\n\nFirstly we are going to create a themes.js file and add the color variables \ud83d\ude13 :\n\n    // the actual object holding the colors for each theme\n    // you can always define colors with same values for all themes in :root\n    const colors = {\n      night: {\n        '--lightest': '#e4e6eb',\n        '--light': '#b0b3b8',\n        '--medium': '#3a3b3c',\n        '--dark': '#242526',\n        '--darker': '#18191a',\n      },\n      day: {\n        '--lightest': '#ffffff',\n        '--light': '#f7f7f7',\n        '--medium': '#dfe3ee',\n        '--dark': '#8b9dc3',\n        '--darker': '#3b5998',\n      },\n      coffee: {\n        '--lightest': '#ece0d1',\n        '--light': '#dbc1ac',\n        '--medium': '#967259',\n        '--dark': '#634832',\n        '--darker': '#38220f',\n      },\n    };\n\nSave the themes' names in array and the first theme as fallback theme \ud83e\udd14 :\n\n    const themes = Object.keys(colors);\n    const fallback = themes[0];\n\nCreate functions for retrieving and saving the theme name \ud83e\udd28 :\n\n    // returns the last saved theme or the first available one\n    // if the page is loaded for first time\n    const getTheme = () =&gt; {\n      const theme = localStorage.getItem('theme');\n      return colors[theme] ? theme : fallback;\n    };\n    \n    // simply saves the theme in the localStorage\n    const saveTheme = (theme = fallback) =&gt; localStorage.setItem('theme', theme);\n\nThen a function for actually changing the color variables from the colors object \ud83d\ude29 :\n\n    // actually changing the colors depending on the theme\n    const setColorScheme = (theme = fallback) =&gt; {\n      Object.entries(colors[theme]).map(([color, value]) =&gt; {\n        document.documentElement.style.setProperty(color, value);\n      });\n    };\n\nAnd finally a function for export to set the theme \ud83e\udd13 :\n\n    // executes and returns a function for setting theme\n    const setTheme = (() =&gt; {\n      // it will load the last saved theme from the local storage\n      // or fallback to the first available one\n      // and then set it\n      // happens on page load once\n      setColorScheme(getTheme());\n    \n      return (theme) =&gt; {\n        theme = colors[theme] ? theme : fallback;\n        if (getTheme() !== theme) {\n          setColorScheme(theme);\n          saveTheme(theme);\n        }\n    \n        return theme;\n      };\n    })();\n    \n    export { themes, getTheme, setTheme };\n\nAnd this is a simple example on how to use it in ReactJS app (you can easily use it in any other):\n\nApp.js\n\n    import './styles/app.css';\n    import { useState, useEffect } from 'react';\n    import { themes, getTheme, setTheme } from './styles/theme.js';\n    \n    export default () =&gt; {\n      const [currentTheme, nextTheme] = useState(getTheme());\n    \n      useEffect(() =&gt; {\n        setTheme(currentTheme);\n      }, [currentTheme]);\n    \n      return (\n        &lt;div className=\"app-wrapper\"&gt;\n          &lt;select onChange={(event) =&gt; nextTheme(event.target.value)}&gt;\n            {themes.map((theme, i) =&gt; (\n              &lt;option selected={theme === currentTheme} key={i} value={theme}&gt;\n                {theme}\n              &lt;/option&gt;\n            ))}\n          &lt;/select&gt;\n        &lt;/div&gt;\n      );\n    };\n\nstyle.css\n\n    .app-wrapper {\n      width: 100vw;\n      height: 100vh;\n      background-color: var(--darker);\n    }\n    \n    .app-wrapper select {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      -webkit-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%);\n      padding: 0.4rem 0.8rem;\n      font-weight: bold;\n      background: var(--dark);\n      cursor: pointer;\n      color: var(--light);\n      border: 0.2rem solid var(--medium);\n      outline: none;\n    }\n    \n    .app-wrapper select:hover {\n      color: var(--lightest);\n    }\n\nThe actual result: [https://i.ibb.co/rKj4p83/switcher.gif](https://i.ibb.co/rKj4p83/switcher.gif)  \ud83d\ude33", "author_fullname": "t2_8opr34jm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Theming in React with variables (with default dark mode) \ud83c\udf17", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jl1ajl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": true, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1604108098.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you are sick of adding hundreds of dependencies in order to do a simple task, then this article is for you.  \ud83d\udc7b&lt;/p&gt;\n\n&lt;p&gt;This is how to implement a simple themes switcher with default dark mode step by step:&lt;/p&gt;\n\n&lt;p&gt;Firstly we are going to create a themes.js file and add the color variables \ud83d\ude13 :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// the actual object holding the colors for each theme\n// you can always define colors with same values for all themes in :root\nconst colors = {\n  night: {\n    &amp;#39;--lightest&amp;#39;: &amp;#39;#e4e6eb&amp;#39;,\n    &amp;#39;--light&amp;#39;: &amp;#39;#b0b3b8&amp;#39;,\n    &amp;#39;--medium&amp;#39;: &amp;#39;#3a3b3c&amp;#39;,\n    &amp;#39;--dark&amp;#39;: &amp;#39;#242526&amp;#39;,\n    &amp;#39;--darker&amp;#39;: &amp;#39;#18191a&amp;#39;,\n  },\n  day: {\n    &amp;#39;--lightest&amp;#39;: &amp;#39;#ffffff&amp;#39;,\n    &amp;#39;--light&amp;#39;: &amp;#39;#f7f7f7&amp;#39;,\n    &amp;#39;--medium&amp;#39;: &amp;#39;#dfe3ee&amp;#39;,\n    &amp;#39;--dark&amp;#39;: &amp;#39;#8b9dc3&amp;#39;,\n    &amp;#39;--darker&amp;#39;: &amp;#39;#3b5998&amp;#39;,\n  },\n  coffee: {\n    &amp;#39;--lightest&amp;#39;: &amp;#39;#ece0d1&amp;#39;,\n    &amp;#39;--light&amp;#39;: &amp;#39;#dbc1ac&amp;#39;,\n    &amp;#39;--medium&amp;#39;: &amp;#39;#967259&amp;#39;,\n    &amp;#39;--dark&amp;#39;: &amp;#39;#634832&amp;#39;,\n    &amp;#39;--darker&amp;#39;: &amp;#39;#38220f&amp;#39;,\n  },\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Save the themes&amp;#39; names in array and the first theme as fallback theme \ud83e\udd14 :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const themes = Object.keys(colors);\nconst fallback = themes[0];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Create functions for retrieving and saving the theme name \ud83e\udd28 :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// returns the last saved theme or the first available one\n// if the page is loaded for first time\nconst getTheme = () =&amp;gt; {\n  const theme = localStorage.getItem(&amp;#39;theme&amp;#39;);\n  return colors[theme] ? theme : fallback;\n};\n\n// simply saves the theme in the localStorage\nconst saveTheme = (theme = fallback) =&amp;gt; localStorage.setItem(&amp;#39;theme&amp;#39;, theme);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then a function for actually changing the color variables from the colors object \ud83d\ude29 :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// actually changing the colors depending on the theme\nconst setColorScheme = (theme = fallback) =&amp;gt; {\n  Object.entries(colors[theme]).map(([color, value]) =&amp;gt; {\n    document.documentElement.style.setProperty(color, value);\n  });\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And finally a function for export to set the theme \ud83e\udd13 :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// executes and returns a function for setting theme\nconst setTheme = (() =&amp;gt; {\n  // it will load the last saved theme from the local storage\n  // or fallback to the first available one\n  // and then set it\n  // happens on page load once\n  setColorScheme(getTheme());\n\n  return (theme) =&amp;gt; {\n    theme = colors[theme] ? theme : fallback;\n    if (getTheme() !== theme) {\n      setColorScheme(theme);\n      saveTheme(theme);\n    }\n\n    return theme;\n  };\n})();\n\nexport { themes, getTheme, setTheme };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this is a simple example on how to use it in ReactJS app (you can easily use it in any other):&lt;/p&gt;\n\n&lt;p&gt;App.js&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import &amp;#39;./styles/app.css&amp;#39;;\nimport { useState, useEffect } from &amp;#39;react&amp;#39;;\nimport { themes, getTheme, setTheme } from &amp;#39;./styles/theme.js&amp;#39;;\n\nexport default () =&amp;gt; {\n  const [currentTheme, nextTheme] = useState(getTheme());\n\n  useEffect(() =&amp;gt; {\n    setTheme(currentTheme);\n  }, [currentTheme]);\n\n  return (\n    &amp;lt;div className=&amp;quot;app-wrapper&amp;quot;&amp;gt;\n      &amp;lt;select onChange={(event) =&amp;gt; nextTheme(event.target.value)}&amp;gt;\n        {themes.map((theme, i) =&amp;gt; (\n          &amp;lt;option selected={theme === currentTheme} key={i} value={theme}&amp;gt;\n            {theme}\n          &amp;lt;/option&amp;gt;\n        ))}\n      &amp;lt;/select&amp;gt;\n    &amp;lt;/div&amp;gt;\n  );\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;style.css&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.app-wrapper {\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--darker);\n}\n\n.app-wrapper select {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  padding: 0.4rem 0.8rem;\n  font-weight: bold;\n  background: var(--dark);\n  cursor: pointer;\n  color: var(--light);\n  border: 0.2rem solid var(--medium);\n  outline: none;\n}\n\n.app-wrapper select:hover {\n  color: var(--lightest);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The actual result: &lt;a href=\"https://i.ibb.co/rKj4p83/switcher.gif\"&gt;https://i.ibb.co/rKj4p83/switcher.gif&lt;/a&gt;  \ud83d\ude33&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bd07D74hR43tR4Ja0anIISzWKzNoN8qi1FA4hUurB4Q.gif?format=png8&amp;s=6943ab81d1b48642ae6e295f8d7bc75b678a7697", "width": 200, "height": 100}, "resolutions": [{"url": "https://external-preview.redd.it/bd07D74hR43tR4Ja0anIISzWKzNoN8qi1FA4hUurB4Q.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=bd7e5f4e9d05cf3cb155cde39280cfa16fedba9d", "width": 108, "height": 54}], "variants": {"gif": {"source": {"url": "https://external-preview.redd.it/bd07D74hR43tR4Ja0anIISzWKzNoN8qi1FA4hUurB4Q.gif?s=f51f8a789909b3438b6ea2bf190107f5ad016998", "width": 200, "height": 100}, "resolutions": [{"url": "https://external-preview.redd.it/bd07D74hR43tR4Ja0anIISzWKzNoN8qi1FA4hUurB4Q.gif?width=108&amp;crop=smart&amp;s=dbbe62e9fd4ce04f19fe4c99559f43caabd024fe", "width": 108, "height": 54}]}, "mp4": {"source": {"url": "https://external-preview.redd.it/bd07D74hR43tR4Ja0anIISzWKzNoN8qi1FA4hUurB4Q.gif?format=mp4&amp;s=0bf0a36f8bc77f0f598aae92cffd544521fc5917", "width": 200, "height": 100}, "resolutions": [{"url": "https://external-preview.redd.it/bd07D74hR43tR4Ja0anIISzWKzNoN8qi1FA4hUurB4Q.gif?width=108&amp;format=mp4&amp;s=7e7e5319d177a2b0d22563eed013d04a7fda7bcd", "width": 108, "height": 54}]}}, "id": "-wX8ubmP8fSj5utqllBOiqHGk647JVhPuTns_j1SFbQ"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "jl1ajl", "is_robot_indexable": true, "report_reasons": null, "author": "angel-zlatanov", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jl1ajl/theming_in_react_with_variables_with_default_dark/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/jl1ajl/theming_in_react_with_variables_with_default_dark/", "subreddit_subscribers": 221007, "created_utc": 1604079298.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "If you're on this sub, you're probably aware of context - well I decided to try and reimplement this using some of React's basic API. \nI call it react-ancestor\n\n[package](https://www.npmjs.com/package/react-ancestor)\n[github](github.com/enahsor/ancestor)\n\nI'd love to hear what you all of think of my attempt.", "author_fullname": "t2_6fjdn0u9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a package", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-code-review", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jlcbt1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Code Review Request", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1604147536.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re on this sub, you&amp;#39;re probably aware of context - well I decided to try and reimplement this using some of React&amp;#39;s basic API. \nI call it react-ancestor&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.npmjs.com/package/react-ancestor\"&gt;package&lt;/a&gt;\n[github](github.com/enahsor/ancestor)&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d love to hear what you all of think of my attempt.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?auto=webp&amp;s=dc9f3722e4f26a0d394e974bdc658bd002ee6f3d", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29849972d1063666bb20bfca982ed849dbab0739", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c2e78155bcf431bc82859db1b9cc141779445961", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7b8fc1121ee3f0761b7c5ec9e306f65c99c715db", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18cce76337e2ca3f939805374b20a68b0a1671af", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=940123d8c0b4043a88a028062a5a195676254f4d", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=70f261d64e65120035e417a634c19726e4e3576d", "width": 1080, "height": 567}], "variants": {}, "id": "3CAm7f2euOP7diXidheIHavSdc1loh3U46B-FOssKu4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "178ea150-4b81-11ea-89a7-0ec4d26e08ff", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "jlcbt1", "is_robot_indexable": true, "report_reasons": null, "author": "jamdev25", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jlcbt1/i_made_a_package/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/jlcbt1/i_made_a_package/", "subreddit_subscribers": 221007, "created_utc": 1604118736.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I am building an Invoice view (This code is far from production as some design choices are still up in the air). This view has two tabs: Payments and Charges (aka Transactions). Clicking on either tab should force a clean un-mount and re-render of all nested components. The InvoiceDetail page conditionally renders a ListContext (with either a \"txapi\" or a \"pmtapi\" prop that is used to fetch the data and setState inside the constructor and componentDidMount), and either a PmtTable or a TxTable. Both are children of a ListContext that fetches data.\n\nThis does not work and leads to an internal validation error upon tab change when TxTable reads payment data, which is obviously of a different schema than transactions:\n\n    if (view == \"payments\") {\n    return (\n    &lt;Paper variant=\"outlined\"&gt;\n          {invCard}\n          &lt;Divider /&gt;\n          &lt;ListContextProvider endpoint={\"pmtapi/\"} params={{ invoice: invID }}&gt;\n                 &lt;PmtTable /&gt;\n                 &lt;PageFooter /&gt;\n          &lt;/ListContextProvider&gt;\n    &lt;/Paper&gt; ); \n    }\n    \n    if (view == \"transactions\") {\n    return (\n    &lt;Paper variant=\"outlined\"&gt;\n          {invCard}\n          &lt;Divider /&gt;\n          &lt;ListContextProvider endpoint={\"txapi/\"} params={{ invoice: invID }}&gt;\n                  &lt;TxTable /&gt;\n                  &lt;PageFooter /&gt;\n          &lt;/ListContextProvider&gt;\n    &lt;/Paper&gt; ); \n    }\n\nNow the following works fine when I move the ListContextProvider and its children into a separate component and import it :\n\n    if (view == \"payments\") {\n    return ( \n    &lt;Paper variant=\"outlined\"&gt;\n         {invCard} \n         &lt;Divider /&gt;\n         &lt;ListContextProvider endpoint={\"pmtapi/\"} params={{ invoice: invID }}&gt;         \n          &lt;PmtTable /&gt; \n              &lt;PageFooter /&gt; \n         &lt;/ListContextProvider&gt; \n    &lt;/Paper&gt; ); \n    } \n    \n    if (view == \"transactions\") { \n    return ( \n    &lt;Paper variant=\"outlined\"&gt; \n         {invCard} \n         &lt;Divider /&gt; \n         &lt;TxView /&gt; \n    &lt;/Paper&gt; ); \n    } \n\nI've tried everything else, from modifying the life cycle methods inside the Context to sticking the logic inside of immediately-invoked functions. I am assuming that React-Fiber's diffing algorithm recognizes that ListContextProvider's position has not changed, but the props have changed and this should return a re-render of its children. I added a comparison of prevProps to props inside of shouldComponentUpdate in ListContextProvider but to no avail.\n\nAnd if the diffing is to blame here, why is wrapping the offending code inside nothing but essentially a named fragment or div not causing this issue? If I add an extra div wrapper to the original code to make one sub-tree different than the other, will this fix the issue? I really do not want to use a separate &lt;TxView&gt; component.\n\nThanks in advance for all of the help! Not an expert at React.\n\n**EDIT**: Indeed the wrapper makes all the difference, and my suspicion of diffing being the issue is strengthened. I just stuck a div tag around one of the branches but not the other and it worked fine. I really am looking for a way to force a complete re-render.\n\n**EDIT2**: Sticking the offending code inside a function component using the render props pattern forced a hard re-render and solved the issue. I am still interested in understanding what's going on. From my understanding:  \n\n\n1) React Fiber realizes the DOM tree down to the `&lt;table&gt;`'s has not fundamentally changed, only the props and state are different. Even `&lt;TxTable&gt;` and `&lt;PmtTable&gt;` are actually implementations of the same Material-Table component.\n\n1.5) Props and state updates are supposed to force a re-render, but the order may not be guaranteed? The Context updates are asynchronous and the `useContext()` hook may fire first before a props update. Because most of the DOM tree has not really changed, the nested component is updating before the Context is re-rendered.\n\n2) The above looks true according to unposted print statements. Is there a reliable way to influence the order, or suspend for a certain amount of time, of re-renders?\n\n3) The above is re-inforced by a print statement inside ListContext's constructor that never fires. The `context.items` indeed change, but the constructor never fires even though the props are obviously different. How is this possible? And how can I change it?", "author_fullname": "t2_5xkpk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React not re-rendering new Context, and nested component is pulling stale context state leading to undefined issues. However, moving the code to another component solves this issue and forces a hard re-render.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jlcu07", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1604127896.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604149987.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am building an Invoice view (This code is far from production as some design choices are still up in the air). This view has two tabs: Payments and Charges (aka Transactions). Clicking on either tab should force a clean un-mount and re-render of all nested components. The InvoiceDetail page conditionally renders a ListContext (with either a &amp;quot;txapi&amp;quot; or a &amp;quot;pmtapi&amp;quot; prop that is used to fetch the data and setState inside the constructor and componentDidMount), and either a PmtTable or a TxTable. Both are children of a ListContext that fetches data.&lt;/p&gt;\n\n&lt;p&gt;This does not work and leads to an internal validation error upon tab change when TxTable reads payment data, which is obviously of a different schema than transactions:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (view == &amp;quot;payments&amp;quot;) {\nreturn (\n&amp;lt;Paper variant=&amp;quot;outlined&amp;quot;&amp;gt;\n      {invCard}\n      &amp;lt;Divider /&amp;gt;\n      &amp;lt;ListContextProvider endpoint={&amp;quot;pmtapi/&amp;quot;} params={{ invoice: invID }}&amp;gt;\n             &amp;lt;PmtTable /&amp;gt;\n             &amp;lt;PageFooter /&amp;gt;\n      &amp;lt;/ListContextProvider&amp;gt;\n&amp;lt;/Paper&amp;gt; ); \n}\n\nif (view == &amp;quot;transactions&amp;quot;) {\nreturn (\n&amp;lt;Paper variant=&amp;quot;outlined&amp;quot;&amp;gt;\n      {invCard}\n      &amp;lt;Divider /&amp;gt;\n      &amp;lt;ListContextProvider endpoint={&amp;quot;txapi/&amp;quot;} params={{ invoice: invID }}&amp;gt;\n              &amp;lt;TxTable /&amp;gt;\n              &amp;lt;PageFooter /&amp;gt;\n      &amp;lt;/ListContextProvider&amp;gt;\n&amp;lt;/Paper&amp;gt; ); \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now the following works fine when I move the ListContextProvider and its children into a separate component and import it :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (view == &amp;quot;payments&amp;quot;) {\nreturn ( \n&amp;lt;Paper variant=&amp;quot;outlined&amp;quot;&amp;gt;\n     {invCard} \n     &amp;lt;Divider /&amp;gt;\n     &amp;lt;ListContextProvider endpoint={&amp;quot;pmtapi/&amp;quot;} params={{ invoice: invID }}&amp;gt;         \n      &amp;lt;PmtTable /&amp;gt; \n          &amp;lt;PageFooter /&amp;gt; \n     &amp;lt;/ListContextProvider&amp;gt; \n&amp;lt;/Paper&amp;gt; ); \n} \n\nif (view == &amp;quot;transactions&amp;quot;) { \nreturn ( \n&amp;lt;Paper variant=&amp;quot;outlined&amp;quot;&amp;gt; \n     {invCard} \n     &amp;lt;Divider /&amp;gt; \n     &amp;lt;TxView /&amp;gt; \n&amp;lt;/Paper&amp;gt; ); \n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve tried everything else, from modifying the life cycle methods inside the Context to sticking the logic inside of immediately-invoked functions. I am assuming that React-Fiber&amp;#39;s diffing algorithm recognizes that ListContextProvider&amp;#39;s position has not changed, but the props have changed and this should return a re-render of its children. I added a comparison of prevProps to props inside of shouldComponentUpdate in ListContextProvider but to no avail.&lt;/p&gt;\n\n&lt;p&gt;And if the diffing is to blame here, why is wrapping the offending code inside nothing but essentially a named fragment or div not causing this issue? If I add an extra div wrapper to the original code to make one sub-tree different than the other, will this fix the issue? I really do not want to use a separate &amp;lt;TxView&amp;gt; component.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance for all of the help! Not an expert at React.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: Indeed the wrapper makes all the difference, and my suspicion of diffing being the issue is strengthened. I just stuck a div tag around one of the branches but not the other and it worked fine. I really am looking for a way to force a complete re-render.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT2&lt;/strong&gt;: Sticking the offending code inside a function component using the render props pattern forced a hard re-render and solved the issue. I am still interested in understanding what&amp;#39;s going on. From my understanding:  &lt;/p&gt;\n\n&lt;p&gt;1) React Fiber realizes the DOM tree down to the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&amp;#39;s has not fundamentally changed, only the props and state are different. Even &lt;code&gt;&amp;lt;TxTable&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;PmtTable&amp;gt;&lt;/code&gt; are actually implementations of the same Material-Table component.&lt;/p&gt;\n\n&lt;p&gt;1.5) Props and state updates are supposed to force a re-render, but the order may not be guaranteed? The Context updates are asynchronous and the &lt;code&gt;useContext()&lt;/code&gt; hook may fire first before a props update. Because most of the DOM tree has not really changed, the nested component is updating before the Context is re-rendered.&lt;/p&gt;\n\n&lt;p&gt;2) The above looks true according to unposted print statements. Is there a reliable way to influence the order, or suspend for a certain amount of time, of re-renders?&lt;/p&gt;\n\n&lt;p&gt;3) The above is re-inforced by a print statement inside ListContext&amp;#39;s constructor that never fires. The &lt;code&gt;context.items&lt;/code&gt; indeed change, but the constructor never fires even though the props are obviously different. How is this possible? And how can I change it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "jlcu07", "is_robot_indexable": true, "report_reasons": null, "author": "its4thecatlol", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jlcu07/react_not_rerendering_new_context_and_nested/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/jlcu07/react_not_rerendering_new_context_and_nested/", "subreddit_subscribers": 221007, "created_utc": 1604121187.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "hey, I'm learning how to use flask and react together so that i can host my python projects online. I'm following [this article](https://blog.miguelgrinberg.com/post/how-to-create-a-react--flask-project) to do so. But as soon as i reload the page i get this error in the dev console -\n\n`Uncaught (in promise) SyntaxError: Unexpected token &lt; in JSON at position 0`\n\ni did some research on it and turns out its because the backend is not returning json, but in my case im returning json(as flask automatically jsonifies dictionaries).\n\n&amp;#x200B;\n\nHere is my code - [python code](https://pastebin.com/7SVKFqEg) , [react code](https://pastebin.com/tKkq5LgN)\n\n&amp;#x200B;\n\nAny help is appreciated as im literally pulling my hair apart\n\n&amp;#x200B;\n\nThanks", "author_fullname": "t2_8p0nhaz0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[HELP]getting Unexpected token &lt; in JSON at position 0 even if im returning json from my flask backend", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jleerx", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1604158871.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hey, I&amp;#39;m learning how to use flask and react together so that i can host my python projects online. I&amp;#39;m following &lt;a href=\"https://blog.miguelgrinberg.com/post/how-to-create-a-react--flask-project\"&gt;this article&lt;/a&gt; to do so. But as soon as i reload the page i get this error in the dev console -&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Uncaught (in promise) SyntaxError: Unexpected token &amp;lt; in JSON at position 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;i did some research on it and turns out its because the backend is not returning json, but in my case im returning json(as flask automatically jsonifies dictionaries).&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Here is my code - &lt;a href=\"https://pastebin.com/7SVKFqEg\"&gt;python code&lt;/a&gt; , &lt;a href=\"https://pastebin.com/tKkq5LgN\"&gt;react code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Any help is appreciated as im literally pulling my hair apart&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/nmX0zoTZlDR4J_3mq26UUe2F0TeyPpTzdQS_TToZJh0.jpg?auto=webp&amp;s=a694333d2c0da3b207c7108d17786e2ef0185914", "width": 640, "height": 335}, "resolutions": [{"url": "https://external-preview.redd.it/nmX0zoTZlDR4J_3mq26UUe2F0TeyPpTzdQS_TToZJh0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0847bfa434de1f79a614ca1579870ca748d99b0d", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/nmX0zoTZlDR4J_3mq26UUe2F0TeyPpTzdQS_TToZJh0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c4409aa4534337854b639c2336af84eeb484ddf8", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/nmX0zoTZlDR4J_3mq26UUe2F0TeyPpTzdQS_TToZJh0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f2e2e240fdbe2f3c09b49bde0b9948c2873b37cc", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/nmX0zoTZlDR4J_3mq26UUe2F0TeyPpTzdQS_TToZJh0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e1201a0020b6888cef17a2cdae2324720b3f5dbd", "width": 640, "height": 335}], "variants": {}, "id": "Ry7p3TizPcVLEKnp_yz-cusHUto5R_wD9x1Boh9CCFI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "jleerx", "is_robot_indexable": true, "report_reasons": null, "author": "iMakeLoveToTerminal", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jleerx/helpgetting_unexpected_token_in_json_at_position/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/jleerx/helpgetting_unexpected_token_in_json_at_position/", "subreddit_subscribers": 221007, "created_utc": 1604130071.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "    function App() {\n        const [messages, setMessages] = useState([{ type: \"system\", text: \"Please stay nice!\" }]);\n        useEffect(() =&gt; {\n          socket.current.on(\"messageSent\", (data) =&gt; {\n            setMessages([...messages, { type: \"you\", text: data.message }]);\n          });\n    \n          socket.current.on(\"receiveMessage\", (data) =&gt; {\n            setMessages([...messages, { type: \"partner\", text: data.message }]);\n          });\n        }, []);\n    \n        return (\n          &lt;&gt;\n            &lt;span className=\"container\"&gt;\n              &lt;Chat messages={messages} /&gt;\n            &lt;/span&gt;\n          &lt;/&gt;\n        );\n      }\n\nSo this useEffect() is run only once to set-up socket.\n\nRight now when I try to access messages from inside of useEffect I got only the starting value which is \\[{ type: \"system\", text: \"Please stay nice!\" }\\] also setMessages doesn't refresh props of my parent component and child component has only access to this starting value \\[{ type: \"system\", text: \"Please stay nice!\" }\\]. How to do this correctly?\n\n.", "author_fullname": "t2_n5vc4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to make simple messaging using socket.io and react useEffect()", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jl81pt", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604130456.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;function App() {\n    const [messages, setMessages] = useState([{ type: &amp;quot;system&amp;quot;, text: &amp;quot;Please stay nice!&amp;quot; }]);\n    useEffect(() =&amp;gt; {\n      socket.current.on(&amp;quot;messageSent&amp;quot;, (data) =&amp;gt; {\n        setMessages([...messages, { type: &amp;quot;you&amp;quot;, text: data.message }]);\n      });\n\n      socket.current.on(&amp;quot;receiveMessage&amp;quot;, (data) =&amp;gt; {\n        setMessages([...messages, { type: &amp;quot;partner&amp;quot;, text: data.message }]);\n      });\n    }, []);\n\n    return (\n      &amp;lt;&amp;gt;\n        &amp;lt;span className=&amp;quot;container&amp;quot;&amp;gt;\n          &amp;lt;Chat messages={messages} /&amp;gt;\n        &amp;lt;/span&amp;gt;\n      &amp;lt;/&amp;gt;\n    );\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So this useEffect() is run only once to set-up socket.&lt;/p&gt;\n\n&lt;p&gt;Right now when I try to access messages from inside of useEffect I got only the starting value which is [{ type: &amp;quot;system&amp;quot;, text: &amp;quot;Please stay nice!&amp;quot; }] also setMessages doesn&amp;#39;t refresh props of my parent component and child component has only access to this starting value [{ type: &amp;quot;system&amp;quot;, text: &amp;quot;Please stay nice!&amp;quot; }]. How to do this correctly?&lt;/p&gt;\n\n&lt;p&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "jl81pt", "is_robot_indexable": true, "report_reasons": null, "author": "Astacius", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jl81pt/how_to_make_simple_messaging_using_socketio_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/jl81pt/how_to_make_simple_messaging_using_socketio_and/", "subreddit_subscribers": 221007, "created_utc": 1604101656.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": " \n\nLive demo here: [https://moviesearcher-rust.vercel.app/](https://moviesearcher-rust.vercel.app/)  \nRepository here: [https://github.com/wcelery/moviesearcher](https://github.com/wcelery/moviesearcher)  \nWhat I'm trying to do is save my favorite movies in localStorage by clicking heart icon. First click adds item, second click removes it. The problem is ADD\\_TO\\_FAVORITES works fine, but REMOVE\\_FROM\\_FAVORITE crashes my app with Cannot read property 'toString' of undefined  \n error here:\n\n    23 | case REMOVE_FROM_FAVORITES:\n      24 |   return {\n      25 |     ...state,\n    &gt; 26 |     favorites: Object.keys(state.favorites)\n         | ^  27 |       .filter((item) =&gt; item !== action.payload.id.toString())\n      28 |       .reduce(\n      29 |         (object, item) =&gt; ({ ...object, [item]: state.favorites[item] }),\n\nCode, that handles clicks is in components/Movie.js:\n\n    export default function Movie({ poster, title, id }) {\n      const dispatch = useDispatch();\n      const favorites = useSelector((state) =&gt; state.favoriteStore.favorites);\n    \n      const parse = (poster, title, id) =&gt; {\n        return {\n          poster: poster,\n          title: title,\n          id: id,\n        };\n      };\n      let movie = parse(poster, title, id);\n    \n      let isFavourite = movie.id in favorites;\n    \n      const isStored = (value) =&gt; {\n        if (value) {\n          dispatch(removeFromFavorites(movie));\n        } else {\n          dispatch(addToFavorites(movie));\n        }\n      };\n\nHere's my redux/reducers/favoritesReducer.js:\n\n    import { ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES } from \"../config\";\n    \n    const checkLocalStorage = () =&gt; {\n      return Object.assign(\n        {},\n        ...Object.entries(localStorage).map(([id, value]) =&gt; ({\n          [id]: JSON.parse(value),\n        }))\n      );\n    };\n    \n    const initialState = {\n      favorites: checkLocalStorage(),\n    };\n    \n    export const favoritesReducer = (state = initialState, action) =&gt; {\n      switch (action.type) {\n        case ADD_TO_FAVORITES:\n          //blah blah\n        case REMOVE_FROM_FAVORITES:\n          return {\n            ...state,\n            favorites: Object.keys(state.favorites)\n              .filter((item) =&gt; item !== action.payload.id.toString())\n              .reduce(\n                (object, item) =&gt; ({ ...object, [item]: state.favorites[item] }),\n                {}\n              ),\n          };\n        default:\n          return state;\n      }\n    };", "author_fullname": "t2_1cjak3jr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using localStorage with Redux to save favorites.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jktk0q", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 51, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 51, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604078554.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Live demo here: &lt;a href=\"https://moviesearcher-rust.vercel.app/\"&gt;https://moviesearcher-rust.vercel.app/&lt;/a&gt;&lt;br/&gt;\nRepository here: &lt;a href=\"https://github.com/wcelery/moviesearcher\"&gt;https://github.com/wcelery/moviesearcher&lt;/a&gt;&lt;br/&gt;\nWhat I&amp;#39;m trying to do is save my favorite movies in localStorage by clicking heart icon. First click adds item, second click removes it. The problem is ADD_TO_FAVORITES works fine, but REMOVE_FROM_FAVORITE crashes my app with Cannot read property &amp;#39;toString&amp;#39; of undefined&lt;br/&gt;\n error here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;23 | case REMOVE_FROM_FAVORITES:\n  24 |   return {\n  25 |     ...state,\n&amp;gt; 26 |     favorites: Object.keys(state.favorites)\n     | ^  27 |       .filter((item) =&amp;gt; item !== action.payload.id.toString())\n  28 |       .reduce(\n  29 |         (object, item) =&amp;gt; ({ ...object, [item]: state.favorites[item] }),\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Code, that handles clicks is in components/Movie.js:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export default function Movie({ poster, title, id }) {\n  const dispatch = useDispatch();\n  const favorites = useSelector((state) =&amp;gt; state.favoriteStore.favorites);\n\n  const parse = (poster, title, id) =&amp;gt; {\n    return {\n      poster: poster,\n      title: title,\n      id: id,\n    };\n  };\n  let movie = parse(poster, title, id);\n\n  let isFavourite = movie.id in favorites;\n\n  const isStored = (value) =&amp;gt; {\n    if (value) {\n      dispatch(removeFromFavorites(movie));\n    } else {\n      dispatch(addToFavorites(movie));\n    }\n  };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&amp;#39;s my redux/reducers/favoritesReducer.js:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES } from &amp;quot;../config&amp;quot;;\n\nconst checkLocalStorage = () =&amp;gt; {\n  return Object.assign(\n    {},\n    ...Object.entries(localStorage).map(([id, value]) =&amp;gt; ({\n      [id]: JSON.parse(value),\n    }))\n  );\n};\n\nconst initialState = {\n  favorites: checkLocalStorage(),\n};\n\nexport const favoritesReducer = (state = initialState, action) =&amp;gt; {\n  switch (action.type) {\n    case ADD_TO_FAVORITES:\n      //blah blah\n    case REMOVE_FROM_FAVORITES:\n      return {\n        ...state,\n        favorites: Object.keys(state.favorites)\n          .filter((item) =&amp;gt; item !== action.payload.id.toString())\n          .reduce(\n            (object, item) =&amp;gt; ({ ...object, [item]: state.favorites[item] }),\n            {}\n          ),\n      };\n    default:\n      return state;\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "jktk0q", "is_robot_indexable": true, "report_reasons": null, "author": "wcelery", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jktk0q/using_localstorage_with_redux_to_save_favorites/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/jktk0q/using_localstorage_with_redux_to_save_favorites/", "subreddit_subscribers": 221007, "created_utc": 1604049754.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Im trying to learn react hooks and i have the idea behind it but i want a practical tutorial. Is there any good video for this? Lets say they create a full stack project with it and explains every detail behind their decision (eg folder structure). \n\nA udemy course link is also appreciated!", "author_fullname": "t2_3f8b92ng", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React hook practical guide", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jlaxss", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604141530.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Im trying to learn react hooks and i have the idea behind it but i want a practical tutorial. Is there any good video for this? Lets say they create a full stack project with it and explains every detail behind their decision (eg folder structure). &lt;/p&gt;\n\n&lt;p&gt;A udemy course link is also appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "jlaxss", "is_robot_indexable": true, "report_reasons": null, "author": "jeremeheh", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/jlaxss/react_hook_practical_guide/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/jlaxss/react_hook_practical_guide/", "subreddit_subscribers": 221007, "created_utc": 1604112730.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jlaxss", "before": null}}