{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_rh2b9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "gopls/v0.4.1", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gjhsp3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 45, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 45, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589471175.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjhsp3", "is_robot_indexable": true, "report_reasons": null, "author": "kaeshiwaza", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gjhsp3/goplsv041/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/golang/go/milestone/146?closed=1", "subreddit_subscribers": 112553, "created_utc": 1589442375.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_68joj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "When to use pointers in Go?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gj20kj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 100, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 100, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589415082.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gj20kj", "is_robot_indexable": true, "report_reasons": null, "author": "juanpabloaj", "discussion_type": null, "num_comments": 41, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gj20kj/when_to_use_pointers_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@meeusdylan/when-to-use-pointers-in-go-44c15fe04eac", "subreddit_subscribers": 112553, "created_utc": 1589386282.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_jj326r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Handy Gitlab CI YAML job templates for Go projects", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gjipr5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "gitlab", "selftext": "Various useful and handy GitLab CI YAML templates for typical GitLab CI tasks.\n\n**Project site:** [https://gitlab.com/tymonx/gitlab-ci](https://gitlab.com/tymonx/gitlab-ci)\n\n**General Features**\n\n* Supporting validating, building, testing and auto-documenting projects out-of-box\n* Automating various and mostly typical GitLab CI tasks\n* Extending GitLab CI like with parallel download with caching support\n* Easy to use with the GitLab CI include keyword in your .gitlab-ci.yml files\n\n**Go Features**\n\n* Automatically installing required Go tools for validating, testing and documenting project\n* Validating Go source files format with the go fmt tool\n* Linting Go source files with the golint tool\n* Building Go source files\n* Testing Go project\n* Generating Go coverage result, text and HTML reports\n* Generating JUnit test XML report for GitLab Merge Requests\n* Generating Cobertura coverage XML report for GitLab Merge Requests\n* Validating Go coverage value with customazible coverage threshold\n* Colorizing Go tests with the richgo tool\n* Colorizing Go coverage results\n* Generating static HTML source code documentation with the godoc tool\n* Generating static HTML coverage report with the go tool cover tool\n* Uploading static HTML source code documentation and coverage report to GitLab Pages for browsing\n\n**Links**\n\n* Project site: [https://gitlab.com/tymonx/gitlab-ci](https://gitlab.com/tymonx/gitlab-ci)\n* Documentation: [https://gitlab.com/tymonx/gitlab-ci/-/wikis/home](https://gitlab.com/tymonx/gitlab-ci/-/wikis/home)\n* Project example: [https://gitlab.com/tymonx/go-logger](https://gitlab.com/tymonx/go-logger)\n* Generated Go documentation example: [https://tymonx.gitlab.io/go-logger/doc/pkg/gitlab.com/tymonx/go-logger/logger/](https://tymonx.gitlab.io/go-logger/doc/pkg/gitlab.com/tymonx/go-logger/logger/)\n* Generated Go coverage report example: [https://tymonx.gitlab.io/go-logger/coverage/](https://tymonx.gitlab.io/go-logger/coverage/)", "author_fullname": "t2_jj326r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Handy Gitlab CI YAML job templates for Go projects", "link_flair_richtext": [], "subreddit_name_prefixed": "r/gitlab", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gjimb1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589475364.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.gitlab", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Various useful and handy GitLab CI YAML templates for typical GitLab CI tasks.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Project site:&lt;/strong&gt; &lt;a href=\"https://gitlab.com/tymonx/gitlab-ci\"&gt;https://gitlab.com/tymonx/gitlab-ci&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;General Features&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Supporting validating, building, testing and auto-documenting projects out-of-box&lt;/li&gt;\n&lt;li&gt;Automating various and mostly typical GitLab CI tasks&lt;/li&gt;\n&lt;li&gt;Extending GitLab CI like with parallel download with caching support&lt;/li&gt;\n&lt;li&gt;Easy to use with the GitLab CI include keyword in your .gitlab-ci.yml files&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Go Features&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Automatically installing required Go tools for validating, testing and documenting project&lt;/li&gt;\n&lt;li&gt;Validating Go source files format with the go fmt tool&lt;/li&gt;\n&lt;li&gt;Linting Go source files with the golint tool&lt;/li&gt;\n&lt;li&gt;Building Go source files&lt;/li&gt;\n&lt;li&gt;Testing Go project&lt;/li&gt;\n&lt;li&gt;Generating Go coverage result, text and HTML reports&lt;/li&gt;\n&lt;li&gt;Generating JUnit test XML report for GitLab Merge Requests&lt;/li&gt;\n&lt;li&gt;Generating Cobertura coverage XML report for GitLab Merge Requests&lt;/li&gt;\n&lt;li&gt;Validating Go coverage value with customazible coverage threshold&lt;/li&gt;\n&lt;li&gt;Colorizing Go tests with the richgo tool&lt;/li&gt;\n&lt;li&gt;Colorizing Go coverage results&lt;/li&gt;\n&lt;li&gt;Generating static HTML source code documentation with the godoc tool&lt;/li&gt;\n&lt;li&gt;Generating static HTML coverage report with the go tool cover tool&lt;/li&gt;\n&lt;li&gt;Uploading static HTML source code documentation and coverage report to GitLab Pages for browsing&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Links&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Project site: &lt;a href=\"https://gitlab.com/tymonx/gitlab-ci\"&gt;https://gitlab.com/tymonx/gitlab-ci&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Documentation: &lt;a href=\"https://gitlab.com/tymonx/gitlab-ci/-/wikis/home\"&gt;https://gitlab.com/tymonx/gitlab-ci/-/wikis/home&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Project example: &lt;a href=\"https://gitlab.com/tymonx/go-logger\"&gt;https://gitlab.com/tymonx/go-logger&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Generated Go documentation example: &lt;a href=\"https://tymonx.gitlab.io/go-logger/doc/pkg/gitlab.com/tymonx/go-logger/logger/\"&gt;https://tymonx.gitlab.io/go-logger/doc/pkg/gitlab.com/tymonx/go-logger/logger/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Generated Go coverage report example: &lt;a href=\"https://tymonx.gitlab.io/go-logger/coverage/\"&gt;https://tymonx.gitlab.io/go-logger/coverage/&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zjmj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjimb1", "is_robot_indexable": true, "report_reasons": null, "author": "tymonx", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/gitlab/comments/gjimb1/handy_gitlab_ci_yaml_job_templates_for_go_projects/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/gitlab/comments/gjimb1/handy_gitlab_ci_yaml_job_templates_for_go_projects/", "subreddit_subscribers": 6100, "created_utc": 1589446564.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1589475818.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.gitlab", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjipr5", "is_robot_indexable": true, "report_reasons": null, "author": "tymonx", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_gjimb1", "author_flair_text_color": null, "permalink": "/r/golang/comments/gjipr5/handy_gitlab_ci_yaml_job_templates_for_go_projects/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/gitlab/comments/gjimb1/handy_gitlab_ci_yaml_job_templates_for_go_projects/", "subreddit_subscribers": 112553, "created_utc": 1589447018.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I am confused about choosing which WebSocket is fast for \"room based chat app\" to use in production apps:\n\n1. [Kataras neffos](https://github.com/kataras/neffos)\n2. [Gorilla Websocket](https://github.com/gorilla/websocket/)\n3. [Gobwas Websocket](https://github.com/gobwas/ws)\n4. [go-socket-io](https://github.com/googollee/go-socket.io)", "author_fullname": "t2_vqdgi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Are there any Benchmark results available for various Golang Websocket?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gjjb9e", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589478700.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am confused about choosing which WebSocket is fast for &amp;quot;room based chat app&amp;quot; to use in production apps:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/kataras/neffos\"&gt;Kataras neffos&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/gorilla/websocket/\"&gt;Gorilla Websocket&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/gobwas/ws\"&gt;Gobwas Websocket&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/googollee/go-socket.io\"&gt;go-socket-io&lt;/a&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjjb9e", "is_robot_indexable": true, "report_reasons": null, "author": "EduClan", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gjjb9e/are_there_any_benchmark_results_available_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gjjb9e/are_there_any_benchmark_results_available_for/", "subreddit_subscribers": 112553, "created_utc": 1589449900.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi!\n\nI'm currently trying to learn golang while using it for something useful. So i have a elasticsearch database where i want to create a query to the database and return the results but i'm having difficulty understand how to construct such a query with golang.\n\nHere is the cURL command i used:\n\n&gt;curl -XGET \"[https://elasticsearch:9200/index-\\*/\\_search](https://caroli-es01.caroli.svc.clu01.ilog.local:9200/ishield-dns-*/_search)\" -H 'Content-Type: application/json' -d'{  \"size\": 1,  \"sort\": {      \"@timestamp\": {        \"order\": \"desc\"      }    }}'\n\nAnd here is the code i've been trying to puzzle together:\n\n```\npackage main\n\nimport (\n\t\"bytes\"\n\t\"crypto/tls\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n)\n\n//\"time\"\n\nconst (\n\tElasticURL    string = \"https://elasticsearch:9200/index-*/_search\"\n\tElasticUser   string = \"admin\"\n\tElasticPasswd string = \"password\"\n)\n\nfunc main() {\n\t// Map variable data to struct\n\t//var data string\n\ttype Payload struct {\n\t\tSize int  `json:\"size\"`\n\t\tSort Sort `json:\"sort\"`\n\t}\n\ttype Timestamp struct {\n\t\tOrder string `json:\"order\"`\n\t}\n\ttype Sort struct {\n\t\tTimestamp Timestamp `json:\"@timestamp\"`\n\t}\n\n\tdata := Payload{\n\t\tSize: 1,\n\t\tSort: Sort{Timestamp: Timestamp{Order: \"desc\"}},\n\t}\n\tpayloadBytes, err := json.Marshal(data)\n\tif err != nil {\n\t\t// handle err\n\t}\n\tPayloadBody := bytes.NewReader(payloadBytes)\n\t//Http client to make API request with basic auth\n\thttp.DefaultTransport.(*http.Transport).TLSClientConfig = &amp;tls.Config{InsecureSkipVerify: true}\n\tElasticClient := &amp;http.Client{}\n\tElasticReq, err := http.NewRequest(\"GET\", ElasticUrl, nil)\n\tElasticReq.SetBasicAuth(ElasticUser, ElasticPasswd)\n\t//ElasticReq.Header.Set(\"Content-Type\", \"application/json\")\n\tresp, err := ElasticClient.Do(ElasticReq)\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\t//Open the API response and unmarshal to struct\n\tbody, err := ioutil.ReadAll(resp.Body)\n\t//json.Unmarshal(body, &amp;data)\n\toutput := ioutil.NopCloser(bytes.NewBuffer(body))\n\tfmt.Println(output)\n\n}\n```\n\nBut im just getting an error where it says \"Sort\" is undeclared. Is there a problem with how i populate the Sort struct?", "author_fullname": "t2_6l1kl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "HTTP GET with json payload", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gjl063", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1589457910.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589486479.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m currently trying to learn golang while using it for something useful. So i have a elasticsearch database where i want to create a query to the database and return the results but i&amp;#39;m having difficulty understand how to construct such a query with golang.&lt;/p&gt;\n\n&lt;p&gt;Here is the cURL command i used:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;curl -XGET &amp;quot;&lt;a href=\"https://caroli-es01.caroli.svc.clu01.ilog.local:9200/ishield-dns-*/_search\"&gt;https://elasticsearch:9200/index-*/_search&lt;/a&gt;&amp;quot; -H &amp;#39;Content-Type: application/json&amp;#39; -d&amp;#39;{  &amp;quot;size&amp;quot;: 1,  &amp;quot;sort&amp;quot;: {      &amp;quot;@timestamp&amp;quot;: {        &amp;quot;order&amp;quot;: &amp;quot;desc&amp;quot;      }    }}&amp;#39;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;And here is the code i&amp;#39;ve been trying to puzzle together:&lt;/p&gt;\n\n&lt;p&gt;```\npackage main&lt;/p&gt;\n\n&lt;p&gt;import (\n    &amp;quot;bytes&amp;quot;\n    &amp;quot;crypto/tls&amp;quot;\n    &amp;quot;encoding/json&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;io/ioutil&amp;quot;\n    &amp;quot;log&amp;quot;\n    &amp;quot;net/http&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;//&amp;quot;time&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;const (\n    ElasticURL    string = &amp;quot;https://elasticsearch:9200/index-*/_search&amp;quot;\n    ElasticUser   string = &amp;quot;admin&amp;quot;\n    ElasticPasswd string = &amp;quot;password&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;func main() {\n    // Map variable data to struct\n    //var data string\n    type Payload struct {\n        Size int  &lt;code&gt;json:&amp;quot;size&amp;quot;&lt;/code&gt;\n        Sort Sort &lt;code&gt;json:&amp;quot;sort&amp;quot;&lt;/code&gt;\n    }\n    type Timestamp struct {\n        Order string &lt;code&gt;json:&amp;quot;order&amp;quot;&lt;/code&gt;\n    }\n    type Sort struct {\n        Timestamp Timestamp &lt;code&gt;json:&amp;quot;@timestamp&amp;quot;&lt;/code&gt;\n    }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data := Payload{\n    Size: 1,\n    Sort: Sort{Timestamp: Timestamp{Order: &amp;quot;desc&amp;quot;}},\n}\npayloadBytes, err := json.Marshal(data)\nif err != nil {\n    // handle err\n}\nPayloadBody := bytes.NewReader(payloadBytes)\n//Http client to make API request with basic auth\nhttp.DefaultTransport.(*http.Transport).TLSClientConfig = &amp;amp;tls.Config{InsecureSkipVerify: true}\nElasticClient := &amp;amp;http.Client{}\nElasticReq, err := http.NewRequest(&amp;quot;GET&amp;quot;, ElasticUrl, nil)\nElasticReq.SetBasicAuth(ElasticUser, ElasticPasswd)\n//ElasticReq.Header.Set(&amp;quot;Content-Type&amp;quot;, &amp;quot;application/json&amp;quot;)\nresp, err := ElasticClient.Do(ElasticReq)\nif err != nil {\n    log.Fatalln(err)\n}\n\n//Open the API response and unmarshal to struct\nbody, err := ioutil.ReadAll(resp.Body)\n//json.Unmarshal(body, &amp;amp;data)\noutput := ioutil.NopCloser(bytes.NewBuffer(body))\nfmt.Println(output)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;p&gt;But im just getting an error where it says &amp;quot;Sort&amp;quot; is undeclared. Is there a problem with how i populate the Sort struct?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjl063", "is_robot_indexable": true, "report_reasons": null, "author": "crital", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gjl063/http_get_with_json_payload/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gjl063/http_get_with_json_payload/", "subreddit_subscribers": 112553, "created_utc": 1589457679.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_1re6u9gd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to handle errors in Go? [5 rules]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gj35yc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 30, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 30, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589418700.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "web3.coach", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gj35yc", "is_robot_indexable": true, "report_reasons": null, "author": "EnchanterIOSvk", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gj35yc/how_to_handle_errors_in_go_5_rules/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://web3.coach/golang-how-to-handle-errors-five-rules", "subreddit_subscribers": 112553, "created_utc": 1589389900.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Go was my daily driver from 2014 - 2017, and I'm gearing up to write some Go again. \n\nWhat has happened since 2017? Best practices, language features, design patterns, ecosystem tooling, etc. Thanks Reddit!", "author_fullname": "t2_30xzz9pp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I've been out of the Go loop since 2017, what did I miss?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gj0u58", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589411299.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Go was my daily driver from 2014 - 2017, and I&amp;#39;m gearing up to write some Go again. &lt;/p&gt;\n\n&lt;p&gt;What has happened since 2017? Best practices, language features, design patterns, ecosystem tooling, etc. Thanks Reddit!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gj0u58", "is_robot_indexable": true, "report_reasons": null, "author": "olibearo", "discussion_type": null, "num_comments": 26, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gj0u58/ive_been_out_of_the_go_loop_since_2017_what_did_i/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gj0u58/ive_been_out_of_the_go_loop_since_2017_what_did_i/", "subreddit_subscribers": 112553, "created_utc": 1589382499.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_a3n51", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Too modern Go application? Building a serverless application with Google Cloud Run and Firebase", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_giwx9q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.85, "author_flair_background_color": null, "subreddit_type": "public", "ups": 61, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 61, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589396740.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "threedots.tech", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "giwx9q", "is_robot_indexable": true, "report_reasons": null, "author": "mi_losz", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/giwx9q/too_modern_go_application_building_a_serverless/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://threedots.tech/post/serverless-cloud-run-firebase-modern-go-application/", "subreddit_subscribers": 112553, "created_utc": 1589367940.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "hi all! This is my first post in reddit. Let's see how this platform works.\n\nI fell in love with Plotly when I learned some data science with python, pandas and jupyter notebooks and when I started my adventure learning go, I missed a lot the Plotly features. That's why, after a few year of experience, I bring to you the library go-plotly inspired by python plotly to help you bulding plots in your favourite language :)\n\n[https://github.com/MetalBlueberry/go-plotly](https://github.com/MetalBlueberry/go-plotly)\n\nLet me know if you like It and go to my blog if you want to know more about the story behind.\n\n[https://metalblueberry.github.io/post/blog/2020-05-11\\_go\\_plotly/](https://metalblueberry.github.io/post/blog/2020-05-11_go_plotly/)", "author_fullname": "t2_5r4ptsv6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A new way to create plots with Go with go-plotly", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gj438z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1589405951.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589421728.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hi all! This is my first post in reddit. Let&amp;#39;s see how this platform works.&lt;/p&gt;\n\n&lt;p&gt;I fell in love with Plotly when I learned some data science with python, pandas and jupyter notebooks and when I started my adventure learning go, I missed a lot the Plotly features. That&amp;#39;s why, after a few year of experience, I bring to you the library go-plotly inspired by python plotly to help you bulding plots in your favourite language :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/MetalBlueberry/go-plotly\"&gt;https://github.com/MetalBlueberry/go-plotly&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Let me know if you like It and go to my blog if you want to know more about the story behind.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://metalblueberry.github.io/post/blog/2020-05-11_go_plotly/\"&gt;https://metalblueberry.github.io/post/blog/2020-05-11_go_plotly/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gj438z", "is_robot_indexable": true, "report_reasons": null, "author": "metalblueberry", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gj438z/a_new_way_to_create_plots_with_go_with_goplotly/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gj438z/a_new_way_to_create_plots_with_go_with_goplotly/", "subreddit_subscribers": 112553, "created_utc": 1589392928.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_10uiym", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "lsdy - a cmdline tool for querying DynamoDB tables. Heavily used both at home and work. Maybe useful to anybody out there as well.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gj2ywe", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589418059.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gj2ywe", "is_robot_indexable": true, "report_reasons": null, "author": "flowerinthenight", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gj2ywe/lsdy_a_cmdline_tool_for_querying_dynamodb_tables/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/flowerinthenight/lsdy", "subreddit_subscribers": 112553, "created_utc": 1589389259.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gj2ywe", "before": null}}