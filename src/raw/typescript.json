{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - July", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hizg5z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1593590733.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hizg5z", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 7, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "subreddit_subscribers": 44992, "created_utc": 1593561933.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_798fyfc9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Where is the best place to learn typescript?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hym86c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595856135.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hym86c", "is_robot_indexable": true, "report_reasons": null, "author": "SpiderGaming0", "discussion_type": null, "num_comments": 29, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hym86c/where_is_the_best_place_to_learn_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hym86c/where_is_the_best_place_to_learn_typescript/", "subreddit_subscribers": 44992, "created_utc": 1595827335.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Consider the following example:\n\n    const paintColor = {\n      /** This color is good fo X */\n      Waltz: \"#d9e5d7\",\n      /** This color is good fo Y */\n      \"Indiana Clay\": \"#ed7c4b\",\n      /** This color is good fo Z */\n      Odyssey: \"#575b6a\"\n    };\n    \n    const locations = {\n      /** There are no good school at this location*/\n      City: \"123 city center road\",\n      /** There are lots of parking at this location but it is very far*/\n      West: \"245 some other road\"\n    };\n    \n    interface HouseProp {\n      color: keyof typeof paintColor;\n      location: keyof typeof locations;\n    }\n    \n    const House = ({ color, location }: HouseProp) =&gt; {\n      ...\n    };\n\nWhere House is a react component that renders a house based on the color and location props. \n\nAnd this House component is used everywhere throughout the project.\n\nWith the current setup, I could use House like this:  \n\n\n    &lt;House color=\"Indiana Clay\" location=\"City\" /&gt;\n\nThe problem is, the intellisense can't pick up on the docs I've written as part of the code:  \n\n\nhttps://preview.redd.it/w6zdhj275dd51.png?width=623&amp;format=png&amp;auto=webp&amp;s=ce856f9d33147b03017c06af8261b855d6ea1879\n\nWhat do I need to do to get this:  \n\n\nhttps://preview.redd.it/aqzfb5vh5dd51.png?width=623&amp;format=png&amp;auto=webp&amp;s=3bcd362c1126f8ee5c1ef9786a48cb2d5315649c\n\nP.S. I know that I could turn paintColor and locations into enums, and use things like this:  \n\n\n    import House, {HouseColor, HouseLocation} from './House';\n    &lt;House color={HouseColor[\"Indiana Clay\"]} location={HouseLocation.City} /&gt;\n\nBut that component interface just isn't as nice as my original proposal.", "author_fullname": "t2_a8y2v", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to get intellisense to work with union types?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 40, "top_awarded_type": null, "hide_score": false, "media_metadata": {"w6zdhj275dd51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 30, "x": 108, "u": "https://preview.redd.it/w6zdhj275dd51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=2590d0cb8c98b9175cbb59300ef176cbc250112b"}, {"y": 61, "x": 216, "u": "https://preview.redd.it/w6zdhj275dd51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=b36fd42bbfa3c372432adf9b69224e17110980d4"}, {"y": 91, "x": 320, "u": "https://preview.redd.it/w6zdhj275dd51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=d81d09335e820ba3f26e2298351db40bf6a1ac72"}], "s": {"y": 178, "x": 623, "u": "https://preview.redd.it/w6zdhj275dd51.png?width=623&amp;format=png&amp;auto=webp&amp;s=ce856f9d33147b03017c06af8261b855d6ea1879"}, "id": "w6zdhj275dd51"}, "aqzfb5vh5dd51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 30, "x": 108, "u": "https://preview.redd.it/aqzfb5vh5dd51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=b5bc823e8421e519b16dee0449a5d3235fa88d85"}, {"y": 61, "x": 216, "u": "https://preview.redd.it/aqzfb5vh5dd51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=24df6fc4fab33a9db9e8bde866df2f7c091cd1c4"}, {"y": 91, "x": 320, "u": "https://preview.redd.it/aqzfb5vh5dd51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=5d46ed1a1a8b7fc179d604aa6a6e85d48f9002fd"}], "s": {"y": 178, "x": 623, "u": "https://preview.redd.it/aqzfb5vh5dd51.png?width=623&amp;format=png&amp;auto=webp&amp;s=3bcd362c1126f8ee5c1ef9786a48cb2d5315649c"}, "id": "aqzfb5vh5dd51"}}, "name": "t3_hyook5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/0l4u_XMyuGE1nOWI1zfS3mAafHnOz6w0kLbp4ZYM8bI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595868830.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Consider the following example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const paintColor = {\n  /** This color is good fo X */\n  Waltz: &amp;quot;#d9e5d7&amp;quot;,\n  /** This color is good fo Y */\n  &amp;quot;Indiana Clay&amp;quot;: &amp;quot;#ed7c4b&amp;quot;,\n  /** This color is good fo Z */\n  Odyssey: &amp;quot;#575b6a&amp;quot;\n};\n\nconst locations = {\n  /** There are no good school at this location*/\n  City: &amp;quot;123 city center road&amp;quot;,\n  /** There are lots of parking at this location but it is very far*/\n  West: &amp;quot;245 some other road&amp;quot;\n};\n\ninterface HouseProp {\n  color: keyof typeof paintColor;\n  location: keyof typeof locations;\n}\n\nconst House = ({ color, location }: HouseProp) =&amp;gt; {\n  ...\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Where House is a react component that renders a house based on the color and location props. &lt;/p&gt;\n\n&lt;p&gt;And this House component is used everywhere throughout the project.&lt;/p&gt;\n\n&lt;p&gt;With the current setup, I could use House like this:  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;House color=&amp;quot;Indiana Clay&amp;quot; location=&amp;quot;City&amp;quot; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem is, the intellisense can&amp;#39;t pick up on the docs I&amp;#39;ve written as part of the code:  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/w6zdhj275dd51.png?width=623&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=ce856f9d33147b03017c06af8261b855d6ea1879\"&gt;https://preview.redd.it/w6zdhj275dd51.png?width=623&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=ce856f9d33147b03017c06af8261b855d6ea1879&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;What do I need to do to get this:  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/aqzfb5vh5dd51.png?width=623&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3bcd362c1126f8ee5c1ef9786a48cb2d5315649c\"&gt;https://preview.redd.it/aqzfb5vh5dd51.png?width=623&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3bcd362c1126f8ee5c1ef9786a48cb2d5315649c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;P.S. I know that I could turn paintColor and locations into enums, and use things like this:  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import House, {HouseColor, HouseLocation} from &amp;#39;./House&amp;#39;;\n&amp;lt;House color={HouseColor[&amp;quot;Indiana Clay&amp;quot;]} location={HouseLocation.City} /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But that component interface just isn&amp;#39;t as nice as my original proposal.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hyook5", "is_robot_indexable": true, "report_reasons": null, "author": "SyniaN", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hyook5/how_to_get_intellisense_to_work_with_union_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hyook5/how_to_get_intellisense_to_work_with_union_types/", "subreddit_subscribers": 44992, "created_utc": 1595840030.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Below I wanted to annotate `linkComponents` to be an array of [`JSX.Link`](https://JSX.Link) elements but tsc suggested there was nothing like that.\n\nCurious if you guys just annotate `JSX.Element` for every type of JSX element or if you have a way of using tighter annotations.\n\n    export function makeAllLinksIntoListItems &lt;genericKeyName extends string&gt; (jsxData: Record&lt;genericKeyName, ComponentData&gt;) {\n      const allKeys: Array&lt;string&gt; = Object.keys(jsxData);\n    \n      const linkComponents: JSX.Element[] = allKeys.map((keyName: string) =&gt; {\n        const linkComponent: JSX.Element = makeLink(jsxData[keyName as genericKeyName]);\n        return linkComponent;\n      })\n    \n      return linkComponents;\n    }", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is every JSX Element to be annotated as a JSX.Element?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hynhj3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595862552.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Below I wanted to annotate &lt;code&gt;linkComponents&lt;/code&gt; to be an array of &lt;a href=\"https://JSX.Link\"&gt;&lt;code&gt;JSX.Link&lt;/code&gt;&lt;/a&gt; elements but tsc suggested there was nothing like that.&lt;/p&gt;\n\n&lt;p&gt;Curious if you guys just annotate &lt;code&gt;JSX.Element&lt;/code&gt; for every type of JSX element or if you have a way of using tighter annotations.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export function makeAllLinksIntoListItems &amp;lt;genericKeyName extends string&amp;gt; (jsxData: Record&amp;lt;genericKeyName, ComponentData&amp;gt;) {\n  const allKeys: Array&amp;lt;string&amp;gt; = Object.keys(jsxData);\n\n  const linkComponents: JSX.Element[] = allKeys.map((keyName: string) =&amp;gt; {\n    const linkComponent: JSX.Element = makeLink(jsxData[keyName as genericKeyName]);\n    return linkComponent;\n  })\n\n  return linkComponents;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hynhj3", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hynhj3/is_every_jsx_element_to_be_annotated_as_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hynhj3/is_every_jsx_element_to_be_annotated_as_a/", "subreddit_subscribers": 44992, "created_utc": 1595833752.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello, I'm interested in building a monorepo using typescript for learning purposes.\n\nI'd like to have two distinct services communicating through a Queue, and I'd like to share the messages types between these two services.\n\nIs there any good resource or tutorial on this? Most of the ones I see involve React and/or browser related stuff. So I'm not sure what's the best way of developing for the backend in a microservice architecture.\n\nAlso, what is the best workflow in your opinion? As in build, run watching, and generating deployable artifact?", "author_fullname": "t2_iayghc7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Looking for tutorials on backend monorepo", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hydam2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.74, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595821274.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, I&amp;#39;m interested in building a monorepo using typescript for learning purposes.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d like to have two distinct services communicating through a Queue, and I&amp;#39;d like to share the messages types between these two services.&lt;/p&gt;\n\n&lt;p&gt;Is there any good resource or tutorial on this? Most of the ones I see involve React and/or browser related stuff. So I&amp;#39;m not sure what&amp;#39;s the best way of developing for the backend in a microservice architecture.&lt;/p&gt;\n\n&lt;p&gt;Also, what is the best workflow in your opinion? As in build, run watching, and generating deployable artifact?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hydam2", "is_robot_indexable": true, "report_reasons": null, "author": "r-guerreiro", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hydam2/looking_for_tutorials_on_backend_monorepo/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hydam2/looking_for_tutorials_on_backend_monorepo/", "subreddit_subscribers": 44992, "created_utc": 1595792474.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi, I'm using a somewhat complicated project structure, where I have a client and server written in typescript, and a shared library that they both use. In order to include the shared code, I am using npm link and this seems to be working well.\n\nThe problem I have is that I would like to define interfaces in the shared repo, and implement them in the server. Something like this:\n\nShared code:\n\n    export interface IDataSource { get(): Promise&lt;object&gt;; set(): Promise&lt;object&gt;; }\n\nServer code:\n\n    import { IDataSource } from 'shared'; // no relative path, interface import\n    export default class DataSource implements IDataSource {} // concrete implementation in server\n\nThis is causing me tons of problems with exporting and importing interfaces however, with \"refers to a value, but is being used as a type here\" and having to import and re-export so many mundane things in my shared repo.\n\nIf I don't use npm link and use relative paths it works just fine, but it breaks my desire to have a reference to shared code within the server and client.\n\nI feel like I have a fundamental misunderstanding of how typescript is meant to be used. Is is intended that a library can contain interfaces implemented in other code that includes the library?", "author_fullname": "t2_12thjw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Types from imported modules", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hygl3p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595832647.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m using a somewhat complicated project structure, where I have a client and server written in typescript, and a shared library that they both use. In order to include the shared code, I am using npm link and this seems to be working well.&lt;/p&gt;\n\n&lt;p&gt;The problem I have is that I would like to define interfaces in the shared repo, and implement them in the server. Something like this:&lt;/p&gt;\n\n&lt;p&gt;Shared code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export interface IDataSource { get(): Promise&amp;lt;object&amp;gt;; set(): Promise&amp;lt;object&amp;gt;; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Server code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { IDataSource } from &amp;#39;shared&amp;#39;; // no relative path, interface import\nexport default class DataSource implements IDataSource {} // concrete implementation in server\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is causing me tons of problems with exporting and importing interfaces however, with &amp;quot;refers to a value, but is being used as a type here&amp;quot; and having to import and re-export so many mundane things in my shared repo.&lt;/p&gt;\n\n&lt;p&gt;If I don&amp;#39;t use npm link and use relative paths it works just fine, but it breaks my desire to have a reference to shared code within the server and client.&lt;/p&gt;\n\n&lt;p&gt;I feel like I have a fundamental misunderstanding of how typescript is meant to be used. Is is intended that a library can contain interfaces implemented in other code that includes the library?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hygl3p", "is_robot_indexable": true, "report_reasons": null, "author": "ChuckItOver", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hygl3p/types_from_imported_modules/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hygl3p/types_from_imported_modules/", "subreddit_subscribers": 44992, "created_utc": 1595803847.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "This tutorial teaches how to create an application, a game called\u00a0Animal Tribes, from scratch using  Typescript,\u00a0Graphql,\u00a0NodeJs,\u00a0ReactJS, and\u00a0MongoDB.\n\n* [Part 1\u2014Project Overview]( https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-76786e5520ed?source=friends_link&amp;sk=1430f7c8bc45d0192f8052bb0569fd3e)\n\n* [Part 2\u2014 Backend](https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-pt-2-backend-cae1735f13dd?source=friends_link&amp;sk=8fbd56e780dedf980ecbcb23358e9148)\n\n* [Part 3\u2014 Frontend](https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-pt-3-frontend-dc69f71e1d62?source=friends_link&amp;sk=dbd77c7eef65c081f0c1053bbb1335af)\n\n* [Part 4\u2014 Deploy to Heroku](https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-e7891ec4963a?source=friends_link&amp;sk=d3a77a7a3d0e4ab45c0b8750250d8595)", "author_fullname": "t2_xjo9xkg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Animal Tribes: How to create a full-stack Typescript GraphQL Application", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hxufeg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 45, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 45, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595740679.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This tutorial teaches how to create an application, a game called\u00a0Animal Tribes, from scratch using  Typescript,\u00a0Graphql,\u00a0NodeJs,\u00a0ReactJS, and\u00a0MongoDB.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-76786e5520ed?source=friends_link&amp;amp;sk=1430f7c8bc45d0192f8052bb0569fd3e\"&gt;Part 1\u2014Project Overview&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-pt-2-backend-cae1735f13dd?source=friends_link&amp;amp;sk=8fbd56e780dedf980ecbcb23358e9148\"&gt;Part 2\u2014 Backend&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-pt-3-frontend-dc69f71e1d62?source=friends_link&amp;amp;sk=dbd77c7eef65c081f0c1053bbb1335af\"&gt;Part 3\u2014 Frontend&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-e7891ec4963a?source=friends_link&amp;amp;sk=d3a77a7a3d0e4ab45c0b8750250d8595\"&gt;Part 4\u2014 Deploy to Heroku&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hxufeg", "is_robot_indexable": true, "report_reasons": null, "author": "alliscode", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hxufeg/animal_tribes_how_to_create_a_fullstack/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hxufeg/animal_tribes_how_to_create_a_fullstack/", "subreddit_subscribers": 44992, "created_utc": 1595711879.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Just like in react-bootstrap, I'm wondering how I would need to structure a component library so that I can include a single component without loading the entire thing.\nWhat does the project structure have to look like? What does the build HAVE to look like? What about the package.json and webpack config?\n\n\nEG. @my/library has ComponentA through componentZ.\n\nimport {ComponentA, ComponentB} from @my/library\nI want this to just include these components, not the whole library.\n\nFollow up - what if there is shared code among componentA andB that they both pull in? Will that be included twice in the bundle?\n\nThanks!", "author_fullname": "t2_67lfp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Experienced front-end dev yet really basically no experience packing and publishing npm packages. I've got a question about what's necessary to make a library tree shakeable.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hxwwog", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595750175.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Just like in react-bootstrap, I&amp;#39;m wondering how I would need to structure a component library so that I can include a single component without loading the entire thing.\nWhat does the project structure have to look like? What does the build HAVE to look like? What about the package.json and webpack config?&lt;/p&gt;\n\n&lt;p&gt;EG. @my/library has ComponentA through componentZ.&lt;/p&gt;\n\n&lt;p&gt;import {ComponentA, ComponentB} from @my/library\nI want this to just include these components, not the whole library.&lt;/p&gt;\n\n&lt;p&gt;Follow up - what if there is shared code among componentA andB that they both pull in? Will that be included twice in the bundle?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hxwwog", "is_robot_indexable": true, "report_reasons": null, "author": "RunHomeJack", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hxwwog/experienced_frontend_dev_yet_really_basically_no/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hxwwog/experienced_frontend_dev_yet_really_basically_no/", "subreddit_subscribers": 44992, "created_utc": 1595721375.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey guys! I've being testing and trying to find out a way to do this. So basically, I've used PassportJS (with JWT) in some different projects, but always as a middleware in express. I wanted to step up that, and instead build my own custom method decorator, that would be put in some GraphQL resolver queries and mutations (using TypeGraphQL).\n\nThe idea is that if a Query / Mutation / Subcription is decorated with that, it would do some \"passport.logIn\" type of operation, retrieving the request of that flow, parsing headers, etc.\n\nI'm pretty stuck on that, because as much as I can see, PassportJS is only meant to be used as a middleware, not as an \"standalone function\" you can call wherever. But the question that raises is: if I only have a \"/graphql\" endpoint for my whole app, and I use the PassportJS middleware, there is no point in putting in decorators, as PassportJS is already filtering and \"middleware\"-ing the request. But then how could I expose a logIn mutation? I would need that to be exposed without requiring authentication.\n\nA bit lost here, happy to see if anybody has any idea about it. Cheers!", "author_fullname": "t2_d97iay5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using PassportJS within a decorator", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hxzyqd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595763509.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys! I&amp;#39;ve being testing and trying to find out a way to do this. So basically, I&amp;#39;ve used PassportJS (with JWT) in some different projects, but always as a middleware in express. I wanted to step up that, and instead build my own custom method decorator, that would be put in some GraphQL resolver queries and mutations (using TypeGraphQL).&lt;/p&gt;\n\n&lt;p&gt;The idea is that if a Query / Mutation / Subcription is decorated with that, it would do some &amp;quot;passport.logIn&amp;quot; type of operation, retrieving the request of that flow, parsing headers, etc.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m pretty stuck on that, because as much as I can see, PassportJS is only meant to be used as a middleware, not as an &amp;quot;standalone function&amp;quot; you can call wherever. But the question that raises is: if I only have a &amp;quot;/graphql&amp;quot; endpoint for my whole app, and I use the PassportJS middleware, there is no point in putting in decorators, as PassportJS is already filtering and &amp;quot;middleware&amp;quot;-ing the request. But then how could I expose a logIn mutation? I would need that to be exposed without requiring authentication.&lt;/p&gt;\n\n&lt;p&gt;A bit lost here, happy to see if anybody has any idea about it. Cheers!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hxzyqd", "is_robot_indexable": true, "report_reasons": null, "author": "dathedr12", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hxzyqd/using_passportjs_within_a_decorator/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hxzyqd/using_passportjs_within_a_decorator/", "subreddit_subscribers": 44992, "created_utc": 1595734709.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    let userName: string;\n    let userInputAny: any;\n    userInputAny = 5;\n    \n    userName = userInputAny\n    userName += 5\n    console.log(userName) // 10\n\nNew to TS. Why are operations such as these allowed?", "author_fullname": "t2_2hq1rr93", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Assigning a number to a var of type string using another variable?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hy39ws", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595780251.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;let userName: string;\nlet userInputAny: any;\nuserInputAny = 5;\n\nuserName = userInputAny\nuserName += 5\nconsole.log(userName) // 10\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;New to TS. Why are operations such as these allowed?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hy39ws", "is_robot_indexable": true, "report_reasons": null, "author": "granite_towel", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hy39ws/assigning_a_number_to_a_var_of_type_string_using/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hy39ws/assigning_a_number_to_a_var_of_type_string_using/", "subreddit_subscribers": 44992, "created_utc": 1595751451.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_3ur0mehn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gamedev Patterns and Algorithms with TypeScript. Game Loop (Part 1/2)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_hxovmt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 37, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 37, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/KDkTNzeoutLWg-oBGOkU6BXSRGTgSsYNwekqhI4a5AI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1595720969.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@gregsolo/gamedev-patterns-and-algorithms-with-typescript-game-loop-part-1-2-699919bb9b71", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/_GN6_X7Vd_o6hvouJW7P6gJqVvtI1BuEvvSwtFYmB0o.jpg?auto=webp&amp;s=c519a513a913b3e2a9a6a57418583801328bf94d", "width": 1200, "height": 1200}, "resolutions": [{"url": "https://external-preview.redd.it/_GN6_X7Vd_o6hvouJW7P6gJqVvtI1BuEvvSwtFYmB0o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c2b4605bcd95525df09f0c61203af04c62efe618", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/_GN6_X7Vd_o6hvouJW7P6gJqVvtI1BuEvvSwtFYmB0o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ba7d8973d2936843bab824ab03fd4dc286e71982", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/_GN6_X7Vd_o6hvouJW7P6gJqVvtI1BuEvvSwtFYmB0o.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=55bf61ea00bf98d8c3f5338f6e270c5aac4a73ca", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/_GN6_X7Vd_o6hvouJW7P6gJqVvtI1BuEvvSwtFYmB0o.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2fa2459318732800b221b7d8d135a8a9b9549cf2", "width": 640, "height": 640}, {"url": "https://external-preview.redd.it/_GN6_X7Vd_o6hvouJW7P6gJqVvtI1BuEvvSwtFYmB0o.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=16ccd847aeeff7c5036f4ca09be653c439b1a75e", "width": 960, "height": 960}, {"url": "https://external-preview.redd.it/_GN6_X7Vd_o6hvouJW7P6gJqVvtI1BuEvvSwtFYmB0o.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2d38ed8948ecb5d8185511c1387445285cead478", "width": 1080, "height": 1080}], "variants": {}, "id": "_H4eedU-hGbJdUyo8sSlgAYIMvWb5zou05J1dWTbwn4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hxovmt", "is_robot_indexable": true, "report_reasons": null, "author": "gregsolo", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hxovmt/gamedev_patterns_and_algorithms_with_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@gregsolo/gamedev-patterns-and-algorithms-with-typescript-game-loop-part-1-2-699919bb9b71", "subreddit_subscribers": 44992, "created_utc": 1595692169.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hxovmt", "before": null}}