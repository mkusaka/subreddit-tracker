{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I was asked this in an interview, with not much context around it. I am unable to find relevant documentation around this. Please redirect me to the correct resources.", "author_fullname": "t2_4dapl79m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Difference between \"type a string\" and \"type a = string\"", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gpxab2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 84, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 84, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590382735.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was asked this in an interview, with not much context around it. I am unable to find relevant documentation around this. Please redirect me to the correct resources.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gpxab2", "is_robot_indexable": true, "report_reasons": null, "author": "nerdgasm1939", "discussion_type": null, "num_comments": 27, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gpxab2/difference_between_type_a_string_and_type_a_string/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gpxab2/difference_between_type_a_string_and_type_a_string/", "subreddit_subscribers": 113781, "created_utc": 1590353935.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_ogq04", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Instrumentation in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq6aiv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590419006.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "gbws.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq6aiv", "is_robot_indexable": true, "report_reasons": null, "author": "gobwas", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gq6aiv/instrumentation_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://gbws.io/articles/instrumentation-in-go/", "subreddit_subscribers": 113781, "created_utc": 1590390206.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_2ztajdv7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is a goroutine? And what is their size?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gqat1d", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590441468.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tpaschalis.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gqat1d", "is_robot_indexable": true, "report_reasons": null, "author": "hyperTrashPanda", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gqat1d/what_is_a_goroutine_and_what_is_their_size/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://tpaschalis.github.io/goroutines-size/", "subreddit_subscribers": 113781, "created_utc": 1590412668.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello, I am new to the go lang. I have just played around a little bit. Currently, we have a big desktop application that uses the OpenCV library for image processing. Now we need to create a new cleaner version of this program and start from a new base. Currently, we are using C++. \nI was thinking if it would be a good idea to replace C++ by Go. An important factor for my is if there is an equivalent library for OpenCV (or maybe can I use OpenCV?) and is there a good free/cheap GUI framework for it to create a desktop application.", "author_fullname": "t2_mbzyt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Switch from C++ to Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq7rkv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590426560.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, I am new to the go lang. I have just played around a little bit. Currently, we have a big desktop application that uses the OpenCV library for image processing. Now we need to create a new cleaner version of this program and start from a new base. Currently, we are using C++. \nI was thinking if it would be a good idea to replace C++ by Go. An important factor for my is if there is an equivalent library for OpenCV (or maybe can I use OpenCV?) and is there a good free/cheap GUI framework for it to create a desktop application.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq7rkv", "is_robot_indexable": true, "report_reasons": null, "author": "Moschte09", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gq7rkv/switch_from_c_to_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gq7rkv/switch_from_c_to_go/", "subreddit_subscribers": 113781, "created_utc": 1590397760.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I was looking through the (intel) assembly of a compiled binary written in golang and I found multiple instructions using fs and gs segment registers with address range covering whole 4GB space (was looking on a 32bit system)\n\nI searched around and I found [this stack overflow answer](https://stackoverflow.com/questions/10810203/what-is-the-fs-gs-register-intended-for#10810340) which says that their usage is OS specific. Some common usage I found is to access thread specific storage.\n\nOne usage of gs in golang that I could grasp (and not fully understand, please provide insights here) is to get more stack in runtime, by reading this snippet from [golang blog](https://golang.org/doc/asm):\n\n    TEXT main.main(SB) /tmp/x.go\n    0x10501c0\tMOVQ GS:0x30, CX  # GS used here\n    0x10501c9\tCMPQ 0x10(CX), SP \n    0x10501cd\tJBE 0x1050203 \n    ...\n    0x1050202\tRET \n    0x1050203\tCALL runtime.morestack_noctxt(SB)\n    0x1050208\tJMP main.main(SB)\n\nI wanted to know other usages of gs and fs registers in golang (especially in go runtime). Can someone point me to resources which could include this information?", "author_fullname": "t2_2um8s684", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is the purpose of fs and gs registers in golang?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq4pfh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.7, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590411204.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was looking through the (intel) assembly of a compiled binary written in golang and I found multiple instructions using fs and gs segment registers with address range covering whole 4GB space (was looking on a 32bit system)&lt;/p&gt;\n\n&lt;p&gt;I searched around and I found &lt;a href=\"https://stackoverflow.com/questions/10810203/what-is-the-fs-gs-register-intended-for#10810340\"&gt;this stack overflow answer&lt;/a&gt; which says that their usage is OS specific. Some common usage I found is to access thread specific storage.&lt;/p&gt;\n\n&lt;p&gt;One usage of gs in golang that I could grasp (and not fully understand, please provide insights here) is to get more stack in runtime, by reading this snippet from &lt;a href=\"https://golang.org/doc/asm\"&gt;golang blog&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;TEXT main.main(SB) /tmp/x.go\n0x10501c0   MOVQ GS:0x30, CX  # GS used here\n0x10501c9   CMPQ 0x10(CX), SP \n0x10501cd   JBE 0x1050203 \n...\n0x1050202   RET \n0x1050203   CALL runtime.morestack_noctxt(SB)\n0x1050208   JMP main.main(SB)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I wanted to know other usages of gs and fs registers in golang (especially in go runtime). Can someone point me to resources which could include this information?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq4pfh", "is_robot_indexable": true, "report_reasons": null, "author": "hrily", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gq4pfh/what_is_the_purpose_of_fs_and_gs_registers_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gq4pfh/what_is_the_purpose_of_fs_and_gs_registers_in/", "subreddit_subscribers": 113781, "created_utc": 1590382404.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I would like to update my go 1.11 to go 1.13 via homebrew in macOS. Did anyone encounter any problems with it? Or is the best way is to uninstall it and reinstall it via homebrew better?", "author_fullname": "t2_c7r78", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is updating go version via homebrew safe?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq9bgb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590434565.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I would like to update my go 1.11 to go 1.13 via homebrew in macOS. Did anyone encounter any problems with it? Or is the best way is to uninstall it and reinstall it via homebrew better?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq9bgb", "is_robot_indexable": true, "report_reasons": null, "author": "thereisnosuch", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gq9bgb/is_updating_go_version_via_homebrew_safe/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gq9bgb/is_updating_go_version_via_homebrew_safe/", "subreddit_subscribers": 113781, "created_utc": 1590405765.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi there! I've been using Go for some time now, but I have a question of something I do, and I don't know if it actually improves the code readability or hurts it.\n\nI have a project of making a \"Cards against Humanity\" online game, and I have this function:\n\n    func putBlackCardInPlay(g *cah.GameState) error {\n    \tif g.BlackCardInPlay != nilBlackCard {\n    \t\treturn errors.New(\"Tried to put a black card in play but there is already a black card in play\")\n    \t}\n    \tif g.Phase == cah.Finished {\n    \t\treturn errors.New(\"Tried to put a black card in play but the game has already finished\")\n    \t}\n    \tif len(g.BlackDeck) == 0 {\n    \t\treturn errorEmptyBlackDeck{}\n    \t}\n    \tg.BlackCardInPlay = g.BlackDeck[0]\n    \tg.BlackDeck = g.BlackDeck[1:]\n    \tg.Phase = cah.SinnersPlaying\n    \tg.CurrRound++\n    \treturn nil\n    }\n\nI chose this function because it's kind of simple so it's a good example, but sometimes I have like 5 checks before I actually do something, so then I extract the checks to another function, and end up with something like this:\n\n    func putBlackCardInPlay(g *cah.GameState) error {\n    \tif err := putBlackCardInPlayChecks(g); err != nil {\n    \t\treturn err\n    \t}\n    \tg.BlackCardInPlay = g.BlackDeck[0]\n    \tg.BlackDeck = g.BlackDeck[1:]\n    \tg.Phase = cah.SinnersPlaying\n    \tg.CurrRound++\n    \treturn nil\n    }\n    \n    func putBlackCardInPlayChecks(g *cah.GameState) error {\n    \tif g.BlackCardInPlay != nilBlackCard {\n    \t\treturn errors.New(\"Tried to put a black card in play but there is already a black card in play\")\n    \t}\n    \tif g.Phase == cah.Finished {\n    \t\treturn errors.New(\"Tried to put a black card in play but the game has already finished\")\n    \t}\n    \tif len(g.BlackDeck) == 0 {\n    \t\treturn errorEmptyBlackDeck{}\n    \t}\n    \treturn nil\n    }\n\nI have not seeing something like this in other projects, so I wonder if it would be considered a bad practice.\n\nThank you in advance!", "author_fullname": "t2_h5cjv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Error checks extraction, good practice?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq7nje", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590426017.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi there! I&amp;#39;ve been using Go for some time now, but I have a question of something I do, and I don&amp;#39;t know if it actually improves the code readability or hurts it.&lt;/p&gt;\n\n&lt;p&gt;I have a project of making a &amp;quot;Cards against Humanity&amp;quot; online game, and I have this function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func putBlackCardInPlay(g *cah.GameState) error {\n    if g.BlackCardInPlay != nilBlackCard {\n        return errors.New(&amp;quot;Tried to put a black card in play but there is already a black card in play&amp;quot;)\n    }\n    if g.Phase == cah.Finished {\n        return errors.New(&amp;quot;Tried to put a black card in play but the game has already finished&amp;quot;)\n    }\n    if len(g.BlackDeck) == 0 {\n        return errorEmptyBlackDeck{}\n    }\n    g.BlackCardInPlay = g.BlackDeck[0]\n    g.BlackDeck = g.BlackDeck[1:]\n    g.Phase = cah.SinnersPlaying\n    g.CurrRound++\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I chose this function because it&amp;#39;s kind of simple so it&amp;#39;s a good example, but sometimes I have like 5 checks before I actually do something, so then I extract the checks to another function, and end up with something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func putBlackCardInPlay(g *cah.GameState) error {\n    if err := putBlackCardInPlayChecks(g); err != nil {\n        return err\n    }\n    g.BlackCardInPlay = g.BlackDeck[0]\n    g.BlackDeck = g.BlackDeck[1:]\n    g.Phase = cah.SinnersPlaying\n    g.CurrRound++\n    return nil\n}\n\nfunc putBlackCardInPlayChecks(g *cah.GameState) error {\n    if g.BlackCardInPlay != nilBlackCard {\n        return errors.New(&amp;quot;Tried to put a black card in play but there is already a black card in play&amp;quot;)\n    }\n    if g.Phase == cah.Finished {\n        return errors.New(&amp;quot;Tried to put a black card in play but the game has already finished&amp;quot;)\n    }\n    if len(g.BlackDeck) == 0 {\n        return errorEmptyBlackDeck{}\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I have not seeing something like this in other projects, so I wonder if it would be considered a bad practice.&lt;/p&gt;\n\n&lt;p&gt;Thank you in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq7nje", "is_robot_indexable": true, "report_reasons": null, "author": "6Jarv9", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gq7nje/error_checks_extraction_good_practice/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gq7nje/error_checks_extraction_good_practice/", "subreddit_subscribers": 113781, "created_utc": 1590397217.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi everyone. The most popular way of writing tests in Go is Table testing. Usually code styles for tests is not a big deal but some aspects of this approach are not very convenient if you use an IDE for development. I wrote an article about how I write tests in Go now which avoids some of the problems of table testing. Would be great if someone can share their opinion on this. Maybe I'm missing something [https://medium.com/@alexander\\_yappo/code-styles-for-tests-in-go-b803b4455ffe](https://medium.com/@alexander_yappo/code-styles-for-tests-in-go-b803b4455ffe)", "author_fullname": "t2_ncswn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Code styles for tests in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq70c1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590422699.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone. The most popular way of writing tests in Go is Table testing. Usually code styles for tests is not a big deal but some aspects of this approach are not very convenient if you use an IDE for development. I wrote an article about how I write tests in Go now which avoids some of the problems of table testing. Would be great if someone can share their opinion on this. Maybe I&amp;#39;m missing something &lt;a href=\"https://medium.com/@alexander_yappo/code-styles-for-tests-in-go-b803b4455ffe\"&gt;https://medium.com/@alexander_yappo/code-styles-for-tests-in-go-b803b4455ffe&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq70c1", "is_robot_indexable": true, "report_reasons": null, "author": "yapp0", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gq70c1/code_styles_for_tests_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gq70c1/code_styles_for_tests_in_go/", "subreddit_subscribers": 113781, "created_utc": 1590393899.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Example https://gobyexample.com/writing-files", "author_fullname": "t2_6c0wcibt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why we need to convert a string to byte slice before saving to a file?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gpqysh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 22, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 22, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590360888.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Example &lt;a href=\"https://gobyexample.com/writing-files\"&gt;https://gobyexample.com/writing-files&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gpqysh", "is_robot_indexable": true, "report_reasons": null, "author": "hewho93", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gpqysh/why_we_need_to_convert_a_string_to_byte_slice/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gpqysh/why_we_need_to_convert_a_string_to_byte_slice/", "subreddit_subscribers": 113781, "created_utc": 1590332088.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I generated a certificate and private key with password using OpenSSL. Now I want to use it in Go. I found this [old issue with some instructions](https://golang.org/issue/10181), but it didn't work for me. `x509.DecryptPEMBlock` returns \"x509: no DEK-Info header in block\". Here is an example key file, password is 1234.\n\n    -----BEGIN ENCRYPTED PRIVATE KEY-----\n    MIIBSzBOBgkqhkiG9w0BBQ0wQTApBgkqhkiG9w0BBQwwHAQIQAY0IsXMhucCAggA\n    MAwGCCqGSIb3DQIJBQAwFAYIKoZIhvcNAwcECHi4EIJK+T6FBIH4Fatl16Lwznm/\n    jIhKygStjhIlpww0A0aZDp/D0eEJpXzvPgRZWf2xhlf5gzTMblQ2XkNrbu/OWOOS\n    f+qx//lh30WTFYOwu0ZWBuxGnjDQav2nc+GKRfzCWbTvgdj8EOKi3vgt8PkuBZWp\n    IwX0GRrLLd19EmC/VpZ6zAoJIxeE2Oc76tBREJCs5T8o+4Y28rgo/mXbMJmxpdAK\n    ncWa4y0f1IEcjdw2u3I8csvtwUIj6WjVLkrS1R3I0DS9jEbs0rZ9uORk5aFatzre\n    ccfQA0JI0n15QPX8dGh/RnWmpzpGXMxShiwn434KGD/Fa0mZeQex26chknoV3YE=\n    -----END ENCRYPTED PRIVATE KEY-----", "author_fullname": "t2_14bah0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to use encrypted private key for TLS?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq6pw7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590421174.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I generated a certificate and private key with password using OpenSSL. Now I want to use it in Go. I found this &lt;a href=\"https://golang.org/issue/10181\"&gt;old issue with some instructions&lt;/a&gt;, but it didn&amp;#39;t work for me. &lt;code&gt;x509.DecryptPEMBlock&lt;/code&gt; returns &amp;quot;x509: no DEK-Info header in block&amp;quot;. Here is an example key file, password is 1234.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-----BEGIN ENCRYPTED PRIVATE KEY-----\nMIIBSzBOBgkqhkiG9w0BBQ0wQTApBgkqhkiG9w0BBQwwHAQIQAY0IsXMhucCAggA\nMAwGCCqGSIb3DQIJBQAwFAYIKoZIhvcNAwcECHi4EIJK+T6FBIH4Fatl16Lwznm/\njIhKygStjhIlpww0A0aZDp/D0eEJpXzvPgRZWf2xhlf5gzTMblQ2XkNrbu/OWOOS\nf+qx//lh30WTFYOwu0ZWBuxGnjDQav2nc+GKRfzCWbTvgdj8EOKi3vgt8PkuBZWp\nIwX0GRrLLd19EmC/VpZ6zAoJIxeE2Oc76tBREJCs5T8o+4Y28rgo/mXbMJmxpdAK\nncWa4y0f1IEcjdw2u3I8csvtwUIj6WjVLkrS1R3I0DS9jEbs0rZ9uORk5aFatzre\nccfQA0JI0n15QPX8dGh/RnWmpzpGXMxShiwn434KGD/Fa0mZeQex26chknoV3YE=\n-----END ENCRYPTED PRIVATE KEY-----\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq6pw7", "is_robot_indexable": true, "report_reasons": null, "author": "shibe5", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gq6pw7/how_to_use_encrypted_private_key_for_tls/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gq6pw7/how_to_use_encrypted_private_key_for_tls/", "subreddit_subscribers": 113781, "created_utc": 1590392374.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gq6pw7", "before": null}}