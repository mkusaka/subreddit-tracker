{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - September", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ik9rft", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1598947533.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ik9rft", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 2, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ik9rft/whos_hiring_typescript_developers_september/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/ik9rft/whos_hiring_typescript_developers_september/", "subreddit_subscribers": 47975, "created_utc": 1598918733.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm working on an auth service and im quite new to TS. Looking to write a type that will say \"if the provider a user chooses to sign in with is 'email' than the 'email' and 'password' params are no longer optional\"\n\nAn example of what i mean:\n\n`type SocialSignInParams = {provider: 'apple' | 'facebook' | 'google';email?: string;password?: string;};type EmailSignInParams = {provider: 'email';email: string;password: string;};`\n\n`const signIn = async ({ provider, email, password }: SignInParams) =&gt; {if (provider === 'email') {return await signInWithEmail({ email, password });}};`\n\nThanks!  \n\n\nEdit: Appreciate all the responses.", "author_fullname": "t2_2eig2eif", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Optional types if selection in enum is chosen", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iol6lc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1599559442.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599560021.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m working on an auth service and im quite new to TS. Looking to write a type that will say &amp;quot;if the provider a user chooses to sign in with is &amp;#39;email&amp;#39; than the &amp;#39;email&amp;#39; and &amp;#39;password&amp;#39; params are no longer optional&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;An example of what i mean:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;type SocialSignInParams = {provider: &amp;#39;apple&amp;#39; | &amp;#39;facebook&amp;#39; | &amp;#39;google&amp;#39;;email?: string;password?: string;};type EmailSignInParams = {provider: &amp;#39;email&amp;#39;;email: string;password: string;};&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const signIn = async ({ provider, email, password }: SignInParams) =&amp;gt; {if (provider === &amp;#39;email&amp;#39;) {return await signInWithEmail({ email, password });}};&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Thanks!  &lt;/p&gt;\n\n&lt;p&gt;Edit: Appreciate all the responses.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iol6lc", "is_robot_indexable": true, "report_reasons": null, "author": "writingcod3", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iol6lc/optional_types_if_selection_in_enum_is_chosen/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iol6lc/optional_types_if_selection_in_enum_is_chosen/", "subreddit_subscribers": 47975, "created_utc": 1599531221.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_p1l6r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "expressive: a lightweight library for creating express routers using decorators", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_inujj0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 43, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 43, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/nrdPxeODCoTXSgLj_kw9K-NE7grh8YwNGCBOEiQFvow.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1599457070.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/BitMountain/expressive", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/QLQ8EA1xjCrwBNxSHvrFjoTpkUvz1HD_srrbZnHNd7g.jpg?auto=webp&amp;s=e65fd1eb0aacf0475127044e1b3e140e6301dcea", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/QLQ8EA1xjCrwBNxSHvrFjoTpkUvz1HD_srrbZnHNd7g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=47faa21c2d98eb4b197a199819d4eb270a4ebe82", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/QLQ8EA1xjCrwBNxSHvrFjoTpkUvz1HD_srrbZnHNd7g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e15f0f5c546bfb0dceeeaa582a054a2e3ea90250", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/QLQ8EA1xjCrwBNxSHvrFjoTpkUvz1HD_srrbZnHNd7g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=bf16cd54ac5767c9151b72c698f3d36563aa32cb", "width": 320, "height": 320}], "variants": {}, "id": "mvyTPFqnIqF9DBw7N0UnXHWJ6hLlt8uFNTJqFOk7G-g"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inujj0", "is_robot_indexable": true, "report_reasons": null, "author": "bandolacb", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/inujj0/expressive_a_lightweight_library_for_creating/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/BitMountain/expressive", "subreddit_subscribers": 47975, "created_utc": 1599428270.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello, i have this class (minimum reproducible case):\n\n    class MyClass {\n      constructor(public bar: string | string[]) {}\n    \n      foo(): string | string[] {\n        if (Array.isArray(this.bar)) {\n          return \"example\";\n        }\n    \n        return [\"more\", \"example\"];\n      }\n    }\n    \n    new MyClass(\"example\").foo(); // `string | string[]` can't we infer the right type based on `bar`?\n\nWhen called it is of type union. Could it be otherwise? Still learning TS :(\n\nFor more info on what it is i'm trying to do: I would like an class that can query a distant api and if the arg `bar` is an array, it will query the api using multiple account and thus returning an array on responses. if `bar` is a string, it returns a single response, not in an array.\n\nThx people of the internet!", "author_fullname": "t2_fpgkq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to return proper method's type based on a class constructor argument type", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_io38en", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1599468680.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599493055.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, i have this class (minimum reproducible case):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class MyClass {\n  constructor(public bar: string | string[]) {}\n\n  foo(): string | string[] {\n    if (Array.isArray(this.bar)) {\n      return &amp;quot;example&amp;quot;;\n    }\n\n    return [&amp;quot;more&amp;quot;, &amp;quot;example&amp;quot;];\n  }\n}\n\nnew MyClass(&amp;quot;example&amp;quot;).foo(); // `string | string[]` can&amp;#39;t we infer the right type based on `bar`?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When called it is of type union. Could it be otherwise? Still learning TS :(&lt;/p&gt;\n\n&lt;p&gt;For more info on what it is i&amp;#39;m trying to do: I would like an class that can query a distant api and if the arg &lt;code&gt;bar&lt;/code&gt; is an array, it will query the api using multiple account and thus returning an array on responses. if &lt;code&gt;bar&lt;/code&gt; is a string, it returns a single response, not in an array.&lt;/p&gt;\n\n&lt;p&gt;Thx people of the internet!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "io38en", "is_robot_indexable": true, "report_reasons": null, "author": "sithiss", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/io38en/how_to_return_proper_methods_type_based_on_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/io38en/how_to_return_proper_methods_type_based_on_a/", "subreddit_subscribers": 47975, "created_utc": 1599464255.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "[swc-node](https://github.com/Brooooooklyn/swc-node) is a TypeScript/JavaScript compiler which is a NodeJS native addon for [swc](https://github.com/swc-project/swc).\n\nSwc compiler is 7\\~40x faster than babel, swc-node implement [@swc-node/jest](https://github.com/Brooooooklyn/swc-node/tree/master/packages/jest) and [@swc-node/register](https://github.com/Brooooooklyn/swc-node/tree/master/packages/register) top on it.\n\nswc-node is also built on top of [napi-rs](https://github.com/napi-rs/napi-rs) , which has some killer features rather than the other packages which built from native code:\n\n* Minimal third part dependencies, no need for `node-gyp rust/C++ toolchains.` You can just install it in your Docker environment and use it.\n* No additional binary files need to download in **postinstall** scripts. Everything is available on `npm`.\n* Compatible to all NodeJS versions after `v8.9.0,` No need to reinstall after NodeJS upgraded.\n\nAnd thanks to deno ecosystem(swc is heavily used by deno ecosystem), swc is stable and support latest TypeScript/JavaScript feature now:\n\n* TypeScript `experimentalDecorators`\n* TypeScript  `emitDecoratorMetadata`\n* `jsx pargma`\n* ES5 \\~ ES2020 language features\n\nMore over the swc featues, I implement `jest-hoist-transformer` in  [@swc-node/jest](https://github.com/Brooooooklyn/swc-node/tree/master/packages/jest), which would help you migrate from ts-jest smoothly.\n\nMany projects in [Bytedance](https://bytedance.com/en/) has running with [@swc-node/jest](https://github.com/Brooooooklyn/swc-node/tree/master/packages/jest) (jest tests) and  [@swc-node/register](https://github.com/Brooooooklyn/swc-node/tree/master/packages/register) (ava tests).\n\n&amp;#x200B;\n\nhttps://preview.redd.it/ggdv42g1ugl51.png?width=1778&amp;format=png&amp;auto=webp&amp;s=630ccb99bdd6cb575f2327a9275e3ef97f2a83ca\n\nSo try it and enjoy the zero overhead performance improvement!", "author_fullname": "t2_1abuz2ze", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Running your unit tests written in TypeScript faster with zero overhead!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 67, "top_awarded_type": null, "hide_score": false, "media_metadata": {"ggdv42g1ugl51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 52, "x": 108, "u": "https://preview.redd.it/ggdv42g1ugl51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=4d921f91440065fa5b33f6bfd9882f957c327ba1"}, {"y": 104, "x": 216, "u": "https://preview.redd.it/ggdv42g1ugl51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=9c3f91e67c051dcf5eef543c6a1e452d9a56e475"}, {"y": 154, "x": 320, "u": "https://preview.redd.it/ggdv42g1ugl51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=4b16fae265ab2310a31753e3cfb85b257a59a065"}, {"y": 308, "x": 640, "u": "https://preview.redd.it/ggdv42g1ugl51.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=f790bf519093a1dae1c2ddafac9a8fa41464e88e"}, {"y": 463, "x": 960, "u": "https://preview.redd.it/ggdv42g1ugl51.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=bfad620aceac5a8cbb579b2c14a990a39a5a4ad6"}, {"y": 521, "x": 1080, "u": "https://preview.redd.it/ggdv42g1ugl51.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3c983d869d36ad3bcf2beb8eaa6fca58a4b958c0"}], "s": {"y": 858, "x": 1778, "u": "https://preview.redd.it/ggdv42g1ugl51.png?width=1778&amp;format=png&amp;auto=webp&amp;s=630ccb99bdd6cb575f2327a9275e3ef97f2a83ca"}, "id": "ggdv42g1ugl51"}}, "name": "t3_ingrc2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 88, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 88, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/t7SYSP2tbT8XScdthuDFNY0WdftRy00fJLqdu-KpQ2U.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599399982.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Brooooooklyn/swc-node\"&gt;swc-node&lt;/a&gt; is a TypeScript/JavaScript compiler which is a NodeJS native addon for &lt;a href=\"https://github.com/swc-project/swc\"&gt;swc&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Swc compiler is 7~40x faster than babel, swc-node implement &lt;a href=\"https://github.com/Brooooooklyn/swc-node/tree/master/packages/jest\"&gt;@swc-node/jest&lt;/a&gt; and &lt;a href=\"https://github.com/Brooooooklyn/swc-node/tree/master/packages/register\"&gt;@swc-node/register&lt;/a&gt; top on it.&lt;/p&gt;\n\n&lt;p&gt;swc-node is also built on top of &lt;a href=\"https://github.com/napi-rs/napi-rs\"&gt;napi-rs&lt;/a&gt; , which has some killer features rather than the other packages which built from native code:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Minimal third part dependencies, no need for &lt;code&gt;node-gyp rust/C++ toolchains.&lt;/code&gt; You can just install it in your Docker environment and use it.&lt;/li&gt;\n&lt;li&gt;No additional binary files need to download in &lt;strong&gt;postinstall&lt;/strong&gt; scripts. Everything is available on &lt;code&gt;npm&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Compatible to all NodeJS versions after &lt;code&gt;v8.9.0,&lt;/code&gt; No need to reinstall after NodeJS upgraded.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And thanks to deno ecosystem(swc is heavily used by deno ecosystem), swc is stable and support latest TypeScript/JavaScript feature now:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;TypeScript &lt;code&gt;experimentalDecorators&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;TypeScript  &lt;code&gt;emitDecoratorMetadata&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;jsx pargma&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;ES5 ~ ES2020 language features&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;More over the swc featues, I implement &lt;code&gt;jest-hoist-transformer&lt;/code&gt; in  &lt;a href=\"https://github.com/Brooooooklyn/swc-node/tree/master/packages/jest\"&gt;@swc-node/jest&lt;/a&gt;, which would help you migrate from ts-jest smoothly.&lt;/p&gt;\n\n&lt;p&gt;Many projects in &lt;a href=\"https://bytedance.com/en/\"&gt;Bytedance&lt;/a&gt; has running with &lt;a href=\"https://github.com/Brooooooklyn/swc-node/tree/master/packages/jest\"&gt;@swc-node/jest&lt;/a&gt; (jest tests) and  &lt;a href=\"https://github.com/Brooooooklyn/swc-node/tree/master/packages/register\"&gt;@swc-node/register&lt;/a&gt; (ava tests).&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/ggdv42g1ugl51.png?width=1778&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=630ccb99bdd6cb575f2327a9275e3ef97f2a83ca\"&gt;https://preview.redd.it/ggdv42g1ugl51.png?width=1778&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=630ccb99bdd6cb575f2327a9275e3ef97f2a83ca&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So try it and enjoy the zero overhead performance improvement!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ingrc2", "is_robot_indexable": true, "report_reasons": null, "author": "LongYinan", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ingrc2/running_your_unit_tests_written_in_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ingrc2/running_your_unit_tests_written_in_typescript/", "subreddit_subscribers": 47975, "created_utc": 1599371182.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Sorry if this is a really basic question. I am relatively new to javascript (and after this typescript).\n\nI am making an angular app, which has 2 arrays of objects. The first is fetched from a REST service, and the second is a locally stored  JSON.\n\nI made a model as follows\n\n    export interface MenuAction\u00a0{\n    menuId:\u00a0string;\n    actionId:\u00a0string;\n    actionType:\u00a0string;\n    updIndic:\u00a0string;\u00a0\n    description:\u00a0string;\u00a0\n    longDesc?:string;\n    image?:\u00a0string; }\n\nMy local Json looks like this.\n\n&amp;#x200B;\n\n    [{\n    \"actionId\"\u00a0:\u00a0\"0010\", \"image\"\u00a0:\u00a0\"policy.jpg\", \"text\"\u00a0:\u00a0\"Actions\u00a0related\u00a0to\u00a0policy\u00a0system\u00a0configuration.\u00a0For\u00a0example,\u00a0configuration\u00a0of\u00a0affinity\u00a0agreements\"\n    },\n    { \"actionId\"\u00a0:\u00a0\"0020\",\n    \"image\"\u00a0:\u00a0\"account.jpg\",\n    \"text\"\u00a0:\u00a0\"Account\u00a0system\u00a0configuration\" \n    }]\n\n&amp;#x200B;\n\nThen in my component.ts, I have done the following.\n\n    ------------\n    import menuDetails from '../../../data/menu_details.json';\u00a0\n     ------\n    menuActions\u00a0:\u00a0MenuAction[];\u00a0\n\nSo basically, I want to loop through the \"details\" object, and when I find a matching actionId, I want to \"enrich\" the \"menuActions\" object with the additional information (so I can use it all in a card on the html)\n\nI tried this in ngInit, but I am missing something.\n\n&amp;#x200B;\n\n    ngOnInit():\u00a0void\u00a0{\n    \n    this._menuaction.getMenuActions('0002').subscribe\u00a0(data =&gt;\u00a0{ this.data\u00a0=\u00a0data;\u00a0 this.menuActions\u00a0=\u00a0this.data.content.userMenu.nbaUserMenuViewArray;\u00a0\n    \n    console.log\u00a0(menuDetails);\u00a0 //\u00a0Loop\u00a0all\u00a0of\u00a0the\u00a0menuactions\n    \n    let index; for\u00a0(let action of this.menuActions)\u00a0{\n    //\u00a0Find\u00a0the\u00a0right\u00a0details\u00a0object\u00a0 \n    index\u00a0=\u00a0menuDetails.findIndex(x =&gt; x.actionId\u00a0===\u00a0action.actionId); \n    console.log\u00a0('Found\u00a0at\u00a0'+\u00a0index); \n    this.menuActions[action].longDesc\u00a0=\u00a0menuDetails[index].text;  // This line fails\n    }\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\n    });\n\nCan anyone point me in the right direction?", "author_fullname": "t2_95uajdt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do I assign a value to an object in a for loop?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_inhw12", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1599384815.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599406009.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Sorry if this is a really basic question. I am relatively new to javascript (and after this typescript).&lt;/p&gt;\n\n&lt;p&gt;I am making an angular app, which has 2 arrays of objects. The first is fetched from a REST service, and the second is a locally stored  JSON.&lt;/p&gt;\n\n&lt;p&gt;I made a model as follows&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export interface MenuAction\u00a0{\nmenuId:\u00a0string;\nactionId:\u00a0string;\nactionType:\u00a0string;\nupdIndic:\u00a0string;\u00a0\ndescription:\u00a0string;\u00a0\nlongDesc?:string;\nimage?:\u00a0string; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My local Json looks like this.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[{\n&amp;quot;actionId&amp;quot;\u00a0:\u00a0&amp;quot;0010&amp;quot;, &amp;quot;image&amp;quot;\u00a0:\u00a0&amp;quot;policy.jpg&amp;quot;, &amp;quot;text&amp;quot;\u00a0:\u00a0&amp;quot;Actions\u00a0related\u00a0to\u00a0policy\u00a0system\u00a0configuration.\u00a0For\u00a0example,\u00a0configuration\u00a0of\u00a0affinity\u00a0agreements&amp;quot;\n},\n{ &amp;quot;actionId&amp;quot;\u00a0:\u00a0&amp;quot;0020&amp;quot;,\n&amp;quot;image&amp;quot;\u00a0:\u00a0&amp;quot;account.jpg&amp;quot;,\n&amp;quot;text&amp;quot;\u00a0:\u00a0&amp;quot;Account\u00a0system\u00a0configuration&amp;quot; \n}]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Then in my component.ts, I have done the following.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;------------\nimport menuDetails from &amp;#39;../../../data/menu_details.json&amp;#39;;\u00a0\n ------\nmenuActions\u00a0:\u00a0MenuAction[];\u00a0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So basically, I want to loop through the &amp;quot;details&amp;quot; object, and when I find a matching actionId, I want to &amp;quot;enrich&amp;quot; the &amp;quot;menuActions&amp;quot; object with the additional information (so I can use it all in a card on the html)&lt;/p&gt;\n\n&lt;p&gt;I tried this in ngInit, but I am missing something.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ngOnInit():\u00a0void\u00a0{\n\nthis._menuaction.getMenuActions(&amp;#39;0002&amp;#39;).subscribe\u00a0(data =&amp;gt;\u00a0{ this.data\u00a0=\u00a0data;\u00a0 this.menuActions\u00a0=\u00a0this.data.content.userMenu.nbaUserMenuViewArray;\u00a0\n\nconsole.log\u00a0(menuDetails);\u00a0 //\u00a0Loop\u00a0all\u00a0of\u00a0the\u00a0menuactions\n\nlet index; for\u00a0(let action of this.menuActions)\u00a0{\n//\u00a0Find\u00a0the\u00a0right\u00a0details\u00a0object\u00a0 \nindex\u00a0=\u00a0menuDetails.findIndex(x =&amp;gt; x.actionId\u00a0===\u00a0action.actionId); \nconsole.log\u00a0(&amp;#39;Found\u00a0at\u00a0&amp;#39;+\u00a0index); \nthis.menuActions[action].longDesc\u00a0=\u00a0menuDetails[index].text;  // This line fails\n}\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Can anyone point me in the right direction?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "inhw12", "is_robot_indexable": true, "report_reasons": null, "author": "Jarvo1992", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/inhw12/how_do_i_assign_a_value_to_an_object_in_a_for_loop/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/inhw12/how_do_i_assign_a_value_to_an_object_in_a_for_loop/", "subreddit_subscribers": 47975, "created_utc": 1599377209.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "[Here](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABMOcAUEAWBDATgfgC5EBvRAEwFMAHKTIxMEAWwCNLdEB6AKmblyVEcWvDDYANomp5szKBwDOiHlwC+ASlIAoAJAxgiDDk4Bec4nBVgMMJXJaseRKdJqA3HomUopCjTpENRdEJ1xPfUM0KlpMFwsrShs7B39YkIAGT0Qc7i5+QWFRBElpWWYfJURbGFhJGAAve2rDOkoAT0Q8IUTk+z0DIyh26ko4QxjAgEILACImNg5ZrTpcOAB3RABRXDXcNFnl7NyufIEhEVgSqRlcOUrcZW7QzEoIAGtmlE42mB+R5qDNqdZ7UNYANxgVHIiFYnTalkUHD0EAQil8wCQrjQWlMAD4dLpdJM4gBqRAARiyp3WmE6tWqynRMAkNzgikUMFY3k47EsYGstma+G0uTFeQKF2K4ikzxASPIeg82jUQA) is the playground link .\n\nWhy `depth` is still possibly undefined inside `fn` ? and how do I make it not be without adding an unnecessary `if` clause ?", "author_fullname": "t2_1ihbqq55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Strict null checks (and function hoisting?) causing issues .", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_in31qc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599348617.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABMOcAUEAWBDATgfgC5EBvRAEwFMAHKTIxMEAWwCNLdEB6AKmblyVEcWvDDYANomp5szKBwDOiHlwC+ASlIAoAJAxgiDDk4Bec4nBVgMMJXJaseRKdJqA3HomUopCjTpENRdEJ1xPfUM0KlpMFwsrShs7B39YkIAGT0Qc7i5+QWFRBElpWWYfJURbGFhJGAAve2rDOkoAT0Q8IUTk+z0DIyh26ko4QxjAgEILACImNg5ZrTpcOAB3RABRXDXcNFnl7NyufIEhEVgSqRlcOUrcZW7QzEoIAGtmlE42mB+R5qDNqdZ7UNYANxgVHIiFYnTalkUHD0EAQil8wCQrjQWlMAD4dLpdJM4gBqRAARiyp3WmE6tWqynRMAkNzgikUMFY3k47EsYGstma+G0uTFeQKF2K4ikzxASPIeg82jUQA\"&gt;Here&lt;/a&gt; is the playground link .&lt;/p&gt;\n\n&lt;p&gt;Why &lt;code&gt;depth&lt;/code&gt; is still possibly undefined inside &lt;code&gt;fn&lt;/code&gt; ? and how do I make it not be without adding an unnecessary &lt;code&gt;if&lt;/code&gt; clause ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "in31qc", "is_robot_indexable": true, "report_reasons": null, "author": "liaguris", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/in31qc/strict_null_checks_and_function_hoisting_causing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/in31qc/strict_null_checks_and_function_hoisting_causing/", "subreddit_subscribers": 47975, "created_utc": 1599319817.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm JavaScript React developer who is migrating to TypeScript. I would like to know that how much OOP paradigm supported by TypeScript compare to Java and C#? Anyone who came from Java or C# background? Can you explain this please?", "author_fullname": "t2_7cexlq2a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How much OOP paradigm is supported by TypeScript, compare to Java and C#?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_in31g0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599348591.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m JavaScript React developer who is migrating to TypeScript. I would like to know that how much OOP paradigm supported by TypeScript compare to Java and C#? Anyone who came from Java or C# background? Can you explain this please?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "in31g0", "is_robot_indexable": true, "report_reasons": null, "author": "aravinda-meewala", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/in31g0/how_much_oop_paradigm_is_supported_by_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/in31g0/how_much_oop_paradigm_is_supported_by_typescript/", "subreddit_subscribers": 47975, "created_utc": 1599319791.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "\\`\\`\\`  \ntype LookUp&lt;U, T extends string&gt; = { \\[K in T\\]: U extends { type: T } ? U : never }\\[T\\]  \n\\`\\`\\`  \n\n\nI don't understand this helper type at all, because I don't know what {type: T} does here, also, this is not in the docs. So could you please explain this to me, thank you!", "author_fullname": "t2_p17sw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What `{type: T}` does here?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_imwrt7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.74, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599318233.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;```&lt;br/&gt;\ntype LookUp&amp;lt;U, T extends string&amp;gt; = { [K in T]: U extends { type: T } ? U : never }[T]&lt;br/&gt;\n```  &lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t understand this helper type at all, because I don&amp;#39;t know what {type: T} does here, also, this is not in the docs. So could you please explain this to me, thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "imwrt7", "is_robot_indexable": true, "report_reasons": null, "author": "lednhatkhanh", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/imwrt7/what_type_t_does_here/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/imwrt7/what_type_t_does_here/", "subreddit_subscribers": 47975, "created_utc": 1599289433.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Github repo: [https://github.com/Mdsp9070/monkeylanguage](https://github.com/Mdsp9070/monkeylanguage)\n\n&amp;#x200B;\n\nI'm building an interpreter with Typescript all covered by tests. Recently I added some extra methods, like isLetter, isDigit, skipWhitespace and so on!\n\n&amp;#x200B;\n\nMy last commit: [https://github.com/Mdsp9070/monkeylanguage/commit/687f56cf921fff9cfcc0862c6df773f6035945b8](https://github.com/Mdsp9070/monkeylanguage/commit/687f56cf921fff9cfcc0862c6df773f6035945b8)\n\n&amp;#x200B;\n\nHowever my test is failing but I don't know why.\n\nThat's my input:\n\n      const input = `let five = 5;\n    let ten = 10;\n    let add = fn(x, y) {\n    x + y;\n    };\n    let result = add(five, ten);\n    `;\n\nAnd that's my test result:\n\n    yarn run v1.22.4\n    $ jest\n     FAIL  interpreter/src/lexer/lexer.test.ts\n      test lexer\n        \u2715 should return the right token type and literal (71 ms)\n    \n      \u25cf test lexer \u203a should return the right token type and literal\n    \n        expect(received).toEqual(expected) // deep equality\n    \n        Expected: \"INT\"\n        Received: \"ASSIGN\"\n    \n          57 | \n          58 |       console.log(token)\n        &gt; 59 |       expect(token.type).toEqual(test.type);\n             |                          ^\n          60 |       expect(token.literal).toEqual(test.literal);\n          61 |     }\n          62 |   });\n    \n          at Object.&lt;anonymous&gt; (interpreter/src/lexer/lexer.test.ts:59:26)\n    \n      console.log\n        l\n    \n          at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n    \n      console.log\n        { literal: 'let', type: 'LET' }\n    \n          at Object.&lt;anonymous&gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n    \n      console.log\n        f\n    \n          at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n    \n      console.log\n        { literal: 'five', type: 'IDENT' }\n    \n          at Object.&lt;anonymous&gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n    \n      console.log\n        =\n    \n          at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n    \n      console.log\n        { type: 'ASSIGN', literal: '=' }\n    \n          at Object.&lt;anonymous&gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n    \n      console.log\n        =\n    \n          at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n    \n      console.log\n        { type: 'ASSIGN', literal: '=' }\n    \n          at Object.&lt;anonymous&gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n\nWhy is '=' being reading twice?", "author_fullname": "t2_t7qtw09", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why my lexer is reading '=' twice?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_in6cee", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1599359828.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Github repo: &lt;a href=\"https://github.com/Mdsp9070/monkeylanguage\"&gt;https://github.com/Mdsp9070/monkeylanguage&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m building an interpreter with Typescript all covered by tests. Recently I added some extra methods, like isLetter, isDigit, skipWhitespace and so on!&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;My last commit: &lt;a href=\"https://github.com/Mdsp9070/monkeylanguage/commit/687f56cf921fff9cfcc0862c6df773f6035945b8\"&gt;https://github.com/Mdsp9070/monkeylanguage/commit/687f56cf921fff9cfcc0862c6df773f6035945b8&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;However my test is failing but I don&amp;#39;t know why.&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s my input:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  const input = `let five = 5;\nlet ten = 10;\nlet add = fn(x, y) {\nx + y;\n};\nlet result = add(five, ten);\n`;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And that&amp;#39;s my test result:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;yarn run v1.22.4\n$ jest\n FAIL  interpreter/src/lexer/lexer.test.ts\n  test lexer\n    \u2715 should return the right token type and literal (71 ms)\n\n  \u25cf test lexer \u203a should return the right token type and literal\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: &amp;quot;INT&amp;quot;\n    Received: &amp;quot;ASSIGN&amp;quot;\n\n      57 | \n      58 |       console.log(token)\n    &amp;gt; 59 |       expect(token.type).toEqual(test.type);\n         |                          ^\n      60 |       expect(token.literal).toEqual(test.literal);\n      61 |     }\n      62 |   });\n\n      at Object.&amp;lt;anonymous&amp;gt; (interpreter/src/lexer/lexer.test.ts:59:26)\n\n  console.log\n    l\n\n      at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n\n  console.log\n    { literal: &amp;#39;let&amp;#39;, type: &amp;#39;LET&amp;#39; }\n\n      at Object.&amp;lt;anonymous&amp;gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n\n  console.log\n    f\n\n      at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n\n  console.log\n    { literal: &amp;#39;five&amp;#39;, type: &amp;#39;IDENT&amp;#39; }\n\n      at Object.&amp;lt;anonymous&amp;gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n\n  console.log\n    =\n\n      at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n\n  console.log\n    { type: &amp;#39;ASSIGN&amp;#39;, literal: &amp;#39;=&amp;#39; }\n\n      at Object.&amp;lt;anonymous&amp;gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n\n  console.log\n    =\n\n      at Lexer.nextToken (interpreter/src/lexer/lexer.ts:71:13)\n\n  console.log\n    { type: &amp;#39;ASSIGN&amp;#39;, literal: &amp;#39;=&amp;#39; }\n\n      at Object.&amp;lt;anonymous&amp;gt; (interpreter/src/lexer/lexer.test.ts:58:15)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Why is &amp;#39;=&amp;#39; being reading twice?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/2xusiHdVyLVq_10N08m1MVNQytmGPZ7r4Owd2isbR9s.jpg?auto=webp&amp;s=8bfc4b745efb121a94e1a79415ff4ffbee3f8860", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/2xusiHdVyLVq_10N08m1MVNQytmGPZ7r4Owd2isbR9s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=40121f72c3a2469d9be3de80b7bc598e113f8c80", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/2xusiHdVyLVq_10N08m1MVNQytmGPZ7r4Owd2isbR9s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b715455610b81ed0f2265387d3ac64e4ce42fdbd", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/2xusiHdVyLVq_10N08m1MVNQytmGPZ7r4Owd2isbR9s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=681adf4eb05bc2a12ac93bd4bffcc5c9dfa0121f", "width": 320, "height": 320}], "variants": {}, "id": "aBZHwH_FFgHQLH8RQZYmIurhYCNU0NpVst_Z2VU1yJ8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "in6cee", "is_robot_indexable": true, "report_reasons": null, "author": "Mdsp9070", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/in6cee/why_my_lexer_is_reading_twice/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/in6cee/why_my_lexer_is_reading_twice/", "subreddit_subscribers": 47975, "created_utc": 1599331028.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey guys, I have recently implemented TypeScript in my React app. I was wondering if TypeScript checks types at runtime or not, since I have not re-tested all my features, and I'm afraid that my app will break when a user is using it and TypeScript finds a type error", "author_fullname": "t2_43mz17dy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Does TypeScript check types at runtime?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_in51pa", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.44, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599355441.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys, I have recently implemented TypeScript in my React app. I was wondering if TypeScript checks types at runtime or not, since I have not re-tested all my features, and I&amp;#39;m afraid that my app will break when a user is using it and TypeScript finds a type error&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "in51pa", "is_robot_indexable": true, "report_reasons": null, "author": "mrtruongminh", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/in51pa/does_typescript_check_types_at_runtime/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/in51pa/does_typescript_check_types_at_runtime/", "subreddit_subscribers": 47975, "created_utc": 1599326641.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_in51pa", "before": null}}