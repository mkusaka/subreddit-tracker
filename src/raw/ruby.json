{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_tfyac", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Webpacker 5.0 released", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 127, "hide_score": false, "name": "t3_fp6r12", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/XsEbyM5b5rti9FDq80zbMjxq2PTbARLQBtHm6W6yN00.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585233478.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "prathamesh.tech", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/YnToYW3-YW-D1j44n9PSGfvleCFozZ1ABA3fVk5v2_Y.jpg?auto=webp&amp;s=81cc20a0ea0b6d64ff88e3fcd93e7a45f2585172", "width": 688, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/YnToYW3-YW-D1j44n9PSGfvleCFozZ1ABA3fVk5v2_Y.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c87d905a8e0b12304286dd6a789a285deca6d6a7", "width": 108, "height": 98}, {"url": "https://external-preview.redd.it/YnToYW3-YW-D1j44n9PSGfvleCFozZ1ABA3fVk5v2_Y.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a7a804edbb3dff6546782d51ac6b43e9542dda15", "width": 216, "height": 196}, {"url": "https://external-preview.redd.it/YnToYW3-YW-D1j44n9PSGfvleCFozZ1ABA3fVk5v2_Y.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=44f3239f6c17005021820e65c50252a30ca3467a", "width": 320, "height": 291}, {"url": "https://external-preview.redd.it/YnToYW3-YW-D1j44n9PSGfvleCFozZ1ABA3fVk5v2_Y.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=279a085412716b002f073efce84f2113b346b0e5", "width": 640, "height": 583}], "variants": {}, "id": "wuQ8dO9d-8_OTPYaShB3HLfXKWcYqRd3BloDnOd1kyA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fp6r12", "is_robot_indexable": true, "report_reasons": null, "author": "PrathameshSonpatki", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fp6r12/webpacker_50_released/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://prathamesh.tech/2020/03/25/webpacker-5-0-released/", "subreddit_subscribers": 64063, "created_utc": 1585204678.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "[https://github.com/AndyObtiva/glimmer](https://github.com/AndyObtiva/glimmer)\n\nGlimmer (JRuby Desktop UI DSL + Data-Binding) has been undergoing new development.\n\nExamples:\n\nhttps://preview.redd.it/56f1oatgqyo41.png?width=135&amp;format=png&amp;auto=webp&amp;s=00d9663fd6bc51de0652b892e00d68d8aa8d5d7c\n\n    include Glimmer\n    \n    shell {\n      text \"Glimmer\"\n      label {\n        text \"Hello World!\"\n      }\n    }.open\n\n&amp;#x200B;\n\nhttps://preview.redd.it/022q03llqyo41.png?width=159&amp;format=png&amp;auto=webp&amp;s=f2c23d985d7497c32c19534e9950fa8de6572be0\n\n    shell {\n      text \"Tic-Tac-Toe\"\n      composite {\n        grid_layout 3, true\n        (1..3).each { |row|\n          (1..3).each { |column|\n            button {\n              layout_data :fill, :fill, true, true\n              text        bind(@tic_tac_toe_board[row, column], :sign)\n              enabled     bind(@tic_tac_toe_board[row, column], :empty)\n              on_widget_selected {\n                @tic_tac_toe_board.mark_box(row, column)\n              }\n            }\n          }\n        }\n      }\n    }\n\nRecent changes/additions:\n- Nested/indexed property data-binding\n- SWT layout and layout data DSL\n- SWT Color and Font DSL\n- Ability to add Glimmer Custom Widgets\n- SWT Browser widget support\n- Automatic cleanup of data-binding/observers upon disposing a widget\n- Easier SWT style syntax via GSWT class\n- Inclusion of SWT library jars in Ruby gem\n- Improved glimmer/girb commands for running on Windows/Linux/Mac", "author_fullname": "t2_3bfa7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Glimmer (JRuby Desktop UI DSL + Data-Binding)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "media_metadata": {"56f1oatgqyo41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 32, "x": 108, "u": "https://external-preview.redd.it/56f1oatgqyo41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=9c8d8cb801e012a4c50a6ae8ab9ecd3fcb2b4cf9"}], "s": {"y": 40, "x": 135, "u": "https://preview.redd.it/56f1oatgqyo41.png?width=135&amp;format=png&amp;auto=webp&amp;s=00d9663fd6bc51de0652b892e00d68d8aa8d5d7c"}, "id": "56f1oatgqyo41"}, "022q03llqyo41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 95, "x": 108, "u": "https://external-preview.redd.it/022q03llqyo41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=05dc4e70a87a8db6e730b3e2a88a8e28a6e70bb3"}], "s": {"y": 140, "x": 159, "u": "https://preview.redd.it/022q03llqyo41.png?width=159&amp;format=png&amp;auto=webp&amp;s=f2c23d985d7497c32c19534e9950fa8de6572be0"}, "id": "022q03llqyo41"}}, "name": "t3_fp62o1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/R0jeG282_kSjaS21q1gTd49HoxsxHxT9msB8R6xD_EA.jpg", "edited": 1585219701.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1585229886.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/AndyObtiva/glimmer\"&gt;https://github.com/AndyObtiva/glimmer&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Glimmer (JRuby Desktop UI DSL + Data-Binding) has been undergoing new development.&lt;/p&gt;\n\n&lt;p&gt;Examples:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/56f1oatgqyo41.png?width=135&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=00d9663fd6bc51de0652b892e00d68d8aa8d5d7c\"&gt;https://preview.redd.it/56f1oatgqyo41.png?width=135&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=00d9663fd6bc51de0652b892e00d68d8aa8d5d7c&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;include Glimmer\n\nshell {\n  text &amp;quot;Glimmer&amp;quot;\n  label {\n    text &amp;quot;Hello World!&amp;quot;\n  }\n}.open\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/022q03llqyo41.png?width=159&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f2c23d985d7497c32c19534e9950fa8de6572be0\"&gt;https://preview.redd.it/022q03llqyo41.png?width=159&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f2c23d985d7497c32c19534e9950fa8de6572be0&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;shell {\n  text &amp;quot;Tic-Tac-Toe&amp;quot;\n  composite {\n    grid_layout 3, true\n    (1..3).each { |row|\n      (1..3).each { |column|\n        button {\n          layout_data :fill, :fill, true, true\n          text        bind(@tic_tac_toe_board[row, column], :sign)\n          enabled     bind(@tic_tac_toe_board[row, column], :empty)\n          on_widget_selected {\n            @tic_tac_toe_board.mark_box(row, column)\n          }\n        }\n      }\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Recent changes/additions:\n- Nested/indexed property data-binding\n- SWT layout and layout data DSL\n- SWT Color and Font DSL\n- Ability to add Glimmer Custom Widgets\n- SWT Browser widget support\n- Automatic cleanup of data-binding/observers upon disposing a widget\n- Easier SWT style syntax via GSWT class\n- Inclusion of SWT library jars in Ruby gem\n- Improved glimmer/girb commands for running on Windows/Linux/Mac&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/I1AmU1RA7JPw9i_AVvBukdZBN31ch6n1dsHY-meEY-4.png?auto=webp&amp;s=1270d6ab361d09ec78f9d75c3d233642394d0ec1", "width": 135, "height": 40}, "resolutions": [{"url": "https://external-preview.redd.it/I1AmU1RA7JPw9i_AVvBukdZBN31ch6n1dsHY-meEY-4.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=8e4b40e072b242204f2cf482cb43f7f5733505f7", "width": 108, "height": 32}], "variants": {}, "id": "3bWnwkWSMogL4tIS2C7kAdhucXW-BF7X3mLu4aQmnfQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fp62o1", "is_robot_indexable": true, "report_reasons": null, "author": "AndyMaleh", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fp62o1/glimmer_jruby_desktop_ui_dsl_databinding/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fp62o1/glimmer_jruby_desktop_ui_dsl_databinding/", "subreddit_subscribers": 64063, "created_utc": 1585201086.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "When you deploy a new Rails app, you typically face a double-bind. If you use an easy platform like Heroku, you could create problems for yourself as your application scales. If you use a more fully-featured platform, you risk wasting time on ops that could be spent on your product. What if you could have both: an easy deployment option that is easy to scale? In this article, Amos Omondi argues that AWS Elastic Beanstalk gives us both, then he shows us everything we need to know to get a Rails 6 app up and running on EB. [https://www.honeybadger.io/blog/rails-6-aws-elastic-beanstalk/](https://www.honeybadger.io/blog/rails-6-aws-elastic-beanstalk/)", "author_fullname": "t2_4mi05xq2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why and How to Host your Rails 6 App with AWS ElasticBeanstalk and RDS", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fowm39", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 22, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 22, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1585193780.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;When you deploy a new Rails app, you typically face a double-bind. If you use an easy platform like Heroku, you could create problems for yourself as your application scales. If you use a more fully-featured platform, you risk wasting time on ops that could be spent on your product. What if you could have both: an easy deployment option that is easy to scale? In this article, Amos Omondi argues that AWS Elastic Beanstalk gives us both, then he shows us everything we need to know to get a Rails 6 app up and running on EB. &lt;a href=\"https://www.honeybadger.io/blog/rails-6-aws-elastic-beanstalk/\"&gt;https://www.honeybadger.io/blog/rails-6-aws-elastic-beanstalk/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?auto=webp&amp;s=946dfa2b21fed19e3ce735d5cce6050591e546b8", "width": 2048, "height": 1024}, "resolutions": [{"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=95baefaf60da93e911a02b209152fcbb7d6c1cdf", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2aeff025d6e18a37377240b05e3da79e7ec963f3", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=29fc881aa01d339ea0528775350d3518f570c8d5", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8166cf64db3d115696ec6cc461ea988357e864e7", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=31ba2de3e3993c26453d2e74bb3b358f4d7e53e3", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/LTLgvLhYHk_H2MxvebMtWTbqq-zeVK6ghhZX4NkuksY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a2601feb68388948ea92b47b54801fb557460e2b", "width": 1080, "height": 540}], "variants": {}, "id": "K_xfFOANcSVffWV8_XSK1nE4Zws0JCj6BdEwR7tfxBI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fowm39", "is_robot_indexable": true, "report_reasons": null, "author": "Honeybadger-io", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fowm39/why_and_how_to_host_your_rails_6_app_with_aws/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fowm39/why_and_how_to_host_your_rails_6_app_with_aws/", "subreddit_subscribers": 64063, "created_utc": 1585164980.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I was just wondering if anyone had any resources or references on how one would use just Ruby without a framework such as rails to use as a backend and pass data to the front end?", "author_fullname": "t2_15667n1i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Sending data from Ruby to Frontend without Rails?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fp3djx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585217860.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was just wondering if anyone had any resources or references on how one would use just Ruby without a framework such as rails to use as a backend and pass data to the front end?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fp3djx", "is_robot_indexable": true, "report_reasons": null, "author": "blockchain_dev", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fp3djx/sending_data_from_ruby_to_frontend_without_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fp3djx/sending_data_from_ruby_to_frontend_without_rails/", "subreddit_subscribers": 64063, "created_utc": 1585189060.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_zmb2u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Improving Net::HTTP Concurrency by Samuel Williams", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "hide_score": false, "name": "t3_foos7v", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 59, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/uU8ziRoJ2Z8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Improving Net::HTTP Concurrency", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/uU8ziRoJ2Z8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Samuel Williams", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/uU8ziRoJ2Z8/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/swilliamsnz"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/uU8ziRoJ2Z8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/foos7v", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 59, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/46gQJ0V-yKacySgHslXUVmuBrCd79Uz8kMno1pK4LV0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585164814.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/9_6UsSTloKjRjDd4-gP3cQFpPKk7i1N4aZ_gsOavkYM.jpg?auto=webp&amp;s=4f46361987e0244db1005bf15260afd9da32273e", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/9_6UsSTloKjRjDd4-gP3cQFpPKk7i1N4aZ_gsOavkYM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d6a91f70744f5f996ba89438221238934acfe59d", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/9_6UsSTloKjRjDd4-gP3cQFpPKk7i1N4aZ_gsOavkYM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f31b4433188dd4f60010e65fcba0debbc121dad9", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/9_6UsSTloKjRjDd4-gP3cQFpPKk7i1N4aZ_gsOavkYM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6e3b5a74280e655a0c3406317329bef1f4e909cf", "width": 320, "height": 240}], "variants": {}, "id": "KJAyitbr3Yn41B0Wh4PafTUxPRjLgH0N4y9Wb4eyxnw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "foos7v", "is_robot_indexable": true, "report_reasons": null, "author": "geospeck", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/foos7v/improving_nethttp_concurrency_by_samuel_williams/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtube.com/watch?v=uU8ziRoJ2Z8&amp;feature=youtu.be", "subreddit_subscribers": 64063, "created_utc": 1585136014.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Improving Net::HTTP Concurrency", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/uU8ziRoJ2Z8?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Samuel Williams", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/uU8ziRoJ2Z8/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/swilliamsnz"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Transfer Accelerated S3 bucket allows you to upload/download faster. The setup should be simple in theory:\n\nThe endpoint changes from:\n\n`mybucket.s3.us-east-1.amazonaws.com`\n\nto:\n\n`mybucket.s3-accelerate.amazonaws.com`\n\nIn Ruby on Rails config/storage.yml the environment variables look like this:\n\n`amazon:`\n\n`service: S3`\n\n`access_key_id: &lt;%= ENV['AWS_ACCESS_KEY_ID'] %&gt;`\n\n`secret_access_key: &lt;%= ENV['AWS_SECRET_ACCESS_KEY'] %&gt;`\n\n`region: &lt;%= ENV['AWS_REGION'] %&gt;`\n\n`bucket: &lt;%= ENV['AWS_BUCKET'] %&gt;`\n\nThe problem is the pattern is different, so I can't just change `AWS_REGION`. There is an extra `.s3` in there. Do you know how to implement transfer acceleration?", "author_fullname": "t2_e1dac", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Setup Ruby on Rails Active Storage for Transfer Accelerated S3", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fp5jln", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1585198836.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585227291.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Transfer Accelerated S3 bucket allows you to upload/download faster. The setup should be simple in theory:&lt;/p&gt;\n\n&lt;p&gt;The endpoint changes from:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;mybucket.s3.us-east-1.amazonaws.com&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;to:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;mybucket.s3-accelerate.amazonaws.com&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;In Ruby on Rails config/storage.yml the environment variables look like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;amazon:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;service: S3&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;access_key_id: &amp;lt;%= ENV[&amp;#39;AWS_ACCESS_KEY_ID&amp;#39;] %&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;secret_access_key: &amp;lt;%= ENV[&amp;#39;AWS_SECRET_ACCESS_KEY&amp;#39;] %&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;region: &amp;lt;%= ENV[&amp;#39;AWS_REGION&amp;#39;] %&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;bucket: &amp;lt;%= ENV[&amp;#39;AWS_BUCKET&amp;#39;] %&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;The problem is the pattern is different, so I can&amp;#39;t just change &lt;code&gt;AWS_REGION&lt;/code&gt;. There is an extra &lt;code&gt;.s3&lt;/code&gt; in there. Do you know how to implement transfer acceleration?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fp5jln", "is_robot_indexable": true, "report_reasons": null, "author": "ivanraszl", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fp5jln/setup_ruby_on_rails_active_storage_for_transfer/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fp5jln/setup_ruby_on_rails_active_storage_for_transfer/", "subreddit_subscribers": 64063, "created_utc": 1585198491.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Having some trouble running 2 worded .rb files. I am using the GNOME text editor and running the code from the Linux terminal. Does anyone know why it refuses to run? Sorry for the beginner question! ", "author_fullname": "t2_5jtubn7n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "2 word file", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fp0df0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585206522.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Having some trouble running 2 worded .rb files. I am using the GNOME text editor and running the code from the Linux terminal. Does anyone know why it refuses to run? Sorry for the beginner question! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fp0df0", "is_robot_indexable": true, "report_reasons": null, "author": "Y01NKUS", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fp0df0/2_word_file/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fp0df0/2_word_file/", "subreddit_subscribers": 64063, "created_utc": 1585177722.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_kvwx9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "render_async Fires Events By Default", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_fosp1m", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/5SDx7WLJ16ZAaKtpCZ-xctEtXsXEGxU5L96b2p9ieVg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585180670.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "pragmaticpineapple.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/acZbh3EACOmVjJ45F_hzBgXY-pkIz60BUIkRDYzSUec.jpg?auto=webp&amp;s=ab80fe8d49de4cf3cd6ac45f6106acff6ab143a6", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/acZbh3EACOmVjJ45F_hzBgXY-pkIz60BUIkRDYzSUec.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f825dcd078f7455706efa096fbbde95a31e6b103", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/acZbh3EACOmVjJ45F_hzBgXY-pkIz60BUIkRDYzSUec.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=22f98b78127fe8d8e170d6a195dd7efad2dd60fb", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/acZbh3EACOmVjJ45F_hzBgXY-pkIz60BUIkRDYzSUec.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9a9d2dcd669fbc607d04b3f24a70db3d342d7390", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/acZbh3EACOmVjJ45F_hzBgXY-pkIz60BUIkRDYzSUec.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0d1dbb7569480ae47a896dcb58ad3f3f7096f9f2", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/acZbh3EACOmVjJ45F_hzBgXY-pkIz60BUIkRDYzSUec.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3c22f36b1475ab7be7305eea16bede716ac39c7b", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/acZbh3EACOmVjJ45F_hzBgXY-pkIz60BUIkRDYzSUec.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e4995faf38bc73c3b8e1f759c2b6c63ce7686fee", "width": 1080, "height": 567}], "variants": {}, "id": "d0OKUZUeY_iFY6PeAEnbWQLz_3Rb-Z0uHLG2O-QPKlo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fosp1m", "is_robot_indexable": true, "report_reasons": null, "author": "nikolalsvk", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fosp1m/render_async_fires_events_by_default/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://pragmaticpineapple.com/render-async-fires-events-by-default/", "subreddit_subscribers": 64063, "created_utc": 1585151870.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lc0kps6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The return Keyword in Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 78, "hide_score": false, "name": "t3_foq6ww", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/6bD2S_QzT4WNVtvGAHJnnmZGCbUAIZpgTRbSIS8TM8o.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1585171382.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/M-vPp3yvT3jhv1ocgKoNdB4zOGNEQNmP2bmxfvUhXeo.jpg?auto=webp&amp;s=136f361f1149bb4cd45b2373f2f7dda233e958a6", "width": 1200, "height": 675}, "resolutions": [{"url": "https://external-preview.redd.it/M-vPp3yvT3jhv1ocgKoNdB4zOGNEQNmP2bmxfvUhXeo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7ea1980d01017b7469abe0cdd265c8656849a4cb", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/M-vPp3yvT3jhv1ocgKoNdB4zOGNEQNmP2bmxfvUhXeo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=acb383d78f732ac73a4bc38c3e678ed953c971b9", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/M-vPp3yvT3jhv1ocgKoNdB4zOGNEQNmP2bmxfvUhXeo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ede9a3e5c926a6a3841d40b135fd1ee3f13b7e3f", "width": 320, "height": 180}, {"url": "https://external-preview.redd.it/M-vPp3yvT3jhv1ocgKoNdB4zOGNEQNmP2bmxfvUhXeo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=33d3f1aa9709f104ed5cbed3923a39ccf63b6871", "width": 640, "height": 360}, {"url": "https://external-preview.redd.it/M-vPp3yvT3jhv1ocgKoNdB4zOGNEQNmP2bmxfvUhXeo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d0b7bd03878fb62cf93d3f0a0b44d94bf741a327", "width": 960, "height": 540}, {"url": "https://external-preview.redd.it/M-vPp3yvT3jhv1ocgKoNdB4zOGNEQNmP2bmxfvUhXeo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=680c8a54d96f63cad3dc7c6e0d5a1c439b395d5d", "width": 1080, "height": 607}], "variants": {}, "id": "Tet3Hkoq8QAxc9swKXMvy_9Do2P_64o6LiuIX4j72e8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "foq6ww", "is_robot_indexable": true, "report_reasons": null, "author": "mehdifarsi", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/foq6ww/the_return_keyword_in_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/rubycademy/the-return-keyword-in-ruby-df0a7f578fcb", "subreddit_subscribers": 64063, "created_utc": 1585142582.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "To illustrate my question:\n\n\n```\nh = Hash.new(\"some text\")\nh[\"a\"].upcase!\nh[\"b\"] # =&gt; \"SOME TEXT\"\n```\n\nModifying one key's value will apply to all other keys' values because it's the same place in memory. That's why we use `h = Hash.new { |hash, key| hash[key] = \"some text: #{key}\" }` for default values that are unique to each key. However,\n\n```\nh = Hash.new(0)\nh[\"a\"] += 1\nh[\"b\"] # =&gt; 0\n```\n\nI didn't have to pass the block `{ |hash, key| hash[key] = ... }` into `Hash.new` and yet `h[\"b\"]` remained as 0 while `h[\"a\"]` changed. After seeing the behavior of `Hash.new(\"some text\")` I would expect `h[\"b\"]` to also be `1`.\n\nThanks for any explanations or pointing out any holes in my understanding!", "author_fullname": "t2_swe0plr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why does Hash.new(0) allow for unique values but Hash.new(\"some text\") makes all keys' values point to the same place in memory?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fod8gx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1585084313.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585112909.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;To illustrate my question:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nh = Hash.new(&amp;quot;some text&amp;quot;)\nh[&amp;quot;a&amp;quot;].upcase!\nh[&amp;quot;b&amp;quot;] # =&amp;gt; &amp;quot;SOME TEXT&amp;quot;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Modifying one key&amp;#39;s value will apply to all other keys&amp;#39; values because it&amp;#39;s the same place in memory. That&amp;#39;s why we use &lt;code&gt;h = Hash.new { |hash, key| hash[key] = &amp;quot;some text: #{key}&amp;quot; }&lt;/code&gt; for default values that are unique to each key. However,&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nh = Hash.new(0)\nh[&amp;quot;a&amp;quot;] += 1\nh[&amp;quot;b&amp;quot;] # =&amp;gt; 0\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I didn&amp;#39;t have to pass the block &lt;code&gt;{ |hash, key| hash[key] = ... }&lt;/code&gt; into &lt;code&gt;Hash.new&lt;/code&gt; and yet &lt;code&gt;h[&amp;quot;b&amp;quot;]&lt;/code&gt; remained as 0 while &lt;code&gt;h[&amp;quot;a&amp;quot;]&lt;/code&gt; changed. After seeing the behavior of &lt;code&gt;Hash.new(&amp;quot;some text&amp;quot;)&lt;/code&gt; I would expect &lt;code&gt;h[&amp;quot;b&amp;quot;]&lt;/code&gt; to also be &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Thanks for any explanations or pointing out any holes in my understanding!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fod8gx", "is_robot_indexable": true, "report_reasons": null, "author": "Pzrjager", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/fod8gx/why_does_hashnew0_allow_for_unique_values_but/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/fod8gx/why_does_hashnew0_allow_for_unique_values_but/", "subreddit_subscribers": 64063, "created_utc": 1585084109.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fod8gx", "before": null}}