{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - November", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jlsywo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 36, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1604217975.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlsywo", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 18, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jlsywo/whos_hiring_typescript_developers_november/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/jlsywo/whos_hiring_typescript_developers_november/", "subreddit_subscribers": 51929, "created_utc": 1604189175.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I come from a background where I never had to deal with generics, so they're still quite a foreign concept to me.\n\nDoes anyone know a good guide/tutorial on generics, from zero to advanced? I really want to understand this part of TS so I can have a more complete experience with it.\n\nThanks", "author_fullname": "t2_4clev7a3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Guides for truly understanding generics in TS", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_josnlh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 29, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 29, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604644232.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I come from a background where I never had to deal with generics, so they&amp;#39;re still quite a foreign concept to me.&lt;/p&gt;\n\n&lt;p&gt;Does anyone know a good guide/tutorial on generics, from zero to advanced? I really want to understand this part of TS so I can have a more complete experience with it.&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "josnlh", "is_robot_indexable": true, "report_reasons": null, "author": "satinbro", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/josnlh/guides_for_truly_understanding_generics_in_ts/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/josnlh/guides_for_truly_understanding_generics_in_ts/", "subreddit_subscribers": 51929, "created_utc": 1604615432.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Here is the [demo](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgLIE8DCiAWKDeAUMsnAFzJEkkBGFV1JCFAzmFKAOYDaAugNzFGyACat2XQYwC+U5LMLTCCAPYg2yMDi4sAKioBKEALYqAbigC8ybgCIwhk+YgBGWwBpk9x6YsAmWwFlNQ0EXAgKDGwEPGRrBnJKIVp6ZOpmG28jX1cPLwcABSgIFmgLN08sp3887yKSsogA3nc0kjEvYChigBsIMzhwWzSlEiUFQjB0AAcUVDhp2ZFdKEGWGBUoYwAeXWQIAA9IEBEWSmkAPjikkm4AaWRQZABrCHQVGGRdXgB+SIWlis1hstrt7rwrgAfZAAChh0zgq2MLAounBAEo4ldBuh0YIJjAAK4gBBgYBqTSrCxQUrbAwXGFhGIRZAGTzsYGbYwAeRoACsIKT-osIMtVuoQTt6ZiGMUwISoCBkLyBaSAHQQcAcEowjkSrkqwVgdFq4oiQlIGFmi0QIH6rYAORUIggniZeDxikIhAA9D7kDgVAB3UQqZAASU0MxQWmAZ0AvBuAcR3guowMhrUg7esuU6XddGeFc66bHrs1s7m92eKy8YAGpwHqEiC8TGWK4MVSpygl6uSivoXgUEDOlDSa7uiBFuSdjQgCBB6J4euNqxpKazD6UzlbZdNuKWay2IkkslqYbCZA-Lf2usNpsw4cu9FtZAUDnU0q63tc3fFx8QT0hDlBUlQYEg1Qgici1aRhuFLPs3kHZA5wXcJfyEBQJnfaBaSicIGQnTwElSRg6BuYQMgfEdWyuf81RgYAekgKA4TYDgQE4GjkAAQljDi9B8Zw1VABBGxdFgYTYrh0WfGQMMUT0gA)\n\nI am trying to type this function \n```js\nconst reduceTransformNode = (cacheNode, [transformKey, transformValue]) =&gt; {\n  const { [transformKey]: node } = cacheNode;\n  const newCacheValue =\n    typeof transformValue === \"function\"\n      ? transformValue(node)\n      : traverse(transformValue, node);\n\n  return {\n    ...cacheNode,\n    [transformKey]: newCacheValue\n  };\n};\n```\n\nI cannot seem to solve it because there seems to be a circular dependency between `traverse` and `reduceTransformNode` \n\nThis is one [solution](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgLIE8DCiAWKDeAUMsnAFzJEkkBGFV1JCFAzmFKAOYDaAugDTFGyACat2XQYwC+Q2bIQB7EG2RgcXFgBVFAJQgBbRQDcUAXmTcA5GD2GTEAIxX+yG3aOmATFd4BuQiUVMGQEXAgKDGwEPGQLBnJKIVp6ZGTqZkt3fU8nFzdbAAUoCBZoU2dXbPtvfPdi0vKIHwE04VEKACJgKBKAGwhjOHBOtuppKWR5QkIwdAAHFFQ4ecWRLShhlhhFKAMAHi1kCAAPSBARFkppAD44pJJuAGlkUGQAawh0RRhkLV4APyRFZrDZbHZ7Q7PXh3AA+yAAFAj5nBNgYWBQtNCAJRxO7DdDYwiyQgwACuIAQYGAymQJREZKQYJUEIMADlFCIIIdjmcIBcrvhLJ90OIOCBOLwKASpjcEWEYhAOVzMa5uOxwbsDE8vq4NSytQA1OB9MkQKWWNjiziuAm8bGYh6hZSqIXqzYGvY69AWkCclDSe4KvDKiABJgukIgCAAd2ieGNpvM6Tmix+ag92yNJrNcTMFk65Mp1OUnXSJABGc1e0TZoRfq5RPaFA1pigZQR+qzNZzEFcDYg2ICQhKYDJUBATpIADpZ8Glf7Jo8u6zvb7Y-GILWIHIAtJhzMi1SaZPW9AyvtdHL52RdHrM6yAPI0ABWECpwNWEHWD61l5uDrILoTqjuOk7Pm+VLTvyEilJ2v57BB75gNi070oyEAIuhTIIeyi6hOEQ7EjMQSqAY6DMt2BhIR+aAgt+lGsvsUThHc8RCIkDApFOGQUPW-q4mYdwDtOMDAH0kBQAiVp4sgACE6iaDoOQONOoAIKaXIsNJ7C4k24xyMRgSRnSpRkhJ9xnu23IsYq17hK45GMVqNEocZKiKAM059IonBYWZElEoQQA) I found that would work but not ideal. \n\n```ts\nfunction reduceTransformNode&lt;T extends { [key: string]: any }&gt;(cacheNode: T, [transformKey, transformValue]: [string, any]): T {\n  const { [transformKey]: node } = cacheNode;\n  const newCacheValue =\n    typeof transformValue === \"function\"\n      ? transformValue(node)\n      : traverse(transformValue, node);\n\n  return {\n    ...cacheNode,\n    [transformKey]: newCacheValue\n  };\n};\n```\n\nI don't want to have `any` in the code. Can anyone give this trick TypeScript problem a try", "author_fullname": "t2_5aug94f9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do I add proper typing to this function with Object.entries", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_joxmf9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604662557.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Here is the &lt;a href=\"https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgLIE8DCiAWKDeAUMsnAFzJEkkBGFV1JCFAzmFKAOYDaAugNzFGyACat2XQYwC+U5LMLTCCAPYg2yMDi4sAKioBKEALYqAbigC8ybgCIwhk+YgBGWwBpk9x6YsAmWwFlNQ0EXAgKDGwEPGRrBnJKIVp6ZOpmG28jX1cPLwcABSgIFmgLN08sp3887yKSsogA3nc0kjEvYChigBsIMzhwWzSlEiUFQjB0AAcUVDhp2ZFdKEGWGBUoYwAeXWQIAA9IEBEWSmkAPjikkm4AaWRQZABrCHQVGGRdXgB+SIWlis1hstrt7rwrgAfZAAChh0zgq2MLAounBAEo4ldBuh0YIJjAAK4gBBgYBqTSrCxQUrbAwXGFhGIRZAGTzsYGbYwAeRoACsIKT-osIMtVuoQTt6ZiGMUwISoCBkLyBaSAHQQcAcEowjkSrkqwVgdFq4oiQlIGFmi0QIH6rYAORUIggniZeDxikIhAA9D7kDgVAB3UQqZAASU0MxQWmAZ0AvBuAcR3guowMhrUg7esuU6XddGeFc66bHrs1s7m92eKy8YAGpwHqEiC8TGWK4MVSpygl6uSivoXgUEDOlDSa7uiBFuSdjQgCBB6J4euNqxpKazD6UzlbZdNuKWay2IkkslqYbCZA-Lf2usNpsw4cu9FtZAUDnU0q63tc3fFx8QT0hDlBUlQYEg1Qgici1aRhuFLPs3kHZA5wXcJfyEBQJnfaBaSicIGQnTwElSRg6BuYQMgfEdWyuf81RgYAekgKA4TYDgQE4GjkAAQljDi9B8Zw1VABBGxdFgYTYrh0WfGQMMUT0gA\"&gt;demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I am trying to type this function \n```js\nconst reduceTransformNode = (cacheNode, [transformKey, transformValue]) =&amp;gt; {\n  const { [transformKey]: node } = cacheNode;\n  const newCacheValue =\n    typeof transformValue === &amp;quot;function&amp;quot;\n      ? transformValue(node)\n      : traverse(transformValue, node);&lt;/p&gt;\n\n&lt;p&gt;return {\n    ...cacheNode,\n    [transformKey]: newCacheValue\n  };\n};\n```&lt;/p&gt;\n\n&lt;p&gt;I cannot seem to solve it because there seems to be a circular dependency between &lt;code&gt;traverse&lt;/code&gt; and &lt;code&gt;reduceTransformNode&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;This is one &lt;a href=\"https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgLIE8DCiAWKDeAUMsnAFzJEkkBGFV1JCFAzmFKAOYDaAugDTFGyACat2XQYwC+Q2bIQB7EG2RgcXFgBVFAJQgBbRQDcUAXmTcA5GD2GTEAIxX+yG3aOmATFd4BuQiUVMGQEXAgKDGwEPGQLBnJKIVp6ZGTqZkt3fU8nFzdbAAUoCBZoU2dXbPtvfPdi0vKIHwE04VEKACJgKBKAGwhjOHBOtuppKWR5QkIwdAAHFFQ4ecWRLShhlhhFKAMAHi1kCAAPSBARFkppAD44pJJuAGlkUGQAawh0RRhkLV4APyRFZrDZbHZ7Q7PXh3AA+yAAFAj5nBNgYWBQtNCAJRxO7DdDYwiyQgwACuIAQYGAymQJREZKQYJUEIMADlFCIIIdjmcIBcrvhLJ90OIOCBOLwKASpjcEWEYhAOVzMa5uOxwbsDE8vq4NSytQA1OB9MkQKWWNjiziuAm8bGYh6hZSqIXqzYGvY69AWkCclDSe4KvDKiABJgukIgCAAd2ieGNpvM6Tmix+ag92yNJrNcTMFk65Mp1OUnXSJABGc1e0TZoRfq5RPaFA1pigZQR+qzNZzEFcDYg2ICQhKYDJUBATpIADpZ8Glf7Jo8u6zvb7Y-GILWIHIAtJhzMi1SaZPW9AyvtdHL52RdHrM6yAPI0ABWECpwNWEHWD61l5uDrILoTqjuOk7Pm+VLTvyEilJ2v57BB75gNi070oyEAIuhTIIeyi6hOEQ7EjMQSqAY6DMt2BhIR+aAgt+lGsvsUThHc8RCIkDApFOGQUPW-q4mYdwDtOMDAH0kBQAiVp4sgACE6iaDoOQONOoAIKaXIsNJ7C4k24xyMRgSRnSpRkhJ9xnu23IsYq17hK45GMVqNEocZKiKAM059IonBYWZElEoQQA\"&gt;solution&lt;/a&gt; I found that would work but not ideal. &lt;/p&gt;\n\n&lt;p&gt;```ts\nfunction reduceTransformNode&amp;lt;T extends { [key: string]: any }&amp;gt;(cacheNode: T, [transformKey, transformValue]: [string, any]): T {\n  const { [transformKey]: node } = cacheNode;\n  const newCacheValue =\n    typeof transformValue === &amp;quot;function&amp;quot;\n      ? transformValue(node)\n      : traverse(transformValue, node);&lt;/p&gt;\n\n&lt;p&gt;return {\n    ...cacheNode,\n    [transformKey]: newCacheValue\n  };\n};\n```&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t want to have &lt;code&gt;any&lt;/code&gt; in the code. Can anyone give this trick TypeScript problem a try&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "joxmf9", "is_robot_indexable": true, "report_reasons": null, "author": "zhenghao17", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/joxmf9/how_do_i_add_proper_typing_to_this_function_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/joxmf9/how_do_i_add_proper_typing_to_this_function_with/", "subreddit_subscribers": 51929, "created_utc": 1604633757.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm trying to make a mapped type based on two given types. I want the mapped type to have all keys that two given types have but respect and modifiers on those keys.\n\nMy first attempt at such a type was:\n\n    type Merge1&lt;T1, T2&gt; = {\n        [K in keyof T1 | keyof T2]: SomeType;\n    }\n\nBut the modifiers obviously become lost in this.\n\nI then tried:\n\n    type Merge2&lt;T1, T2&gt; = {\n        [K in keyof (T1 &amp; T2)]: SomeType;\n    }\n\nAnd this works in almost every single case. Yay for almost.\n\nThe case were it doesn't work is with const assertions and I have no idea why. I initially thought the reason why was because `\"a\" &amp; \"b\"` is `never` but `string &amp; number` should also be `never` and it works fine in this case.\n\n[Here's a playground link](https://www.typescriptlang.org/play?#code/PQ18ZXTUFAgAQBUCeAHApogkgcgFtEAXAJ1QEsA7AcxIHtEATTAYwBsBDUzAOjjjEM2ALKZSNTAEYAPMikAaFACYAfIgC8iAN5xE+xAG0A0omqIA1plT0AZiimIAPpet2VAXQBciAMr0CTDQsAG44AF8BAxJhRDEJTGU5RRV1LV1o6JMzKlcbewAKeUQAMhUASm8-AKDhMOjIhFhmltbmpsQAEQBXAgJUFFiAWjNiPABnRCp6YjMCdHpSYk4qYn5BWP9A4Ox0xE4fbqoLaYB3XPCwprab25aO5Exx4mo6HfGBISxEAA1NHTgAEgeJwmPQqOwBrZ6PQfM9SK8FHoDAAjbhwsiIiJXL7YACa-10gOhsKmvRR4iR0TRpAA-BiEbQkZdPrEfqxwc9CUCQWCIVCYT4AEScFGsIVU1HoxBCli2CXY1nfPEcqhc9JAkk+ACskv0NPpMpoAAsKAqWdc7lbraAHk9iB8OiJ6EwKLZxJNuNh2PRnvxcSh7VIAIL-eKSWQ-JR41RhAOPZ5SABCYfEEZk7M5xGjquesYESAA6osLJMOaQeKxiJD-bEE8RlKGtOHEhno-mOp16E8qHhZqcS7XvvXlCnm2nW5m1dnECqs7HEEh0o0iyWy4tK9XUEPsCOAMKphJJKfPJQn4j5+P25SdQ+SJJz6c5+dhIA) so you can see what I'm talking about.\n\nAnyone have any idea on how I can fix my type? Or is this a bug in TypeScript itself?\n\nEdit: Probably not the most accurate title now that I think about it, but oh well. If you're reading this then it got the job done.", "author_fullname": "t2_15uusv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help: Mapped Type modifiers are being lost", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_joyh92", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604666011.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to make a mapped type based on two given types. I want the mapped type to have all keys that two given types have but respect and modifiers on those keys.&lt;/p&gt;\n\n&lt;p&gt;My first attempt at such a type was:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Merge1&amp;lt;T1, T2&amp;gt; = {\n    [K in keyof T1 | keyof T2]: SomeType;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But the modifiers obviously become lost in this.&lt;/p&gt;\n\n&lt;p&gt;I then tried:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Merge2&amp;lt;T1, T2&amp;gt; = {\n    [K in keyof (T1 &amp;amp; T2)]: SomeType;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this works in almost every single case. Yay for almost.&lt;/p&gt;\n\n&lt;p&gt;The case were it doesn&amp;#39;t work is with const assertions and I have no idea why. I initially thought the reason why was because &lt;code&gt;&amp;quot;a&amp;quot; &amp;amp; &amp;quot;b&amp;quot;&lt;/code&gt; is &lt;code&gt;never&lt;/code&gt; but &lt;code&gt;string &amp;amp; number&lt;/code&gt; should also be &lt;code&gt;never&lt;/code&gt; and it works fine in this case.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play?#code/PQ18ZXTUFAgAQBUCeAHApogkgcgFtEAXAJ1QEsA7AcxIHtEATTAYwBsBDUzAOjjjEM2ALKZSNTAEYAPMikAaFACYAfIgC8iAN5xE+xAG0A0omqIA1plT0AZiimIAPpet2VAXQBciAMr0CTDQsAG44AF8BAxJhRDEJTGU5RRV1LV1o6JMzKlcbewAKeUQAMhUASm8-AKDhMOjIhFhmltbmpsQAEQBXAgJUFFiAWjNiPABnRCp6YjMCdHpSYk4qYn5BWP9A4Ox0xE4fbqoLaYB3XPCwprab25aO5Exx4mo6HfGBISxEAA1NHTgAEgeJwmPQqOwBrZ6PQfM9SK8FHoDAAjbhwsiIiJXL7YACa-10gOhsKmvRR4iR0TRpAA-BiEbQkZdPrEfqxwc9CUCQWCIVCYT4AEScFGsIVU1HoxBCli2CXY1nfPEcqhc9JAkk+ACskv0NPpMpoAAsKAqWdc7lbraAHk9iB8OiJ6EwKLZxJNuNh2PRnvxcSh7VIAIL-eKSWQ-JR41RhAOPZ5SABCYfEEZk7M5xGjquesYESAA6osLJMOaQeKxiJD-bEE8RlKGtOHEhno-mOp16E8qHhZqcS7XvvXlCnm2nW5m1dnECqs7HEEh0o0iyWy4tK9XUEPsCOAMKphJJKfPJQn4j5+P25SdQ+SJJz6c5+dhIA\"&gt;Here&amp;#39;s a playground link&lt;/a&gt; so you can see what I&amp;#39;m talking about.&lt;/p&gt;\n\n&lt;p&gt;Anyone have any idea on how I can fix my type? Or is this a bug in TypeScript itself?&lt;/p&gt;\n\n&lt;p&gt;Edit: Probably not the most accurate title now that I think about it, but oh well. If you&amp;#39;re reading this then it got the job done.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "joyh92", "is_robot_indexable": true, "report_reasons": null, "author": "SlayMaster3000", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/joyh92/help_mapped_type_modifiers_are_being_lost/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/joyh92/help_mapped_type_modifiers_are_being_lost/", "subreddit_subscribers": 51929, "created_utc": 1604637211.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "In VSCode, can I force a TypeScript file that exists outside of TypeScript project to be interpreted in strict mode?", "author_fullname": "t2_15uusv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Strict Mode without config file?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jotkaz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604647315.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In VSCode, can I force a TypeScript file that exists outside of TypeScript project to be interpreted in strict mode?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jotkaz", "is_robot_indexable": true, "report_reasons": null, "author": "SlayMaster3000", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jotkaz/strict_mode_without_config_file/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jotkaz/strict_mode_without_config_file/", "subreddit_subscribers": 51929, "created_utc": 1604618515.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have a type `type MyMap = Map&lt;string, string&gt;` .\n\n* When I attempt to implement this type as `const defaultMap:MyMap = new Map()` , I get an error `Only a void function can be called with the 'new' keyword.ts(2350)`\n* I changed it to `Map()` and I get `Type 'Map&lt;unknown, unknown&gt;' is missing the following properties from type 'Map&lt;string, string&gt;': [Symbol.iterator], [Symbol.toStringTag]ts(2739)`\n* I changed it to `Map&lt;string, string&gt;()` and I got the same error as above", "author_fullname": "t2_5md7gnwi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you initialize an \"empty\" map?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jopxz2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604635489.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a type &lt;code&gt;type MyMap = Map&amp;lt;string, string&amp;gt;&lt;/code&gt; .&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;When I attempt to implement this type as &lt;code&gt;const defaultMap:MyMap = new Map()&lt;/code&gt; , I get an error &lt;code&gt;Only a void function can be called with the &amp;#39;new&amp;#39; keyword.ts(2350)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;I changed it to &lt;code&gt;Map()&lt;/code&gt; and I get &lt;code&gt;Type &amp;#39;Map&amp;lt;unknown, unknown&amp;gt;&amp;#39; is missing the following properties from type &amp;#39;Map&amp;lt;string, string&amp;gt;&amp;#39;: [Symbol.iterator], [Symbol.toStringTag]ts(2739)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;I changed it to &lt;code&gt;Map&amp;lt;string, string&amp;gt;()&lt;/code&gt; and I got the same error as above&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jopxz2", "is_robot_indexable": true, "report_reasons": null, "author": "menina97", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jopxz2/how_do_you_initialize_an_empty_map/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jopxz2/how_do_you_initialize_an_empty_map/", "subreddit_subscribers": 51929, "created_utc": 1604606689.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I am looking for the best/shortest way to initialize an object with values and declare its structure, including optional properties. E.g. I want to go from here:\n\n    interface IPerson {\n      name: string;\n      phone?: string;\n    }\n    \n    const dan: IPerson = {\n      name: \"Dan\",\n    };\n\nto a solution that is similar to this, but even shorter:\n\n    const dan = {\n      name: \"Dan\",\n      phone: undefined as undefined | string,\n    };\n\nSolutions I have come up with so far...\n\n**A: Explicit \"undefined\" value.** Too verbose for my liking because it requires spelling out \"undefined\", and twice. A concise `?` style syntax would be nice, but is not supported here.\n\n    const person =\u00a0{\n      name:\u00a0\"Dan\",\n      phone:\u00a0undefined as undefined | string,\n    };\n\n**B: Helper function** makes code nicer to read and less verbose.\n\n    export function optional&lt;T&gt;(init?: T): undefined | T {\n      return init;\n    }\n    \n    const dan = {\n      name: \"Dan\",\n      phone: optional&lt;string&gt;()\n    }\n\nIs there a nice, \"in-language\" solution to achieve a more concise syntax?", "author_fullname": "t2_5vk1n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Short syntax for implicit type declaration with optional properties?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_joigd5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1604582027.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604610451.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am looking for the best/shortest way to initialize an object with values and declare its structure, including optional properties. E.g. I want to go from here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;interface IPerson {\n  name: string;\n  phone?: string;\n}\n\nconst dan: IPerson = {\n  name: &amp;quot;Dan&amp;quot;,\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to a solution that is similar to this, but even shorter:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const dan = {\n  name: &amp;quot;Dan&amp;quot;,\n  phone: undefined as undefined | string,\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Solutions I have come up with so far...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;A: Explicit &amp;quot;undefined&amp;quot; value.&lt;/strong&gt; Too verbose for my liking because it requires spelling out &amp;quot;undefined&amp;quot;, and twice. A concise &lt;code&gt;?&lt;/code&gt; style syntax would be nice, but is not supported here.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const person =\u00a0{\n  name:\u00a0&amp;quot;Dan&amp;quot;,\n  phone:\u00a0undefined as undefined | string,\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;B: Helper function&lt;/strong&gt; makes code nicer to read and less verbose.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export function optional&amp;lt;T&amp;gt;(init?: T): undefined | T {\n  return init;\n}\n\nconst dan = {\n  name: &amp;quot;Dan&amp;quot;,\n  phone: optional&amp;lt;string&amp;gt;()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is there a nice, &amp;quot;in-language&amp;quot; solution to achieve a more concise syntax?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "joigd5", "is_robot_indexable": true, "report_reasons": null, "author": "binaryhero", "discussion_type": null, "num_comments": 37, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/joigd5/short_syntax_for_implicit_type_declaration_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/joigd5/short_syntax_for_implicit_type_declaration_with/", "subreddit_subscribers": 51929, "created_utc": 1604581651.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_c4nskur", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a VSCode plugin that does GoTo Definition faster than VSCode/TSServer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jo3z86", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 51, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 51, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/IDWyGlyc-EgS-Drw9rG7tRm4tC5-z5riIR6JpzCktCQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604549514.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "marketplace.visualstudio.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://marketplace.visualstudio.com/items?itemName=verydanny.smart-goto", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/wkfL5ZjPCm8C1OZEmaSZafcBZjg2hxBauCqnHoXQJyU.jpg?auto=webp&amp;s=57ae9f9ca36e324b85279f8264cf0c42eddaf135", "width": 225, "height": 225}, "resolutions": [{"url": "https://external-preview.redd.it/wkfL5ZjPCm8C1OZEmaSZafcBZjg2hxBauCqnHoXQJyU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4e89af79f018c3c71cb350a923bb7870e1a19d0a", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/wkfL5ZjPCm8C1OZEmaSZafcBZjg2hxBauCqnHoXQJyU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0c10a0978ea70907196d967def0b8574f2761d89", "width": 216, "height": 216}], "variants": {}, "id": "wwW-k0cUacCnGGv7Cgw_Fk2QdU8VZNOrk1y0UqSemjc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jo3z86", "is_robot_indexable": true, "report_reasons": null, "author": "verydan", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jo3z86/i_made_a_vscode_plugin_that_does_goto_definition/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://marketplace.visualstudio.com/items?itemName=verydanny.smart-goto", "subreddit_subscribers": 51929, "created_utc": 1604520714.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "How can I define the type of class so that when I use that type when I define the class there will be a separation between the instance type and the prototype instance?\nExample :\n```\ninterface IMyClass {\n    //instance types\n    a : string\n    //prototype types\n    b : () =&gt; void\n    c : () =&gt; void\n}\nclass myClass implements IMyClass {\n    constructor() {\n        this.a = \"\";\n        //it has to lint error since c has to be on the prototype\n        this.c = () =&gt; undefined\n    }\n    b() {\n        return undefined\n    }\n    //it has to lint error because c is missing\n}\n```", "author_fullname": "t2_1ihbqq55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Define class type. How to separate the types for instance from the types of the prototype?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jo6zje", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604559484.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;How can I define the type of class so that when I use that type when I define the class there will be a separation between the instance type and the prototype instance?\nExample :\n&lt;code&gt;\ninterface IMyClass {\n    //instance types\n    a : string\n    //prototype types\n    b : () =&amp;gt; void\n    c : () =&amp;gt; void\n}\nclass myClass implements IMyClass {\n    constructor() {\n        this.a = &amp;quot;&amp;quot;;\n        //it has to lint error since c has to be on the prototype\n        this.c = () =&amp;gt; undefined\n    }\n    b() {\n        return undefined\n    }\n    //it has to lint error because c is missing\n}\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jo6zje", "is_robot_indexable": true, "report_reasons": null, "author": "liaguris", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jo6zje/define_class_type_how_to_separate_the_types_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jo6zje/define_class_type_how_to_separate_the_types_for/", "subreddit_subscribers": 51929, "created_utc": 1604530684.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "If I have a function type alias like this for example:\n\n    type F = &lt;T1, T2&gt;(param1: T1, param2: T2) =&gt; string;\n\nIs it possible for me to declare a function declaration like this:\n\n    function foo(param1, param2) {\n      // ...\n    }\n\nto be of type `F`?\n\nI know I can cast an expression like this:\n\n    const foo = ((param1, param2) =&gt; {\n      // ...\n    }) as F;\n\nbut I want to keep the function as a declaration if possible.\n\nAny recommendations?", "author_fullname": "t2_15uusv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How can I declare a function declaration's type via a type alias?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jo6x98", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1604532282.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604559273.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If I have a function type alias like this for example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type F = &amp;lt;T1, T2&amp;gt;(param1: T1, param2: T2) =&amp;gt; string;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is it possible for me to declare a function declaration like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function foo(param1, param2) {\n  // ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to be of type &lt;code&gt;F&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;I know I can cast an expression like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const foo = ((param1, param2) =&amp;gt; {\n  // ...\n}) as F;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I want to keep the function as a declaration if possible.&lt;/p&gt;\n\n&lt;p&gt;Any recommendations?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jo6x98", "is_robot_indexable": true, "report_reasons": null, "author": "SlayMaster3000", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jo6x98/how_can_i_declare_a_function_declarations_type/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jo6x98/how_can_i_declare_a_function_declarations_type/", "subreddit_subscribers": 51929, "created_utc": 1604530473.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi all!  Working on a thing that I want to use the latest everything possible, latest node, latest browsers, most advanced settings, etc.  Want everything to be *modern*.\n\nI've got my typescript settings for module and target as \"esnext\", and it does generate code, but when I try to add an import of a json file, node throws me \"Unknown file etension json for (filepath to json file)\".\n\nIs there some way to get there?  I wanted to do it via typescript import, because I want it to be both node and browser compatible.. \n\nI am willing to turn back my target settings if necessary, I guess...", "author_fullname": "t2_lefbs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "import json possible while using esnext out?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jo66pn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604556773.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all!  Working on a thing that I want to use the latest everything possible, latest node, latest browsers, most advanced settings, etc.  Want everything to be &lt;em&gt;modern&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve got my typescript settings for module and target as &amp;quot;esnext&amp;quot;, and it does generate code, but when I try to add an import of a json file, node throws me &amp;quot;Unknown file etension json for (filepath to json file)&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Is there some way to get there?  I wanted to do it via typescript import, because I want it to be both node and browser compatible.. &lt;/p&gt;\n\n&lt;p&gt;I am willing to turn back my target settings if necessary, I guess...&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jo66pn", "is_robot_indexable": true, "report_reasons": null, "author": "FormerGameDev", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jo66pn/import_json_possible_while_using_esnext_out/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jo66pn/import_json_possible_while_using_esnext_out/", "subreddit_subscribers": 51929, "created_utc": 1604527973.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jo66pn", "before": null}}