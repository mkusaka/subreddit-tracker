{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - August", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i1ikj5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596269158.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i1ikj5", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i1ikj5/whos_hiring_typescript_developers_august/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/i1ikj5/whos_hiring_typescript_developers_august/", "subreddit_subscribers": 46032, "created_utc": 1596240358.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_316tq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Teki - An unreasonably efficient route parser in TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": true, "name": "t3_i8doxo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/inHpPsbpcwkYc04FCgwP4gUEXrxPd4UdjOtYNps9dEg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1597267531.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/philipnilsson/teki#teki", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/gNZPt_XiRW1dc9ScoZUSEXETziIQ3WPCr7JFaZEhjDk.jpg?auto=webp&amp;s=54f7d33f3d72d793f7ee6018e1f18d73fff91624", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/gNZPt_XiRW1dc9ScoZUSEXETziIQ3WPCr7JFaZEhjDk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=471383cf360c4c1c10ed6ddb104607e74b03a910", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/gNZPt_XiRW1dc9ScoZUSEXETziIQ3WPCr7JFaZEhjDk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8386aff54e0162ed2a59654d526f0d1253897eda", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/gNZPt_XiRW1dc9ScoZUSEXETziIQ3WPCr7JFaZEhjDk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2e778b93fc076ed257ef0d88d38f6ea495160920", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/gNZPt_XiRW1dc9ScoZUSEXETziIQ3WPCr7JFaZEhjDk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=a2300a576dfecbc95e6abfc014574567e96442d8", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/gNZPt_XiRW1dc9ScoZUSEXETziIQ3WPCr7JFaZEhjDk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4cd2bc9f9c7df044b67d1614391e309e65b82e3e", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/gNZPt_XiRW1dc9ScoZUSEXETziIQ3WPCr7JFaZEhjDk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c30c0af9a5938a13977acb31f1e3458f74a05202", "width": 1080, "height": 540}], "variants": {}, "id": "e4Y5XzUOdUZ9L3qhNAnwkGdXjDRxStWqTcPUeUwFiAo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i8doxo", "is_robot_indexable": true, "report_reasons": null, "author": "ueberbobo", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i8doxo/teki_an_unreasonably_efficient_route_parser_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/philipnilsson/teki#teki", "subreddit_subscribers": 46032, "created_utc": 1597238731.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "[https://github.com/IhsanMujdeci/node-ts](https://github.com/IhsanMujdeci/node-ts)\n\n&amp;#x200B;\n\nGet started with \\`npm start\\`\n\n&amp;#x200B;\n\n* Dev mode transpiling ts with nodemon like re-running.\n* Testing built in with jest.\n* Github actions on push and pr to master that build and test the application\n* Environment variable loading from file built in.\n* Aliases your project under \\`@/myApp\\`, you can change it in the tsconfig.json", "author_fullname": "t2_9di933x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Typescript node starter, with testing, dev mode, environment variable loading and github actions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i84px0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.57, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1597225016.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/IhsanMujdeci/node-ts\"&gt;https://github.com/IhsanMujdeci/node-ts&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Get started with `npm start`&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Dev mode transpiling ts with nodemon like re-running.&lt;/li&gt;\n&lt;li&gt;Testing built in with jest.&lt;/li&gt;\n&lt;li&gt;Github actions on push and pr to master that build and test the application&lt;/li&gt;\n&lt;li&gt;Environment variable loading from file built in.&lt;/li&gt;\n&lt;li&gt;Aliases your project under `@/myApp`, you can change it in the tsconfig.json&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/dWbOwRtm1d9EC_vKoxLhZEq3hDXTc5jwwauCkf3OL-4.jpg?auto=webp&amp;s=5bf6df2ae0dc95b821a537f513b1f88bce676688", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/dWbOwRtm1d9EC_vKoxLhZEq3hDXTc5jwwauCkf3OL-4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a9ed4e6de8766013c5aea59e66a3e1653deee650", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/dWbOwRtm1d9EC_vKoxLhZEq3hDXTc5jwwauCkf3OL-4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d95d2642db513aa30de17e9885ad6e76f2f162ee", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/dWbOwRtm1d9EC_vKoxLhZEq3hDXTc5jwwauCkf3OL-4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=33c9778002532a00c304e81fa934dcc211bae743", "width": 320, "height": 320}], "variants": {}, "id": "E97NyDFZCFn5cIZtQ6dls6-JOEwwU6WJ5UQ3yYPETaI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i84px0", "is_robot_indexable": true, "report_reasons": null, "author": "LVCXD", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i84px0/typescript_node_starter_with_testing_dev_mode/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i84px0/typescript_node_starter_with_testing_dev_mode/", "subreddit_subscribers": 46032, "created_utc": 1597196216.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have an interface.\n\n    export interface ViolationDetails {\n      // \u2026snip\u2026\n      getMessage: (extra: Record&lt;string, any&gt;) =&gt; string;\n    }\n\nThen I implement it.\n\n    const myViolation: ViolationDetails = {\n      // \u2026snip\u2026\n      getMessage: (): string =&gt; 'Missing field';\n    }\n\nNo errors to be seen. But when I try to call it, I get a compiler error.\n\n    myViolation.getMessage();\n    // Expected 1 argument, but got 0.\n\nWhat gives? Why is there no type error on the implementation, but only on the call?", "author_fullname": "t2_cuzwz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type error on call but not on definition", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i7si1q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.85, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597183819.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have an interface.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export interface ViolationDetails {\n  // \u2026snip\u2026\n  getMessage: (extra: Record&amp;lt;string, any&amp;gt;) =&amp;gt; string;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then I implement it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const myViolation: ViolationDetails = {\n  // \u2026snip\u2026\n  getMessage: (): string =&amp;gt; &amp;#39;Missing field&amp;#39;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;No errors to be seen. But when I try to call it, I get a compiler error.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;myViolation.getMessage();\n// Expected 1 argument, but got 0.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What gives? Why is there no type error on the implementation, but only on the call?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7si1q", "is_robot_indexable": true, "report_reasons": null, "author": "henrebotha", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i7si1q/type_error_on_call_but_not_on_definition/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i7si1q/type_error_on_call_but_not_on_definition/", "subreddit_subscribers": 46032, "created_utc": 1597155019.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "i have cache completed with nodejs but with typescript this not overwrite. somebody suggest me \n\ncache.ts\n\n\n        import * as mongoose from 'mongoose';\n        import * as redis from 'redis';\n        import * as util from 'util';\n        import { RedisClient } from 'redis';\n\n      let redisClient: RedisClient;\n\n      export function startRedisConnection() {\n        redisClient = redis.createClient({\n          host: 'redis',\n          port: 6379,\n          retry_strategy: () =&gt; 1000\n        });\n\n        redisClient.hgetAsync = util.promisify(redisClient.hget);\n        redisClient.hsetAsync = util.promisify(redisClient.hset);\n\n        // Monkey patch mongoose exec method\n        const exec = mongoose.Query.prototype.exec;\n\n        mongoose.Query.prototype.cache = function(options: any = {}) {\n          this.useCache = true;\n          this.time = options.time || 60;\n          // Dynamic top-level hashKey\n          this.hashKey = JSON.stringify(options.hashKey || '');\n          console.log(this.hashKey);\n          return this;\n        };\n\n        mongoose.Query.prototype.exec = async function() {\n          // No cache\n          if (!this.useCache) {\n            return exec.apply(this, arguments);\n          }\n\n          // {...query, collection: name }\n          const key = JSON.stringify({ ...this.getQuery(), collection: this.mongooseCollection.name });\n          // Get cache\n          const cacheValue = await redisClient.hgetAsync(this.hashKey, key);\n          if (cacheValue) {\n            const value = JSON.parse(cacheValue);\n            // Mongoose exec expects us to return mongoose documents\n            console.log('response from redis');\n            return Array.isArray(value) ? value.map(item =&gt; new this.model(item)) : new this.model(value);\n          }\n\n          const result = await exec.apply(this, arguments);\n          // Set cache\n          // key: ...hashkey\n          // value:  { nestedKey: ...key, nestedValue: ...result }\n          if (result) {\n            redisClient.hsetAsync(this.hashKey, key, JSON.stringify(result));\n          }\n          console.log('Helo');\n          return result;\n        };\n      }\n\n      export function stopRedisConnection() {\n        redisClient.quit();\n      }\n\n      export function removeHashKeyFromCache(hashKey: any) {\n        redisClient.del(JSON.stringify(hashKey));\n      }", "author_fullname": "t2_37psd3nj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to make cache layer redis with mongoose ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i7qxaj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.63, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1597150094.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597177802.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;i have cache completed with nodejs but with typescript this not overwrite. somebody suggest me &lt;/p&gt;\n\n&lt;p&gt;cache.ts&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    import * as mongoose from &amp;#39;mongoose&amp;#39;;\n    import * as redis from &amp;#39;redis&amp;#39;;\n    import * as util from &amp;#39;util&amp;#39;;\n    import { RedisClient } from &amp;#39;redis&amp;#39;;\n\n  let redisClient: RedisClient;\n\n  export function startRedisConnection() {\n    redisClient = redis.createClient({\n      host: &amp;#39;redis&amp;#39;,\n      port: 6379,\n      retry_strategy: () =&amp;gt; 1000\n    });\n\n    redisClient.hgetAsync = util.promisify(redisClient.hget);\n    redisClient.hsetAsync = util.promisify(redisClient.hset);\n\n    // Monkey patch mongoose exec method\n    const exec = mongoose.Query.prototype.exec;\n\n    mongoose.Query.prototype.cache = function(options: any = {}) {\n      this.useCache = true;\n      this.time = options.time || 60;\n      // Dynamic top-level hashKey\n      this.hashKey = JSON.stringify(options.hashKey || &amp;#39;&amp;#39;);\n      console.log(this.hashKey);\n      return this;\n    };\n\n    mongoose.Query.prototype.exec = async function() {\n      // No cache\n      if (!this.useCache) {\n        return exec.apply(this, arguments);\n      }\n\n      // {...query, collection: name }\n      const key = JSON.stringify({ ...this.getQuery(), collection: this.mongooseCollection.name });\n      // Get cache\n      const cacheValue = await redisClient.hgetAsync(this.hashKey, key);\n      if (cacheValue) {\n        const value = JSON.parse(cacheValue);\n        // Mongoose exec expects us to return mongoose documents\n        console.log(&amp;#39;response from redis&amp;#39;);\n        return Array.isArray(value) ? value.map(item =&amp;gt; new this.model(item)) : new this.model(value);\n      }\n\n      const result = await exec.apply(this, arguments);\n      // Set cache\n      // key: ...hashkey\n      // value:  { nestedKey: ...key, nestedValue: ...result }\n      if (result) {\n        redisClient.hsetAsync(this.hashKey, key, JSON.stringify(result));\n      }\n      console.log(&amp;#39;Helo&amp;#39;);\n      return result;\n    };\n  }\n\n  export function stopRedisConnection() {\n    redisClient.quit();\n  }\n\n  export function removeHashKeyFromCache(hashKey: any) {\n    redisClient.del(JSON.stringify(hashKey));\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7qxaj", "is_robot_indexable": true, "report_reasons": null, "author": "songhanpoo", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i7qxaj/how_to_make_cache_layer_redis_with_mongoose/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i7qxaj/how_to_make_cache_layer_redis_with_mongoose/", "subreddit_subscribers": 46032, "created_utc": 1597149002.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    Type error: Type '{ children: Element; className: string; closeButton: true; }' is missing the following properties from type 'Pick&lt;ModalHeaderProps, \"style\" | \"title\" | \"slot\" | \"children\" | \"bsPrefix\" | \"className\" | \"color\" | \"id\" | \"lang\" | \"role\" | \"tabIndex\" | \"dangerouslySetInnerHTML\" |\n\n     ... 246 more ... | \"closeButton\"&gt;': translate, onAuxClick, onAuxClickCapture  TS2739\n\nhttps://imgur.com/a/XpLvrpo\n\nDo I need to actually pass in 246+ properties to this Modal.Header component (using bootstrap)? I am pretty bad so please treat me like a huge noob! What should I do here?", "author_fullname": "t2_w6om9k9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type error - Missing 200+ properties", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i7evqe", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1597126175.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;Type error: Type &amp;#39;{ children: Element; className: string; closeButton: true; }&amp;#39; is missing the following properties from type &amp;#39;Pick&amp;lt;ModalHeaderProps, &amp;quot;style&amp;quot; | &amp;quot;title&amp;quot; | &amp;quot;slot&amp;quot; | &amp;quot;children&amp;quot; | &amp;quot;bsPrefix&amp;quot; | &amp;quot;className&amp;quot; | &amp;quot;color&amp;quot; | &amp;quot;id&amp;quot; | &amp;quot;lang&amp;quot; | &amp;quot;role&amp;quot; | &amp;quot;tabIndex&amp;quot; | &amp;quot;dangerouslySetInnerHTML&amp;quot; |\n\n ... 246 more ... | &amp;quot;closeButton&amp;quot;&amp;gt;&amp;#39;: translate, onAuxClick, onAuxClickCapture  TS2739\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://imgur.com/a/XpLvrpo\"&gt;https://imgur.com/a/XpLvrpo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Do I need to actually pass in 246+ properties to this Modal.Header component (using bootstrap)? I am pretty bad so please treat me like a huge noob! What should I do here?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/jaxZbbdlnl67aRlHdOnXh8gHx4Xs3XwXiLPf_9dzX4c.jpg?auto=webp&amp;s=7f49aca10cd97d68c3544bad742a17223bd32526", "width": 1250, "height": 234}, "resolutions": [{"url": "https://external-preview.redd.it/jaxZbbdlnl67aRlHdOnXh8gHx4Xs3XwXiLPf_9dzX4c.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e7bb0a097383c175358092b3e491c3a290621804", "width": 108, "height": 20}, {"url": "https://external-preview.redd.it/jaxZbbdlnl67aRlHdOnXh8gHx4Xs3XwXiLPf_9dzX4c.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=71f745013fb486417e47560000dde4d520c2eaa0", "width": 216, "height": 40}, {"url": "https://external-preview.redd.it/jaxZbbdlnl67aRlHdOnXh8gHx4Xs3XwXiLPf_9dzX4c.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=906bdf3f303f825bc4f6bfaaa29578a57061a0ce", "width": 320, "height": 59}, {"url": "https://external-preview.redd.it/jaxZbbdlnl67aRlHdOnXh8gHx4Xs3XwXiLPf_9dzX4c.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5b755ed2fee75ee6d38884405ff8ea50e244af41", "width": 640, "height": 119}, {"url": "https://external-preview.redd.it/jaxZbbdlnl67aRlHdOnXh8gHx4Xs3XwXiLPf_9dzX4c.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5c8f1ef62eddaf082b1e30189e30cb5d790e6cd2", "width": 960, "height": 179}, {"url": "https://external-preview.redd.it/jaxZbbdlnl67aRlHdOnXh8gHx4Xs3XwXiLPf_9dzX4c.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=69277a0afcf7b4830f5a345ee46c3ed8d3cd3371", "width": 1080, "height": 202}], "variants": {}, "id": "3NSUN2lktzPe_9rBgLfFgHdAJxW1boG67yYXsqpHtjg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7evqe", "is_robot_indexable": true, "report_reasons": null, "author": "SignificantGarbage", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i7evqe/type_error_missing_200_properties/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i7evqe/type_error_missing_200_properties/", "subreddit_subscribers": 46032, "created_utc": 1597097375.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_igi2c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Add Typescript to your Next.js project", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_i7m2kv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/vN1qrcs8Jj7hZ7wBMsaj2bq1HNcOu6BRgzG02aykRys.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1597153212.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.bhanuteja.dev", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.bhanuteja.dev/add-typescript-to-your-nextjs-project-ckdpgej1h0174kbs1h9fg86yq", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/21r-nMU8licyjAeJ57GcCE4XzBTCGT_3BF5d0qkkIvk.jpg?auto=webp&amp;s=1929bf40a906d1e29dd87d198641286f600b7e8a", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/21r-nMU8licyjAeJ57GcCE4XzBTCGT_3BF5d0qkkIvk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1ed38e820d4a10ceaa26a434af571c96dcfd27f9", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/21r-nMU8licyjAeJ57GcCE4XzBTCGT_3BF5d0qkkIvk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a3716877dd59caf7959762ba42b0b2122c893911", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/21r-nMU8licyjAeJ57GcCE4XzBTCGT_3BF5d0qkkIvk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3cde3f4a23b40cb393125df42e2611b9b43d5c33", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/21r-nMU8licyjAeJ57GcCE4XzBTCGT_3BF5d0qkkIvk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0057832e483b71230d9013cbd33aa671bf3942e3", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/21r-nMU8licyjAeJ57GcCE4XzBTCGT_3BF5d0qkkIvk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=870984a3d21cb7142ea8db43d8325dd4aab19971", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/21r-nMU8licyjAeJ57GcCE4XzBTCGT_3BF5d0qkkIvk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4cba5c63b90558ca3bf4a5acba03937e7a44c81e", "width": 1080, "height": 567}], "variants": {}, "id": "JFCiUFrPe721p0joRhP3Wa58RRXe20ridLUJRx56yys"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7m2kv", "is_robot_indexable": true, "report_reasons": null, "author": "cheerfulboy", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i7m2kv/add_typescript_to_your_nextjs_project/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.bhanuteja.dev/add-typescript-to-your-nextjs-project-ckdpgej1h0174kbs1h9fg86yq", "subreddit_subscribers": 46032, "created_utc": 1597124412.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "https://gist.github.com/aleclarson/9900ed2a9a3119d865286b218e14d226\n\n### Features\n\ud83d\udd25 Blazing fast builds  \n\ud83d\ude07 CommonJS bundle  \n\ud83c\udf32 .mjs bundle  \n\u2728 .d.ts bundle + type-checking  \n\ud83e\uddd0 Source maps  \n\n**Please retweet this if it helps you:**  \nhttps://twitter.com/alecdotbiz/status/1291742610374131712", "author_fullname": "t2_5kcmk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The best Rollup config for TypeScript libraries", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i7635n", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.68, "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1597099398.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://gist.github.com/aleclarson/9900ed2a9a3119d865286b218e14d226\"&gt;https://gist.github.com/aleclarson/9900ed2a9a3119d865286b218e14d226&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;Features&lt;/h3&gt;\n\n&lt;p&gt;\ud83d\udd25 Blazing fast builds&lt;br/&gt;\n\ud83d\ude07 CommonJS bundle&lt;br/&gt;\n\ud83c\udf32 .mjs bundle&lt;br/&gt;\n\u2728 .d.ts bundle + type-checking&lt;br/&gt;\n\ud83e\uddd0 Source maps  &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Please retweet this if it helps you:&lt;/strong&gt;&lt;br/&gt;\n&lt;a href=\"https://twitter.com/alecdotbiz/status/1291742610374131712\"&gt;https://twitter.com/alecdotbiz/status/1291742610374131712&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?auto=webp&amp;s=079a7260ec149880c73263d64811698adb22760a", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5811c5bda5fece1040636a6af8702ba790f0fd4", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=eee576fd4da7535eb53ceb88dd8b52f073048441", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72872d880460efa723918c000adca0ed259cf775", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f3545b9335d763c9da9c16bf7bf9a3f907dbd6f6", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2d241ace0f1c07088fac3f8469dbad3b05d2d419", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9055f11bdc00beb0b3589e1cae5817d6070d83bc", "width": 1080, "height": 540}], "variants": {}, "id": "OAXSl8SY6T3JK9MGQyKxkoYbqZ71HQRYXLeB8CV0NXg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7635n", "is_robot_indexable": true, "report_reasons": null, "author": "Superseuss", "discussion_type": null, "num_comments": 44, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i7635n/the_best_rollup_config_for_typescript_libraries/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i7635n/the_best_rollup_config_for_typescript_libraries/", "subreddit_subscribers": 46032, "created_utc": 1597070598.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "This is purely practice with working through the complex method overloads I see. In the case of passport.serializeUser\n\n    (method) passport.Authenticator&lt;e.Handler, any, any,\n     passport.AuthenticateOptions&gt;.serializeUser&lt;unknown, unknown&gt;(\n    fn: (user: unknown, done: (err: any, id?: unknown) =&gt; void) =&gt; void)\n    : void (+1 overload)\n\nI thought this would work:\n\n    passport.serializeUser(&lt;UserShape extends { id: string }&gt;\n    (user: UserShape, callback: any) =&gt; {\n      callback(null, user.id as string);\n    });\n\nThe error lint:\n\n    No overload matches this call.\n      Overload 1 of 2, '(fn: (user: unknown, done: (err: any, \n    id?: unknown) =&gt; void) =&gt; void): void', gave the following error.\n        Argument of type '&lt;UserShape extends { id: string; }&gt;\n    (user: UserShape, callback: any) =&gt; void' is not assignable to \n    parameter of type '(user: unknown, done: (err: any, \n    id?: unknown) =&gt; void) =&gt; void'.\n          Types of parameters 'user' and 'user' are incompatible.\n    \n            Type 'unknown' is not assignable to type '{ id: string; }'.\n      Overload 2 of 2, '(fn: (req: Request&lt;ParamsDictionary, any, any, \n    ParsedQs&gt;, user: unknown, done: (err: any, id?: unknown) =&gt; \n    void) =&gt; void): void', gave the following error.\n    \n    Argument of type '&lt;UserShape extends { id: string; }&gt;(user: UserShape, \n    callback: any) =&gt; void' is not assignable to parameter of type '(req: Request&lt;ParamsDictionary, any, any, ParsedQs&gt;, user: unknown, \n    done: (err: any, id?: unknown) =&gt; void) =&gt; void'.\n          Types of parameters 'user' and 'req' are incompatible.\n            Property 'id' is missing in type 'Request&lt;ParamsDictionary, \n    any, any, ParsedQs&gt;' but required in type '{ id: string; }'.ts(2769)\n\nSeems like the first overload gets close. What was my mistake?", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why didn't my typings match this overload", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i7e6pl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597124055.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is purely practice with working through the complex method overloads I see. In the case of passport.serializeUser&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(method) passport.Authenticator&amp;lt;e.Handler, any, any,\n passport.AuthenticateOptions&amp;gt;.serializeUser&amp;lt;unknown, unknown&amp;gt;(\nfn: (user: unknown, done: (err: any, id?: unknown) =&amp;gt; void) =&amp;gt; void)\n: void (+1 overload)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I thought this would work:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;passport.serializeUser(&amp;lt;UserShape extends { id: string }&amp;gt;\n(user: UserShape, callback: any) =&amp;gt; {\n  callback(null, user.id as string);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The error lint:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;No overload matches this call.\n  Overload 1 of 2, &amp;#39;(fn: (user: unknown, done: (err: any, \nid?: unknown) =&amp;gt; void) =&amp;gt; void): void&amp;#39;, gave the following error.\n    Argument of type &amp;#39;&amp;lt;UserShape extends { id: string; }&amp;gt;\n(user: UserShape, callback: any) =&amp;gt; void&amp;#39; is not assignable to \nparameter of type &amp;#39;(user: unknown, done: (err: any, \nid?: unknown) =&amp;gt; void) =&amp;gt; void&amp;#39;.\n      Types of parameters &amp;#39;user&amp;#39; and &amp;#39;user&amp;#39; are incompatible.\n\n        Type &amp;#39;unknown&amp;#39; is not assignable to type &amp;#39;{ id: string; }&amp;#39;.\n  Overload 2 of 2, &amp;#39;(fn: (req: Request&amp;lt;ParamsDictionary, any, any, \nParsedQs&amp;gt;, user: unknown, done: (err: any, id?: unknown) =&amp;gt; \nvoid) =&amp;gt; void): void&amp;#39;, gave the following error.\n\nArgument of type &amp;#39;&amp;lt;UserShape extends { id: string; }&amp;gt;(user: UserShape, \ncallback: any) =&amp;gt; void&amp;#39; is not assignable to parameter of type &amp;#39;(req: Request&amp;lt;ParamsDictionary, any, any, ParsedQs&amp;gt;, user: unknown, \ndone: (err: any, id?: unknown) =&amp;gt; void) =&amp;gt; void&amp;#39;.\n      Types of parameters &amp;#39;user&amp;#39; and &amp;#39;req&amp;#39; are incompatible.\n        Property &amp;#39;id&amp;#39; is missing in type &amp;#39;Request&amp;lt;ParamsDictionary, \nany, any, ParsedQs&amp;gt;&amp;#39; but required in type &amp;#39;{ id: string; }&amp;#39;.ts(2769)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Seems like the first overload gets close. What was my mistake?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7e6pl", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i7e6pl/why_didnt_my_typings_match_this_overload/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i7e6pl/why_didnt_my_typings_match_this_overload/", "subreddit_subscribers": 46032, "created_utc": 1597095255.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I need help writing a type definition for a function that could return `undefined` or anything else, but the return type has to include `undefined`. I'm wanting to avoid a generic parameter in the type as well.\n\n```\n// this doesn't work, but is kind of what I'm going for\ntype CouldReturnUndefined = &lt;T&gt;(...args: any[]) =&gt; T | undefined\n\n// this should be allowed\nconst a: CouldReturnUndefined = () =&gt; { return undefined }\n\n// this should cause an error\nconst b: CouldReturnUndefined = () =&gt; { return 10 }\n\n// this should be allowed\nconst c: CouldReturnUndefined = (): number | undefined =&gt; { return 10 }\n```\n\nAny ideas?", "author_fullname": "t2_4lbl9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type definition for function that could return undefined", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i7d62e", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597120980.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I need help writing a type definition for a function that could return &lt;code&gt;undefined&lt;/code&gt; or anything else, but the return type has to include &lt;code&gt;undefined&lt;/code&gt;. I&amp;#39;m wanting to avoid a generic parameter in the type as well.&lt;/p&gt;\n\n&lt;p&gt;```\n// this doesn&amp;#39;t work, but is kind of what I&amp;#39;m going for\ntype CouldReturnUndefined = &amp;lt;T&amp;gt;(...args: any[]) =&amp;gt; T | undefined&lt;/p&gt;\n\n&lt;p&gt;// this should be allowed\nconst a: CouldReturnUndefined = () =&amp;gt; { return undefined }&lt;/p&gt;\n\n&lt;p&gt;// this should cause an error\nconst b: CouldReturnUndefined = () =&amp;gt; { return 10 }&lt;/p&gt;\n\n&lt;p&gt;// this should be allowed\nconst c: CouldReturnUndefined = (): number | undefined =&amp;gt; { return 10 }\n```&lt;/p&gt;\n\n&lt;p&gt;Any ideas?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i7d62e", "is_robot_indexable": true, "report_reasons": null, "author": "RomanCow", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i7d62e/type_definition_for_function_that_could_return/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i7d62e/type_definition_for_function_that_could_return/", "subreddit_subscribers": 46032, "created_utc": 1597092180.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_o66hd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I built YJs bindings for slate - need feedback on my code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_i77bqu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/fBAZd0fqEeOzTNOsiLImArNsOsTQn3io_OzASeKQ7Fc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1597103328.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/BitPhinix/slate-yjs", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Kggm6z01KuWmjrrEcNlSc8V1uPtlb4CMo7nECBiYY6E.jpg?auto=webp&amp;s=f0520d801e0f4fd7018ced97f685fb6ac076fd4d", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/Kggm6z01KuWmjrrEcNlSc8V1uPtlb4CMo7nECBiYY6E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9e4f4dbd9bc4a27c2abaaaa39d59a6da43f25f20", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/Kggm6z01KuWmjrrEcNlSc8V1uPtlb4CMo7nECBiYY6E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f07532879015d20117865996a93de35d50f96377", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/Kggm6z01KuWmjrrEcNlSc8V1uPtlb4CMo7nECBiYY6E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=bb3866c26e5da91bb3595f903741c277b4349865", "width": 320, "height": 320}], "variants": {}, "id": "l5U4SAA_tgiCSn7wlEcyf-sh9CUNpJSHn1Z0RZ4eKNM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i77bqu", "is_robot_indexable": true, "report_reasons": null, "author": "BitPhinix", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i77bqu/i_built_yjs_bindings_for_slate_need_feedback_on/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/BitPhinix/slate-yjs", "subreddit_subscribers": 46032, "created_utc": 1597074528.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_i77bqu", "before": null}}