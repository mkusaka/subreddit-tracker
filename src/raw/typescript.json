{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - July", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hizg5z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 37, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 37, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1593590733.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hizg5z", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 7, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "subreddit_subscribers": 44477, "created_utc": 1593561933.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi all. I've recently started using typescript more heavily, and  I'm working a generic form-validation library. One of the things I'd like to be able to do is pass in a data model, and be able to get type inference/intellisense from the keys from that object. I've not learned all the details of how to use generics yet, which I know will be key for this question, so any pointers towards what I am missing would be greatly appreciated.\n\nA simplified example:\n\n```\ninterface SpecificSchemaInterface {\n    fields: Record&lt;String, any&gt;\n}\n\ninterface SpecificSchemaInterface {\n    fields: {\n      firstName: string;\n      lastName: string;\n      age: number;\n    }\n}\n\nconst schema = {\n  fields: {\n    firstName: 'Bob,\n    lastName: 'Bobson',\n    age: 25,\n  },\n};\n\nfunction createValidatorFromSchema(s: SpecificSchemaInterface) {\n  // ???\n}\n\nconst validator: Validator&lt;SpecificSchemaInterface&gt; = createValidatorFromSchema(schema)\n\n// Then validator would have an interface like:\ninterface Validator {\n  rules: {\n    firstName(firstName: string): boolean,\n    lastName(lastName: string): boolean,\n    age(age: number): boolean, // note that the type is inferred here from the schema\n  }\n}\n```\n\nMy questions are that then\n1) I probably want something like `Validator&lt;SpecificSchemaInterface&gt;`?\n2) I need to be able to both extract the object keys, and the types from the schema in a reusable way inside my new `Validator`\n\nI hope this isn't too vague, but if there is some terminology I should be looking into (beyond just \"look at generics\") or guides that go into this sort of thing, that would be very helpful.", "author_fullname": "t2_3qlad", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Infer Types from Schema", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hub8rd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595232850.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all. I&amp;#39;ve recently started using typescript more heavily, and  I&amp;#39;m working a generic form-validation library. One of the things I&amp;#39;d like to be able to do is pass in a data model, and be able to get type inference/intellisense from the keys from that object. I&amp;#39;ve not learned all the details of how to use generics yet, which I know will be key for this question, so any pointers towards what I am missing would be greatly appreciated.&lt;/p&gt;\n\n&lt;p&gt;A simplified example:&lt;/p&gt;\n\n&lt;p&gt;```\ninterface SpecificSchemaInterface {\n    fields: Record&amp;lt;String, any&amp;gt;\n}&lt;/p&gt;\n\n&lt;p&gt;interface SpecificSchemaInterface {\n    fields: {\n      firstName: string;\n      lastName: string;\n      age: number;\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;const schema = {\n  fields: {\n    firstName: &amp;#39;Bob,\n    lastName: &amp;#39;Bobson&amp;#39;,\n    age: 25,\n  },\n};&lt;/p&gt;\n\n&lt;p&gt;function createValidatorFromSchema(s: SpecificSchemaInterface) {\n  // ???\n}&lt;/p&gt;\n\n&lt;p&gt;const validator: Validator&amp;lt;SpecificSchemaInterface&amp;gt; = createValidatorFromSchema(schema)&lt;/p&gt;\n\n&lt;p&gt;// Then validator would have an interface like:\ninterface Validator {\n  rules: {\n    firstName(firstName: string): boolean,\n    lastName(lastName: string): boolean,\n    age(age: number): boolean, // note that the type is inferred here from the schema\n  }\n}\n```&lt;/p&gt;\n\n&lt;p&gt;My questions are that then\n1) I probably want something like &lt;code&gt;Validator&amp;lt;SpecificSchemaInterface&amp;gt;&lt;/code&gt;?\n2) I need to be able to both extract the object keys, and the types from the schema in a reusable way inside my new &lt;code&gt;Validator&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I hope this isn&amp;#39;t too vague, but if there is some terminology I should be looking into (beyond just &amp;quot;look at generics&amp;quot;) or guides that go into this sort of thing, that would be very helpful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hub8rd", "is_robot_indexable": true, "report_reasons": null, "author": "dougalg", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hub8rd/how_to_infer_types_from_schema/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hub8rd/how_to_infer_types_from_schema/", "subreddit_subscribers": 44477, "created_utc": 1595204050.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I am a noob at TS &amp; certainly don't know how to write `index.d.ts`. Guided by some auto-completion inside VSCode &amp; some of my existing knowledge, I managed to cobble this together.\n\nI am writing types for `@camwiegert/typical` npm module. Source code could be found at https://github.com/camwiegert/typical\n\nHere is the main file `typical.js` for brevity:\n\n```js\nexport async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case 'string':\n                await edit(node, arg);\n                break;\n            case 'number':\n                await wait(arg);\n                break;\n            case 'function':\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}\n\nasync function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n    await new Promise(resolve =&gt; setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}\n\nexport function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) =&gt; requestAnimationFrame(() =&gt; node.textContent = edit);\n    }\n}\n\nexport function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex &lt; endIndex) {\n        yield text.slice(0, ++startIndex).join('');\n    }\n}\n\nexport function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex &gt; startIndex) {\n        yield text.slice(0, --endIndex).join('');\n    }\n}\n\nexport function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) =&gt; end[i] !== char);\n}\n```\n\nI want to write types for this file. So I made `src/@types/@camwiegert/typical/index.d.ts` like:\n\n```ts\ndeclare module '@camwiegert/typical' {\n\texport function type(node: HTMLElement, ...args: any[]): Promise&lt;void&gt;\n\n\tdeclare function edit(node: HTMLElement, text: string): Promise&lt;void&gt;\n\n\tdeclare function wait(ms: number): Promise&lt;void&gt;\n\n\tdeclare function perform(node: HTMLElement, edits: any, speed?: number): Promise&lt;void&gt;\n\n\texport function editor(edits: any): Generator&lt;(node: any) =&gt; number, void, unknown&gt;\n\n\texport function writer(\n\t\t[...text]: Iterable&lt;any&gt;,\n\t\tstartIndex?: number,\n\t\tendIndex?: number\n\t): Generator&lt;string, void, unknown&gt;\n\n\texport function deleter(\n\t\t[...text]: Iterable&lt;any&gt;,\n\t\tstartIndex?: number,\n\t\tendIndex?: number\n\t): Generator&lt;string, void, unknown&gt;\n\n\texport function getOverlap(start: any, [...end]: Iterable&lt;any&gt;): number\n}\n```\n\nIdk if I converted it correctly or not. Can anyone check if it's correct?", "author_fullname": "t2_60mz2ve", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Am I generating `index.d.ts` file for an `npm` module `@camwiegert/typical` correctly?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hugbmu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595254910.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am a noob at TS &amp;amp; certainly don&amp;#39;t know how to write &lt;code&gt;index.d.ts&lt;/code&gt;. Guided by some auto-completion inside VSCode &amp;amp; some of my existing knowledge, I managed to cobble this together.&lt;/p&gt;\n\n&lt;p&gt;I am writing types for &lt;code&gt;@camwiegert/typical&lt;/code&gt; npm module. Source code could be found at &lt;a href=\"https://github.com/camwiegert/typical\"&gt;https://github.com/camwiegert/typical&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here is the main file &lt;code&gt;typical.js&lt;/code&gt; for brevity:&lt;/p&gt;\n\n&lt;p&gt;```js\nexport async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case &amp;#39;string&amp;#39;:\n                await edit(node, arg);\n                break;\n            case &amp;#39;number&amp;#39;:\n                await wait(arg);\n                break;\n            case &amp;#39;function&amp;#39;:\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;async function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}&lt;/p&gt;\n\n&lt;p&gt;async function wait(ms) {\n    await new Promise(resolve =&amp;gt; setTimeout(resolve, ms));\n}&lt;/p&gt;\n\n&lt;p&gt;async function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;export function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) =&amp;gt; requestAnimationFrame(() =&amp;gt; node.textContent = edit);\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;export function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex &amp;lt; endIndex) {\n        yield text.slice(0, ++startIndex).join(&amp;#39;&amp;#39;);\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;export function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex &amp;gt; startIndex) {\n        yield text.slice(0, --endIndex).join(&amp;#39;&amp;#39;);\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;export function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) =&amp;gt; end[i] !== char);\n}\n```&lt;/p&gt;\n\n&lt;p&gt;I want to write types for this file. So I made &lt;code&gt;src/@types/@camwiegert/typical/index.d.ts&lt;/code&gt; like:&lt;/p&gt;\n\n&lt;p&gt;```ts\ndeclare module &amp;#39;@camwiegert/typical&amp;#39; {\n    export function type(node: HTMLElement, ...args: any[]): Promise&amp;lt;void&amp;gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;declare function edit(node: HTMLElement, text: string): Promise&amp;lt;void&amp;gt;\n\ndeclare function wait(ms: number): Promise&amp;lt;void&amp;gt;\n\ndeclare function perform(node: HTMLElement, edits: any, speed?: number): Promise&amp;lt;void&amp;gt;\n\nexport function editor(edits: any): Generator&amp;lt;(node: any) =&amp;gt; number, void, unknown&amp;gt;\n\nexport function writer(\n    [...text]: Iterable&amp;lt;any&amp;gt;,\n    startIndex?: number,\n    endIndex?: number\n): Generator&amp;lt;string, void, unknown&amp;gt;\n\nexport function deleter(\n    [...text]: Iterable&amp;lt;any&amp;gt;,\n    startIndex?: number,\n    endIndex?: number\n): Generator&amp;lt;string, void, unknown&amp;gt;\n\nexport function getOverlap(start: any, [...end]: Iterable&amp;lt;any&amp;gt;): number\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;p&gt;Idk if I converted it correctly or not. Can anyone check if it&amp;#39;s correct?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/toRoU2zKvzlJdd9XiFV0ayyOhmJZ5gpQCzL51VVPH1s.jpg?auto=webp&amp;s=7caa2b84f7e2cf4413cb1ed44a55e0c28f3842ec", "width": 2560, "height": 1280}, "resolutions": [{"url": "https://external-preview.redd.it/toRoU2zKvzlJdd9XiFV0ayyOhmJZ5gpQCzL51VVPH1s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=abf2b429ae0962bea308068c899a1181c06f6a00", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/toRoU2zKvzlJdd9XiFV0ayyOhmJZ5gpQCzL51VVPH1s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9406ad25040696eb69c0907cabec8771cad2fd88", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/toRoU2zKvzlJdd9XiFV0ayyOhmJZ5gpQCzL51VVPH1s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=536ed712ea51915f8d7058a75b9eb16bdcf46d48", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/toRoU2zKvzlJdd9XiFV0ayyOhmJZ5gpQCzL51VVPH1s.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=83b53f62a053a41288b51b7eecf94b43c687f7cb", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/toRoU2zKvzlJdd9XiFV0ayyOhmJZ5gpQCzL51VVPH1s.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b3696613378b2f1ef83c8bce6bce0c75106fb0ca", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/toRoU2zKvzlJdd9XiFV0ayyOhmJZ5gpQCzL51VVPH1s.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4afa0c58e7d429ad81a0faf000b1c7fbfdeea5d7", "width": 1080, "height": 540}], "variants": {}, "id": "Y3-O40Azc_cAfbd6FUvuxn4tlRotgC-6dKgNeoaSVzQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hugbmu", "is_robot_indexable": true, "report_reasons": null, "author": "deadcoder0904", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hugbmu/am_i_generating_indexdts_file_for_an_npm_module/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hugbmu/am_i_generating_indexdts_file_for_an_npm_module/", "subreddit_subscribers": 44477, "created_utc": 1595226110.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey guys, I'm pretty stuck as to how to get around using :any here. Any ideas?\n\n&amp;#x200B;\n\n    import { useState } from 'react';\n    \n    export const useFormFields = (initialState: any) =&gt; {\n      const [fields, setValues] = useState(initialState);\n    \n      return [\n        fields,\n        (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {\n          setValues({\n            ...fields,\n            [event.target.name]: event.target.value,\n          });\n        },\n      ];\n    };\n\nI've tried using interfaces and types and then adding it in, but ...fields expects an object and the whole thing breaks.", "author_fullname": "t2_k1dw9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Custom hook with typescript?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hub5ci", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1595203983.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595232488.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys, I&amp;#39;m pretty stuck as to how to get around using :any here. Any ideas?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { useState } from &amp;#39;react&amp;#39;;\n\nexport const useFormFields = (initialState: any) =&amp;gt; {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    (event: React.ChangeEvent&amp;lt;HTMLInputElement&amp;gt;) =&amp;gt; {\n      setValues({\n        ...fields,\n        [event.target.name]: event.target.value,\n      });\n    },\n  ];\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve tried using interfaces and types and then adding it in, but ...fields expects an object and the whole thing breaks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hub5ci", "is_robot_indexable": true, "report_reasons": null, "author": "Wizard_Knife_Fight", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hub5ci/custom_hook_with_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hub5ci/custom_hook_with_typescript/", "subreddit_subscribers": 44477, "created_utc": 1595203688.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_qtig0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A directory structure for React projects", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hui3yt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595264863.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com//a-directory-structure-for-react-projects-99fb084c61f1?source=friends_link&amp;sk=e5c0c00d0e03e6661ec7e710f84eebfb", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hui3yt", "is_robot_indexable": true, "report_reasons": null, "author": "Fewthp", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hui3yt/a_directory_structure_for_react_projects/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com//a-directory-structure-for-react-projects-99fb084c61f1?source=friends_link&amp;sk=e5c0c00d0e03e6661ec7e710f84eebfb", "subreddit_subscribers": 44477, "created_utc": 1595236063.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "When the image is clicked in **Header Component via &lt;Link&gt;**, React is not rendering **Content Component**\n\nVisual representation of the problem:\n\n[https://gyazo.com/bb14af9cb3f0870107ec775a328e60c0](https://gyazo.com/bb14af9cb3f0870107ec775a328e60c0)\n\n&amp;#x200B;\n\nI'm not sure what the issue is, my previous react projects works fine with this setup, but here's what i have\n\n&amp;#x200B;\n\n    import { Route, Router, Switch } from \"react-router-dom\";\n    import history from \"../history\";\n    \n    const App: React.FC&lt;{}&gt; = () =&gt; {\n        return (\n            &lt;React.Fragment&gt;\n                &lt;Router history={history}&gt;\n                    &lt;Header /&gt;\n                    &lt;Switch&gt;\n                        &lt;Route path=\"/\" exact component={Content} /&gt;\n                    &lt;/Switch&gt;\n                &lt;/Router&gt;\n            &lt;/React.Fragment&gt;\n        );\n    };\n    \n    export default App;\n\n**history.tsx**\n\n    import { createBrowserHistory } from \"history\";\n    export default createBrowserHistory();\n\n&amp;#x200B;\n\n**Header**\n\n    const Header: React.FC&lt;HeaderProps&gt; = (props) =&gt; {\n        //const history = useHistory();\n        return (\n            &lt;nav&gt;\n                &lt;Link to=\"/\"&gt;\n                    &lt;img\n                        className=\"logo\"\n                        src={logo}\n                        alt=\"pixar-logo\"\n                    /&gt;\n                &lt;/Link&gt;\n    ...\n    export default Header;\n\n**Content**\n\n    const Content: React.FC&lt;{}&gt; = () =&gt; {\n        return (\n            &lt;div&gt;\n                &lt;div className=\"contentContainer\"&gt;\n                    &lt;h2 className=\"quote\"&gt;\n    ...\n    \n    export default Content;", "author_fullname": "t2_jgqit", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React Router Is Not Working With Typescript?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hufp62", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595251886.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;When the image is clicked in &lt;strong&gt;Header Component via &amp;lt;Link&amp;gt;&lt;/strong&gt;, React is not rendering &lt;strong&gt;Content Component&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Visual representation of the problem:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gyazo.com/bb14af9cb3f0870107ec775a328e60c0\"&gt;https://gyazo.com/bb14af9cb3f0870107ec775a328e60c0&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not sure what the issue is, my previous react projects works fine with this setup, but here&amp;#39;s what i have&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { Route, Router, Switch } from &amp;quot;react-router-dom&amp;quot;;\nimport history from &amp;quot;../history&amp;quot;;\n\nconst App: React.FC&amp;lt;{}&amp;gt; = () =&amp;gt; {\n    return (\n        &amp;lt;React.Fragment&amp;gt;\n            &amp;lt;Router history={history}&amp;gt;\n                &amp;lt;Header /&amp;gt;\n                &amp;lt;Switch&amp;gt;\n                    &amp;lt;Route path=&amp;quot;/&amp;quot; exact component={Content} /&amp;gt;\n                &amp;lt;/Switch&amp;gt;\n            &amp;lt;/Router&amp;gt;\n        &amp;lt;/React.Fragment&amp;gt;\n    );\n};\n\nexport default App;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;history.tsx&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { createBrowserHistory } from &amp;quot;history&amp;quot;;\nexport default createBrowserHistory();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Header&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const Header: React.FC&amp;lt;HeaderProps&amp;gt; = (props) =&amp;gt; {\n    //const history = useHistory();\n    return (\n        &amp;lt;nav&amp;gt;\n            &amp;lt;Link to=&amp;quot;/&amp;quot;&amp;gt;\n                &amp;lt;img\n                    className=&amp;quot;logo&amp;quot;\n                    src={logo}\n                    alt=&amp;quot;pixar-logo&amp;quot;\n                /&amp;gt;\n            &amp;lt;/Link&amp;gt;\n...\nexport default Header;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Content&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const Content: React.FC&amp;lt;{}&amp;gt; = () =&amp;gt; {\n    return (\n        &amp;lt;div&amp;gt;\n            &amp;lt;div className=&amp;quot;contentContainer&amp;quot;&amp;gt;\n                &amp;lt;h2 className=&amp;quot;quote&amp;quot;&amp;gt;\n...\n\nexport default Content;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/ld8w3LLreyKdLajunw2mE3AWdUkpsb-ikRnhiiftjW4.jpg?auto=webp&amp;s=e2703700458ac30f5be85aa78dbb9da9c2988719", "width": 1000, "height": 528}, "resolutions": [{"url": "https://external-preview.redd.it/ld8w3LLreyKdLajunw2mE3AWdUkpsb-ikRnhiiftjW4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1cdb428fcdf7b8d2e3a671df75f0ec13d6c580c6", "width": 108, "height": 57}, {"url": "https://external-preview.redd.it/ld8w3LLreyKdLajunw2mE3AWdUkpsb-ikRnhiiftjW4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7889959730fe3df86b0a9789e87fd1e7a8a6661e", "width": 216, "height": 114}, {"url": "https://external-preview.redd.it/ld8w3LLreyKdLajunw2mE3AWdUkpsb-ikRnhiiftjW4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6c3f55faa3ea4f8eeb262e3f59a43497be8bb5f0", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/ld8w3LLreyKdLajunw2mE3AWdUkpsb-ikRnhiiftjW4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=80ef23dc8a936e032464224061a8c220eccc061c", "width": 640, "height": 337}, {"url": "https://external-preview.redd.it/ld8w3LLreyKdLajunw2mE3AWdUkpsb-ikRnhiiftjW4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=48071bec21ec360c8ed3619852576af2522d52a0", "width": 960, "height": 506}], "variants": {}, "id": "2p49mtyxyANkuZjgh63nupXnbvNt5MwLilQGw1LvVOQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hufp62", "is_robot_indexable": true, "report_reasons": null, "author": "badboyzpwns", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hufp62/react_router_is_not_working_with_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hufp62/react_router_is_not_working_with_typescript/", "subreddit_subscribers": 44477, "created_utc": 1595223086.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "For example when I try to type:\n\n    Promise&lt;string&gt;\n\nThe moment I type that closing angle bracket VSCode autocompletes with this:\n\n    Promise&lt;string&gt;&lt;/string&gt;\n\nThis is in .ts files by the way. \n\nHas anyone figured out a way to get VSCode to get smarter about when it incorporates this autocompletion?\n\nI'm sure there's a way to restrict it to .tsx files which I could implement on personal projects. But if dealing with a company project that uses JSX code in .ts files I don't think an extension level restriction would work. And even then, sometimes you want to use type constructors in files with JSX code.\n\nIf anyone else currently deals with this, the best practice I currently use, when I remember to, is to first type this out to prevent the autocompleting \"closing tag\":\n\n    Promise&lt;&gt;", "author_fullname": "t2_3dgvi4uq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any VSCode users? How to stop it from thinking type constructors are JSX code?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_htx1ez", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595174809.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For example when I try to type:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Promise&amp;lt;string&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The moment I type that closing angle bracket VSCode autocompletes with this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Promise&amp;lt;string&amp;gt;&amp;lt;/string&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is in .ts files by the way. &lt;/p&gt;\n\n&lt;p&gt;Has anyone figured out a way to get VSCode to get smarter about when it incorporates this autocompletion?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m sure there&amp;#39;s a way to restrict it to .tsx files which I could implement on personal projects. But if dealing with a company project that uses JSX code in .ts files I don&amp;#39;t think an extension level restriction would work. And even then, sometimes you want to use type constructors in files with JSX code.&lt;/p&gt;\n\n&lt;p&gt;If anyone else currently deals with this, the best practice I currently use, when I remember to, is to first type this out to prevent the autocompleting &amp;quot;closing tag&amp;quot;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Promise&amp;lt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htx1ez", "is_robot_indexable": true, "report_reasons": null, "author": "javascript_dev", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/htx1ez/any_vscode_users_how_to_stop_it_from_thinking/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/htx1ez/any_vscode_users_how_to_stop_it_from_thinking/", "subreddit_subscribers": 44477, "created_utc": 1595146009.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_44g01slv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's the weirdest, most odd-looking and/or most complex generic you've seen or made?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_htukg1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595161249.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htukg1", "is_robot_indexable": true, "report_reasons": null, "author": "koomenk", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/htukg1/whats_the_weirdest_most_oddlooking_andor_most/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/htukg1/whats_the_weirdest_most_oddlooking_andor_most/", "subreddit_subscribers": 44477, "created_utc": 1595132449.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_3d8dg3uh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Finally I Developed SQL Query Generating App", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_htw2nd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/K9uG63QSW-I?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Finally I Developed SQL Query Generating App (Part #2)", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/K9uG63QSW-I?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "AngryCoder", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/K9uG63QSW-I/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCta6mmYG1NLeDeFFaLP2eug"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/K9uG63QSW-I?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/htw2nd", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/uz7qecMO6BVU0zyqT50ztBiX7FD2jYotQwvHLnHyMhs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1595169161.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://youtu.be/K9uG63QSW-I", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/khur2mjvMyBZm1FPlfVvvpEsAUZ2vNQrTCFgOfOiwSo.jpg?auto=webp&amp;s=5d9e7ea15f3641291bbf23f80a48533742a6d6c3", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/khur2mjvMyBZm1FPlfVvvpEsAUZ2vNQrTCFgOfOiwSo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=637b9ca564f811a4512995377a14b083f5626433", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/khur2mjvMyBZm1FPlfVvvpEsAUZ2vNQrTCFgOfOiwSo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=71e1f1822a16f7683b3464df6f3ab6c4a319b7d1", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/khur2mjvMyBZm1FPlfVvvpEsAUZ2vNQrTCFgOfOiwSo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e6c34949a8e16b4ebfecbc1c20e02de69105668d", "width": 320, "height": 240}], "variants": {}, "id": "0pATxN6j2gfOinBUQF0h3-K5oQf7Soys8eRa4SWdMIs"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htw2nd", "is_robot_indexable": true, "report_reasons": null, "author": "oFlamingo", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/htw2nd/finally_i_developed_sql_query_generating_app/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/K9uG63QSW-I", "subreddit_subscribers": 44477, "created_utc": 1595140361.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Finally I Developed SQL Query Generating App (Part #2)", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/K9uG63QSW-I?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "AngryCoder", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/K9uG63QSW-I/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCta6mmYG1NLeDeFFaLP2eug"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I currently have the following switch statement in a TypeScript file:\n\n    switch (true) {\n        case reminder.repeat != ReminderRepeatType.ONCE: {\n            this.reminders.repeating.push(reminder);\n            break;\n        }\n        case reminder.date.toDateString() == today.toDateString(): {\n            this.reminders.today.push(reminder);\n            break;\n        }\n        case reminder.date &lt; today: {\n            this.reminders.pending.push(reminder);\n            break;\n        }\n        case reminder.date &gt; today: {\n            this.reminders.past.push(reminder);\n            break;\n        }\n    }\n\nI only want each reminder object to appear in one array in order to prevent displaying a reminder twice.\n\nIs this an acceptable way of using the switch statement? Is there a better way of doing this?", "author_fullname": "t2_1h1hfeve", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is it acceptable to use switch(true) to match the first met condition?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_htqokr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.79, "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595144507.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I currently have the following switch statement in a TypeScript file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (true) {\n    case reminder.repeat != ReminderRepeatType.ONCE: {\n        this.reminders.repeating.push(reminder);\n        break;\n    }\n    case reminder.date.toDateString() == today.toDateString(): {\n        this.reminders.today.push(reminder);\n        break;\n    }\n    case reminder.date &amp;lt; today: {\n        this.reminders.pending.push(reminder);\n        break;\n    }\n    case reminder.date &amp;gt; today: {\n        this.reminders.past.push(reminder);\n        break;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I only want each reminder object to appear in one array in order to prevent displaying a reminder twice.&lt;/p&gt;\n\n&lt;p&gt;Is this an acceptable way of using the switch statement? Is there a better way of doing this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htqokr", "is_robot_indexable": true, "report_reasons": null, "author": "AgreeableLandscape3", "discussion_type": null, "num_comments": 42, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/htqokr/is_it_acceptable_to_use_switchtrue_to_match_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/htqokr/is_it_acceptable_to_use_switchtrue_to_match_the/", "subreddit_subscribers": 44477, "created_utc": 1595115707.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I''m using NDB which is like the google chrome debugger but for Node.js apps. I'm able to set breakpoints in compiled .js files but not source files in .ts. I see this notice in the app:\n\n[ndb source map notice](https://preview.redd.it/czi5qwyx4mb51.jpg?width=1912&amp;format=pjpg&amp;auto=webp&amp;s=a43c92123fb5807a5d001bfa85e5a9c347f9d99d)\n\nI don't see any additional config options in the settings menu. Anyone know what step I'm likely missing for my .ts file breakpoints to be ignored here? \n\nI am running the bottom most script in the bottom left panel, `node compiled/index.js -b`  I want it to map to my ts files in the `src` folder so I can figure out where the problems are.\n\n    // tsconfig.json for this project\n    {\n       \"compilerOptions\": {\n           \"target\" : \"ES5\",\n           \"module\": \"commonjs\",\n           \"noImplicitAny\": true,\n           \"removeComments\": true,\n           \"sourceMap\": true\n           , \"outDir\": \"compiled/\"\n           , \"esModuleInterop\": true\n           , \"strict\": true\n           , \"typeRoots\": [\"./src/types\", \"node_modules/@types\"]\n       },\n       \"include\": [\"src/**/*\"]\n       , \"exclude\": [\"node_modules\", \"compiled\", \"__tests__\", \"types\"]\n    }", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is needed to get source maps working?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 85, "top_awarded_type": null, "hide_score": false, "media_metadata": {"czi5qwyx4mb51": {"status": "valid", "e": "Image", "m": "image/jpg", "p": [{"y": 65, "x": 108, "u": "https://preview.redd.it/czi5qwyx4mb51.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b2a7289905b739de1259259cd7ab5146667cdb6f"}, {"y": 131, "x": 216, "u": "https://preview.redd.it/czi5qwyx4mb51.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8294000e014cdf627a2e7bbc8054a33fcd6a44e4"}, {"y": 194, "x": 320, "u": "https://preview.redd.it/czi5qwyx4mb51.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=494a94b83a6ad4daa30e6d5d1d5e58add228a863"}, {"y": 388, "x": 640, "u": "https://preview.redd.it/czi5qwyx4mb51.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0531071e63f0ff301a24a776c25a65a636c5c024"}, {"y": 582, "x": 960, "u": "https://preview.redd.it/czi5qwyx4mb51.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=62f0002e9f2d3d6064b7b26e6b2e06c1d7d4117a"}, {"y": 655, "x": 1080, "u": "https://preview.redd.it/czi5qwyx4mb51.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7a0f0e0850e5856072928ddd10660ffe955ced9a"}], "s": {"y": 1161, "x": 1912, "u": "https://preview.redd.it/czi5qwyx4mb51.jpg?width=1912&amp;format=pjpg&amp;auto=webp&amp;s=a43c92123fb5807a5d001bfa85e5a9c347f9d99d"}, "id": "czi5qwyx4mb51"}}, "name": "t3_htg5jx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/5gPu2RI-LIpd2voNkjt0CXwQaNsuMhftfcZrEDWX3rw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595105687.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;&amp;#39;m using NDB which is like the google chrome debugger but for Node.js apps. I&amp;#39;m able to set breakpoints in compiled .js files but not source files in .ts. I see this notice in the app:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/czi5qwyx4mb51.jpg?width=1912&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=a43c92123fb5807a5d001bfa85e5a9c347f9d99d\"&gt;ndb source map notice&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t see any additional config options in the settings menu. Anyone know what step I&amp;#39;m likely missing for my .ts file breakpoints to be ignored here? &lt;/p&gt;\n\n&lt;p&gt;I am running the bottom most script in the bottom left panel, &lt;code&gt;node compiled/index.js -b&lt;/code&gt;  I want it to map to my ts files in the &lt;code&gt;src&lt;/code&gt; folder so I can figure out where the problems are.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// tsconfig.json for this project\n{\n   &amp;quot;compilerOptions&amp;quot;: {\n       &amp;quot;target&amp;quot; : &amp;quot;ES5&amp;quot;,\n       &amp;quot;module&amp;quot;: &amp;quot;commonjs&amp;quot;,\n       &amp;quot;noImplicitAny&amp;quot;: true,\n       &amp;quot;removeComments&amp;quot;: true,\n       &amp;quot;sourceMap&amp;quot;: true\n       , &amp;quot;outDir&amp;quot;: &amp;quot;compiled/&amp;quot;\n       , &amp;quot;esModuleInterop&amp;quot;: true\n       , &amp;quot;strict&amp;quot;: true\n       , &amp;quot;typeRoots&amp;quot;: [&amp;quot;./src/types&amp;quot;, &amp;quot;node_modules/@types&amp;quot;]\n   },\n   &amp;quot;include&amp;quot;: [&amp;quot;src/**/*&amp;quot;]\n   , &amp;quot;exclude&amp;quot;: [&amp;quot;node_modules&amp;quot;, &amp;quot;compiled&amp;quot;, &amp;quot;__tests__&amp;quot;, &amp;quot;types&amp;quot;]\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htg5jx", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/htg5jx/what_is_needed_to_get_source_maps_working/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/htg5jx/what_is_needed_to_get_source_maps_working/", "subreddit_subscribers": 44477, "created_utc": 1595076887.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_htg5jx", "before": null}}