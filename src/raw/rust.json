{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nThe Rust-related IRC channels on irc.mozilla.org (click the links to open a web-based IRC client):\n\n - [#rust](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust) (general questions)\n - [#rust-beginners](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-beginners) (beginner questions)\n - [#cargo](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23cargo) (the package manager)\n - [#rust-gamedev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-gamedev) (graphics and video games, and see also [/r/rust_gamedev](https://www.reddit.com/r/rust_gamedev))\n - [#rust-osdev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-osdev) (operating systems and embedded systems)\n - [#rust-webdev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-webdev) (web development)\n - [#rust-networking](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-networking) (computer networking, and see also [/r/rust_networking](https://www.reddit.com/r/rust_networking))\n\nAlso check out [last week's thread](https://reddit.com/r/rust/comments/eransa/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (5/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eupam3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580167363.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The Rust-related IRC channels on irc.mozilla.org (click the links to open a web-based IRC client):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust\"&gt;#rust&lt;/a&gt; (general questions)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-beginners\"&gt;#rust-beginners&lt;/a&gt; (beginner questions)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23cargo\"&gt;#cargo&lt;/a&gt; (the package manager)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-gamedev\"&gt;#rust-gamedev&lt;/a&gt; (graphics and video games, and see also &lt;a href=\"https://www.reddit.com/r/rust_gamedev\"&gt;/r/rust_gamedev&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-osdev\"&gt;#rust-osdev&lt;/a&gt; (operating systems and embedded systems)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-webdev\"&gt;#rust-webdev&lt;/a&gt; (web development)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-networking\"&gt;#rust-networking&lt;/a&gt; (computer networking, and see also &lt;a href=\"https://www.reddit.com/r/rust_networking\"&gt;/r/rust_networking&lt;/a&gt;)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/eransa/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last week&amp;#39;s thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eupam3", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 24, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/eupam3/hey_rustaceans_got_an_easy_question_ask_here_52020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/eupam3/hey_rustaceans_got_an_easy_question_ask_here_52020/", "subreddit_subscribers": 88086, "created_utc": 1580138563.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "New week, new Rust! What are you folks up to? Answer here or over at [rust-users](https://users.rust-lang.org/t/whats-everyone-working-on-this-week-5-2020/37515?u=llogiq)!", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's everyone working on this week (5/2020)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eupbbn", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580167453.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New week, new Rust! What are you folks up to? Answer here or over at &lt;a href=\"https://users.rust-lang.org/t/whats-everyone-working-on-this-week-5-2020/37515?u=llogiq\"&gt;rust-users&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eupbbn", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/eupbbn/whats_everyone_working_on_this_week_52020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/eupbbn/whats_everyone_working_on_this_week_52020/", "subreddit_subscribers": 88086, "created_utc": 1580138653.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_fhh74", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Bitfields Forever: Why we need a C-compatible Rust Crate", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_euxy49", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 200, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": "4c3a495a-89df-11e3-a482-12313d27e9a3", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 200, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580202170.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "immunant.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "immunant \u00b7 c2rust", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "euxy49", "is_robot_indexable": true, "report_reasons": null, "author": "thedataking", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/euxy49/bitfields_forever_why_we_need_a_ccompatible_rust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://immunant.com/blog/2020/01/bitfields/", "subreddit_subscribers": 88086, "created_utc": 1580173370.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_gsj6k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "rust-analyzer Changelog #9", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eus0cj", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 220, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 220, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580178426.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rust-analyzer.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eus0cj", "is_robot_indexable": true, "report_reasons": null, "author": "rdescartes", "discussion_type": null, "num_comments": 51, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eus0cj/rustanalyzer_changelog_9/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rust-analyzer.github.io/thisweek/2020/01/27/changelog-9.html", "subreddit_subscribers": 88086, "created_utc": 1580149626.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_org5q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Security by design: an introduction to the Rust programming language", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ev1zqf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580222973.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ev1zqf", "is_robot_indexable": true, "report_reasons": null, "author": "k0pernicus", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/ev1zqf/security_by_design_an_introduction_to_the_rust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/tadaweb/security-by-design-a-brief-introduction-to-rust-378060e45038", "subreddit_subscribers": 88086, "created_utc": 1580194173.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "[I asked Twitter this question already](https://twitter.com/ekuber/status/1221515971610832897), but I wish to have as big a corpus as possible. Can you send me snippets of code where you **needed** higher kinded lifetimes? I wish to identify as many cases as possible to categorize them and make `rustc` understand them and guide you in their direction.\n\nTo give you an idea of what I'm looking for, the following snippet\n\n    trait Trait&lt;T&gt; {\n        fn do_something(&amp;self, value: T);\n    }\n    \n    fn foo(b: Box&lt;Trait&lt;&amp;usize&gt;&gt;) {\n        let x: usize = 10;\n        b.do_something(&amp;x);\n    }\n\nproduces the following error\n\n    error[E0597]: `x` does not live long enough\n     --&gt; file.rs:7:20\n      |\n    5 | fn foo(b: Box&lt;Trait&lt;&amp;usize&gt;&gt;) {\n      |        - has type `std::boxed::Box&lt;dyn Trait&lt;&amp;'1 usize&gt;&gt;`\n    6 |     let x: usize = 10;\n    7 |     b.do_something(&amp;x);\n      |     ---------------^^-\n      |     |              |\n      |     |              borrowed value does not live long enough\n      |     argument requires that `x` is borrowed for `'1`\n    8 | }\n      | - `x` dropped here while still borrowed\n\nbut if you change it to use Higher-Ranked lifetimes\n\n    trait Trait&lt;T&gt; {\n        fn do_something(&amp;self, value: T);\n    }\n    \n    fn foo(b: Box&lt;for&lt;'a&gt; Trait&lt;&amp;'a usize&gt;&gt;) {\n        let x: usize = 10;\n        b.do_something(&amp;x);\n    }\n\nThe code actually compiles. Ideally, `rustc` should detect this case and help you get to working code faster.", "author_fullname": "t2_1j8jo6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Can you send me snippets of code where you *needed* higher kinded lifetimes? I wish to identify as many cases as possible to categorize them and make rustc understand them and guide you in their direction.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_euv4mq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 73, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 73, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580190734.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://twitter.com/ekuber/status/1221515971610832897\"&gt;I asked Twitter this question already&lt;/a&gt;, but I wish to have as big a corpus as possible. Can you send me snippets of code where you &lt;strong&gt;needed&lt;/strong&gt; higher kinded lifetimes? I wish to identify as many cases as possible to categorize them and make &lt;code&gt;rustc&lt;/code&gt; understand them and guide you in their direction.&lt;/p&gt;\n\n&lt;p&gt;To give you an idea of what I&amp;#39;m looking for, the following snippet&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;trait Trait&amp;lt;T&amp;gt; {\n    fn do_something(&amp;amp;self, value: T);\n}\n\nfn foo(b: Box&amp;lt;Trait&amp;lt;&amp;amp;usize&amp;gt;&amp;gt;) {\n    let x: usize = 10;\n    b.do_something(&amp;amp;x);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;produces the following error&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;error[E0597]: `x` does not live long enough\n --&amp;gt; file.rs:7:20\n  |\n5 | fn foo(b: Box&amp;lt;Trait&amp;lt;&amp;amp;usize&amp;gt;&amp;gt;) {\n  |        - has type `std::boxed::Box&amp;lt;dyn Trait&amp;lt;&amp;amp;&amp;#39;1 usize&amp;gt;&amp;gt;`\n6 |     let x: usize = 10;\n7 |     b.do_something(&amp;amp;x);\n  |     ---------------^^-\n  |     |              |\n  |     |              borrowed value does not live long enough\n  |     argument requires that `x` is borrowed for `&amp;#39;1`\n8 | }\n  | - `x` dropped here while still borrowed\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but if you change it to use Higher-Ranked lifetimes&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;trait Trait&amp;lt;T&amp;gt; {\n    fn do_something(&amp;amp;self, value: T);\n}\n\nfn foo(b: Box&amp;lt;for&amp;lt;&amp;#39;a&amp;gt; Trait&amp;lt;&amp;amp;&amp;#39;a usize&amp;gt;&amp;gt;) {\n    let x: usize = 10;\n    b.do_something(&amp;amp;x);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The code actually compiles. Ideally, &lt;code&gt;rustc&lt;/code&gt; should detect this case and help you get to working code faster.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "euv4mq", "is_robot_indexable": true, "report_reasons": null, "author": "ekuber", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/euv4mq/can_you_send_me_snippets_of_code_where_you_needed/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/euv4mq/can_you_send_me_snippets_of_code_where_you_needed/", "subreddit_subscribers": 88086, "created_utc": 1580161934.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_3be2m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tokio v0.2.11 released, includes new `select!` and `join!` macros.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eushwv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 120, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 120, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580180365.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eushwv", "is_robot_indexable": true, "report_reasons": null, "author": "carllerche", "discussion_type": null, "num_comments": 18, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eushwv/tokio_v0211_released_includes_new_select_and_join/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/tokio-rs/tokio/releases/tag/tokio-0.2.11", "subreddit_subscribers": 88086, "created_utc": 1580151565.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_388ox", "saved": false, "mod_reason_title": null, "gilded": 1, "clicked": false, "title": "Units of Measure in Rust with Refinement Types", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eun51n", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 177, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 177, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_2": 1}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580156143.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "yoric.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"count": 1, "is_enabled": true, "subreddit_id": null, "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.", "end_date": null, "award_sub_type": "GLOBAL", "coin_reward": 100, "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png", "days_of_premium": 7, "is_new": false, "id": "gid_2", "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png", "width": 128, "height": 128}], "days_of_drip_extension": 0, "award_type": "global", "start_date": null, "coin_price": 500, "icon_width": 512, "subreddit_coin_reward": 0, "name": "Gold"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eun51n", "is_robot_indexable": true, "report_reasons": null, "author": "ImYoric", "discussion_type": null, "num_comments": 103, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eun51n/units_of_measure_in_rust_with_refinement_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://yoric.github.io/post/uom.rs/", "subreddit_subscribers": 88086, "created_utc": 1580127343.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "# Drue = Hue + Drums\n[https://github.com/finnkauski/drue](https://github.com/finnkauski/drue)\n\nHad posted about this before. Here's something worth showing off as far as a workable codebase goes.\n\nFirst proper hobby project in Rust. To be honest it went from procedural to more struct based to functional and back again once I realised I know nothing about lifetimes. I rewrote it tons of times, learned how to do `macros` in order to avoid the issues I've had. I basically had the best and the *worst* times with the compiler and I'm starting to get it now.", "author_fullname": "t2_3v7dlh6a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Drue = Drums + Hue Lights", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_euxkzr", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580200632.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;Drue = Hue + Drums&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/finnkauski/drue\"&gt;https://github.com/finnkauski/drue&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Had posted about this before. Here&amp;#39;s something worth showing off as far as a workable codebase goes.&lt;/p&gt;\n\n&lt;p&gt;First proper hobby project in Rust. To be honest it went from procedural to more struct based to functional and back again once I realised I know nothing about lifetimes. I rewrote it tons of times, learned how to do &lt;code&gt;macros&lt;/code&gt; in order to avoid the issues I&amp;#39;ve had. I basically had the best and the &lt;em&gt;worst&lt;/em&gt; times with the compiler and I&amp;#39;m starting to get it now.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "euxkzr", "is_robot_indexable": true, "report_reasons": null, "author": "finnkauski", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/euxkzr/drue_drums_hue_lights/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/euxkzr/drue_drums_hue_lights/", "subreddit_subscribers": 88086, "created_utc": 1580171832.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "I've been wanting to make a web application in Rust. Well, an API/panel that controls something on the server. So I looked into frameworks with built-in websocket support, and came across [actix-web](https://actix.rs/) and [warp](https://github.com/seanmonstar/warp). They both appear to have their ups and downs (warp has much less `unsafe` and is simpler, while actix seems much more mature and fleshed out).\n\nI want to know other developers' experiences with these frameworks, and their opinions too, so I can make an informed decision.", "author_fullname": "t2_363kuoxl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "actix-web or warp?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_euyfr2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580204479.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been wanting to make a web application in Rust. Well, an API/panel that controls something on the server. So I looked into frameworks with built-in websocket support, and came across &lt;a href=\"https://actix.rs/\"&gt;actix-web&lt;/a&gt; and &lt;a href=\"https://github.com/seanmonstar/warp\"&gt;warp&lt;/a&gt;. They both appear to have their ups and downs (warp has much less &lt;code&gt;unsafe&lt;/code&gt; and is simpler, while actix seems much more mature and fleshed out).&lt;/p&gt;\n\n&lt;p&gt;I want to know other developers&amp;#39; experiences with these frameworks, and their opinions too, so I can make an informed decision.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "euyfr2", "is_robot_indexable": true, "report_reasons": null, "author": "steamport", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/euyfr2/actixweb_or_warp/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/euyfr2/actixweb_or_warp/", "subreddit_subscribers": 88086, "created_utc": 1580175679.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Hello Everyone,\n\nI have build a very small [crate](https://github.com/Lesstat/nd-triangulation) that brings triangulations in arbitrary dimensions to rust. It uses the fantastic and exceptional [cpp](https://github.com/mystor/rust-cpp) crate to build an API to a few [cgal triangulation classes](https://doc.cgal.org/latest/Triangulation/index.html) and functionalities. \n\nRight now it is rather limited in various ways :). That is because it's tailored to my specific research, but if any of you guys has ideas/use cases I would be happy to try to implement them.\n\nAlso, I would very much appreciate feedback and ideas, as this is my first time publishing a crate. I guess there are some very general things I missed. But to have a very concrete question: I think the crate right now builds only on some linux distros as I do not know how to make a build script that more cleverly detects where the dependencies are located. Any input on that would help me a lot.\n\nI want to give a huge thank you to the rust community. You all have built a community where it is easy to contribute and made it feel worthwhile enough for me to put the extra effort in to publish this :)!", "author_fullname": "t2_3ypr9x8u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "nd-triangulation brings you arbitrary dimensional Triangulations from cgal (c++) to rust", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_euspgo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 24, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 24, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580181187.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello Everyone,&lt;/p&gt;\n\n&lt;p&gt;I have build a very small &lt;a href=\"https://github.com/Lesstat/nd-triangulation\"&gt;crate&lt;/a&gt; that brings triangulations in arbitrary dimensions to rust. It uses the fantastic and exceptional &lt;a href=\"https://github.com/mystor/rust-cpp\"&gt;cpp&lt;/a&gt; crate to build an API to a few &lt;a href=\"https://doc.cgal.org/latest/Triangulation/index.html\"&gt;cgal triangulation classes&lt;/a&gt; and functionalities. &lt;/p&gt;\n\n&lt;p&gt;Right now it is rather limited in various ways :). That is because it&amp;#39;s tailored to my specific research, but if any of you guys has ideas/use cases I would be happy to try to implement them.&lt;/p&gt;\n\n&lt;p&gt;Also, I would very much appreciate feedback and ideas, as this is my first time publishing a crate. I guess there are some very general things I missed. But to have a very concrete question: I think the crate right now builds only on some linux distros as I do not know how to make a build script that more cleverly detects where the dependencies are located. Any input on that would help me a lot.&lt;/p&gt;\n\n&lt;p&gt;I want to give a huge thank you to the rust community. You all have built a community where it is easy to contribute and made it feel worthwhile enough for me to put the extra effort in to publish this :)!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "euspgo", "is_robot_indexable": true, "report_reasons": null, "author": "lesstat-1779", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/euspgo/ndtriangulation_brings_you_arbitrary_dimensional/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/euspgo/ndtriangulation_brings_you_arbitrary_dimensional/", "subreddit_subscribers": 88086, "created_utc": 1580152387.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "[**Kondo**](https://github.com/tbillington/kondo) is a command line tool for removing things from your drive that don't bring you joy.\n\nIt identifies projects on your drive that are using a lot of space that could be saved! Examples include *target* in Cargo projects and *node_modules* in Node projects.\n\nThis is especially useful for:\n\n* if you're about to zip up a bunch of projects to move them/back them up\n* if you're running low on disk space and just want to free some up\n* if you're a serial hoarder and want to keep all those things you cloned from github 1 time without the disk cost...\n\nI've been using Rust on and off for a few years now. Inspired by tools like [ripgrep](https://github.com/BurntSushi/ripgrep) I made a [basic command line tool for helping me at work](https://github.com/tbillington/pj) a while back and was quite happy with how it turned out and was motivated me to make more!\n\nI wanted to make this tool because I've done this manually way too many times to count. It doesn't currently delete anything because I'm paranoid that I'll `rm -rf /` somehow but I do plan to add the feature at some point, perhaps behind a prompt/flag.\n\nYou should just be able to run `cargo install kondo` and be on your way!\n\nSample output:\n\n    $ kondo ~\n    Scanning \"C:/Users/Trent\"\n    1000 projects found\n    Calculating savings per project\n      (redacted 1000~ lines)\n      385.6MB UnityTestApp (Unity) C:\\Users\\Trent\\code\\UnityTestApp\n      458.7MB tokio (Cargo) C:\\Users\\Trent\\code\\tokio\n        1.5GB ui-testing (Node) C:\\Users\\Trent\\code\\ui-testing\n        4.0GB rust-analyzer (Cargo) C:\\Users\\Trent\\code\\rust-analyzer\n    9.5GB possible savings\n\nAny code feedback is greatly appreciated :)", "author_fullname": "t2_7qgbo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kondo \ud83e\uddf9 my first Rust crate.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_euinys", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 239, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 239, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580127452.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/tbillington/kondo\"&gt;&lt;strong&gt;Kondo&lt;/strong&gt;&lt;/a&gt; is a command line tool for removing things from your drive that don&amp;#39;t bring you joy.&lt;/p&gt;\n\n&lt;p&gt;It identifies projects on your drive that are using a lot of space that could be saved! Examples include &lt;em&gt;target&lt;/em&gt; in Cargo projects and &lt;em&gt;node_modules&lt;/em&gt; in Node projects.&lt;/p&gt;\n\n&lt;p&gt;This is especially useful for:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;if you&amp;#39;re about to zip up a bunch of projects to move them/back them up&lt;/li&gt;\n&lt;li&gt;if you&amp;#39;re running low on disk space and just want to free some up&lt;/li&gt;\n&lt;li&gt;if you&amp;#39;re a serial hoarder and want to keep all those things you cloned from github 1 time without the disk cost...&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&amp;#39;ve been using Rust on and off for a few years now. Inspired by tools like &lt;a href=\"https://github.com/BurntSushi/ripgrep\"&gt;ripgrep&lt;/a&gt; I made a &lt;a href=\"https://github.com/tbillington/pj\"&gt;basic command line tool for helping me at work&lt;/a&gt; a while back and was quite happy with how it turned out and was motivated me to make more!&lt;/p&gt;\n\n&lt;p&gt;I wanted to make this tool because I&amp;#39;ve done this manually way too many times to count. It doesn&amp;#39;t currently delete anything because I&amp;#39;m paranoid that I&amp;#39;ll &lt;code&gt;rm -rf /&lt;/code&gt; somehow but I do plan to add the feature at some point, perhaps behind a prompt/flag.&lt;/p&gt;\n\n&lt;p&gt;You should just be able to run &lt;code&gt;cargo install kondo&lt;/code&gt; and be on your way!&lt;/p&gt;\n\n&lt;p&gt;Sample output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ kondo ~\nScanning &amp;quot;C:/Users/Trent&amp;quot;\n1000 projects found\nCalculating savings per project\n  (redacted 1000~ lines)\n  385.6MB UnityTestApp (Unity) C:\\Users\\Trent\\code\\UnityTestApp\n  458.7MB tokio (Cargo) C:\\Users\\Trent\\code\\tokio\n    1.5GB ui-testing (Node) C:\\Users\\Trent\\code\\ui-testing\n    4.0GB rust-analyzer (Cargo) C:\\Users\\Trent\\code\\rust-analyzer\n9.5GB possible savings\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any code feedback is greatly appreciated :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "euinys", "is_robot_indexable": true, "report_reasons": null, "author": "villiger2", "discussion_type": null, "num_comments": 52, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/euinys/kondo_my_first_rust_crate/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/euinys/kondo_my_first_rust_crate/", "subreddit_subscribers": 88086, "created_utc": 1580098652.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_euinys", "before": null}}