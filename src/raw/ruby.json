{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_bu67h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "monofile gem - read in / parse monorepo / mono source tree definitions - a list of git (and github) projects, and more", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jlgkvd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.77, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/JJvx9K967804PFYS3xqhq3S2EDUpWi2yM_rcqKZVYdE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604171237.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/rubycoco/monos/tree/master/monofile", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/NGS6lCTVeozxUkFzDoJpU60rfpBx6ZVsf9Bf5SP4ZUw.jpg?auto=webp&amp;s=953b3678c3e8952f4b564dfa707cfd13dd605be5", "width": 256, "height": 256}, "resolutions": [{"url": "https://external-preview.redd.it/NGS6lCTVeozxUkFzDoJpU60rfpBx6ZVsf9Bf5SP4ZUw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=85a053ea9052d55dbc50a6a8e16943767edae04f", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/NGS6lCTVeozxUkFzDoJpU60rfpBx6ZVsf9Bf5SP4ZUw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=761ab3da112907d6886972777cfa8b49ef8ecd01", "width": 216, "height": 216}], "variants": {}, "id": "37oOMmuQfsRF678Qj5bf0kE0590QT2uVorZ9tjX1tnU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlgkvd", "is_robot_indexable": true, "report_reasons": null, "author": "geraldbauer", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jlgkvd/monofile_gem_read_in_parse_monorepo_mono_source/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/rubycoco/monos/tree/master/monofile", "subreddit_subscribers": 68099, "created_utc": 1604142437.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_gt1xg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Nobody signs Ruby gems: proof in 1-tweet-size code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jl29xm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 37, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Version.where(platform:&amp;#39;ruby&amp;#39;,latest:1).joins(&amp;#39;join gem_downloads d on d.rubygem_id=versions.rubygem_id&amp;#39;).group(:id).order(&amp;#39;sum(count) desc&amp;#39;).limit(9999).pluck(:full_name).count{|n|!Gem::&lt;a href=\"https://t.co/T7P0GPjMmU\"&gt;https://t.co/T7P0GPjMmU&lt;/a&gt;(open &amp;quot;&lt;a href=\"https://t.co/Zy4WYLnSxw\"&gt;https://t.co/Zy4WYLnSxw&lt;/a&gt;{n}.gem&amp;quot;).spec.cert_chain.empty?} == 250&lt;/p&gt;&amp;mdash; Vlad Bokov (@razum2um) &lt;a href=\"https://twitter.com/razum2um/status/1322243197008052225?ref_src=twsrc%5Etfw\"&gt;October 30, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 271}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/razum2um/status/1322243197008052225", "author_name": "Vlad Bokov", "height": 271, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Version.where(platform:&amp;#39;ruby&amp;#39;,latest:1).joins(&amp;#39;join gem_downloads d on d.rubygem_id=versions.rubygem_id&amp;#39;).group(:id).order(&amp;#39;sum(count) desc&amp;#39;).limit(9999).pluck(:full_name).count{|n|!Gem::&lt;a href=\"https://t.co/T7P0GPjMmU\"&gt;https://t.co/T7P0GPjMmU&lt;/a&gt;(open &amp;quot;&lt;a href=\"https://t.co/Zy4WYLnSxw\"&gt;https://t.co/Zy4WYLnSxw&lt;/a&gt;{n}.gem&amp;quot;).spec.cert_chain.empty?} == 250&lt;/p&gt;&amp;mdash; Vlad Bokov (@razum2um) &lt;a href=\"https://twitter.com/razum2um/status/1322243197008052225?ref_src=twsrc%5Etfw\"&gt;October 30, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/razum2um", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Version.where(platform:&amp;#39;ruby&amp;#39;,latest:1).joins(&amp;#39;join gem_downloads d on d.rubygem_id=versions.rubygem_id&amp;#39;).group(:id).order(&amp;#39;sum(count) desc&amp;#39;).limit(9999).pluck(:full_name).count{|n|!Gem::&lt;a href=\"https://t.co/T7P0GPjMmU\"&gt;https://t.co/T7P0GPjMmU&lt;/a&gt;(open &amp;quot;&lt;a href=\"https://t.co/Zy4WYLnSxw\"&gt;https://t.co/Zy4WYLnSxw&lt;/a&gt;{n}.gem&amp;quot;).spec.cert_chain.empty?} == 250&lt;/p&gt;&amp;mdash; Vlad Bokov (@razum2um) &lt;a href=\"https://twitter.com/razum2um/status/1322243197008052225?ref_src=twsrc%5Etfw\"&gt;October 30, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/jl29xm", "height": 271}, "link_flair_text": null, "can_mod_post": false, "score": 37, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/LtV9nW9t1NpOqsHt1BswfOdUl7ub7IFZq_3H5XdFDPs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604111221.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://twitter.com/razum2um/status/1322243197008052225", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zwrypw99sG72dMyM5i7Sqjp8afr1JXfkteD1ffoJQNM.jpg?auto=webp&amp;s=36b677f7182ebe429112b9492721e6cdc36aba92", "width": 140, "height": 140}, "resolutions": [{"url": "https://external-preview.redd.it/zwrypw99sG72dMyM5i7Sqjp8afr1JXfkteD1ffoJQNM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=06c8dace929f1943672daa6e366ce304bcbbcc1c", "width": 108, "height": 108}], "variants": {}, "id": "tRfg2uJczkv0_lQjaAHYCx_PUA2B7ZVe91J4oPYM1ic"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jl29xm", "is_robot_indexable": true, "report_reasons": null, "author": "razum2um", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jl29xm/nobody_signs_ruby_gems_proof_in_1tweetsize_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/razum2um/status/1322243197008052225", "subreddit_subscribers": 68099, "created_utc": 1604082421.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/razum2um/status/1322243197008052225", "author_name": "Vlad Bokov", "height": 271, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Version.where(platform:&amp;#39;ruby&amp;#39;,latest:1).joins(&amp;#39;join gem_downloads d on d.rubygem_id=versions.rubygem_id&amp;#39;).group(:id).order(&amp;#39;sum(count) desc&amp;#39;).limit(9999).pluck(:full_name).count{|n|!Gem::&lt;a href=\"https://t.co/T7P0GPjMmU\"&gt;https://t.co/T7P0GPjMmU&lt;/a&gt;(open &amp;quot;&lt;a href=\"https://t.co/Zy4WYLnSxw\"&gt;https://t.co/Zy4WYLnSxw&lt;/a&gt;{n}.gem&amp;quot;).spec.cert_chain.empty?} == 250&lt;/p&gt;&amp;mdash; Vlad Bokov (@razum2um) &lt;a href=\"https://twitter.com/razum2um/status/1322243197008052225?ref_src=twsrc%5Etfw\"&gt;October 30, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/razum2um", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_wtzqz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Supporting RBS type checkinng in httpx", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 128, "top_awarded_type": null, "hide_score": false, "name": "t3_jl6l8z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/IwvHYUPxmP-KA2euoWfLLvRVe4LqP4Rxy5GxQam0drE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604125315.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "honeyryderchuck.gitlab.io", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://honeyryderchuck.gitlab.io/httpx/2020/10/16/rbs-duck-typing-at-httpx.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bzyb9d23g-ZI-KnxSsd8uUpII_bfEML-ziUXUyz8r_g.jpg?auto=webp&amp;s=cbc3f697ccd63b120e953f72cd60c67db0c58b57", "width": 636, "height": 582}, "resolutions": [{"url": "https://external-preview.redd.it/bzyb9d23g-ZI-KnxSsd8uUpII_bfEML-ziUXUyz8r_g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7fb179fc767cc6d57ea1ddb101a4170f27492a5e", "width": 108, "height": 98}, {"url": "https://external-preview.redd.it/bzyb9d23g-ZI-KnxSsd8uUpII_bfEML-ziUXUyz8r_g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a3f6a42eccd1e4ffeea2c4e689160629cddb0219", "width": 216, "height": 197}, {"url": "https://external-preview.redd.it/bzyb9d23g-ZI-KnxSsd8uUpII_bfEML-ziUXUyz8r_g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2d7283cf6af03d9c91ab3034ff7132f8c1c82105", "width": 320, "height": 292}], "variants": {}, "id": "CARNeZjG0882KN97nv1tm60ko_3DjDAQlbXvzLJjyMI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jl6l8z", "is_robot_indexable": true, "report_reasons": null, "author": "honeyryderchuck", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jl6l8z/supporting_rbs_type_checkinng_in_httpx/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://honeyryderchuck.gitlab.io/httpx/2020/10/16/rbs-duck-typing-at-httpx.html", "subreddit_subscribers": 68099, "created_utc": 1604096515.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I've completed a major revision of the RDoc for Ruby class [CSV](https://ruby.github.io/csv/CSV.html), along with its nested classes [CSV::Table](https://ruby.github.io/csv/CSV/Table.html) and [CSV::Row](https://ruby.github.io/csv/CSV/Row.html).  This is not yet merged into the master branch at ruby/ruby, but may be seen on ruby.github.io at the links above.\n\nI've also been experimenting with [CSV recipes](https://ruby.github.io/csv/doc/csv/recipes/recipes_rdoc.html), which focus on specific user tasks rather than on API capabilities.\n\nOh, and here's the [existing RDoc](https://ruby-doc.org/stdlib-2.7.2/libdoc/csv/rdoc/CSV.html).", "author_fullname": "t2_1ruooe", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "RDoc for Ruby CSV", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jl130l", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1604090585.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604107442.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve completed a major revision of the RDoc for Ruby class &lt;a href=\"https://ruby.github.io/csv/CSV.html\"&gt;CSV&lt;/a&gt;, along with its nested classes &lt;a href=\"https://ruby.github.io/csv/CSV/Table.html\"&gt;CSV::Table&lt;/a&gt; and &lt;a href=\"https://ruby.github.io/csv/CSV/Row.html\"&gt;CSV::Row&lt;/a&gt;.  This is not yet merged into the master branch at ruby/ruby, but may be seen on ruby.github.io at the links above.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve also been experimenting with &lt;a href=\"https://ruby.github.io/csv/doc/csv/recipes/recipes_rdoc.html\"&gt;CSV recipes&lt;/a&gt;, which focus on specific user tasks rather than on API capabilities.&lt;/p&gt;\n\n&lt;p&gt;Oh, and here&amp;#39;s the &lt;a href=\"https://ruby-doc.org/stdlib-2.7.2/libdoc/csv/rdoc/CSV.html\"&gt;existing RDoc&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jl130l", "is_robot_indexable": true, "report_reasons": null, "author": "BurdetteLamar", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jl130l/rdoc_for_ruby_csv/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jl130l/rdoc_for_ruby_csv/", "subreddit_subscribers": 68099, "created_utc": 1604078642.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_6qsys", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "READMEs on Ruby Toolbox project pages", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jkzf7x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/hQyUwlv0q5P-fnfpgqbexKNeLcE-rQd7MFO1sBwEPGw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604102300.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "ruby-toolbox.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.ruby-toolbox.com/blog/2020-10-30/project-readmes", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/i-0qNYnY42mlZU-HeMHjnhjrYoHZ4TmlLfKSBWkjaHw.jpg?auto=webp&amp;s=945b3c9ed2be46e7e32629d42d99c6051793c55e", "width": 1772, "height": 1772}, "resolutions": [{"url": "https://external-preview.redd.it/i-0qNYnY42mlZU-HeMHjnhjrYoHZ4TmlLfKSBWkjaHw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b24a568071428fa1336600d1ac8c5c1dafa0894e", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/i-0qNYnY42mlZU-HeMHjnhjrYoHZ4TmlLfKSBWkjaHw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2753a3184911eef21a8fd7ea4e6a3229dfd05468", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/i-0qNYnY42mlZU-HeMHjnhjrYoHZ4TmlLfKSBWkjaHw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=19389b99f2ad8c42c6b315c562c9a3d6f72e8f28", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/i-0qNYnY42mlZU-HeMHjnhjrYoHZ4TmlLfKSBWkjaHw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3e54606e976df9f47b4522f0fecf5bb99237a780", "width": 640, "height": 640}, {"url": "https://external-preview.redd.it/i-0qNYnY42mlZU-HeMHjnhjrYoHZ4TmlLfKSBWkjaHw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9cfa8f2ce8fca8ddcfc60bcc463840edc78f4c0", "width": 960, "height": 960}, {"url": "https://external-preview.redd.it/i-0qNYnY42mlZU-HeMHjnhjrYoHZ4TmlLfKSBWkjaHw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4dc340ef1aff492e816e2ab47f4ff28a279b2f26", "width": 1080, "height": 1080}], "variants": {}, "id": "Q5uFHBJGX3os-EykdGnMWZ-KacjBK9dLbJmi7Bxpba0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkzf7x", "is_robot_indexable": true, "report_reasons": null, "author": "TheDeadSerious", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jkzf7x/readmes_on_ruby_toolbox_project_pages/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.ruby-toolbox.com/blog/2020-10-30/project-readmes", "subreddit_subscribers": 68099, "created_utc": 1604073500.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_zmb2u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Packwerk at Shopify", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_jkwp16", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.71, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/olEA157z7kU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "ShipIt! presents: Packwerk at Shopify", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/olEA157z7kU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Shopify Engineering", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/olEA157z7kU/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCcSb55kxVx_euWDDRfWFxrA"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/olEA157z7kU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/jkwp16", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/QVdWIvqzO1IAPmy3uP3BodyvOa1CWafblqgi3RqmIpw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604093124.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://youtube.com/watch?v=olEA157z7kU", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/tHGuS6eawzCWo7aVvX6CCw8Mg6gbTu9KpCDN7Zz0__s.jpg?auto=webp&amp;s=4b1c38edc2481cc450133cdcc02ac7ccf259eb1e", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/tHGuS6eawzCWo7aVvX6CCw8Mg6gbTu9KpCDN7Zz0__s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=dcd0a744fdb71fb70bfd3ca06b844e3aaf03ae3d", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/tHGuS6eawzCWo7aVvX6CCw8Mg6gbTu9KpCDN7Zz0__s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4d27915e1e3773d2193623c7ca58ba629f90ebaf", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/tHGuS6eawzCWo7aVvX6CCw8Mg6gbTu9KpCDN7Zz0__s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=807d211a10b3201d26418336564c61bad460ff93", "width": 320, "height": 240}], "variants": {}, "id": "iodSW3kiRWFrwMLjiDMVfkVc9__TBUPCw2xQaAk1tEA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkwp16", "is_robot_indexable": true, "report_reasons": null, "author": "geospeck", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jkwp16/packwerk_at_shopify/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtube.com/watch?v=olEA157z7kU", "subreddit_subscribers": 68099, "created_utc": 1604064324.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "ShipIt! presents: Packwerk at Shopify", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/olEA157z7kU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Shopify Engineering", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/olEA157z7kU/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCcSb55kxVx_euWDDRfWFxrA"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_kq1d5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby on Rails in a week", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 82, "top_awarded_type": null, "hide_score": false, "name": "t3_jkpvwf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/bM1xZqvO8QYQGtT-MUduypoa9DlAH2p7YbYG-vvUSKc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604059311.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "simplethread.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.simplethread.com/ruby-on-rails-in-a-week/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/cDRURsSHvscjpQp3mOBkbvNugVP2NnzVG_-260RrFZc.jpg?auto=webp&amp;s=549acc5d814a2e10d13636afbab159449aeb3eaf", "width": 2000, "height": 1182}, "resolutions": [{"url": "https://external-preview.redd.it/cDRURsSHvscjpQp3mOBkbvNugVP2NnzVG_-260RrFZc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a9535233b7bd504eff8dd7e9c6d0c4d0e16f5767", "width": 108, "height": 63}, {"url": "https://external-preview.redd.it/cDRURsSHvscjpQp3mOBkbvNugVP2NnzVG_-260RrFZc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=286a4d1735f6a77bcd88188444120c756ced957c", "width": 216, "height": 127}, {"url": "https://external-preview.redd.it/cDRURsSHvscjpQp3mOBkbvNugVP2NnzVG_-260RrFZc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=36b222efa53d827345593e0c151cf4f6b39afc98", "width": 320, "height": 189}, {"url": "https://external-preview.redd.it/cDRURsSHvscjpQp3mOBkbvNugVP2NnzVG_-260RrFZc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d683c4815d20228f9a59fa488f3bf5270c956d16", "width": 640, "height": 378}, {"url": "https://external-preview.redd.it/cDRURsSHvscjpQp3mOBkbvNugVP2NnzVG_-260RrFZc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2732358ef0c420d6838b24b2402ae6e3317bb31b", "width": 960, "height": 567}, {"url": "https://external-preview.redd.it/cDRURsSHvscjpQp3mOBkbvNugVP2NnzVG_-260RrFZc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=408f5355b8796ae79a81cfcee0888ab9b2e89ee8", "width": 1080, "height": 638}], "variants": {}, "id": "PsjaQnHuRo2wblVqbjmpXSctGgve0Nr7kGHjm6vpT4k"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkpvwf", "is_robot_indexable": true, "report_reasons": null, "author": "ASIC_SP", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jkpvwf/ruby_on_rails_in_a_week/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.simplethread.com/ruby-on-rails-in-a-week/", "subreddit_subscribers": 68099, "created_utc": 1604030511.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Suppose I have a method like this \n\n    def fun(a, options = {})\n      puts [a, options].inspect\n    end\n    fun(1, a: 3, b: 4) =&gt;  [1, {:a=&gt;3, :b=&gt;4}]\n\nI don't understand how this gets converted to a hash. Also, is it possible to have this in the middle somewhere? like this  \n\n\n    def fun(a, options = {}, c)\n      puts [a, options].inspect\n    end\n    fun(1, a: 3, b: 4, 10)\n\nwithout have to wrap \\`a: 3, b: 4\\` into  {}?", "author_fullname": "t2_7m8mv9r7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "how is this converted to a hash in a function call?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jktr6s", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604079610.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Suppose I have a method like this &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fun(a, options = {})\n  puts [a, options].inspect\nend\nfun(1, a: 3, b: 4) =&amp;gt;  [1, {:a=&amp;gt;3, :b=&amp;gt;4}]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I don&amp;#39;t understand how this gets converted to a hash. Also, is it possible to have this in the middle somewhere? like this  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fun(a, options = {}, c)\n  puts [a, options].inspect\nend\nfun(1, a: 3, b: 4, 10)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;without have to wrap `a: 3, b: 4` into  {}?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jktr6s", "is_robot_indexable": true, "report_reasons": null, "author": "prosperousdoggo", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jktr6s/how_is_this_converted_to_a_hash_in_a_function_call/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jktr6s/how_is_this_converted_to_a_hash_in_a_function_call/", "subreddit_subscribers": 68099, "created_utc": 1604050810.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_wjv56", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Future of Ruby - The Journey to One Million Websocket Connections", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_jki55j", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 52, "total_awards_received": 1, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Dtn9Uudw4Mo?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "RubyConf Taiwan 2019 - The Journey to One Million by Samuel Williams", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Dtn9Uudw4Mo?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "RubyConf Taiwan", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/Dtn9Uudw4Mo/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCqw_z59yI24SivuD573FECA"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Dtn9Uudw4Mo?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/jki55j", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 52, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/-cRg-hfkQH6djmX-A6BA1WgIS2aWlogdX71tM6tVhk4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 1}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1604032529.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=Dtn9Uudw4Mo", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/kEju71i3uYnEMc_vQrkPCLPGqN4t5xnWnTlhEiMUzH8.jpg?auto=webp&amp;s=c0b9602d9e2226c7edab7ae29e184d158ec6a4a6", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/kEju71i3uYnEMc_vQrkPCLPGqN4t5xnWnTlhEiMUzH8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=49971ff3c30cc7d75978e0a193a66058e43addc2", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/kEju71i3uYnEMc_vQrkPCLPGqN4t5xnWnTlhEiMUzH8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=23bd9b3fde627d9ad24919c09ad1f31972aae646", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/kEju71i3uYnEMc_vQrkPCLPGqN4t5xnWnTlhEiMUzH8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=85b1dee92e9397b578e31aa710d6a0ca7c1aa45c", "width": 320, "height": 240}], "variants": {}, "id": "p5BzTWmNlIm-YyT7SvqjacVYWEHszEHxbeImy4Y3b7E"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jki55j", "is_robot_indexable": true, "report_reasons": null, "author": "ahmad_musaffa", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jki55j/future_of_ruby_the_journey_to_one_million/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=Dtn9Uudw4Mo", "subreddit_subscribers": 68099, "created_utc": 1604003729.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "RubyConf Taiwan 2019 - The Journey to One Million by Samuel Williams", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Dtn9Uudw4Mo?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "RubyConf Taiwan", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/Dtn9Uudw4Mo/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCqw_z59yI24SivuD573FECA"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "So this RPC system has some advantages...\n1. I programmed it as a toy (which was fun for me)\n2. It's simple, if there is a bug in 57 lines of code, it's easy to find and fix\n3. It uses redis, which I like, is simple, and fast\n4. It handles exceptions which is probably necessary if anyone ever wanted to actually use it\n5. there are no timeouts for long running code, cause sometimes timeouts are frustrating\n6. there are timeouts for return values because those should be fast anyway\n7. usage is simple so you don't have to understand what's going on to use it\n8. if it's not already obvious rrecv and rsend invocations can occur on different processes (or with a little more configuration on different machines)  (all classes used as arguments should be available to all processes since we're using Marshaling)\n\n```\nrrecv(:name_of_thing_that_can_be_called) do |args|\n#do whatever processing you want\n#whatever is returned by this block is returned to the caller\nend\n```\n```\nresult = rsend(:name_of_thing_that_can_be_called, &lt;whatever args you want&gt;, &lt;can be many&gt;)\n```\nevery time you define a new callable thing with rrecv, it will spin up a new thread to respond to those requests\n\nfuture work, add the ability to control how many workers rrecv creates, and possibly allow other types of workers other than just threads.\n\n\n\n```\nrequire 'securerandom'\nrequire 'redis'\n\nclass Message\n  attr_reader :payload, :guid\n\n  def initialize(*args)\n    @guid = SecureRandom.uuid\n    @payload = args\n  end\nend\n\nclass RPCExceptionContainer\n  attr_reader :saved_exception\n\n  def initialize(exception)\n    @saved_exception = exception\n  end\nend\n\ndef rsend(key, *args)\n  @r ||= Redis.new\n  Message.new(*args).tap do |message|\n    @r.rpush(key, Marshal.dump(message))\n    Marshal.load(@r.blpop(message.guid)[1]).tap do |return_value|\n      if return_value.class == RPCExceptionContainer\n        raise return_value.saved_exception\n      else\n        return return_value\n      end\n    end\n  end\nend\n\ndef rrecv(key)\n  @keys ||= Hash.new\n  if(!@keys.has_key?(key))\n    r = Redis.new\n    Thread.new do\n      loop do\n        Marshal.load(r.blpop(key)[1]).tap do |message|\n          begin\n            return_value = yield(message.payload)\n            r.rpush(message.guid, Marshal.dump(return_value))\n            r.expire(message.guid, 30)\n          rescue\n            r.rpush(message.guid, Marshal.dump(RPCExceptionContainer.new($!)))\n            r.expire(message.guid, 30)\n          end\n        end\n      end\n    end\n    @keys[key] = true\n  else\n    raise \"You Called rrecv twice on the same key, this is almost certainly not what you intended\"\n  end\nend\n\nrrecv(:hello) do |args|\n  puts \"Hello #{args.reduce(:+)}\"\n  raise \"what what\"\n  \"success\"\nend\nx = rsend(:hello, \"hi there\", \"nobody\") rescue \"bobby farquard\"\nputs x\n\nrrecv(:there) do |args|\n  puts \"There #{args.reduce(:+)}\"\n  \"success\"\nend\ny = rsend(:there, \"something else\")\nputs y\n\n\nx = rsend(:hello, \"hi there\", \"nobody\") rescue \"bobby farquard again\"\nputs x\n```", "author_fullname": "t2_finks", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why I love ruby, a complete RPC system using redis in 57 lines of code :)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jki6b7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604032629.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So this RPC system has some advantages...\n1. I programmed it as a toy (which was fun for me)\n2. It&amp;#39;s simple, if there is a bug in 57 lines of code, it&amp;#39;s easy to find and fix\n3. It uses redis, which I like, is simple, and fast\n4. It handles exceptions which is probably necessary if anyone ever wanted to actually use it\n5. there are no timeouts for long running code, cause sometimes timeouts are frustrating\n6. there are timeouts for return values because those should be fast anyway\n7. usage is simple so you don&amp;#39;t have to understand what&amp;#39;s going on to use it\n8. if it&amp;#39;s not already obvious rrecv and rsend invocations can occur on different processes (or with a little more configuration on different machines)  (all classes used as arguments should be available to all processes since we&amp;#39;re using Marshaling)&lt;/p&gt;\n\n&lt;p&gt;```\nrrecv(:name_of_thing_that_can_be_called) do |args|&lt;/p&gt;\n\n&lt;h1&gt;do whatever processing you want&lt;/h1&gt;\n\n&lt;h1&gt;whatever is returned by this block is returned to the caller&lt;/h1&gt;\n\n&lt;p&gt;end\n&lt;code&gt;\n&lt;/code&gt;\nresult = rsend(:name_of_thing_that_can_be_called, &amp;lt;whatever args you want&amp;gt;, &amp;lt;can be many&amp;gt;)\n```\nevery time you define a new callable thing with rrecv, it will spin up a new thread to respond to those requests&lt;/p&gt;\n\n&lt;p&gt;future work, add the ability to control how many workers rrecv creates, and possibly allow other types of workers other than just threads.&lt;/p&gt;\n\n&lt;p&gt;```\nrequire &amp;#39;securerandom&amp;#39;\nrequire &amp;#39;redis&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;class Message\n  attr_reader :payload, :guid&lt;/p&gt;\n\n&lt;p&gt;def initialize(*args)\n    @guid = SecureRandom.uuid\n    @payload = args\n  end\nend&lt;/p&gt;\n\n&lt;p&gt;class RPCExceptionContainer\n  attr_reader :saved_exception&lt;/p&gt;\n\n&lt;p&gt;def initialize(exception)\n    @saved_exception = exception\n  end\nend&lt;/p&gt;\n\n&lt;p&gt;def rsend(key, &lt;em&gt;args)\n  @r ||= Redis.new\n  Message.new(&lt;/em&gt;args).tap do |message|\n    @r.rpush(key, Marshal.dump(message))\n    Marshal.load(@r.blpop(message.guid)[1]).tap do |return_value|\n      if return_value.class == RPCExceptionContainer\n        raise return_value.saved_exception\n      else\n        return return_value\n      end\n    end\n  end\nend&lt;/p&gt;\n\n&lt;p&gt;def rrecv(key)\n  @keys ||= Hash.new\n  if(!@keys.has_key?(key))\n    r = Redis.new\n    Thread.new do\n      loop do\n        Marshal.load(r.blpop(key)[1]).tap do |message|\n          begin\n            return_value = yield(message.payload)\n            r.rpush(message.guid, Marshal.dump(return_value))\n            r.expire(message.guid, 30)\n          rescue\n            r.rpush(message.guid, Marshal.dump(RPCExceptionContainer.new($!)))\n            r.expire(message.guid, 30)\n          end\n        end\n      end\n    end\n    @keys[key] = true\n  else\n    raise &amp;quot;You Called rrecv twice on the same key, this is almost certainly not what you intended&amp;quot;\n  end\nend&lt;/p&gt;\n\n&lt;p&gt;rrecv(:hello) do |args|\n  puts &amp;quot;Hello #{args.reduce(:+)}&amp;quot;\n  raise &amp;quot;what what&amp;quot;\n  &amp;quot;success&amp;quot;\nend\nx = rsend(:hello, &amp;quot;hi there&amp;quot;, &amp;quot;nobody&amp;quot;) rescue &amp;quot;bobby farquard&amp;quot;\nputs x&lt;/p&gt;\n\n&lt;p&gt;rrecv(:there) do |args|\n  puts &amp;quot;There #{args.reduce(:+)}&amp;quot;\n  &amp;quot;success&amp;quot;\nend\ny = rsend(:there, &amp;quot;something else&amp;quot;)\nputs y&lt;/p&gt;\n\n&lt;p&gt;x = rsend(:hello, &amp;quot;hi there&amp;quot;, &amp;quot;nobody&amp;quot;) rescue &amp;quot;bobby farquard again&amp;quot;\nputs x\n```&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jki6b7", "is_robot_indexable": true, "report_reasons": null, "author": "pfharlockk", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jki6b7/why_i_love_ruby_a_complete_rpc_system_using_redis/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jki6b7/why_i_love_ruby_a_complete_rpc_system_using_redis/", "subreddit_subscribers": 68099, "created_utc": 1604003829.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jki6b7", "before": null}}