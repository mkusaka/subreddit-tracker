{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Rules For Individuals\n---------------------\n\n* **Don't** create top-level comments - those are for employers.\n* Feel free to reply to top-level comments with **on-topic** questions.\n* I will create top-level comments for **meta** discussion and **individuals looking for work**.\n\nRules For Employers\n---------------------\n\n* You must be hiring **directly**. No third-party recruiters.\n* **One** top-level comment per employer. If you have multiple job openings, that's great, but please consolidate their descriptions or mention them in replies to your own top-level comment.\n* **Don't** use URL shorteners. [reddiquette](https://www.reddithelp.com/en/categories/reddit-101/reddit-basics/reddiquette) forbids them because they're opaque to the spam filter.\n* Templates are awesome. Please **use** the following template. As the \"formatting help\" says, use \\*\\*two stars\\*\\* to **bold text**. Use empty lines to separate sections.\n* **Proofread** your comment after posting it, and edit any formatting mistakes.\n\n---\n\n\\*\\*Company:\\*\\* [Company name; also, use the \"formatting help\" to make it a link to your company's website, or a specific careers page if you have one.]\n\n&amp;nbsp;\n\n\\*\\*Type:\\*\\* [Full time, part time, internship, contract, etc.]\n\n&amp;nbsp;\n\n\\*\\*Description:\\*\\* [What does your company do, and what are you hiring C++ devs for? How much experience are you looking for, and what seniority levels are you hiring for? The more details you provide, the better.]\n\n&amp;nbsp;\n\n\\*\\*Location:\\*\\* [Where's your office - or if you're hiring at multiple offices, list them. If your workplace language isn't English, please specify it.]\n\n&amp;nbsp;\n\n\\*\\*Remote:\\*\\* [Do you offer the option of working remotely (permanently, or for the duration of the pandemic)? If so, do you require employees to live in certain areas or time zones?]\n\n&amp;nbsp;\n\n\\*\\*Visa Sponsorship:\\*\\* [Does your company sponsor visas?]\n\n&amp;nbsp;\n\n\\*\\*Technologies:\\*\\* [Required: do you mainly use C++98/03, C++11, C++14, C++17, or C++20? Optional: do you use Linux/Mac/Windows, are there languages you use in addition to C++, are there technologies like OpenGL or libraries like Boost that you need/want/like experience with, etc.]\n\n&amp;nbsp;\n\n\\*\\*Contact:\\*\\* [How do you want to be contacted? Email, reddit PM, telepathy, gravitational waves?]\n\n---\n\nPrevious Post\n--------------\n\n* [C++ Jobs - Q2 2020](https://www.reddit.com/r/cpp/comments/ft77lv/c_jobs_q2_2020/)", "author_fullname": "t2_21c1y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ Jobs - Q3 2020", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hjnaf2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": "", "subreddit_type": "public", "ups": 54, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 54, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1593680441.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.cpp", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h2&gt;Rules For Individuals&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; create top-level comments - those are for employers.&lt;/li&gt;\n&lt;li&gt;Feel free to reply to top-level comments with &lt;strong&gt;on-topic&lt;/strong&gt; questions.&lt;/li&gt;\n&lt;li&gt;I will create top-level comments for &lt;strong&gt;meta&lt;/strong&gt; discussion and &lt;strong&gt;individuals looking for work&lt;/strong&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Rules For Employers&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You must be hiring &lt;strong&gt;directly&lt;/strong&gt;. No third-party recruiters.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;One&lt;/strong&gt; top-level comment per employer. If you have multiple job openings, that&amp;#39;s great, but please consolidate their descriptions or mention them in replies to your own top-level comment.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; use URL shorteners. &lt;a href=\"https://www.reddithelp.com/en/categories/reddit-101/reddit-basics/reddiquette\"&gt;reddiquette&lt;/a&gt; forbids them because they&amp;#39;re opaque to the spam filter.&lt;/li&gt;\n&lt;li&gt;Templates are awesome. Please &lt;strong&gt;use&lt;/strong&gt; the following template. As the &amp;quot;formatting help&amp;quot; says, use **two stars** to &lt;strong&gt;bold text&lt;/strong&gt;. Use empty lines to separate sections.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Proofread&lt;/strong&gt; your comment after posting it, and edit any formatting mistakes.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;**Company:** [Company name; also, use the &amp;quot;formatting help&amp;quot; to make it a link to your company&amp;#39;s website, or a specific careers page if you have one.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Type:** [Full time, part time, internship, contract, etc.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Description:** [What does your company do, and what are you hiring C++ devs for? How much experience are you looking for, and what seniority levels are you hiring for? The more details you provide, the better.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Location:** [Where&amp;#39;s your office - or if you&amp;#39;re hiring at multiple offices, list them. If your workplace language isn&amp;#39;t English, please specify it.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Remote:** [Do you offer the option of working remotely (permanently, or for the duration of the pandemic)? If so, do you require employees to live in certain areas or time zones?]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Visa Sponsorship:** [Does your company sponsor visas?]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Technologies:** [Required: do you mainly use C++98/03, C++11, C++14, C++17, or C++20? Optional: do you use Linux/Mac/Windows, are there languages you use in addition to C++, are there technologies like OpenGL or libraries like Boost that you need/want/like experience with, etc.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Contact:** [How do you want to be contacted? Email, reddit PM, telepathy, gravitational waves?]&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;Previous Post&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://www.reddit.com/r/cpp/comments/ft77lv/c_jobs_q2_2020/\"&gt;C++ Jobs - Q2 2020&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "MSVC STL Dev", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hjnaf2", "is_robot_indexable": true, "report_reasons": null, "author": "STL", "discussion_type": null, "num_comments": 40, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/hjnaf2/c_jobs_q3_2020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/cpp/comments/hjnaf2/c_jobs_q3_2020/", "subreddit_subscribers": 147711, "created_utc": 1593651641.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_496so", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ on Sea 2020 video - \"Code samples that actually compile\" (lightning talk) - Clare Macrae", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": "cpponsea", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzktac", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 53, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/KtxTlBeVYiE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "LIGHTNING TALK: Code samples that actually compile - Clare Macrae [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/KtxTlBeVYiE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/KtxTlBeVYiE/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/KtxTlBeVYiE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hzktac", "height": 338}, "link_flair_text": "C++ on Sea", "can_mod_post": false, "score": 53, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595992128.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=KtxTlBeVYiE", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzktac", "is_robot_indexable": true, "report_reasons": null, "author": "philsquared", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hzktac/c_on_sea_2020_video_code_samples_that_actually/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=KtxTlBeVYiE", "subreddit_subscribers": 147711, "created_utc": 1595963328.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "LIGHTNING TALK: Code samples that actually compile - Clare Macrae [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/KtxTlBeVYiE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/KtxTlBeVYiE/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "[eCAL](https://github.com/continental/ecal) is a  modern C++ interprocess communication framework designed for low latency and massive data throughput. It was developed by a Continental R&amp;D team to manage distributed high performance computing for autonomous driving prototyping cars.\n\nThe API design is inspired by [ROS](https://www.ros.org/) but it has built in shared memory transport from the start and supports modern message protocols like [Google Protobuf](https://developers.google.com/protocol-buffers), [Flatbuffers](https://google.github.io/flatbuffers/) or [Cap'n Proto](https://capnproto.org/) (infinitely fast ;-)).\n\nFinally there are some powerful applications for monitoring, recording and replaying the whole interprocess communication in a distributed manner.", "author_fullname": "t2_4k5xv2qh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "eCAL", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzc1lo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 129, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 129, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595959714.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.cpp", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/continental/ecal\"&gt;eCAL&lt;/a&gt; is a  modern C++ interprocess communication framework designed for low latency and massive data throughput. It was developed by a Continental R&amp;amp;D team to manage distributed high performance computing for autonomous driving prototyping cars.&lt;/p&gt;\n\n&lt;p&gt;The API design is inspired by &lt;a href=\"https://www.ros.org/\"&gt;ROS&lt;/a&gt; but it has built in shared memory transport from the start and supports modern message protocols like &lt;a href=\"https://developers.google.com/protocol-buffers\"&gt;Google Protobuf&lt;/a&gt;, &lt;a href=\"https://google.github.io/flatbuffers/\"&gt;Flatbuffers&lt;/a&gt; or &lt;a href=\"https://capnproto.org/\"&gt;Cap&amp;#39;n Proto&lt;/a&gt; (infinitely fast ;-)).&lt;/p&gt;\n\n&lt;p&gt;Finally there are some powerful applications for monitoring, recording and replaying the whole interprocess communication in a distributed manner.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzc1lo", "is_robot_indexable": true, "report_reasons": null, "author": "Alternative-Access-9", "discussion_type": null, "num_comments": 32, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hzc1lo/ecal/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/hzc1lo/ecal/", "subreddit_subscribers": 147711, "created_utc": 1595930914.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_496so", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ on Sea 2020 video - \"Decision Fatigue and coding guidelines\" (lightning talk) - Sandor Dargo", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": "cpponsea", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzhebp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/B-VnIakCOsw?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "LIGHTNING TALK: Decision Fatigue and coding guidelines - Sandor Dargo [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/B-VnIakCOsw?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/B-VnIakCOsw/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/B-VnIakCOsw?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hzhebp", "height": 338}, "link_flair_text": "C++ on Sea", "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595981324.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=B-VnIakCOsw", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzhebp", "is_robot_indexable": true, "report_reasons": null, "author": "philsquared", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hzhebp/c_on_sea_2020_video_decision_fatigue_and_coding/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=B-VnIakCOsw", "subreddit_subscribers": 147711, "created_utc": 1595952524.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "LIGHTNING TALK: Decision Fatigue and coding guidelines - Sandor Dargo [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/B-VnIakCOsw?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/B-VnIakCOsw/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_496so", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ on Sea 2020 video - \"Serialization in C++ has never been easier! But wait, there's more\" - Pavel Novikov", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": "cpponsea", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzag7k", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 38, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/o3kRBiuzsEY?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Serialization in C++ has never been easier! But wait, there's more - Pavel Novikov [ C++ on Sea 20 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/o3kRBiuzsEY?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/o3kRBiuzsEY/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/o3kRBiuzsEY?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hzag7k", "height": 338}, "link_flair_text": "C++ on Sea", "can_mod_post": false, "score": 38, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595951074.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=o3kRBiuzsEY", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzag7k", "is_robot_indexable": true, "report_reasons": null, "author": "philsquared", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hzag7k/c_on_sea_2020_video_serialization_in_c_has_never/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=o3kRBiuzsEY", "subreddit_subscribers": 147711, "created_utc": 1595922274.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Serialization in C++ has never been easier! But wait, there's more - Pavel Novikov [ C++ on Sea 20 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/o3kRBiuzsEY?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/o3kRBiuzsEY/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Hello all, first of all I just want to say that I am not a professional C++ developer. Instead, my major is in Electrical Engineering and doing PhD in Optics. During midway of my PhD, I discover that I am more interested in programming such as hardware programming  FPGA/Micro-porcessor and software programming than lens and mirrors. I am currently working at NASA for my PhD but I want to looking for opportunity in the industry sector for software development internship. To beef-up my resume, I developed this package and hope that it can help me to get interview. I come here to look for feedback and criticism for improvement. Here is the Github link\n\n[https://github.com/dante2608/Parallel-CRC](https://github.com/dante2608/Parallel-CRC)\n\nFollow-up question: After looking my project, can you tell if I am competent enough to  get internship those companies from tech-hub at San Fransisco. I want to have a reference to balance between grindding leetcode or spending more time doing personal project.\n\nThank you for your time", "author_fullname": "t2_16jjvl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Multi-threading CRC-32 computation in C++", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzjl2x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.61, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595988267.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.cpp", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello all, first of all I just want to say that I am not a professional C++ developer. Instead, my major is in Electrical Engineering and doing PhD in Optics. During midway of my PhD, I discover that I am more interested in programming such as hardware programming  FPGA/Micro-porcessor and software programming than lens and mirrors. I am currently working at NASA for my PhD but I want to looking for opportunity in the industry sector for software development internship. To beef-up my resume, I developed this package and hope that it can help me to get interview. I come here to look for feedback and criticism for improvement. Here is the Github link&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/dante2608/Parallel-CRC\"&gt;https://github.com/dante2608/Parallel-CRC&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Follow-up question: After looking my project, can you tell if I am competent enough to  get internship those companies from tech-hub at San Fransisco. I want to have a reference to balance between grindding leetcode or spending more time doing personal project.&lt;/p&gt;\n\n&lt;p&gt;Thank you for your time&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzjl2x", "is_robot_indexable": true, "report_reasons": null, "author": "dante_2608", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hzjl2x/multithreading_crc32_computation_in_c/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/hzjl2x/multithreading_crc32_computation_in_c/", "subreddit_subscribers": 147711, "created_utc": 1595959467.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_496so", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ on Sea 2020 video - \"Data-Oriented Design for Object-Oriented Programmers\" - Shachar Langbeheim", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": "cpponsea", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzclyp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.66, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/d2eihVaJLNE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Data-Oriented Design for Object-Oriented Programmers - Shachar Langbeheim [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/d2eihVaJLNE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/d2eihVaJLNE/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/d2eihVaJLNE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hzclyp", "height": 338}, "link_flair_text": "C++ on Sea", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595962630.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=d2eihVaJLNE", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzclyp", "is_robot_indexable": true, "report_reasons": null, "author": "philsquared", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hzclyp/c_on_sea_2020_video_dataoriented_design_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=d2eihVaJLNE", "subreddit_subscribers": 147711, "created_utc": 1595933830.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Data-Oriented Design for Object-Oriented Programmers - Shachar Langbeheim [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/d2eihVaJLNE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/d2eihVaJLNE/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_kc8te", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "JSON for Modern C++ 3.9.0", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hysppv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 265, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 265, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595886989.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/nlohmann/json/releases/tag/v3.9.0", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hysppv", "is_robot_indexable": true, "report_reasons": null, "author": "nlohmann", "discussion_type": null, "num_comments": 50, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hysppv/json_for_modern_c_390/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/nlohmann/json/releases/tag/v3.9.0", "subreddit_subscribers": 147711, "created_utc": 1595858189.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_496so", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ on Sea 2020 video - \"Object-Oriented Program: Best Practices\" - Jon Kalb", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": "cpponsea", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzb9hp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.58, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/c0lutJECNUA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Object-Oriented Program: Best Practices - Jon Kalb [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/c0lutJECNUA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/c0lutJECNUA/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/c0lutJECNUA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hzb9hp", "height": 338}, "link_flair_text": "C++ on Sea", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595955618.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=c0lutJECNUA", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzb9hp", "is_robot_indexable": true, "report_reasons": null, "author": "philsquared", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hzb9hp/c_on_sea_2020_video_objectoriented_program_best/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=c0lutJECNUA", "subreddit_subscribers": 147711, "created_utc": 1595926818.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Object-Oriented Program: Best Practices - Jon Kalb [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/c0lutJECNUA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/c0lutJECNUA/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_496so", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ on Sea 2020 - \"Naming is Hard: Let's Do Better\" - Kate Gregory", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": "cpponsea", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hz21jg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/MqugiGzricQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Naming is Hard: Let's Do Better - Kate Gregory [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/MqugiGzricQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/MqugiGzricQ/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/MqugiGzricQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hz21jg", "height": 338}, "link_flair_text": "C++ on Sea", "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595916505.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=MqugiGzricQ", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hz21jg", "is_robot_indexable": true, "report_reasons": null, "author": "philsquared", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hz21jg/c_on_sea_2020_naming_is_hard_lets_do_better_kate/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=MqugiGzricQ", "subreddit_subscribers": 147711, "created_utc": 1595887705.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Naming is Hard: Let's Do Better - Kate Gregory [ C++ on Sea 2020 ]", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/MqugiGzricQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "cpponsea", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/MqugiGzricQ/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_6gkbb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "clang-tutor: Example Clang plugins for C and C++", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hyth15", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 42, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 42, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595889612.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/banach-space/clang-tutor", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hyth15", "is_robot_indexable": true, "report_reasons": null, "author": "mttd", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/hyth15/clangtutor_example_clang_plugins_for_c_and_c/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/banach-space/clang-tutor", "subreddit_subscribers": 147711, "created_utc": 1595860812.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hyth15", "before": null}}