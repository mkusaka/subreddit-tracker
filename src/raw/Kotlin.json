{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_iassk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "From RxJava to Kotlin Flow: Stream Types", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9r3nx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1582740560.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "proandroiddev.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9r3nx", "is_robot_indexable": true, "report_reasons": null, "author": "krossovochkin", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9r3nx/from_rxjava_to_kotlin_flow_stream_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://proandroiddev.com/from-rxjava-to-kotlin-flow-stream-types-7916be6cabc2", "subreddit_subscribers": 27152, "created_utc": 1582711760.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I was excited to see that kotlin conf is just $600. I got to know that workshop is $900 and you can only attend one.  Is it worth that money? Any body attended those and care to share the experience, it would be great to hear from someone.", "author_fullname": "t2_4ssqcl0k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "$900 Workshop at Kotlin conf, are they worth?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9ot2n", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582725981.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was excited to see that kotlin conf is just $600. I got to know that workshop is $900 and you can only attend one.  Is it worth that money? Any body attended those and care to share the experience, it would be great to hear from someone.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9ot2n", "is_robot_indexable": true, "report_reasons": null, "author": "sinnet-", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9ot2n/900_workshop_at_kotlin_conf_are_they_worth/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/f9ot2n/900_workshop_at_kotlin_conf_are_they_worth/", "subreddit_subscribers": 27152, "created_utc": 1582697181.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi guys, I've been thinking for a while that I want to shift into backend development from front-end.  \nI've been hearing about Kotlin everywhere I go. I just wonder if Kotlin would be a nice starting point or if you would advice starting with a different language to learn?", "author_fullname": "t2_tzqru", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin for my first backend language", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9ijd0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582698485.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi guys, I&amp;#39;ve been thinking for a while that I want to shift into backend development from front-end.&lt;br/&gt;\nI&amp;#39;ve been hearing about Kotlin everywhere I go. I just wonder if Kotlin would be a nice starting point or if you would advice starting with a different language to learn?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9ijd0", "is_robot_indexable": true, "report_reasons": null, "author": "Afghani_Alan", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9ijd0/kotlin_for_my_first_backend_language/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/f9ijd0/kotlin_for_my_first_backend_language/", "subreddit_subscribers": 27152, "created_utc": 1582669685.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "For a school project I'm making an android app. We decided to implement our server in Kotlin as well. I thought it would be useful to create a multiple module application so the data classes that are send from the server only have to be edited at one place. Is this a good idea? And how should I do this?", "author_fullname": "t2_35h2eg83", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Creating an Android app and a Kotlin server. Multiple Modules or not?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_f9t69c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582752340.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For a school project I&amp;#39;m making an android app. We decided to implement our server in Kotlin as well. I thought it would be useful to create a multiple module application so the data classes that are send from the server only have to be edited at one place. Is this a good idea? And how should I do this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9t69c", "is_robot_indexable": true, "report_reasons": null, "author": "rnottaken", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9t69c/creating_an_android_app_and_a_kotlin_server/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/f9t69c/creating_an_android_app_and_a_kotlin_server/", "subreddit_subscribers": 27152, "created_utc": 1582723540.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_14jt5w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "\"Parser Combinators in Kotlin\" by Neil Gall from Edinburgh Kotlin User Group", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9ro95", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;There&amp;#39;s been some requests from people who couldn&amp;#39;t attend talks in the past for videos.  As a way of feeling out interest, &lt;a href=\"https://twitter.com/neilgall?ref_src=twsrc%5Etfw\"&gt;@neilgall&lt;/a&gt; has recorded a version of his talk for KUG#4 &amp;#39;Parser Combinators in Kotlin&amp;#39;.  Check it out:&lt;a href=\"https://t.co/h3muvS96sN\"&gt;https://t.co/h3muvS96sN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Edinburgh Kotlin User Group (@edi_kug) &lt;a href=\"https://twitter.com/edi_kug/status/1231889594632802307?ref_src=twsrc%5Etfw\"&gt;February 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 443}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/edi_kug/status/1231889594632802307", "author_name": "Edinburgh Kotlin User Group", "height": 443, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;There&amp;#39;s been some requests from people who couldn&amp;#39;t attend talks in the past for videos.  As a way of feeling out interest, &lt;a href=\"https://twitter.com/neilgall?ref_src=twsrc%5Etfw\"&gt;@neilgall&lt;/a&gt; has recorded a version of his talk for KUG#4 &amp;#39;Parser Combinators in Kotlin&amp;#39;.  Check it out:&lt;a href=\"https://t.co/h3muvS96sN\"&gt;https://t.co/h3muvS96sN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Edinburgh Kotlin User Group (@edi_kug) &lt;a href=\"https://twitter.com/edi_kug/status/1231889594632802307?ref_src=twsrc%5Etfw\"&gt;February 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/edi_kug", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;There&amp;#39;s been some requests from people who couldn&amp;#39;t attend talks in the past for videos.  As a way of feeling out interest, &lt;a href=\"https://twitter.com/neilgall?ref_src=twsrc%5Etfw\"&gt;@neilgall&lt;/a&gt; has recorded a version of his talk for KUG#4 &amp;#39;Parser Combinators in Kotlin&amp;#39;.  Check it out:&lt;a href=\"https://t.co/h3muvS96sN\"&gt;https://t.co/h3muvS96sN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Edinburgh Kotlin User Group (@edi_kug) &lt;a href=\"https://twitter.com/edi_kug/status/1231889594632802307?ref_src=twsrc%5Etfw\"&gt;February 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/f9ro95", "height": 443}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1582744302.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9ro95", "is_robot_indexable": true, "report_reasons": null, "author": "rossdrew", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9ro95/parser_combinators_in_kotlin_by_neil_gall_from/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/edi_kug/status/1231889594632802307", "subreddit_subscribers": 27152, "created_utc": 1582715502.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/edi_kug/status/1231889594632802307", "author_name": "Edinburgh Kotlin User Group", "height": 443, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;There&amp;#39;s been some requests from people who couldn&amp;#39;t attend talks in the past for videos.  As a way of feeling out interest, &lt;a href=\"https://twitter.com/neilgall?ref_src=twsrc%5Etfw\"&gt;@neilgall&lt;/a&gt; has recorded a version of his talk for KUG#4 &amp;#39;Parser Combinators in Kotlin&amp;#39;.  Check it out:&lt;a href=\"https://t.co/h3muvS96sN\"&gt;https://t.co/h3muvS96sN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Edinburgh Kotlin User Group (@edi_kug) &lt;a href=\"https://twitter.com/edi_kug/status/1231889594632802307?ref_src=twsrc%5Etfw\"&gt;February 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/edi_kug", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Working with a group of researchers and they mainly know Java. What are the biggest advantages that Kotlin has over Java ?", "author_fullname": "t2_3h5id", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What are the best selling points for Kotlin over Java?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9960k", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582660558.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Working with a group of researchers and they mainly know Java. What are the biggest advantages that Kotlin has over Java ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9960k", "is_robot_indexable": true, "report_reasons": null, "author": "pure_x01", "discussion_type": null, "num_comments": 39, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9960k/what_are_the_best_selling_points_for_kotlin_over/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/f9960k/what_are_the_best_selling_points_for_kotlin_over/", "subreddit_subscribers": 27152, "created_utc": 1582631758.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "The developmental branch of [BoofCV](https://boofcv.org) contains a bunch of Kotlin [extensions/overloaded operations](https://github.com/lessthanoptimal/BoofCV/tree/SNAPSHOT/integration/boofcv-kotlin/src/main/kotlin) that clean up the API a bit. As a first test I wrote a few QR Code examples ([Github](https://github.com/lessthanoptimal/KBoofExamples/tree/master/src/main/kotlin), [Medium w/video](https://medium.com/@peter.abeles/qr-code-scanner-in-kotlin-e15dd9bfbb1f?source=friends_link&amp;sk=ef089675e392f8bb43dde10f583f8770)) (e.g. create, scan, estimate 3D pose) in Kotlin where many of these new features are used. \n\nAs an example of what I've done with extensions, [BufferedImage](https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/image/BufferedImage.html) has been extended with functions for converting it into more useful data types. This is much easier than the Java equivalent. A lot of math operations now also have a cleaner API.\n\nWhat I'm hoping to get is feedback on the extensions, also how Kotlinized the example code is, and other suggestions for improving Kotlin integration (besides rewriting everything in Kotlin). I know the extensions are poorly documented at the moment and that's because they are a sketch.\n\nThanks!", "author_fullname": "t2_54yre", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Feedback on Kotlinification of BoofCV, a Java computer vision library.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9bxdn", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582673451.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The developmental branch of &lt;a href=\"https://boofcv.org\"&gt;BoofCV&lt;/a&gt; contains a bunch of Kotlin &lt;a href=\"https://github.com/lessthanoptimal/BoofCV/tree/SNAPSHOT/integration/boofcv-kotlin/src/main/kotlin\"&gt;extensions/overloaded operations&lt;/a&gt; that clean up the API a bit. As a first test I wrote a few QR Code examples (&lt;a href=\"https://github.com/lessthanoptimal/KBoofExamples/tree/master/src/main/kotlin\"&gt;Github&lt;/a&gt;, &lt;a href=\"https://medium.com/@peter.abeles/qr-code-scanner-in-kotlin-e15dd9bfbb1f?source=friends_link&amp;amp;sk=ef089675e392f8bb43dde10f583f8770\"&gt;Medium w/video&lt;/a&gt;) (e.g. create, scan, estimate 3D pose) in Kotlin where many of these new features are used. &lt;/p&gt;\n\n&lt;p&gt;As an example of what I&amp;#39;ve done with extensions, &lt;a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/image/BufferedImage.html\"&gt;BufferedImage&lt;/a&gt; has been extended with functions for converting it into more useful data types. This is much easier than the Java equivalent. A lot of math operations now also have a cleaner API.&lt;/p&gt;\n\n&lt;p&gt;What I&amp;#39;m hoping to get is feedback on the extensions, also how Kotlinized the example code is, and other suggestions for improving Kotlin integration (besides rewriting everything in Kotlin). I know the extensions are poorly documented at the moment and that&amp;#39;s because they are a sketch.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9bxdn", "is_robot_indexable": true, "report_reasons": null, "author": "lessthanoptimal", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9bxdn/feedback_on_kotlinification_of_boofcv_a_java/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/f9bxdn/feedback_on_kotlinification_of_boofcv_a_java/", "subreddit_subscribers": 27152, "created_utc": 1582644651.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_3fslqld3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Java Vs Kotlin: Which One Is The Best Language For Android", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9nx33", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "Students_AcademicHelp", "selftext": "If you are beginning to program in Android, it is frequent that the language we use Java. What\u2019s more, Java is used all over. Now Kotlin arrives, which brings extensive enhancements. We have chosen to set up this blog of Java vs Kotlin. Which language is the best?\n\nTo understand the contrasts between Kotlin vs. Java, most importantly, we choose to discuss a little about every language. We will begin with Java, and you will know its points of interest, weaknesses, and furthermore what we can do with this language.\u00a0\n\nNext, we will discuss Kotlin, with the goal that this language serves, favorable circumstances, disservices, and what we can make? At last, it will be incredible to understand the critical contrasts of Java vs Kotlin.\n\n**Java introduction:**\n\nJava is an object-arranged programming language that was introduced by Sun Microsystems. It appeared 23 years back, and with other prominent languages like Scala and Groovy, it has stayed in the essential languages in Android application improvement.\u00a0\n\nSince its beginning, Java android application advancement is widely utilized in the structuring of server applications, Android applications, web applications, inserted frameworks, and sites. The more significant part of the Java components is available as open-source. Java fame is most in money related programming advancement.\n\n### Java Benefits\n\n* Can easily understand;\u00a0\n* Java can undoubtedly keep running on a browser window or a virtual machine, which comes conveniently while reusing a code and programming update;\u00a0\n* Phenomenal for cross-stage applications;\u00a0\n* Android software development kit (SDK) supplements Java with numerous standard Java libraries;\u00a0\n* A broad open-source environment; on account of Google\u2019s selection of the Java Virtual Machine or JVM.\n\n### Java Limitations:\n\n* Its restrictions can cause glitches with Android API plan;\u00a0\n* Because of more codes in Java, the possibility of mistakes and bugs increments extensively;\u00a0\n* Contrasted with different languages, Java is a little slow and needs a large amount of memory.\n\n### Kotlin Introduction\n\nKotlin is a universally useful programming language that includes java virtual machine, Android, JavaScript, and Native. JetBrains create it as an open-source stage under the Apache 2.0 permit.\u00a0\n\nIf you are asking \u2018why to use Kotlin\u201d for the Android studio programming language; this is because the engineer can send Kotlin as an object-arranged programming and useful programming. Kotlin utilizes LLVM compiler innovation to gather Kotlin codes into binaries for CPU designs and working frameworks like iOS, Windows, Linux, and Mac.\u00a0\n\nProbably the best thing about this language is that it joins both object-situated and useful programming characteristics.\n\nComing up next are the significant Java IDEs aid that comes packed with Kotlin for Android designers:\u00a0\n\n* IntelliJ IDEA (the brainchild of JetBrains)\u00a0\n* Android Studio\u00a0\n* Obscuration\u00a0\n* NetBeans\u00a0\n\nKotlin can be utilized for the improvement of most types of applications; at that point, it very well may be from the server-side, customer-side web, or Android.\u00a0\n\n### Kotlin Benefits\n\n* Supports backend tasks, for example, Spring 5;\u00a0\n* The progress from Java to Kotlin is simple\u2019;\n* Kotlin has sharp expansion capacities for clean structure APIs;\u00a0\n* Significantly more short than Java;\u00a0\n* Designers have the help of more than 2000 Kotlin projects on Github.\n\n#### Kotlin Limitations\n\n* A precarious expectation to absorb information for groups who wish to travel totally to Kotlin;\u00a0\n* Aggregation speed is delayed when contrasted with Java;\u00a0\n* Finding an expert Kotlin designer is as yet an irregularity;\u00a0\n* Android Studio\u2019s accumulation and auto-complete run slower whenever compared with Java ventures.\n\n## Java Vs Kotlin\n\n### 1 Market Circumstance\n\nThe impact of Java on the modern world is vast, which is sponsored by the respectable Tiobe Index. Starting in July 2019, Java has kept up its main spot contrasted with July 2018. Kotlin, however still a youthful language, has made it to the best 50 of the rankings, setting down at number 43.\u00a0\n\nGoogle I/O 2017 gathering was set apart by the advancement of Kotlin to the positions of its \u201ctop of the line\u201d programming languages for Android application improvement.\n\nIt joined the great old Java and C++. The declaration has energized up the interest over Kotlin, causing the astounding development in its popularity.\n\n### 2 Progress\n\n\u00a0\u00a0Firstly, Kotlin was planned in such a way, that it could without much of a stretch interoperable with Java. Therefore, the designers can interpret java codes into Kotlin and vice versa, that too, without the need to change the operability.\u00a0\n\nKotlin is the new language, offers some extra characteristics that make Kotlin a favored pick over Java. A client ca n\u2019t separate between the two since codes of both the programming languages are assembled to JVM bytecode.\u00a0\u00a0\n\n### 3 Smart Casts\u00a0\n\nIn Java, We have to check the kind of factors and cast them by our activity.\u00a0\n\nIn Kotlin, smart casts will deal with these casting checks with keywords \u201cis-checks\u201d, which will check for permanent qualities and performs hinted casting.\n\n### 4 Null Safety\n\nIn Java, NullPointerExceptions causes tremendous dissatisfaction for engineers. It enables clients to relegate invalid to any factors yet while getting to an item reference having invalid worth raises an invalid pointer particular case which the client needs to deal with.\u00a0\n\nIn Kotlin, By default, a wide range of factors are non-invalid capable (for example we can\u2019t dole out invalid qualities to factors/objects). If we attempt to appoint or return invalid classes, Kotlin code will fizzle during the arranged time. If we genuinely need a variable to have an invalid worth, we can proclaim as pursues:\u00a0\n\nesteem num: Int? = null\n\n### 5 Type Inference\n\nIn Java, we have to indicate a kind of every factor expressly while announcing.\u00a0\n\nIn Kotlin, we don\u2019t have to indicate the kind of every factor unequivocally dependent on the task it will deal with. If we need to state expressly, we can do it.\n\n### 6 Useful Programming\n\nJava doesn\u2019t have practical programming support until Java 8; however, while creating Android applications, it supports the main subset of Java 8 characteristics.\u00a0\n\nKotlin is a blend of procedural and useful programming language which comprises numerous helpful strategies, for example, lambda, administrator over-burdening, higher-request capacities, and apathetic assessment, and so on.\n\n### 7 Expansion Functions\n\nIn Java, If we need to expand the use of the existing class, we have to take another class and acquire the parent class. So Extension capacities are not accessible in Java.\u00a0\u00a0\u00a0\u00a0\n\nKotlin gives designers the capacity to expand a current class with new usefulness. We can make broaden works by prefixing the name of a class to name the new capacity.\n\n### \u00a08 No Checked Exceptions \n\nIn Java, We have checked special case support which causes designers to proclaim and get the exemption which at last prompts strong code with excellent mistake handling.\u00a0\u00a0\u00a0\u00a0\n\nIn Kotlin, we don\u2019t have checked special cases. So designers don\u2019t have to proclaim or get special cases, which have benefits and limitations.\n\n### 9 Information Classes \n\nIn Java, assume we require to have a class that needs to hold information yet nothing else. For this we have to characterize constructors, factors to store information, getter and setter techniques, hashcode(), toString(), and equivalents() functions\u00a0\u00a0\u00a0\u00a0\n\nIn Kotlin, If we require to have classes that need to hold information. We can announce a class with keywords \u201cinformation\u201d in the class definition then the compiler will deal with the majority of this work. For example, making constructors, getter, setter strategies for various fields.\n\n#### Key Differences Between Java Vs. Kotlin:\u00a0\n\nBoth Java vs. Kotlin are prominent decisions in the market; let us talk about a portion of the significant differences between Java vs Kotlin:\u00a0\n\n* Kotlin has the help of intelligent cast which recognizes unchanging sorts and performs specific cast by the compiler while in Java we have to distinguish and play out the casting.\u00a0\n* Kotlin has the help of sort inferences which means we don\u2019t have to indicate the information kind of factor unequivocally though in Java we have to determine expressly.\u00a0\n* In Kotlin, we don\u2019t have checked exemptions, which is a limitation as it prompts mistake inclined code, though Java has support for tested special cases by which we can perform blunder taking care of.\u00a0\n* Java assemblage time is 15-20% quicker than Kotlin\u2019s accumulation time. However, in the context of gradual form aggregation, Kotlin will also take the same arrangement time as Java.\u00a0\n* In Kotlin, we can\u2019t allocate invalid qualities to factors or return esteems. If we truly need to dole out, at that point, we can pronounce a variable with a unique linguistic structure while in Java we can appoint invalid qualities yet when we attempt to access items indicating invalid conditions raises a particular case.\u00a0\n* Kotlin is compatible with Java regardless of contrast between Java vs Kotlin. We can call Kotlin code in Java and Java code in Kotlin. So we can have both Java vs. Kotlin classes one next to the other in a venture and incorporates with no issues. After aggregation we incapable of discovering which category written in Java or Kotlin.\n\n#### Does Kotlin Take The Place Of Java Language?\u00a0\n\nThe response to this inquiry relies upon the different assessments of versatile application developers. Since Java is an outstanding programming language having different open-source instruments and libraries to help developers.\n\nNo language accompanies perfectness. Java itself can be difficult for some. For this, Kotlin has come, which tends to regular programming stress with its successful arrangements and furthermore improves the Java system.\u00a0\n\nWe currently realize that Kotlin has turned into an increasingly steady and consistent improvement choice for Android Studio. Some Android engineers appear to accept that Kotlin will remove Java for versatile application advancement sooner rather than later.\u00a0\u00a0\n\nIn Kotlin vs Java conversation, it is Kotlin which is spotless, naturally lightweight and less repetitive as far as data classes, getters/setters and writing callbacks. It is explicitly made for improving the current Java models utilizing answers for API structure lacks.\u00a0\n\nThus, we can say that Kotlin isn\u2019t a substitution for Java; it\u2019s an improvement.\n\n### Conclusion\n\nAt last, its a review of the difference between Java vs Kotlin. From this, you will have a superior understanding of both Java and Kotlin language, after perusing this Java vs Kotlin article. In my view, we can continue with Kotlin for Android application advancement without stressing over the accumulation time even though Java has few favorable circumstances over Kotlin.", "author_fullname": "t2_3fslqld3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Java Vs Kotlin: Which One Is The Best Language For Android", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Students_AcademicHelp", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f9nwy2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582721389.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Students_AcademicHelp", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you are beginning to program in Android, it is frequent that the language we use Java. What\u2019s more, Java is used all over. Now Kotlin arrives, which brings extensive enhancements. We have chosen to set up this blog of Java vs Kotlin. Which language is the best?&lt;/p&gt;\n\n&lt;p&gt;To understand the contrasts between Kotlin vs. Java, most importantly, we choose to discuss a little about every language. We will begin with Java, and you will know its points of interest, weaknesses, and furthermore what we can do with this language.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Next, we will discuss Kotlin, with the goal that this language serves, favorable circumstances, disservices, and what we can make? At last, it will be incredible to understand the critical contrasts of Java vs Kotlin.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Java introduction:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Java is an object-arranged programming language that was introduced by Sun Microsystems. It appeared 23 years back, and with other prominent languages like Scala and Groovy, it has stayed in the essential languages in Android application improvement.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Since its beginning, Java android application advancement is widely utilized in the structuring of server applications, Android applications, web applications, inserted frameworks, and sites. The more significant part of the Java components is available as open-source. Java fame is most in money related programming advancement.&lt;/p&gt;\n\n&lt;h3&gt;Java Benefits&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Can easily understand;\u00a0&lt;/li&gt;\n&lt;li&gt;Java can undoubtedly keep running on a browser window or a virtual machine, which comes conveniently while reusing a code and programming update;\u00a0&lt;/li&gt;\n&lt;li&gt;Phenomenal for cross-stage applications;\u00a0&lt;/li&gt;\n&lt;li&gt;Android software development kit (SDK) supplements Java with numerous standard Java libraries;\u00a0&lt;/li&gt;\n&lt;li&gt;A broad open-source environment; on account of Google\u2019s selection of the Java Virtual Machine or JVM.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3&gt;Java Limitations:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Its restrictions can cause glitches with Android API plan;\u00a0&lt;/li&gt;\n&lt;li&gt;Because of more codes in Java, the possibility of mistakes and bugs increments extensively;\u00a0&lt;/li&gt;\n&lt;li&gt;Contrasted with different languages, Java is a little slow and needs a large amount of memory.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3&gt;Kotlin Introduction&lt;/h3&gt;\n\n&lt;p&gt;Kotlin is a universally useful programming language that includes java virtual machine, Android, JavaScript, and Native. JetBrains create it as an open-source stage under the Apache 2.0 permit.\u00a0&lt;/p&gt;\n\n&lt;p&gt;If you are asking \u2018why to use Kotlin\u201d for the Android studio programming language; this is because the engineer can send Kotlin as an object-arranged programming and useful programming. Kotlin utilizes LLVM compiler innovation to gather Kotlin codes into binaries for CPU designs and working frameworks like iOS, Windows, Linux, and Mac.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Probably the best thing about this language is that it joins both object-situated and useful programming characteristics.&lt;/p&gt;\n\n&lt;p&gt;Coming up next are the significant Java IDEs aid that comes packed with Kotlin for Android designers:\u00a0&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;IntelliJ IDEA (the brainchild of JetBrains)\u00a0&lt;/li&gt;\n&lt;li&gt;Android Studio\u00a0&lt;/li&gt;\n&lt;li&gt;Obscuration\u00a0&lt;/li&gt;\n&lt;li&gt;NetBeans\u00a0&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Kotlin can be utilized for the improvement of most types of applications; at that point, it very well may be from the server-side, customer-side web, or Android.\u00a0&lt;/p&gt;\n\n&lt;h3&gt;Kotlin Benefits&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Supports backend tasks, for example, Spring 5;\u00a0&lt;/li&gt;\n&lt;li&gt;The progress from Java to Kotlin is simple\u2019;&lt;/li&gt;\n&lt;li&gt;Kotlin has sharp expansion capacities for clean structure APIs;\u00a0&lt;/li&gt;\n&lt;li&gt;Significantly more short than Java;\u00a0&lt;/li&gt;\n&lt;li&gt;Designers have the help of more than 2000 Kotlin projects on Github.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h4&gt;Kotlin Limitations&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;A precarious expectation to absorb information for groups who wish to travel totally to Kotlin;\u00a0&lt;/li&gt;\n&lt;li&gt;Aggregation speed is delayed when contrasted with Java;\u00a0&lt;/li&gt;\n&lt;li&gt;Finding an expert Kotlin designer is as yet an irregularity;\u00a0&lt;/li&gt;\n&lt;li&gt;Android Studio\u2019s accumulation and auto-complete run slower whenever compared with Java ventures.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Java Vs Kotlin&lt;/h2&gt;\n\n&lt;h3&gt;1 Market Circumstance&lt;/h3&gt;\n\n&lt;p&gt;The impact of Java on the modern world is vast, which is sponsored by the respectable Tiobe Index. Starting in July 2019, Java has kept up its main spot contrasted with July 2018. Kotlin, however still a youthful language, has made it to the best 50 of the rankings, setting down at number 43.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Google I/O 2017 gathering was set apart by the advancement of Kotlin to the positions of its \u201ctop of the line\u201d programming languages for Android application improvement.&lt;/p&gt;\n\n&lt;p&gt;It joined the great old Java and C++. The declaration has energized up the interest over Kotlin, causing the astounding development in its popularity.&lt;/p&gt;\n\n&lt;h3&gt;2 Progress&lt;/h3&gt;\n\n&lt;p&gt;\u00a0\u00a0Firstly, Kotlin was planned in such a way, that it could without much of a stretch interoperable with Java. Therefore, the designers can interpret java codes into Kotlin and vice versa, that too, without the need to change the operability.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Kotlin is the new language, offers some extra characteristics that make Kotlin a favored pick over Java. A client ca n\u2019t separate between the two since codes of both the programming languages are assembled to JVM bytecode.\u00a0\u00a0&lt;/p&gt;\n\n&lt;h3&gt;3 Smart Casts\u00a0&lt;/h3&gt;\n\n&lt;p&gt;In Java, We have to check the kind of factors and cast them by our activity.\u00a0&lt;/p&gt;\n\n&lt;p&gt;In Kotlin, smart casts will deal with these casting checks with keywords \u201cis-checks\u201d, which will check for permanent qualities and performs hinted casting.&lt;/p&gt;\n\n&lt;h3&gt;4 Null Safety&lt;/h3&gt;\n\n&lt;p&gt;In Java, NullPointerExceptions causes tremendous dissatisfaction for engineers. It enables clients to relegate invalid to any factors yet while getting to an item reference having invalid worth raises an invalid pointer particular case which the client needs to deal with.\u00a0&lt;/p&gt;\n\n&lt;p&gt;In Kotlin, By default, a wide range of factors are non-invalid capable (for example we can\u2019t dole out invalid qualities to factors/objects). If we attempt to appoint or return invalid classes, Kotlin code will fizzle during the arranged time. If we genuinely need a variable to have an invalid worth, we can proclaim as pursues:\u00a0&lt;/p&gt;\n\n&lt;p&gt;esteem num: Int? = null&lt;/p&gt;\n\n&lt;h3&gt;5 Type Inference&lt;/h3&gt;\n\n&lt;p&gt;In Java, we have to indicate a kind of every factor expressly while announcing.\u00a0&lt;/p&gt;\n\n&lt;p&gt;In Kotlin, we don\u2019t have to indicate the kind of every factor unequivocally dependent on the task it will deal with. If we need to state expressly, we can do it.&lt;/p&gt;\n\n&lt;h3&gt;6 Useful Programming&lt;/h3&gt;\n\n&lt;p&gt;Java doesn\u2019t have practical programming support until Java 8; however, while creating Android applications, it supports the main subset of Java 8 characteristics.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Kotlin is a blend of procedural and useful programming language which comprises numerous helpful strategies, for example, lambda, administrator over-burdening, higher-request capacities, and apathetic assessment, and so on.&lt;/p&gt;\n\n&lt;h3&gt;7 Expansion Functions&lt;/h3&gt;\n\n&lt;p&gt;In Java, If we need to expand the use of the existing class, we have to take another class and acquire the parent class. So Extension capacities are not accessible in Java.\u00a0\u00a0\u00a0\u00a0&lt;/p&gt;\n\n&lt;p&gt;Kotlin gives designers the capacity to expand a current class with new usefulness. We can make broaden works by prefixing the name of a class to name the new capacity.&lt;/p&gt;\n\n&lt;h3&gt;\u00a08 No Checked Exceptions&lt;/h3&gt;\n\n&lt;p&gt;In Java, We have checked special case support which causes designers to proclaim and get the exemption which at last prompts strong code with excellent mistake handling.\u00a0\u00a0\u00a0\u00a0&lt;/p&gt;\n\n&lt;p&gt;In Kotlin, we don\u2019t have checked special cases. So designers don\u2019t have to proclaim or get special cases, which have benefits and limitations.&lt;/p&gt;\n\n&lt;h3&gt;9 Information Classes&lt;/h3&gt;\n\n&lt;p&gt;In Java, assume we require to have a class that needs to hold information yet nothing else. For this we have to characterize constructors, factors to store information, getter and setter techniques, hashcode(), toString(), and equivalents() functions\u00a0\u00a0\u00a0\u00a0&lt;/p&gt;\n\n&lt;p&gt;In Kotlin, If we require to have classes that need to hold information. We can announce a class with keywords \u201cinformation\u201d in the class definition then the compiler will deal with the majority of this work. For example, making constructors, getter, setter strategies for various fields.&lt;/p&gt;\n\n&lt;h4&gt;Key Differences Between Java Vs. Kotlin:\u00a0&lt;/h4&gt;\n\n&lt;p&gt;Both Java vs. Kotlin are prominent decisions in the market; let us talk about a portion of the significant differences between Java vs Kotlin:\u00a0&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Kotlin has the help of intelligent cast which recognizes unchanging sorts and performs specific cast by the compiler while in Java we have to distinguish and play out the casting.\u00a0&lt;/li&gt;\n&lt;li&gt;Kotlin has the help of sort inferences which means we don\u2019t have to indicate the information kind of factor unequivocally though in Java we have to determine expressly.\u00a0&lt;/li&gt;\n&lt;li&gt;In Kotlin, we don\u2019t have checked exemptions, which is a limitation as it prompts mistake inclined code, though Java has support for tested special cases by which we can perform blunder taking care of.\u00a0&lt;/li&gt;\n&lt;li&gt;Java assemblage time is 15-20% quicker than Kotlin\u2019s accumulation time. However, in the context of gradual form aggregation, Kotlin will also take the same arrangement time as Java.\u00a0&lt;/li&gt;\n&lt;li&gt;In Kotlin, we can\u2019t allocate invalid qualities to factors or return esteems. If we truly need to dole out, at that point, we can pronounce a variable with a unique linguistic structure while in Java we can appoint invalid qualities yet when we attempt to access items indicating invalid conditions raises a particular case.\u00a0&lt;/li&gt;\n&lt;li&gt;Kotlin is compatible with Java regardless of contrast between Java vs Kotlin. We can call Kotlin code in Java and Java code in Kotlin. So we can have both Java vs. Kotlin classes one next to the other in a venture and incorporates with no issues. After aggregation we incapable of discovering which category written in Java or Kotlin.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h4&gt;Does Kotlin Take The Place Of Java Language?\u00a0&lt;/h4&gt;\n\n&lt;p&gt;The response to this inquiry relies upon the different assessments of versatile application developers. Since Java is an outstanding programming language having different open-source instruments and libraries to help developers.&lt;/p&gt;\n\n&lt;p&gt;No language accompanies perfectness. Java itself can be difficult for some. For this, Kotlin has come, which tends to regular programming stress with its successful arrangements and furthermore improves the Java system.\u00a0&lt;/p&gt;\n\n&lt;p&gt;We currently realize that Kotlin has turned into an increasingly steady and consistent improvement choice for Android Studio. Some Android engineers appear to accept that Kotlin will remove Java for versatile application advancement sooner rather than later.\u00a0\u00a0&lt;/p&gt;\n\n&lt;p&gt;In Kotlin vs Java conversation, it is Kotlin which is spotless, naturally lightweight and less repetitive as far as data classes, getters/setters and writing callbacks. It is explicitly made for improving the current Java models utilizing answers for API structure lacks.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Thus, we can say that Kotlin isn\u2019t a substitution for Java; it\u2019s an improvement.&lt;/p&gt;\n\n&lt;h3&gt;Conclusion&lt;/h3&gt;\n\n&lt;p&gt;At last, its a review of the difference between Java vs Kotlin. From this, you will have a superior understanding of both Java and Kotlin language, after perusing this Java vs Kotlin article. In my view, we can continue with Kotlin for Android application advancement without stressing over the accumulation time even though Java has few favorable circumstances over Kotlin.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_10b31v", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9nwy2", "is_robot_indexable": true, "report_reasons": null, "author": "Academic_Help", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Students_AcademicHelp/comments/f9nwy2/java_vs_kotlin_which_one_is_the_best_language_for/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/Students_AcademicHelp/comments/f9nwy2/java_vs_kotlin_which_one_is_the_best_language_for/", "subreddit_subscribers": 184, "created_utc": 1582692589.0, "num_crossposts": 4, "media": null, "is_video": false}], "created": 1582721409.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Students_AcademicHelp", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f9nx33", "is_robot_indexable": true, "report_reasons": null, "author": "Academic_Help", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_f9nwy2", "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f9nx33/java_vs_kotlin_which_one_is_the_best_language_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/Students_AcademicHelp/comments/f9nwy2/java_vs_kotlin_which_one_is_the_best_language_for/", "subreddit_subscribers": 27152, "created_utc": 1582692609.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hey guys,\n\nAt my job we are about to use Helm charts to configure more easily our k8s cluster, but somewhere I've seen there's this Kotlin DSL for Kubernetes and I was looking at it and seems pretty good to be honest, specially by the fact I want to propose the usage of Kotlin for other aspects in the project.My questions are:\n\n1. Is there any project example that uses this dsl besides of the ones that are documented in the repository?\n2. Under the hood, how does this DSL connect with the kubernetes cluster? Is there any configuration that has to be done beforehand \n3. Or does this generate the yml configurations ready to use in kubernetes?\n\n  \nThanks in advance people.", "author_fullname": "t2_tqdd5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Questions about fkorotkov's Kubernetes DSL", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f99nrd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582663164.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys,&lt;/p&gt;\n\n&lt;p&gt;At my job we are about to use Helm charts to configure more easily our k8s cluster, but somewhere I&amp;#39;ve seen there&amp;#39;s this Kotlin DSL for Kubernetes and I was looking at it and seems pretty good to be honest, specially by the fact I want to propose the usage of Kotlin for other aspects in the project.My questions are:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Is there any project example that uses this dsl besides of the ones that are documented in the repository?&lt;/li&gt;\n&lt;li&gt;Under the hood, how does this DSL connect with the kubernetes cluster? Is there any configuration that has to be done beforehand &lt;/li&gt;\n&lt;li&gt;Or does this generate the yml configurations ready to use in kubernetes?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Thanks in advance people.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f99nrd", "is_robot_indexable": true, "report_reasons": null, "author": "beastinghunting", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f99nrd/questions_about_fkorotkovs_kubernetes_dsl/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/f99nrd/questions_about_fkorotkovs_kubernetes_dsl/", "subreddit_subscribers": 27152, "created_utc": 1582634364.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_5n075huj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to build a GraphQL with Authentication", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f92u2u", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/0Vs_AfJltLI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "GraphQL JWT Authentication with MongoDB and Ktor", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/0Vs_AfJltLI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Sen Coder", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/0Vs_AfJltLI/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCA0DAOndT53e5NR5YE0bilw"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/0Vs_AfJltLI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/f92u2u", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1582625852.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f92u2u", "is_robot_indexable": true, "report_reasons": null, "author": "shencoder", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/f92u2u/how_to_build_a_graphql_with_authentication/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/0Vs_AfJltLI", "subreddit_subscribers": 27152, "created_utc": 1582597052.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "GraphQL JWT Authentication with MongoDB and Ktor", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/0Vs_AfJltLI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Sen Coder", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/0Vs_AfJltLI/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCA0DAOndT53e5NR5YE0bilw"}, "type": "youtube.com"}, "is_video": false}}], "after": "t3_f92u2u", "before": null}}