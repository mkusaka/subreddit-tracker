{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - August", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i1ikj5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596269158.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i1ikj5", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 2, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i1ikj5/whos_hiring_typescript_developers_august/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/i1ikj5/whos_hiring_typescript_developers_august/", "subreddit_subscribers": 46509, "created_utc": 1596240358.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Which ORM should I use to handle a SQL database in a TypeScript project?", "author_fullname": "t2_5facrist", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Which ORM should I use?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_icbey2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597819026.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Which ORM should I use to handle a SQL database in a TypeScript project?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "icbey2", "is_robot_indexable": true, "report_reasons": null, "author": "x_mk6", "discussion_type": null, "num_comments": 95, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/icbey2/which_orm_should_i_use/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/icbey2/which_orm_should_i_use/", "subreddit_subscribers": 46509, "created_utc": 1597790226.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_eu4dg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Dynamic type systems are not inherently more open", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_icd0sn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597824669.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "lexi-lambda.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "icd0sn", "is_robot_indexable": true, "report_reasons": null, "author": "danielnixon", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/icd0sn/dynamic_type_systems_are_not_inherently_more_open/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/", "subreddit_subscribers": 46509, "created_utc": 1597795869.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I am trying to create a localization object for my React Native app. This is the structure:\n\n    const strings = {\n      ...\n    \n      en: {\n        string_1: \"foo\",\n        string_2: \"bar\",\n        ...\n      },\n    \n      fr: { ... },\n    \n      ...\n    }\n\nI want to enforce through TypeScript that each locale matches the other in terms of keys. For example, if `\"en\"` has key `\"string_1\"`, then every other locale should also have key `\"string_1\"`. Or if `\"fr\"` has key `\"string_3\"`, then every other locale should also have key `\"string_3\"`.\n\nMy reasoning is that I don't want to add support for a language that does not have all the keys used in the app, so it would be nice to know if/what is missing.\n\nIs this possible to do? And is it possible to do for an arbitrary amount of languages and keys without having to manually create/update an interface?", "author_fullname": "t2_11z8gr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to enforce nested objects have matching keys?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iccp8r", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1597794827.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597823517.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to create a localization object for my React Native app. This is the structure:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const strings = {\n  ...\n\n  en: {\n    string_1: &amp;quot;foo&amp;quot;,\n    string_2: &amp;quot;bar&amp;quot;,\n    ...\n  },\n\n  fr: { ... },\n\n  ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I want to enforce through TypeScript that each locale matches the other in terms of keys. For example, if &lt;code&gt;&amp;quot;en&amp;quot;&lt;/code&gt; has key &lt;code&gt;&amp;quot;string_1&amp;quot;&lt;/code&gt;, then every other locale should also have key &lt;code&gt;&amp;quot;string_1&amp;quot;&lt;/code&gt;. Or if &lt;code&gt;&amp;quot;fr&amp;quot;&lt;/code&gt; has key &lt;code&gt;&amp;quot;string_3&amp;quot;&lt;/code&gt;, then every other locale should also have key &lt;code&gt;&amp;quot;string_3&amp;quot;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;My reasoning is that I don&amp;#39;t want to add support for a language that does not have all the keys used in the app, so it would be nice to know if/what is missing.&lt;/p&gt;\n\n&lt;p&gt;Is this possible to do? And is it possible to do for an arbitrary amount of languages and keys without having to manually create/update an interface?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iccp8r", "is_robot_indexable": true, "report_reasons": null, "author": "MrGVSV", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iccp8r/how_to_enforce_nested_objects_have_matching_keys/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iccp8r/how_to_enforce_nested_objects_have_matching_keys/", "subreddit_subscribers": 46509, "created_utc": 1597794717.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm curious. I've been doing a deep dive on them lately, and find them an interesting concept. However I know they are \"experimental' so I'd like to know outside of Angular, are they used all that often?", "author_fullname": "t2_3z3sg7e7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How common are decorators in the wild?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ic921d", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597811398.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m curious. I&amp;#39;ve been doing a deep dive on them lately, and find them an interesting concept. However I know they are &amp;quot;experimental&amp;#39; so I&amp;#39;d like to know outside of Angular, are they used all that often?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ic921d", "is_robot_indexable": true, "report_reasons": null, "author": "mymar101", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ic921d/how_common_are_decorators_in_the_wild/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ic921d/how_common_are_decorators_in_the_wild/", "subreddit_subscribers": 46509, "created_utc": 1597782598.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_e29w8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My TypeScript Exercise Repository.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_icejbf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/Di_aj-PEaci5Yc-9hZrC6J2fL4a92CCCRomgVN9sKu8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1597830333.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/JaganGanesh/typescript", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/RvC-eAxUnuOmPzqoq9LhWefTC9dUTu-R-BZ49DgJnN0.jpg?auto=webp&amp;s=b25dea6585a214333e4a209aac0898eb0c02d42a", "width": 1200, "height": 628}, "resolutions": [{"url": "https://external-preview.redd.it/RvC-eAxUnuOmPzqoq9LhWefTC9dUTu-R-BZ49DgJnN0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=536e967534c93d65592f363f089eab8474af7e72", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/RvC-eAxUnuOmPzqoq9LhWefTC9dUTu-R-BZ49DgJnN0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=90d8afaec48cddc00609f1c8f3dd7c2b398f76e6", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/RvC-eAxUnuOmPzqoq9LhWefTC9dUTu-R-BZ49DgJnN0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=bbb505099a827457ddcbf8f18fc0efaca9289e18", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/RvC-eAxUnuOmPzqoq9LhWefTC9dUTu-R-BZ49DgJnN0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3ed4351610aa7a77bf27f76a48ab44325f57c24c", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/RvC-eAxUnuOmPzqoq9LhWefTC9dUTu-R-BZ49DgJnN0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=437d5505d4092153622686a7a84013ece5bfb1ce", "width": 960, "height": 502}, {"url": "https://external-preview.redd.it/RvC-eAxUnuOmPzqoq9LhWefTC9dUTu-R-BZ49DgJnN0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7a6b05dadb10e2988d871eb759bd4d81dd75d5b9", "width": 1080, "height": 565}], "variants": {}, "id": "8Qzo9Vy5lZFaw9hMDuMjKNl88UMrhPUzsgoWzmtb2es"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "icejbf", "is_robot_indexable": true, "report_reasons": null, "author": "jaganganesh", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/icejbf/my_typescript_exercise_repository/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/JaganGanesh/typescript", "subreddit_subscribers": 46509, "created_utc": 1597801533.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've recently attached NYC to my Typescript project but am confused about how it determines when code is covered. Below is an example of NYC claiming that lines 5-6 are not covered in my `src/Indexer/InvalidIndexError.ts`.\n\nI have the following setup:\n\n`.nycrc`\n\n    {\n      \"extends\": \"@istanbuljs/nyc-config-typescript\",\n      \"include\": [\n        \"src/**/*.js\",\n        \"src/**/*.ts\",\n        \"src/**/*.tsx\"\n      ],\n      \"require\": [\n        \"ts-node/register\"\n      ],\n      \"reporter\": [\n        \"text\",\n        \"html\"\n      ],\n      \"all\": true,\n      \"check-coverage\": true,\n      \"sourceMap\": true,\n      \"instrument\": true\n    }\n\n`src/Indexer/InvalidIndexError.ts`\n\n    export default class InvalidIndexError extends Error {\n        public static ErrorName = 'InvalidIndexError'\n        constructor(message) {\n            super(message);\n            this.name = InvalidIndexError.ErrorName;\n        }\n    }\n\n`test/InvalidIndexError.ts`\n\n    import InvalidIndexError from \"../src/Indexer/InvalidIndexError\";\n    \n    const chai = require('chai');\n    const chaiAsPromised = require(\"chai-as-promised\");\n    const {expect} = chai;\n    \n    chai.use(chaiAsPromised)\n    \n    describe('InvalidIndexError', () =&gt; {\n        it('should have static error name',  () =&gt; {\n            return expect(InvalidIndexError).to.have.property('ErrorName')\n        })\n    \n        it('should have a name matching static name',  () =&gt; {\n            const error = new InvalidIndexError('');\n    \n            return expect(error.name).to.equal(InvalidIndexError.name)\n        })\n    \n        it('should be instance of Error', () =&gt; {\n            return expect((new InvalidIndexError('')) instanceof Error).to.be.true\n        })\n    });\n\nAfter executing  `nyc mocha -r ts-node/register/transpile-only -r source-map-support/register --full-trace --ui bdd tests/**/*.ts` I end up with:\n\n    -----------------------|---------|----------|---------|---------|-------------------\n    File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n    -----------------------|---------|----------|---------|---------|-------------------\n    All files              |   38.02 |    39.29 |      35 |   40.27 |                   \n     src                   |   30.95 |       40 |   36.36 |   33.33 |  \n     ...                   | Excluding other files for Reddit brevity                            \n     src/Indexer           |   92.86 |    52.94 |    87.5 |   95.52 |                  \n      InvalidIndexError.ts |   80.95 |    46.15 |      75 |   89.47 | 5-6", "author_fullname": "t2_95kmc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Trying to use Typescript/Mocha/NYC together but am confused about how coverage is detected", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ic5aa3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597799970.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve recently attached NYC to my Typescript project but am confused about how it determines when code is covered. Below is an example of NYC claiming that lines 5-6 are not covered in my &lt;code&gt;src/Indexer/InvalidIndexError.ts&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;I have the following setup:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;.nycrc&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n  &amp;quot;extends&amp;quot;: &amp;quot;@istanbuljs/nyc-config-typescript&amp;quot;,\n  &amp;quot;include&amp;quot;: [\n    &amp;quot;src/**/*.js&amp;quot;,\n    &amp;quot;src/**/*.ts&amp;quot;,\n    &amp;quot;src/**/*.tsx&amp;quot;\n  ],\n  &amp;quot;require&amp;quot;: [\n    &amp;quot;ts-node/register&amp;quot;\n  ],\n  &amp;quot;reporter&amp;quot;: [\n    &amp;quot;text&amp;quot;,\n    &amp;quot;html&amp;quot;\n  ],\n  &amp;quot;all&amp;quot;: true,\n  &amp;quot;check-coverage&amp;quot;: true,\n  &amp;quot;sourceMap&amp;quot;: true,\n  &amp;quot;instrument&amp;quot;: true\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;src/Indexer/InvalidIndexError.ts&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export default class InvalidIndexError extends Error {\n    public static ErrorName = &amp;#39;InvalidIndexError&amp;#39;\n    constructor(message) {\n        super(message);\n        this.name = InvalidIndexError.ErrorName;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;test/InvalidIndexError.ts&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import InvalidIndexError from &amp;quot;../src/Indexer/InvalidIndexError&amp;quot;;\n\nconst chai = require(&amp;#39;chai&amp;#39;);\nconst chaiAsPromised = require(&amp;quot;chai-as-promised&amp;quot;);\nconst {expect} = chai;\n\nchai.use(chaiAsPromised)\n\ndescribe(&amp;#39;InvalidIndexError&amp;#39;, () =&amp;gt; {\n    it(&amp;#39;should have static error name&amp;#39;,  () =&amp;gt; {\n        return expect(InvalidIndexError).to.have.property(&amp;#39;ErrorName&amp;#39;)\n    })\n\n    it(&amp;#39;should have a name matching static name&amp;#39;,  () =&amp;gt; {\n        const error = new InvalidIndexError(&amp;#39;&amp;#39;);\n\n        return expect(error.name).to.equal(InvalidIndexError.name)\n    })\n\n    it(&amp;#39;should be instance of Error&amp;#39;, () =&amp;gt; {\n        return expect((new InvalidIndexError(&amp;#39;&amp;#39;)) instanceof Error).to.be.true\n    })\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;After executing  &lt;code&gt;nyc mocha -r ts-node/register/transpile-only -r source-map-support/register --full-trace --ui bdd tests/**/*.ts&lt;/code&gt; I end up with:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-----------------------|---------|----------|---------|---------|-------------------\nFile                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n-----------------------|---------|----------|---------|---------|-------------------\nAll files              |   38.02 |    39.29 |      35 |   40.27 |                   \n src                   |   30.95 |       40 |   36.36 |   33.33 |  \n ...                   | Excluding other files for Reddit brevity                            \n src/Indexer           |   92.86 |    52.94 |    87.5 |   95.52 |                  \n  InvalidIndexError.ts |   80.95 |    46.15 |      75 |   89.47 | 5-6\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ic5aa3", "is_robot_indexable": true, "report_reasons": null, "author": "jimofthestoneage", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ic5aa3/trying_to_use_typescriptmochanyc_together_but_am/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ic5aa3/trying_to_use_typescriptmochanyc_together_but_am/", "subreddit_subscribers": 46509, "created_utc": 1597771170.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "# Error:\n\n    ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\index.js\n    [tsl] ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\ind\n          TS2578: Unused '@ts-expect-error' directive.\n    \n    ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\index.js\n    [tsl] ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\ind\n          TS2578: Unused '@ts-expect-error' directive.\n    \n    ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\index.js\n    [tsl] ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\ind\n          TS2578: Unused '@ts-expect-error' directive.\n\n## webpack.config.js\n\n    const path = require('path');\n    const TerserPlugin = require('terser-webpack-plugin');\n    \n    module.exports = (env, argv) =&gt; {\n    \n      const isDev = argv.mode === \"development\";\n    \n      if (!isDev) {\n        console.log(\"production mode\");\n      }\n    \n      return {\n        entry: './src/index.ts',\n        module: {\n          rules: [\n            {\n              test: /\\.tsx?$/,\n              use: 'ts-loader',\n              exclude: /node_modules/,\n            }\n          ]\n        },\n        resolve: {\n          extensions: [ '.tsx', '.ts', '.js' ],\n        },\n        output: {\n          filename: 'bundle.js',\n          path: path.resolve(__dirname, 'dist'),\n        }\n      }\n    };\n\n## tsconfig.json\n\n    {\n      \"compilerOptions\": {\n        \"outDir\": \"./dist/\",  \n        \"noImplicitAny\": true,\n        \"module\": \"es6\",\n        \"target\": \"es6\",\n        \"allowJs\": true\n      }\n    }\n\n## index.ts\n\n    console.log(\"Hello World\");\n\n## CLI \n\n    webpack --mode production --display verbose --display-modules\n\n\nI dont understand this at all. What is [tsl] even? linter? loader? I have tried everything to disable this. The problem goes away entirely if I comment out `require('terser-webpack-plugin');` but I need this plugin.", "author_fullname": "t2_51u8aadz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Getting [tsl] errors for files inside the node_modules folder.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ic9xvp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597814176.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;Error:&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\index.js\n[tsl] ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\ind\n      TS2578: Unused &amp;#39;@ts-expect-error&amp;#39; directive.\n\nERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\index.js\n[tsl] ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\ind\n      TS2578: Unused &amp;#39;@ts-expect-error&amp;#39; directive.\n\nERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\index.js\n[tsl] ERROR in C:\\Users\\ME\\Desktop\\TSLbrokenrepo\\node_modules\\jest-worker\\build\\ind\n      TS2578: Unused &amp;#39;@ts-expect-error&amp;#39; directive.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;webpack.config.js&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;const path = require(&amp;#39;path&amp;#39;);\nconst TerserPlugin = require(&amp;#39;terser-webpack-plugin&amp;#39;);\n\nmodule.exports = (env, argv) =&amp;gt; {\n\n  const isDev = argv.mode === &amp;quot;development&amp;quot;;\n\n  if (!isDev) {\n    console.log(&amp;quot;production mode&amp;quot;);\n  }\n\n  return {\n    entry: &amp;#39;./src/index.ts&amp;#39;,\n    module: {\n      rules: [\n        {\n          test: /\\.tsx?$/,\n          use: &amp;#39;ts-loader&amp;#39;,\n          exclude: /node_modules/,\n        }\n      ]\n    },\n    resolve: {\n      extensions: [ &amp;#39;.tsx&amp;#39;, &amp;#39;.ts&amp;#39;, &amp;#39;.js&amp;#39; ],\n    },\n    output: {\n      filename: &amp;#39;bundle.js&amp;#39;,\n      path: path.resolve(__dirname, &amp;#39;dist&amp;#39;),\n    }\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;tsconfig.json&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n  &amp;quot;compilerOptions&amp;quot;: {\n    &amp;quot;outDir&amp;quot;: &amp;quot;./dist/&amp;quot;,  \n    &amp;quot;noImplicitAny&amp;quot;: true,\n    &amp;quot;module&amp;quot;: &amp;quot;es6&amp;quot;,\n    &amp;quot;target&amp;quot;: &amp;quot;es6&amp;quot;,\n    &amp;quot;allowJs&amp;quot;: true\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;index.ts&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;console.log(&amp;quot;Hello World&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;CLI&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;webpack --mode production --display verbose --display-modules\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I dont understand this at all. What is [tsl] even? linter? loader? I have tried everything to disable this. The problem goes away entirely if I comment out &lt;code&gt;require(&amp;#39;terser-webpack-plugin&amp;#39;);&lt;/code&gt; but I need this plugin.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ic9xvp", "is_robot_indexable": true, "report_reasons": null, "author": "DeGlasse", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ic9xvp/getting_tsl_errors_for_files_inside_the_node/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ic9xvp/getting_tsl_errors_for_files_inside_the_node/", "subreddit_subscribers": 46509, "created_utc": 1597785376.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_eu4dg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Parse, don\u2019t validate", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ibqabo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 56, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 56, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1597738319.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "lexi-lambda.github.io", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ibqabo", "is_robot_indexable": true, "report_reasons": null, "author": "danielnixon", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ibqabo/parse_dont_validate/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/", "subreddit_subscribers": 46509, "created_utc": 1597709519.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Im receiving this error\n\n&gt;Type '{ foo: \"bar\"; }' is not assignable to type 'Partial&lt;T&gt;' \n\nIf every property in `T` is optional and `T` should contain at least `foo: string` then why is the return value invalid?\n\nMaybe the easy solution is to just replace `Partial&lt;T&gt;` with `IFooBar` or `Partial&lt;IFooBar&gt;`, but what if I want this interface to be an abstract method for somebody else to implement?\n\n&amp;#x200B;\n\nBTW I have every strict option enabled\n\nhttps://preview.redd.it/hagbvyh9knh51.png?width=731&amp;format=png&amp;auto=webp&amp;s=a6a0a6c614845952beb10b7decf8eee430488025", "author_fullname": "t2_hjlqm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Need help with type error", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 58, "top_awarded_type": null, "hide_score": false, "media_metadata": {"hagbvyh9knh51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 45, "x": 108, "u": "https://preview.redd.it/hagbvyh9knh51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=9e3ad1349031e4c580b5051de53a6314ca8f127f"}, {"y": 90, "x": 216, "u": "https://preview.redd.it/hagbvyh9knh51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=99f350f82ba0645830c0abf73c40473524d951ac"}, {"y": 133, "x": 320, "u": "https://preview.redd.it/hagbvyh9knh51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=d76540be5e3ef8dfbdffad47893b131d4e28b6ed"}, {"y": 267, "x": 640, "u": "https://preview.redd.it/hagbvyh9knh51.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=48285549de91a511322af11bc814d63f2ca6acbd"}], "s": {"y": 305, "x": 731, "u": "https://preview.redd.it/hagbvyh9knh51.png?width=731&amp;format=png&amp;auto=webp&amp;s=a6a0a6c614845952beb10b7decf8eee430488025"}, "id": "hagbvyh9knh51"}}, "name": "t3_ibqhic", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/bRzqRanO5k_5_TXMI6kVldJVpBum8D0w2NgW7TLdreM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1597739060.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Im receiving this error&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Type &amp;#39;{ foo: &amp;quot;bar&amp;quot;; }&amp;#39; is not assignable to type &amp;#39;Partial&amp;lt;T&amp;gt;&amp;#39; &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If every property in &lt;code&gt;T&lt;/code&gt; is optional and &lt;code&gt;T&lt;/code&gt; should contain at least &lt;code&gt;foo: string&lt;/code&gt; then why is the return value invalid?&lt;/p&gt;\n\n&lt;p&gt;Maybe the easy solution is to just replace &lt;code&gt;Partial&amp;lt;T&amp;gt;&lt;/code&gt; with &lt;code&gt;IFooBar&lt;/code&gt; or &lt;code&gt;Partial&amp;lt;IFooBar&amp;gt;&lt;/code&gt;, but what if I want this interface to be an abstract method for somebody else to implement?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;BTW I have every strict option enabled&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/hagbvyh9knh51.png?width=731&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=a6a0a6c614845952beb10b7decf8eee430488025\"&gt;https://preview.redd.it/hagbvyh9knh51.png?width=731&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=a6a0a6c614845952beb10b7decf8eee430488025&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ibqhic", "is_robot_indexable": true, "report_reasons": null, "author": "what-the-hey", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ibqhic/need_help_with_type_error/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ibqhic/need_help_with_type_error/", "subreddit_subscribers": 46509, "created_utc": 1597710260.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_5ibor34y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Let's Write a JavaScript Library in ES6 using Webpack and Babel", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_ic0imb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.38, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/l8LVRIyUVLUC3KSWzDcsC27SyNrFlvbjVkSch2-0YxY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1597784337.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "9sh.re", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://9sh.re/dHgv80rDp", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/c_gIqDSxGHFEkYzSzuJ4p8XE3qoDSfTtRQHX0gQxhVc.jpg?auto=webp&amp;s=6bd71cb76e4a023611686d801e8151ae7a8355e8", "width": 800, "height": 534}, "resolutions": [{"url": "https://external-preview.redd.it/c_gIqDSxGHFEkYzSzuJ4p8XE3qoDSfTtRQHX0gQxhVc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6e6251d2c3ba389af58248bb622f6b7cf92162be", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/c_gIqDSxGHFEkYzSzuJ4p8XE3qoDSfTtRQHX0gQxhVc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=64733f94a54b1b95b77b1f6c58ff46ecdc320022", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/c_gIqDSxGHFEkYzSzuJ4p8XE3qoDSfTtRQHX0gQxhVc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4985183d1fc08dc544351a64ce0e46448f4c38f1", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/c_gIqDSxGHFEkYzSzuJ4p8XE3qoDSfTtRQHX0gQxhVc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bb1691257e0c36a46b8612c166db720c733bf76e", "width": 640, "height": 427}], "variants": {}, "id": "OSjhgpC1NLcmG4NErE3LiDQZvH-92oWzqM5j-TeQM1c"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ic0imb", "is_robot_indexable": true, "report_reasons": null, "author": "aman_agrwl", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ic0imb/lets_write_a_javascript_library_in_es6_using/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://9sh.re/dHgv80rDp", "subreddit_subscribers": 46509, "created_utc": 1597755537.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ic0imb", "before": null}}