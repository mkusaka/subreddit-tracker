{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_bjbk9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "qrcp: transfer files over wifi from your computer to your mobile device by scanning a QR code without leaving the terminal.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g45e7z", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 42, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 42, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587320226.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 30, "id": "award_3cf96da4-79da-4127-90ac-84545e1833dc", "penny_donate": 0, "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/qh4pzo76v9p41_HomeTime.png", "days_of_premium": 0, "icon_height": 2048, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/qh4pzo76v9p41_HomeTime.png?width=16&amp;height=16&amp;auto=webp&amp;s=e71c3353b0cd8c3cf016f1e37725d033b4722197", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/qh4pzo76v9p41_HomeTime.png?width=32&amp;height=32&amp;auto=webp&amp;s=06df72aa9b4c008b0ae15ff11f95ff253f85ab74", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/qh4pzo76v9p41_HomeTime.png?width=48&amp;height=48&amp;auto=webp&amp;s=3fb62803315450661c05e36da2b8d00ba06ad619", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/qh4pzo76v9p41_HomeTime.png?width=64&amp;height=64&amp;auto=webp&amp;s=c07b21c2158fe3f6bf66a6650f39688ebe4e8c6a", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/qh4pzo76v9p41_HomeTime.png?width=128&amp;height=128&amp;auto=webp&amp;s=eadedb0c4eab725cd0617196371aecf1f45c636b", "width": 128, "height": 128}], "icon_width": 2048, "start_date": null, "is_enabled": true, "description": "Staying home &amp; being safe when you can", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "name": "Home Time", "icon_format": "PNG", "award_sub_type": "GLOBAL", "penny_price": 0, "award_type": "global"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g45e7z", "is_robot_indexable": true, "report_reasons": null, "author": "daw___", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g45e7z/qrcp_transfer_files_over_wifi_from_your_computer/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/claudiodangelis/qrcp", "subreddit_subscribers": 109496, "created_utc": 1587291426.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I just ran across this Apple job req for \"[Software Engineer - Machine Learning Platform](https://stackoverflow.com/jobs/226569/software-engineer-machine-learning-platform-apple?so_medium=Internal&amp;so_source=JobListing)\".\n\nOf note, it lists Go as the first of 5 \"meaningful languages\"\n\n&gt; Strong software development skills, with proficiency in meaningful languages (ex. Go, Python, Java, Scala, C++).\n\nDoes anyone know about use of Go at Apple for Machine Learning? Is it a primary language as one could infer from its placement in the list?", "author_fullname": "t2_165wad", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go is 1 of 5 \"meaningful languages\" at Apple for Machine Learning positions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g41bb2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 69, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 69, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587298272.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I just ran across this Apple job req for &amp;quot;&lt;a href=\"https://stackoverflow.com/jobs/226569/software-engineer-machine-learning-platform-apple?so_medium=Internal&amp;amp;so_source=JobListing\"&gt;Software Engineer - Machine Learning Platform&lt;/a&gt;&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Of note, it lists Go as the first of 5 &amp;quot;meaningful languages&amp;quot;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Strong software development skills, with proficiency in meaningful languages (ex. Go, Python, Java, Scala, C++).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Does anyone know about use of Go at Apple for Machine Learning? Is it a primary language as one could infer from its placement in the list?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g41bb2", "is_robot_indexable": true, "report_reasons": null, "author": "grokify", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g41bb2/go_is_1_of_5_meaningful_languages_at_apple_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/g41bb2/go_is_1_of_5_meaningful_languages_at_apple_for/", "subreddit_subscribers": 109496, "created_utc": 1587269472.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_qa6asfl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Wrote my first ever Go CLI tool - Generate ASCII art from any image", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g46kb7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587326563.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g46kb7", "is_robot_indexable": true, "report_reasons": null, "author": "prdpx7", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g46kb7/wrote_my_first_ever_go_cli_tool_generate_ascii/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/prdpx7/magrrite", "subreddit_subscribers": 109496, "created_utc": 1587297763.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi,\n\nI'm trying to learn the fullstack life cycle of a software project. Thus I chose to re-design and develop Go Playground with modern stack. \n\nIt's still WIP.\n\n&amp;#x200B;\n\nYou can see the UI prototype here: [https://www.figma.com/proto/4A8v6n2GJetccFEzGg5Z49/Go-Playground-Revamped-v0.1?scaling=min-zoom&amp;node-id=2%3A2](https://www.figma.com/proto/4A8v6n2GJetccFEzGg5Z49/Go-Playground-Revamped-v0.1?scaling=min-zoom&amp;node-id=2%3A2)\n\n&amp;#x200B;\n\nAnd the code here: [https://github.com/cyantarek/go-playground-revamped](https://github.com/cyantarek/go-playground-revamped)\n\n&amp;#x200B;\n\nAny suggestions, comments, criticisms will be much appreciated", "author_fullname": "t2_121fe6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I'm writing a modern version of Go Playground using Go, React and gRPC", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g3pzdg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 84, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 84, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587254970.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to learn the fullstack life cycle of a software project. Thus I chose to re-design and develop Go Playground with modern stack. &lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s still WIP.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;You can see the UI prototype here: &lt;a href=\"https://www.figma.com/proto/4A8v6n2GJetccFEzGg5Z49/Go-Playground-Revamped-v0.1?scaling=min-zoom&amp;amp;node-id=2%3A2\"&gt;https://www.figma.com/proto/4A8v6n2GJetccFEzGg5Z49/Go-Playground-Revamped-v0.1?scaling=min-zoom&amp;amp;node-id=2%3A2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;And the code here: &lt;a href=\"https://github.com/cyantarek/go-playground-revamped\"&gt;https://github.com/cyantarek/go-playground-revamped&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Any suggestions, comments, criticisms will be much appreciated&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g3pzdg", "is_robot_indexable": true, "report_reasons": null, "author": "CrappyFap69", "discussion_type": null, "num_comments": 50, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g3pzdg/im_writing_a_modern_version_of_go_playground/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/g3pzdg/im_writing_a_modern_version_of_go_playground/", "subreddit_subscribers": 109496, "created_utc": 1587226170.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_2uss54er", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "rabbitroutine \u2014 a lightweight library that handles RabbitMQ auto-reconnect and publishing retry routine for you.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g44hgi", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587315254.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g44hgi", "is_robot_indexable": true, "report_reasons": null, "author": "furdarius", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g44hgi/rabbitroutine_a_lightweight_library_that_handles/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/furdarius/rabbitroutine", "subreddit_subscribers": 109496, "created_utc": 1587286454.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I am a frontend developer willing to master server side programming. Go is my first option but i am not able to find good resources which covers only server side stuff. Please suggest a course or book\n\nThank you!", "author_fullname": "t2_68wl7iif", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Recommend a book/online course for server side coding", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g41qz1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587300334.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am a frontend developer willing to master server side programming. Go is my first option but i am not able to find good resources which covers only server side stuff. Please suggest a course or book&lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g41qz1", "is_robot_indexable": true, "report_reasons": null, "author": "PristineCup1", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g41qz1/recommend_a_bookonline_course_for_server_side/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/g41qz1/recommend_a_bookonline_course_for_server_side/", "subreddit_subscribers": 109496, "created_utc": 1587271534.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm learning go and trying to understand what's happening here but I'm not sure what the right terminology is so it's difficult to look things up.\n\n`ExportAppStateAndValidators` is what gets exported and called externally, so what's going on with the`func (app *NewApp)` right in front of it? \n\nAlso, what is `app` in `app *NewApp`? A pointer to a new object of type NewApp?\n\nThanks!\n\n&amp;#x200B;\n\n`func (app *NewApp) ExportAppStateAndValidators(`  \n`forZeroHeight bool, jailWhiteList []string,`  \n`) (appState json.RawMessage, validators []tmtypes.GenesisValidator, err error) {`  \n `// as if they could withdraw from the start of the next block`  \n `ctx := app.NewContext(true, abci.Header{Height: app.LastBlockHeight()})`  \n `if forZeroHeight {`  \n`app.prepForZeroHeightGenesis(ctx, jailWhiteList)`  \n`}`  \n `genState := app.mm.ExportGenesis(ctx)`  \n `appState, err = codec.MarshalJSONIndent(app.cdc, genState)`  \n `if err != nil {`  \n `return nil, nil, err`  \n`}`  \n `validators = staking.WriteValidators(ctx, app.stakingKeeper)`  \n `return appState, validators, nil`  \n`}`", "author_fullname": "t2_3kz4yvri", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is this pattern called?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g44y4z", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587317728.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m learning go and trying to understand what&amp;#39;s happening here but I&amp;#39;m not sure what the right terminology is so it&amp;#39;s difficult to look things up.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ExportAppStateAndValidators&lt;/code&gt; is what gets exported and called externally, so what&amp;#39;s going on with the&lt;code&gt;func (app *NewApp)&lt;/code&gt; right in front of it? &lt;/p&gt;\n\n&lt;p&gt;Also, what is &lt;code&gt;app&lt;/code&gt; in &lt;code&gt;app *NewApp&lt;/code&gt;? A pointer to a new object of type NewApp?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;func (app *NewApp) ExportAppStateAndValidators(&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;forZeroHeight bool, jailWhiteList []string,&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;) (appState json.RawMessage, validators []tmtypes.GenesisValidator, err error) {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;// as if they could withdraw from the start of the next block&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;ctx := app.NewContext(true, abci.Header{Height: app.LastBlockHeight()})&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;if forZeroHeight {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;app.prepForZeroHeightGenesis(ctx, jailWhiteList)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;genState := app.mm.ExportGenesis(ctx)&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;appState, err = codec.MarshalJSONIndent(app.cdc, genState)&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;if err != nil {&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return nil, nil, err&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;validators = staking.WriteValidators(ctx, app.stakingKeeper)&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return appState, validators, nil&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g44y4z", "is_robot_indexable": true, "report_reasons": null, "author": "twopercentjew", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g44y4z/what_is_this_pattern_called/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/g44y4z/what_is_this_pattern_called/", "subreddit_subscribers": 109496, "created_utc": 1587288928.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I am parsing a .h file that contains some values and putting those into golang maps. This is part of a port from python. in python basically a file with dicts is created and later accessed as simple as it gets.  \n\nI am wondering if the same can be done in go by simply auto generating a file that contains the maps and their data ? otherwise the solution i have come up with is to have the maps in the parsing file itself and access them from there or something of that sort or simply write this out to a json file.\n\nEdit : So basically i have a make file that runs the functions that parses the .h file and puts the appropriate values into a different file which contains the maps.basically in the maps package. Now do these statically generated maps stay put like with python dictionaries. or do i have to run the map generating file always when i run the program ? what i want are static one time generated key val pairs that's it.", "author_fullname": "t2_61o22c9c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "is it possible to create a package with just globally accessible maps without a main functon in golang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g469j9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1587302409.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587325008.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am parsing a .h file that contains some values and putting those into golang maps. This is part of a port from python. in python basically a file with dicts is created and later accessed as simple as it gets.  &lt;/p&gt;\n\n&lt;p&gt;I am wondering if the same can be done in go by simply auto generating a file that contains the maps and their data ? otherwise the solution i have come up with is to have the maps in the parsing file itself and access them from there or something of that sort or simply write this out to a json file.&lt;/p&gt;\n\n&lt;p&gt;Edit : So basically i have a make file that runs the functions that parses the .h file and puts the appropriate values into a different file which contains the maps.basically in the maps package. Now do these statically generated maps stay put like with python dictionaries. or do i have to run the map generating file always when i run the program ? what i want are static one time generated key val pairs that&amp;#39;s it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g469j9", "is_robot_indexable": true, "report_reasons": null, "author": "awkwardinno", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g469j9/is_it_possible_to_create_a_package_with_just/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/g469j9/is_it_possible_to_create_a_package_with_just/", "subreddit_subscribers": 109496, "created_utc": 1587296208.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_lddgi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go playground now running inside of a multithread Linux container", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g3tl86", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;The Go Playground is now running inside of a multi-threaded linux container!!! &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt;&lt;br&gt;&lt;br&gt;OOS[linux] GOARCH[amd64] GOMAXPROCS[8] NumCPU[8]&lt;a href=\"https://t.co/wpWOilF6GF\"&gt;https://t.co/wpWOilF6GF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bill Kennedy : MIA/-4 (@goinggodotnet) &lt;a href=\"https://twitter.com/goinggodotnet/status/1251589726806708227?ref_src=twsrc%5Etfw\"&gt;April 18, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 228}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/goinggodotnet/status/1251589726806708227", "author_name": "Bill Kennedy : MIA/-4", "height": 228, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;The Go Playground is now running inside of a multi-threaded linux container!!! &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt;&lt;br&gt;&lt;br&gt;OOS[linux] GOARCH[amd64] GOMAXPROCS[8] NumCPU[8]&lt;a href=\"https://t.co/wpWOilF6GF\"&gt;https://t.co/wpWOilF6GF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bill Kennedy : MIA/-4 (@goinggodotnet) &lt;a href=\"https://twitter.com/goinggodotnet/status/1251589726806708227?ref_src=twsrc%5Etfw\"&gt;April 18, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/goinggodotnet", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;The Go Playground is now running inside of a multi-threaded linux container!!! &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt;&lt;br&gt;&lt;br&gt;OOS[linux] GOARCH[amd64] GOMAXPROCS[8] NumCPU[8]&lt;a href=\"https://t.co/wpWOilF6GF\"&gt;https://t.co/wpWOilF6GF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bill Kennedy : MIA/-4 (@goinggodotnet) &lt;a href=\"https://twitter.com/goinggodotnet/status/1251589726806708227?ref_src=twsrc%5Etfw\"&gt;April 18, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/g3tl86", "height": 228}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587267567.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g3tl86", "is_robot_indexable": true, "report_reasons": null, "author": "proyb2", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g3tl86/go_playground_now_running_inside_of_a_multithread/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/goinggodotnet/status/1251589726806708227?s=21", "subreddit_subscribers": 109496, "created_utc": 1587238767.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/goinggodotnet/status/1251589726806708227", "author_name": "Bill Kennedy : MIA/-4", "height": 228, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;The Go Playground is now running inside of a multi-threaded linux container!!! &lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt;&lt;br&gt;&lt;br&gt;OOS[linux] GOARCH[amd64] GOMAXPROCS[8] NumCPU[8]&lt;a href=\"https://t.co/wpWOilF6GF\"&gt;https://t.co/wpWOilF6GF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bill Kennedy : MIA/-4 (@goinggodotnet) &lt;a href=\"https://twitter.com/goinggodotnet/status/1251589726806708227?ref_src=twsrc%5Etfw\"&gt;April 18, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/goinggodotnet", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I have some python implemented math calculations, such as a \\* b / c \\* d\\^2. I want to serialize it in some format such that I can read it in Golang and do the exact calculations. The calculation could have  up to 10 variables and basic operators (+, -, \\*, /, \\^ etc.). Is there any available tools for this kind of problems?", "author_fullname": "t2_2q2ocd36", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Q: What's the best way of translating python implemented math calculations in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g3z6o8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587288734.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have some python implemented math calculations, such as a * b / c * d^2. I want to serialize it in some format such that I can read it in Golang and do the exact calculations. The calculation could have  up to 10 variables and basic operators (+, -, *, /, ^ etc.). Is there any available tools for this kind of problems?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g3z6o8", "is_robot_indexable": true, "report_reasons": null, "author": "knightelvis", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/g3z6o8/q_whats_the_best_way_of_translating_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/g3z6o8/q_whats_the_best_way_of_translating_python/", "subreddit_subscribers": 109496, "created_utc": 1587259934.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_g3z6o8", "before": null}}