{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_6lvm6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GoLand 2020.1 EAP", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f02u4p", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 51, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 51, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1581067316.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.jetbrains.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f02u4p", "is_robot_indexable": true, "report_reasons": null, "author": "juhmayfay", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f02u4p/goland_20201_eap/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.jetbrains.com/go/2020/02/06/welcome-to-the-goland-2020-1-eap/", "subreddit_subscribers": 101986, "created_utc": 1581038516.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_l9va9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GitHub - K-Phoen/grabana: User-friendly library for building Grafana dashboards", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ezygm4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 84, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 84, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1581049670.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ezygm4", "is_robot_indexable": true, "report_reasons": null, "author": "K-Phoen", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ezygm4/github_kphoengrabana_userfriendly_library_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/K-Phoen/grabana", "subreddit_subscribers": 101986, "created_utc": 1581020870.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I create this template for a web-server.  \nIt is created with fasthttp, fasthttp router, postgres and jsoniter.\n\nIt is based on the hexogonal architecture from [Alistair Cockburn](https://alistair.cockburn.us/hexagonal-architecture/).\n\n&amp;#x200B;\n\nTake a look at the repo and can you give some pointers what can be better or what you like.\n\nThe repo: [REPO](https://github.com/ChielTimmermans/go-hexagonal-web-server)", "author_fullname": "t2_10tgz1pi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Web-server hexagonal architecture", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_f0ae4y", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581110462.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I create this template for a web-server.&lt;br/&gt;\nIt is created with fasthttp, fasthttp router, postgres and jsoniter.&lt;/p&gt;\n\n&lt;p&gt;It is based on the hexogonal architecture from &lt;a href=\"https://alistair.cockburn.us/hexagonal-architecture/\"&gt;Alistair Cockburn&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Take a look at the repo and can you give some pointers what can be better or what you like.&lt;/p&gt;\n\n&lt;p&gt;The repo: &lt;a href=\"https://github.com/ChielTimmermans/go-hexagonal-web-server\"&gt;REPO&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f0ae4y", "is_robot_indexable": true, "report_reasons": null, "author": "timmermans_", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f0ae4y/webserver_hexagonal_architecture/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/f0ae4y/webserver_hexagonal_architecture/", "subreddit_subscribers": 101986, "created_utc": 1581081662.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_upj0q40", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I move documentation from GitHub wiki to GitHub pages, let me know what you think.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_f0a465", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1581109027.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rafallorenz.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f0a465", "is_robot_indexable": true, "report_reasons": null, "author": "_vardius", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f0a465/i_move_documentation_from_github_wiki_to_github/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://rafallorenz.com/gorouter/", "subreddit_subscribers": 101986, "created_utc": 1581080227.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_acwk4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Including Go submodules part of a shared repository", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_f0a33z", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1581108865.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.cloudbear.nl", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f0a33z", "is_robot_indexable": true, "report_reasons": null, "author": "simex1995", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f0a33z/including_go_submodules_part_of_a_shared/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.cloudbear.nl/private-go-submodules-using-go-import-meta-tags/", "subreddit_subscribers": 101986, "created_utc": 1581080065.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello all!\n\nI just wanted to share my gopher adventures!\n\nI am the author of the VPN client Docker image `qmcgaw/private-internet-access` to connect to Private Internet Access servers, which turned out to be quite popular with today 2.1M Docker pulls in two years.\n\nBut its core functionality came from a [mutant /bin/sh entrypoint](https://github.com/qdm12/private-internet-access-docker/blob/60a69f316bfc4c19a4db29c1440d99dbc593ccda/entrypoint.sh) of **492 lines**.\n\nBeing a gopher, that could not continue. I finally merged my Go branch, packing all the features essentially in Go code. It is now [much more code](https://github.com/qdm12/private-internet-access-docker/tree/master/internal), but it feels much nicer :)\n\nThis subreddit also helped me merge stdout streams from different programs, so a big thank you to people who helped me!\n\nPS: It's not fully unit tested yet, and I don't use iptables-go yet either, shame on me for now :)", "author_fullname": "t2_w4wr2id", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Convert a 492 lines shell entrypoint to a Go program? I did it!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f03bv5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581069527.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello all!&lt;/p&gt;\n\n&lt;p&gt;I just wanted to share my gopher adventures!&lt;/p&gt;\n\n&lt;p&gt;I am the author of the VPN client Docker image &lt;code&gt;qmcgaw/private-internet-access&lt;/code&gt; to connect to Private Internet Access servers, which turned out to be quite popular with today 2.1M Docker pulls in two years.&lt;/p&gt;\n\n&lt;p&gt;But its core functionality came from a &lt;a href=\"https://github.com/qdm12/private-internet-access-docker/blob/60a69f316bfc4c19a4db29c1440d99dbc593ccda/entrypoint.sh\"&gt;mutant /bin/sh entrypoint&lt;/a&gt; of &lt;strong&gt;492 lines&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Being a gopher, that could not continue. I finally merged my Go branch, packing all the features essentially in Go code. It is now &lt;a href=\"https://github.com/qdm12/private-internet-access-docker/tree/master/internal\"&gt;much more code&lt;/a&gt;, but it feels much nicer :)&lt;/p&gt;\n\n&lt;p&gt;This subreddit also helped me merge stdout streams from different programs, so a big thank you to people who helped me!&lt;/p&gt;\n\n&lt;p&gt;PS: It&amp;#39;s not fully unit tested yet, and I don&amp;#39;t use iptables-go yet either, shame on me for now :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f03bv5", "is_robot_indexable": true, "report_reasons": null, "author": "dowitex", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f03bv5/convert_a_492_lines_shell_entrypoint_to_a_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/f03bv5/convert_a_492_lines_shell_entrypoint_to_a_go/", "subreddit_subscribers": 101986, "created_utc": 1581040727.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Starting from a basic `Has Many` relationship \n\n```Go\ntype Owner struct {\n\tID         uint      `gorm:\"primary_key\"`\n\tOwned      []Owned   `gorm:\"foreignkey:OwnerId\"`\n}\n\ntyp Owned struct{\n\tID         uint      `gorm:\"primary_key\"`\n\tOwnerId    uint\n}\n```\n\nWitch gave the following SQL database\n\n\n```\nOwner\nID \n1\n2\n\nOwned \nID | OwnerId\n1  |       1\n2  |       1\n3  |       1\n4  |       2\n5  |       2\n```\n\nI would like to have a column `FavoriteOwnedId` in the owner table to reference my favorite owned row. Which should look like that:\n\n```\nOwner\nID | FavoriteOwnedId\n1  |               2\n2  |               5\n\nOwned \nID | OwnerId\n1  |       1\n2  |       1\n3  |       1\n4  |       2\n5  |       2\n```\n\nI imagine something like the following would allow me to get it \n\n```go \nowner := &amp;Owner\ndb.Where(\"id = ?\", someId).\n   Preload(\"FavoriteOwned\").\n   Preload(\"Owned\").\n   First(&amp;owner)\n```\n\nBut I cannot find a way to write the necessary gorm tag to make it work. I manage to write the `Has One` or the `Has Many` but not writing them simultaneously.\n\nAny idea ?", "author_fullname": "t2_1ikrcus2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[GORM]How to mix a Has One relationship and a Has Many on the same table", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_f09elf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581104933.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Starting from a basic &lt;code&gt;Has Many&lt;/code&gt; relationship &lt;/p&gt;\n\n&lt;p&gt;``&lt;code&gt;Go\ntype Owner struct {\n    ID         uint&lt;/code&gt;gorm:&amp;quot;primary_key&amp;quot;&lt;code&gt;\n    Owned      []Owned&lt;/code&gt;gorm:&amp;quot;foreignkey:OwnerId&amp;quot;`\n}&lt;/p&gt;\n\n&lt;p&gt;typ Owned struct{\n    ID         uint      &lt;code&gt;gorm:&amp;quot;primary_key&amp;quot;&lt;/code&gt;\n    OwnerId    uint\n}\n```&lt;/p&gt;\n\n&lt;p&gt;Witch gave the following SQL database&lt;/p&gt;\n\n&lt;p&gt;```\nOwner\nID \n1\n2&lt;/p&gt;\n\n&lt;p&gt;Owned \nID | OwnerId\n1  |       1\n2  |       1\n3  |       1\n4  |       2\n5  |       2\n```&lt;/p&gt;\n\n&lt;p&gt;I would like to have a column &lt;code&gt;FavoriteOwnedId&lt;/code&gt; in the owner table to reference my favorite owned row. Which should look like that:&lt;/p&gt;\n\n&lt;p&gt;```\nOwner\nID | FavoriteOwnedId\n1  |               2\n2  |               5&lt;/p&gt;\n\n&lt;p&gt;Owned \nID | OwnerId\n1  |       1\n2  |       1\n3  |       1\n4  |       2\n5  |       2\n```&lt;/p&gt;\n\n&lt;p&gt;I imagine something like the following would allow me to get it &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;go \nowner := &amp;amp;Owner\ndb.Where(&amp;quot;id = ?&amp;quot;, someId).\n   Preload(&amp;quot;FavoriteOwned&amp;quot;).\n   Preload(&amp;quot;Owned&amp;quot;).\n   First(&amp;amp;owner)\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;But I cannot find a way to write the necessary gorm tag to make it work. I manage to write the &lt;code&gt;Has One&lt;/code&gt; or the &lt;code&gt;Has Many&lt;/code&gt; but not writing them simultaneously.&lt;/p&gt;\n\n&lt;p&gt;Any idea ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f09elf", "is_robot_indexable": true, "report_reasons": null, "author": "Mokona128", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f09elf/gormhow_to_mix_a_has_one_relationship_and_a_has/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/f09elf/gormhow_to_mix_a_has_one_relationship_and_a_has/", "subreddit_subscribers": 101986, "created_utc": 1581076133.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "im trying to call a postgres function in go, heres what i have so far:\n\n \n\npsqlInfo\u00a0:=\u00a0fmt.Sprintf(\"host=%s\u00a0port=%d\u00a0user=%s\u00a0\"+  \n \"password=%s\u00a0dbname=%s\u00a0sslmode=disable\",  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host,\u00a0port,\u00a0user,\u00a0password,\u00a0dbname)  \n db,\u00a0err\u00a0:=\u00a0sql.Open(\"postgres\",\u00a0psqlInfo)  \n if\u00a0err\u00a0!=\u00a0nil\u00a0{  \n panic(err)  \n\u00a0\u00a0\u00a0\u00a0}  \n tx,\u00a0err\u00a0:=\u00a0db.Begin()  \n\u00a0\u00a0\u00a0\u00a0tx.Query(\"CALL\u00a0data.create\\_table();\")  \n defer\u00a0db.Close()  \n err\u00a0=\u00a0db.Ping()  \n if\u00a0err\u00a0!=\u00a0nil\u00a0{  \n panic(err)  \n\n\nif i call the function in postgres itself it works, go also doesnt return any errors or anything, but for some reason the function obviously doesnt run.\n\nwhat am i doing wrong?", "author_fullname": "t2_4m7bu93x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "how do i call a postgres function from go?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f08uql", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581101295.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;im trying to call a postgres function in go, heres what i have so far:&lt;/p&gt;\n\n&lt;p&gt;psqlInfo\u00a0:=\u00a0fmt.Sprintf(&amp;quot;host=%s\u00a0port=%d\u00a0user=%s\u00a0&amp;quot;+&lt;br/&gt;\n &amp;quot;password=%s\u00a0dbname=%s\u00a0sslmode=disable&amp;quot;,&lt;br/&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host,\u00a0port,\u00a0user,\u00a0password,\u00a0dbname)&lt;br/&gt;\n db,\u00a0err\u00a0:=\u00a0sql.Open(&amp;quot;postgres&amp;quot;,\u00a0psqlInfo)&lt;br/&gt;\n if\u00a0err\u00a0!=\u00a0nil\u00a0{&lt;br/&gt;\n panic(err)&lt;br/&gt;\n\u00a0\u00a0\u00a0\u00a0}&lt;br/&gt;\n tx,\u00a0err\u00a0:=\u00a0db.Begin()&lt;br/&gt;\n\u00a0\u00a0\u00a0\u00a0tx.Query(&amp;quot;CALL\u00a0data.create_table();&amp;quot;)&lt;br/&gt;\n defer\u00a0db.Close()&lt;br/&gt;\n err\u00a0=\u00a0db.Ping()&lt;br/&gt;\n if\u00a0err\u00a0!=\u00a0nil\u00a0{&lt;br/&gt;\n panic(err)  &lt;/p&gt;\n\n&lt;p&gt;if i call the function in postgres itself it works, go also doesnt return any errors or anything, but for some reason the function obviously doesnt run.&lt;/p&gt;\n\n&lt;p&gt;what am i doing wrong?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f08uql", "is_robot_indexable": true, "report_reasons": null, "author": "max1899_", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f08uql/how_do_i_call_a_postgres_function_from_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/f08uql/how_do_i_call_a_postgres_function_from_go/", "subreddit_subscribers": 101986, "created_utc": 1581072495.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_4tg5xgup", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rose \u2013 A Website Compiler Allowing the Use of Go Alongside HTML", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ezvwdv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 40, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 40, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1581039903.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "gitlab.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ezvwdv", "is_robot_indexable": true, "report_reasons": null, "author": "Weekly_Garlic", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ezvwdv/rose_a_website_compiler_allowing_the_use_of_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://gitlab.com/DevelopmentDuck/rose", "subreddit_subscribers": 101986, "created_utc": 1581011103.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "What can you write in 7 days? A gin-like web framework? A distributed cache like groupcache? Or a simple Python interpreter? Hope this repo can give you the answer.\n\n[https://github.com/geektutu/7days-golang](https://github.com/geektutu/7days-golang)\n\n## Web Framework - Gee\n\n[Gee](https://geektutu.com/post/gee.html) is a [gin](https://github.com/gin-gonic/gin)\\-like framework\n\n* Day 1 - http.Handler Interface Basic [Code](https://github.com/geektutu/7days-golang/blob/master/gee-web/day1-http-base)\n* Day 2 - Design a Flexiable Context [Code](https://github.com/geektutu/7days-golang/blob/master/gee-web/day2-context)\n* Day 3 - Router with Tire-Tree Algorithm [Code](https://github.com/geektutu/7days-golang/blob/master/gee-web/day3-router)\n* Day 4 - Group Control [Code](https://github.com/geektutu/7days-golang/blob/master/gee-web/day4-group)\n* Day 5 - Middleware Mechanism [Code](https://github.com/geektutu/7days-golang/blob/master/gee-web/day5-middleware)\n* Day 6 - Embeded Template Support [Code](https://github.com/geektutu/7days-golang/blob/master/gee-web/day6-template)\n* Day 7 - Panic Recover &amp; Make it Robust [Code](https://github.com/geektutu/7days-golang/blob/master/gee-web/day7-panic-recover)\n\n## Distributed Cache - Geecache\n\nGeecache is a [groupcache](https://github.com/golang/groupcache)\\-like distributed cache\n\n* Day 1 - LRU (Least Recently Used) Caching Strategy [Code](https://github.com/geektutu/7days-golang/blob/master/gee-cache/day1-lru)\n* Day 2 - Single Machine Concurrent Cache [Code](https://github.com/geektutu/7days-golang/blob/master/gee-cache/day2-single-node)\n* Day 3 - Launch a HTTP Server [Code](https://github.com/geektutu/7days-golang/blob/master/gee-cache/day3-http-server)\n* Day 4 - Consistent Hash Algorithm [Code](https://github.com/geektutu/7days-golang/blob/master/gee-cache/day4-consistent-hash)\n* Day 5 - Communication between Distributed Nodes [Code](https://github.com/geektutu/7days-golang/blob/master/gee-cache/day5-multi-nodes)\n* Day 6 - Cache Breakdown &amp; Single Flight | [Code](https://github.com/geektutu/7days-golang/blob/master/gee-cache/day6-single-flight)\n* Day 7 - Use Protobuf as RPC Data Exchange Type | [Code](https://github.com/geektutu/7days-golang/blob/master/gee-cache/day7-proto-buf)", "author_fullname": "t2_7mwv1kg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Github - 7days-golang - Let's finish a web framework or a distributed cache within a week", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_f04sky", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581076291.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What can you write in 7 days? A gin-like web framework? A distributed cache like groupcache? Or a simple Python interpreter? Hope this repo can give you the answer.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/geektutu/7days-golang\"&gt;https://github.com/geektutu/7days-golang&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Web Framework - Gee&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=\"https://geektutu.com/post/gee.html\"&gt;Gee&lt;/a&gt; is a &lt;a href=\"https://github.com/gin-gonic/gin\"&gt;gin&lt;/a&gt;-like framework&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Day 1 - http.Handler Interface Basic &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-web/day1-http-base\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 2 - Design a Flexiable Context &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-web/day2-context\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 3 - Router with Tire-Tree Algorithm &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-web/day3-router\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 4 - Group Control &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-web/day4-group\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 5 - Middleware Mechanism &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-web/day5-middleware\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 6 - Embeded Template Support &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-web/day6-template\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 7 - Panic Recover &amp;amp; Make it Robust &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-web/day7-panic-recover\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Distributed Cache - Geecache&lt;/h2&gt;\n\n&lt;p&gt;Geecache is a &lt;a href=\"https://github.com/golang/groupcache\"&gt;groupcache&lt;/a&gt;-like distributed cache&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Day 1 - LRU (Least Recently Used) Caching Strategy &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-cache/day1-lru\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 2 - Single Machine Concurrent Cache &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-cache/day2-single-node\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 3 - Launch a HTTP Server &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-cache/day3-http-server\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 4 - Consistent Hash Algorithm &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-cache/day4-consistent-hash\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 5 - Communication between Distributed Nodes &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-cache/day5-multi-nodes\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 6 - Cache Breakdown &amp;amp; Single Flight | &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-cache/day6-single-flight\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Day 7 - Use Protobuf as RPC Data Exchange Type | &lt;a href=\"https://github.com/geektutu/7days-golang/blob/master/gee-cache/day7-proto-buf\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f04sky", "is_robot_indexable": true, "report_reasons": null, "author": "geektutu", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/f04sky/github_7daysgolang_lets_finish_a_web_framework_or/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/f04sky/github_7daysgolang_lets_finish_a_web_framework_or/", "subreddit_subscribers": 101986, "created_utc": 1581047491.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_f04sky", "before": null}}