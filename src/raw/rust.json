{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nAlso check out [last week's thread](https://reddit.com/r/rust/comments/g4nu6/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (18/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g9a5sn", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588052626.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/g4nu6/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last week&amp;#39;s thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9a5sn", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/g9a5sn/hey_rustaceans_got_an_easy_question_ask_here/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/g9a5sn/hey_rustaceans_got_an_easy_question_ask_here/", "subreddit_subscribers": 97837, "created_utc": 1588023826.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "New week, new Rust! What are you folks up to? Answer here or over at [rust-users](https://users.rust-lang.org/t/whats-everyone-working-on-this-week-18-2020/41671?u=llogiq)!", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What\u2019s everyone working on this week (18/2020)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g9a7d1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588052768.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New week, new Rust! What are you folks up to? Answer here or over at &lt;a href=\"https://users.rust-lang.org/t/whats-everyone-working-on-this-week-18-2020/41671?u=llogiq\"&gt;rust-users&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9a7d1", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/g9a7d1/whats_everyone_working_on_this_week_182020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/g9a7d1/whats_everyone_working_on_this_week_182020/", "subreddit_subscribers": 97837, "created_utc": 1588023968.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_90l7z", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "List of Rust streamers", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g9ibs9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 121, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": "4c3a495a-89df-11e3-a482-12313d27e9a3", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 121, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588085775.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "juniper-from-schema \u00b7 juniper-eager-loading", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9ibs9", "is_robot_indexable": true, "report_reasons": null, "author": "davidpdrsn", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/g9ibs9/list_of_rust_streamers/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/jamesmunns/awesome-rust-streaming", "subreddit_subscribers": 97837, "created_utc": 1588056975.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_5pq43yms", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rust 1.0 T-Shirt", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g9lnlj", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 54, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 54, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588102791.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9lnlj", "is_robot_indexable": true, "report_reasons": null, "author": "AcademicFrame7", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/g9lnlj/rust_10_tshirt/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/u078didrpjv41.png", "subreddit_subscribers": 97837, "created_utc": 1588073991.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "`env RUSTFLAGS=\"-Funsafe-code --cap-lints=warn\" cargo check -vv --message-format=json-diagnostic-rendered-ansi 2&gt;/dev/null | grep '^\\{' | jq -r 'select(.message?.code?.code? == \"unsafe_code\").message?.rendered?'`\n\nYou may also want to use a temporary `CARGO_TARGET_DIR` that you remove afterwards, to both prevent Cargo from having to rebuild all your deps when using normal `cargo check`, and to re-print all the warnings every time you run the command.\n\nAnd/or wrap this in something caching the results (presumably some of the Cargo messages tell you which crates are not getting rebuilt because they haven't changed).\n\nA Rust program like `cargo-geiger` could use this method with very little effort, as well, while still retaining the ability to collect various kinds of statistics.\n\nWhile I have no use for this (at least at the moment, I do however use `#![forbid(unsafe_code)]` everywhere I can in my own projects), I suspect there are other people who do.\n\nPlease stay safe ^(and avoid ad-hoc analyses of source code)\n\n(PS: you can use this technique with arbitrary lints, including clippy ones! so the easiest way to have a custom analysis is to add it to clippy as an off-by-default lint then run a command like this)", "author_fullname": "t2_5dxuu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "One-liner to (correctly) list all uses of`unsafe` in the entire crate graph", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g9mw57", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1588080339.0, "author_flair_css_class": "super", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588108185.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;env RUSTFLAGS=&amp;quot;-Funsafe-code --cap-lints=warn&amp;quot; cargo check -vv --message-format=json-diagnostic-rendered-ansi 2&amp;gt;/dev/null | grep &amp;#39;^\\{&amp;#39; | jq -r &amp;#39;select(.message?.code?.code? == &amp;quot;unsafe_code&amp;quot;).message?.rendered?&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;You may also want to use a temporary &lt;code&gt;CARGO_TARGET_DIR&lt;/code&gt; that you remove afterwards, to both prevent Cargo from having to rebuild all your deps when using normal &lt;code&gt;cargo check&lt;/code&gt;, and to re-print all the warnings every time you run the command.&lt;/p&gt;\n\n&lt;p&gt;And/or wrap this in something caching the results (presumably some of the Cargo messages tell you which crates are not getting rebuilt because they haven&amp;#39;t changed).&lt;/p&gt;\n\n&lt;p&gt;A Rust program like &lt;code&gt;cargo-geiger&lt;/code&gt; could use this method with very little effort, as well, while still retaining the ability to collect various kinds of statistics.&lt;/p&gt;\n\n&lt;p&gt;While I have no use for this (at least at the moment, I do however use &lt;code&gt;#![forbid(unsafe_code)]&lt;/code&gt; everywhere I can in my own projects), I suspect there are other people who do.&lt;/p&gt;\n\n&lt;p&gt;Please stay safe &lt;sup&gt;and avoid ad-hoc analyses of source code&lt;/sup&gt;&lt;/p&gt;\n\n&lt;p&gt;(PS: you can use this technique with arbitrary lints, including clippy ones! so the easiest way to have a custom analysis is to add it to clippy as an off-by-default lint then run a command like this)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9mw57", "is_robot_indexable": true, "report_reasons": null, "author": "eddyb", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/", "subreddit_subscribers": 97837, "created_utc": 1588079385.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_f5d2i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "First official release of rust-analyzer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g8zzdy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 793, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 793, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_3": 1}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588020191.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rust-analyzer.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 31, "coin_price": 1800, "id": "gid_3", "penny_donate": null, "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/platinum_512.png", "days_of_premium": 31, "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/platinum_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/platinum_128.png", "width": 128, "height": 128}], "icon_width": 512, "start_date": null, "is_enabled": true, "description": "Gives the author a month of Reddit Premium, which includes %{coin_symbol}700 Coins for that month, and shows a Platinum Award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "name": "Platinum", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "rust-analyzer", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g8zzdy", "is_robot_indexable": true, "report_reasons": null, "author": "matklad", "discussion_type": null, "num_comments": 75, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/g8zzdy/first_official_release_of_rustanalyzer/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rust-analyzer.github.io/blog/2020/04/20/first-release.html", "subreddit_subscribers": 97837, "created_utc": 1587991391.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Anyone have comments on the following problem I have outlined in a stackoverflow post?\n\nhttps://stackoverflow.com/questions/61471978/is-there-a-way-of-making-filter-map-quicker-then-filter-then-map-currentl", "author_fullname": "t2_jvdkr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "filter_map() slower then filter() then map()", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g9lug6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588103711.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Anyone have comments on the following problem I have outlined in a stackoverflow post?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/61471978/is-there-a-way-of-making-filter-map-quicker-then-filter-then-map-currentl\"&gt;https://stackoverflow.com/questions/61471978/is-there-a-way-of-making-filter-map-quicker-then-filter-then-map-currentl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9lug6", "is_robot_indexable": true, "report_reasons": null, "author": "wcTGgeek", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/g9lug6/filter_map_slower_then_filter_then_map/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/g9lug6/filter_map_slower_then_filter_then_map/", "subreddit_subscribers": 97837, "created_utc": 1588074911.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_wd6os", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "smol (@stjepang) - A small and fast async runtime for Rust", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g917ad", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 261, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 261, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588024818.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g917ad", "is_robot_indexable": true, "report_reasons": null, "author": "C5H5N5O", "discussion_type": null, "num_comments": 118, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/g917ad/smol_stjepang_a_small_and_fast_async_runtime_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/stjepang/smol", "subreddit_subscribers": 97837, "created_utc": 1587996018.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Hello!\n\nI've been working on this for some time now and I think it's time to spread the word and get some feedback.\n\n&amp;#x200B;\n\nRanges' most important component is the generic alternative to core/std ranges, aptly named GenericRange. It works mostly the same as the ranges you're used to, but has two requirements to make the generic part work: The start is always less or equal to the end and the type being stored implements the Domain trait, which requires Ord. I think these requirements are reasonable, and the goal is to implement Domain for as many core/std types as possible anyway, so for most use cases it can be used directly without any additional code. By the way, \"generic\" is a bit of a wordplay. It is of course generic like the already existing ranges are, but it is also \"range-generic\" and can store all range variants existing in core and even the unimplemented ones like open ranges.\n\nUsing the aforementioned GenericRange, Ranges (as in RangeSet) is a vector-backed interval/range set which stores inserted ranges in the most space efficient way possible by unionizing inserted with existing ones. The plan is to also build multi-dimensional versions of this so it works, for example, in 3D space and above.\n\n&amp;#x200B;\n\nThere's also 3 feature gates so far:\n\narbitrary - allowing fuzzers and alike to create random ranges and rangesets which still uphold the main guarantees\n\nnoisy\\_float - adds implementations of Domain for all 4 noisy\\_float variants so now you can have float ranges!\n\nnum-bigint - adds implementations of Domain for arbitrary large integers. These showcase truly unbound domains.\n\n&amp;#x200B;\n\nGenerally, I plan to make this crate as compatible as possible with core/std to integrate it seamlessly. Maybe even cause some discussion about replacing the existing implementations with it or something close. Additionally I want to support as many custom types as possible (like I already do with noisy-float and bigint).\n\n&amp;#x200B;\n\nApart from that, please have fun taking the documentation and underlying code to bits - I hope to improve it even more with the feedback I'll get here. Also, this is my first ever release and accompanied post on reddit, so if there's anything I can change to make this even more interesting for potential users, please don't hesitate to tell me :)\n\n&amp;#x200B;\n\n[https://docs.rs/ranges](https://docs.rs/ranges)\n\n[https://lib.rs/crates/ranges](https://lib.rs/crates/ranges)\n\n[https://crates.io/crates/ranges](https://crates.io/crates/ranges)", "author_fullname": "t2_khdrj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ranges: a generic addition to or replacement of core ranges", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g9mjx5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588106882.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been working on this for some time now and I think it&amp;#39;s time to spread the word and get some feedback.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Ranges&amp;#39; most important component is the generic alternative to core/std ranges, aptly named GenericRange. It works mostly the same as the ranges you&amp;#39;re used to, but has two requirements to make the generic part work: The start is always less or equal to the end and the type being stored implements the Domain trait, which requires Ord. I think these requirements are reasonable, and the goal is to implement Domain for as many core/std types as possible anyway, so for most use cases it can be used directly without any additional code. By the way, &amp;quot;generic&amp;quot; is a bit of a wordplay. It is of course generic like the already existing ranges are, but it is also &amp;quot;range-generic&amp;quot; and can store all range variants existing in core and even the unimplemented ones like open ranges.&lt;/p&gt;\n\n&lt;p&gt;Using the aforementioned GenericRange, Ranges (as in RangeSet) is a vector-backed interval/range set which stores inserted ranges in the most space efficient way possible by unionizing inserted with existing ones. The plan is to also build multi-dimensional versions of this so it works, for example, in 3D space and above.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s also 3 feature gates so far:&lt;/p&gt;\n\n&lt;p&gt;arbitrary - allowing fuzzers and alike to create random ranges and rangesets which still uphold the main guarantees&lt;/p&gt;\n\n&lt;p&gt;noisy_float - adds implementations of Domain for all 4 noisy_float variants so now you can have float ranges!&lt;/p&gt;\n\n&lt;p&gt;num-bigint - adds implementations of Domain for arbitrary large integers. These showcase truly unbound domains.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Generally, I plan to make this crate as compatible as possible with core/std to integrate it seamlessly. Maybe even cause some discussion about replacing the existing implementations with it or something close. Additionally I want to support as many custom types as possible (like I already do with noisy-float and bigint).&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Apart from that, please have fun taking the documentation and underlying code to bits - I hope to improve it even more with the feedback I&amp;#39;ll get here. Also, this is my first ever release and accompanied post on reddit, so if there&amp;#39;s anything I can change to make this even more interesting for potential users, please don&amp;#39;t hesitate to tell me :)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://docs.rs/ranges\"&gt;https://docs.rs/ranges&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://lib.rs/crates/ranges\"&gt;https://lib.rs/crates/ranges&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://crates.io/crates/ranges\"&gt;https://crates.io/crates/ranges&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9mjx5", "is_robot_indexable": true, "report_reasons": null, "author": "Byter09", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/g9mjx5/ranges_a_generic_addition_to_or_replacement_of/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/g9mjx5/ranges_a_generic_addition_to_or_replacement_of/", "subreddit_subscribers": 97837, "created_utc": 1588078082.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_vh33a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A lightweight implementation of 2048, leveraging the expectimax algorithm", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g9mjf1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588106825.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9mjf1", "is_robot_indexable": true, "report_reasons": null, "author": "adrienball", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/g9mjf1/a_lightweight_implementation_of_2048_leveraging/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/adrienball/2048-rs", "subreddit_subscribers": 97837, "created_utc": 1588078025.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_mrmq059", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "rust-analyzer Changelog #22", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g94g76", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 107, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 107, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588035099.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rust-analyzer.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g94g76", "is_robot_indexable": true, "report_reasons": null, "author": "NilsIRL", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/g94g76/rustanalyzer_changelog_22/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rust-analyzer.github.io/thisweek/2020/04/27/changelog-22.html", "subreddit_subscribers": 97837, "created_utc": 1588006299.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "# A parser for the [FlatZinc](https://www.minizinc.org/doc-2.4.1/en/fzn-spec.html#specification-of-flatzinc) modelling language\n\n[https://github.com/sthiele/flatzinc-parser](https://github.com/sthiele/flatzinc-parser)\n\nI made this parser for one of my projects and maybe it can be useful for others. Also thanks to everybody working on nom.", "author_fullname": "t2_oyibk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "flatzinc parser 0.1", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g9n4du", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588109086.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;A parser for the &lt;a href=\"https://www.minizinc.org/doc-2.4.1/en/fzn-spec.html#specification-of-flatzinc\"&gt;FlatZinc&lt;/a&gt; modelling language&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sthiele/flatzinc-parser\"&gt;https://github.com/sthiele/flatzinc-parser&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I made this parser for one of my projects and maybe it can be useful for others. Also thanks to everybody working on nom.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9n4du", "is_robot_indexable": true, "report_reasons": null, "author": "robauke", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/g9n4du/flatzinc_parser_01/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/g9n4du/flatzinc_parser_01/", "subreddit_subscribers": 97837, "created_utc": 1588080286.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_g9n4du", "before": null}}