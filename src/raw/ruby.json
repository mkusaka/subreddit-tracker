{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_9p47di", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Comparison of approaches to implementing multitenancy in Rails apps", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 68, "hide_score": false, "name": "t3_gsqfux", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/h_fdnmyKTkSSOl8w64C31i-NhFxPLVsflVfKxnmvktk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1590776926.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.arkency.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/OPpv_HLyVVdb6OPp8ARaFAQ5QewjQ799u-KAEbBIzNk.jpg?auto=webp&amp;s=0b6637b0bf3afad6d364931ec70bbf075c3a2839", "width": 640, "height": 315}, "resolutions": [{"url": "https://external-preview.redd.it/OPpv_HLyVVdb6OPp8ARaFAQ5QewjQ799u-KAEbBIzNk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c5daf39b7bf3deea9f162d16b260d8630d5f9272", "width": 108, "height": 53}, {"url": "https://external-preview.redd.it/OPpv_HLyVVdb6OPp8ARaFAQ5QewjQ799u-KAEbBIzNk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0dfe5999a0be4db761e50883de9b01172726132b", "width": 216, "height": 106}, {"url": "https://external-preview.redd.it/OPpv_HLyVVdb6OPp8ARaFAQ5QewjQ799u-KAEbBIzNk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e19b23b08b8895033d7e5ee264117fc2c1726edf", "width": 320, "height": 157}, {"url": "https://external-preview.redd.it/OPpv_HLyVVdb6OPp8ARaFAQ5QewjQ799u-KAEbBIzNk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f57737567981532a867d1a50cdd9fbee40819b9a", "width": 640, "height": 315}], "variants": {}, "id": "2mpYmPNJMTCkJeTmb9_wBI7eFhpiyIL2N5t8qlrIiGI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gsqfux", "is_robot_indexable": true, "report_reasons": null, "author": "tomdzordzo", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gsqfux/comparison_of_approaches_to_implementing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.arkency.com/comparison-of-approaches-to-multitenancy-in-rails-apps/", "subreddit_subscribers": 65457, "created_utc": 1590748126.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_70r90p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Take the 2020 Ruby on Rails Survey", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_gscsd8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/sTbBFj1H1SJnu6R4KgdBkoHt9KkcBYvAwVfU7yJzRgw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1590722486.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rails-hosting.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/dxH9kkvkz3Oi30ybwP7A3UYydt2tNd4lBP5NjZmHYSQ.jpg?auto=webp&amp;s=b65e1b428de0897760821862c57ec581fa837fe9", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/dxH9kkvkz3Oi30ybwP7A3UYydt2tNd4lBP5NjZmHYSQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1e90ca5522d0a6747b75a4e1abfa725fc06f6189", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/dxH9kkvkz3Oi30ybwP7A3UYydt2tNd4lBP5NjZmHYSQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=137beb9a456b9f5c38ac124e3893cba84d724540", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/dxH9kkvkz3Oi30ybwP7A3UYydt2tNd4lBP5NjZmHYSQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=dc9abd69e9ea849c25236ad0acf97e9cc236b3d0", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/dxH9kkvkz3Oi30ybwP7A3UYydt2tNd4lBP5NjZmHYSQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=28dd97568b971f4c63e6a0fe45584a6b9e8e1dc6", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/dxH9kkvkz3Oi30ybwP7A3UYydt2tNd4lBP5NjZmHYSQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a7a179b21542b48440fe2dc1db3c8c1f0fab0cd5", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/dxH9kkvkz3Oi30ybwP7A3UYydt2tNd4lBP5NjZmHYSQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d60d44aefd95e04cace1386c88c4c4fd14967f89", "width": 1080, "height": 567}], "variants": {}, "id": "ci_z3KuT_HeyTXaaOHneV8u14Ocnqfef1ITORkyIfd4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gscsd8", "is_robot_indexable": true, "report_reasons": null, "author": "etafavoti", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gscsd8/take_the_2020_ruby_on_rails_survey/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rails-hosting.com/", "subreddit_subscribers": 65457, "created_utc": 1590693686.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "[This is not strictly Ruby-related, but y'all are my people so I thought you might appreciate this.]\n\nI just threw some notes together about how I'm thinking about my personal site in the JAM stack era. A lot of people seem to be trying out Gatsby or Next.js on their personal blogs, so I thought it would be fun to use techniques from Rails land to improve the performance of my \"boring\" Jekyll blog so that it feels like a single-page app with minimal JavaScript. Spoiler alert: I'm using Turbolinks.\n\n[https://www.joshuawood.net/this-blog-is-a-web-page](https://www.joshuawood.net/this-blog-is-a-web-page)\n\nNext up I'm planning to add purgecss. I'm also looking for a way to bundle a subset of Font Awesome icons via CSS (maybe with an SVG sprite, I guess).\n\nI'm still exploring new optimizations and progressive enhancement techniques--what do you think of this approach?", "author_fullname": "t2_4u9tb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "This blog is a web page (using Jekyll in 2020)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gsfa66", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.77, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590730236.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;[This is not strictly Ruby-related, but y&amp;#39;all are my people so I thought you might appreciate this.]&lt;/p&gt;\n\n&lt;p&gt;I just threw some notes together about how I&amp;#39;m thinking about my personal site in the JAM stack era. A lot of people seem to be trying out Gatsby or Next.js on their personal blogs, so I thought it would be fun to use techniques from Rails land to improve the performance of my &amp;quot;boring&amp;quot; Jekyll blog so that it feels like a single-page app with minimal JavaScript. Spoiler alert: I&amp;#39;m using Turbolinks.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.joshuawood.net/this-blog-is-a-web-page\"&gt;https://www.joshuawood.net/this-blog-is-a-web-page&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Next up I&amp;#39;m planning to add purgecss. I&amp;#39;m also looking for a way to bundle a subset of Font Awesome icons via CSS (maybe with an SVG sprite, I guess).&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m still exploring new optimizations and progressive enhancement techniques--what do you think of this approach?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/5gtZrx7P8A1tIFtavTBr21OVan1uWbFVYb5ovb9ApUU.jpg?auto=webp&amp;s=0e1081c38cd150dc4c0b89173098ca57335ecd2c", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/5gtZrx7P8A1tIFtavTBr21OVan1uWbFVYb5ovb9ApUU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4c0aaa5ab9dcba4a54c166ce24319bc56ea909f5", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/5gtZrx7P8A1tIFtavTBr21OVan1uWbFVYb5ovb9ApUU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d6be5344fcd4c2c51ef6ac19076a7abe0c695278", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/5gtZrx7P8A1tIFtavTBr21OVan1uWbFVYb5ovb9ApUU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4515e7a4f1b02d8088f1e5f23f5fae5ca0fec5eb", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/5gtZrx7P8A1tIFtavTBr21OVan1uWbFVYb5ovb9ApUU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0480051a763896d64333bc55074419a328ed321f", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/5gtZrx7P8A1tIFtavTBr21OVan1uWbFVYb5ovb9ApUU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5c7aef6e445b7e7c4af2723ce797cf9536463d2e", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/5gtZrx7P8A1tIFtavTBr21OVan1uWbFVYb5ovb9ApUU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=56e37b39299b48956530d21fcaa505e5a0d3edeb", "width": 1080, "height": 567}], "variants": {}, "id": "Vdut4-hDsJ5NwnZXcV7qHV0SAFO-ZRE_Ae7w4-LymiE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gsfa66", "is_robot_indexable": true, "report_reasons": null, "author": "joshuap", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gsfa66/this_blog_is_a_web_page_using_jekyll_in_2020/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gsfa66/this_blog_is_a_web_page_using_jekyll_in_2020/", "subreddit_subscribers": 65457, "created_utc": 1590701436.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hey everyone! Sorry if this kind of post is unwelcome, but I would love your thoughts on the best way to learn and practice Ruby (on Rails) rapidly. I am starting an internship on Monday, and I need to get as good with Ruby as possible before then. I misread an email from my manager last month and I spent the past month learning Java, whereas I am actually going to be using Ruby.\n\nI am very familiar with programming concepts from a number of languages (C, Java, Python, some JavaScript), so I would like to avoid tutorials/documentation like Codecademy that start at the very basics. However, I don't have enough time to do a deep dive like I did with the Oracle Java documentation. Ideally, I can get a grip on the syntax and semantics, and also get some experience actually building in it.\n\nThank you in advance! I'm an idiot and would be very grateful of any suggestions lol", "author_fullname": "t2_bb5co", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Questions about resources for learning Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gsfsox", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590731907.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone! Sorry if this kind of post is unwelcome, but I would love your thoughts on the best way to learn and practice Ruby (on Rails) rapidly. I am starting an internship on Monday, and I need to get as good with Ruby as possible before then. I misread an email from my manager last month and I spent the past month learning Java, whereas I am actually going to be using Ruby.&lt;/p&gt;\n\n&lt;p&gt;I am very familiar with programming concepts from a number of languages (C, Java, Python, some JavaScript), so I would like to avoid tutorials/documentation like Codecademy that start at the very basics. However, I don&amp;#39;t have enough time to do a deep dive like I did with the Oracle Java documentation. Ideally, I can get a grip on the syntax and semantics, and also get some experience actually building in it.&lt;/p&gt;\n\n&lt;p&gt;Thank you in advance! I&amp;#39;m an idiot and would be very grateful of any suggestions lol&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gsfsox", "is_robot_indexable": true, "report_reasons": null, "author": "indyskatefilms", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gsfsox/questions_about_resources_for_learning_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gsfsox/questions_about_resources_for_learning_ruby/", "subreddit_subscribers": 65457, "created_utc": 1590703107.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_v4959hb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Stack Overflow Developer Survey 2020", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_gs2zjc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 40, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 40, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/MIMjDXtNmOZXKrTqHbU7vIHcaQzTFFj2nTia5KuyUBY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1590686634.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "insights.stackoverflow.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/vzV7G0ZhenTcU3PbxuVHh5gPLFEH5e6Ds1SpY7-lmK4.jpg?auto=webp&amp;s=9025ffefeeabbd4dcb2ac260aba7789ba792085b", "width": 2400, "height": 1260}, "resolutions": [{"url": "https://external-preview.redd.it/vzV7G0ZhenTcU3PbxuVHh5gPLFEH5e6Ds1SpY7-lmK4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=739d191583be6e14462ddc451641490eb241e3ec", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/vzV7G0ZhenTcU3PbxuVHh5gPLFEH5e6Ds1SpY7-lmK4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bfcd97605bf352c6c27716bb17ba9e075d96cceb", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/vzV7G0ZhenTcU3PbxuVHh5gPLFEH5e6Ds1SpY7-lmK4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=842ce1d84d474ce250f2a5e883e58a43fea2e0a8", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/vzV7G0ZhenTcU3PbxuVHh5gPLFEH5e6Ds1SpY7-lmK4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=21df8dcddbac1b127db8c12d63650bf8db57350b", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/vzV7G0ZhenTcU3PbxuVHh5gPLFEH5e6Ds1SpY7-lmK4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2af688640305f8a7749ddfc82935019d20362f5e", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/vzV7G0ZhenTcU3PbxuVHh5gPLFEH5e6Ds1SpY7-lmK4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d9ebce13d030549ee7b87c8eb3243999842ef91a", "width": 1080, "height": 567}], "variants": {}, "id": "Ti-2lgGQXwtPEswr5GmZabFyc5FS4n_0z2gEHtgUoIE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs2zjc", "is_robot_indexable": true, "report_reasons": null, "author": "zitrusgrape", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gs2zjc/stack_overflow_developer_survey_2020/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://insights.stackoverflow.com/survey/2020#technology-how-technologies-are-connected", "subreddit_subscribers": 65457, "created_utc": 1590657834.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "The default debug terminal in VSCode apparently doesn't let me read from STDIN and I have no idea how to solve this problem. Is there any way I can debug Ruby scripts with breakpoints and all the fancy stuff and be able to read console input?", "author_fullname": "t2_5qwx0haw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How can I capture console input when debugging?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gsfd0w", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590730486.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The default debug terminal in VSCode apparently doesn&amp;#39;t let me read from STDIN and I have no idea how to solve this problem. Is there any way I can debug Ruby scripts with breakpoints and all the fancy stuff and be able to read console input?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gsfd0w", "is_robot_indexable": true, "report_reasons": null, "author": "ExtraTemp", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gsfd0w/how_can_i_capture_console_input_when_debugging/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gsfd0w/how_can_i_capture_console_input_when_debugging/", "subreddit_subscribers": 65457, "created_utc": 1590701686.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_2wqagm4q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Ruby Blend Episode 14: StimulusReflex, BridgetownRB, RailsBytes, AppLocale.dev, and more!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_gs65w5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Podcast", "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/rG24bJMzvSkCVgk3-fGbaImLnqvJQPUyNw55IsHeav0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1590700877.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "fireside.fm", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?auto=webp&amp;s=b1d150c0c68e430c03c8722a5e61d9621a009fa6", "width": 1400, "height": 1400}, "resolutions": [{"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=50f5a61511e6805f9339940e0904753732654e4d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=dbe316ee5b608e17c1a1d12113a71cb3107a7028", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2c49a7c576b83d84988fa01074a0a700c9d489e6", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=54b0bf044120b01b7af031d8e8411a5e38c4a274", "width": 640, "height": 640}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3607ddc0d69a9e0873dbd33dcb1634598a4dd96f", "width": 960, "height": 960}, {"url": "https://external-preview.redd.it/zeDOx6WDQFAAdqDIAvZliJ7NH1hq7uGAP3v4rXHtKRM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=985cb34791843f2144d31ad59363e54beb5ddbaa", "width": 1080, "height": 1080}], "variants": {}, "id": "8A6wH5yJIbUbNPdNcyvYYij2lHgPaCbc7QnX5cXjjKU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "91df2474-873d-11e9-a45d-0e56054fcf08", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs65w5", "is_robot_indexable": true, "report_reasons": null, "author": "andrewmc0des", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gs65w5/the_ruby_blend_episode_14_stimulusreflex/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://fireside.fm/s/ouBAUjGy+7QL69WzH", "subreddit_subscribers": 65457, "created_utc": 1590672077.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I tried running svn2git and I keep getting this after I enter my password. Does anyone know how to solve this? Ruby seems to be the problem here.\n\n\"#&lt;Thread:0x00007fc6ed8171b0@/Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:431 run&gt; terminated with exception (report\\_on\\_exception is true):\n\n**Traceback** (most recent call last):\n\n2: from /Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:432:in \\`block (2 levels) in run\\_command'\n\n1: from /Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:432:in \\`loop'\n\n/Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:438:in \\`block (3 levels) in run\\_command': **undefined local variable or method \\`stdin' for #&lt;Svn2Git::Migration:0x00007fc6ed0dc788&gt; (NameError)**\n\n**Did you mean?** **String\"**\n\n&amp;#x200B;\n\nThank you in advance!", "author_fullname": "t2_1b33ye2t", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "SVN2GIT, which runs on Ruby, fails when trying to migrate a project. Please help", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gs8t1o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590710068.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I tried running svn2git and I keep getting this after I enter my password. Does anyone know how to solve this? Ruby seems to be the problem here.&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;#&amp;lt;Thread:0x00007fc6ed8171b0@/Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:431 run&amp;gt; terminated with exception (report_on_exception is true):&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Traceback&lt;/strong&gt; (most recent call last):&lt;/p&gt;\n\n&lt;p&gt;2: from /Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:432:in `block (2 levels) in run_command&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;1: from /Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:432:in `loop&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;/Library/Ruby/Gems/2.6.0/gems/svn2git-2.4.0/lib/svn2git/migration.rb:438:in `block (3 levels) in run_command&amp;#39;: &lt;strong&gt;undefined local variable or method `stdin&amp;#39; for #&amp;lt;Svn2Git::Migration:0x00007fc6ed0dc788&amp;gt; (NameError)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Did you mean?&lt;/strong&gt; &lt;strong&gt;String&amp;quot;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thank you in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs8t1o", "is_robot_indexable": true, "report_reasons": null, "author": "topNotchSpinach", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gs8t1o/svn2git_which_runs_on_ruby_fails_when_trying_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gs8t1o/svn2git_which_runs_on_ruby_fails_when_trying_to/", "subreddit_subscribers": 65457, "created_utc": 1590681268.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_4lutb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails 6.1 adds support for signed ids to Active Record", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_grmymc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 52, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 52, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/-G_1qNdJ5i0W94pl0dd6EkKlJAHIjvwvGYm9wPo1W0Y.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1590625839.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.saeloun.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?auto=webp&amp;s=76ff1c57159ecd0635bde7262995c5f75ea5b2bf", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba7dc7c390da46504d7dff83a3777aa34d06da09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7174576a8c7a36330f60dff22893de50e2a459da", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b1f1f8a636baeb85c444c850de8e7747c45470f", "width": 320, "height": 320}], "variants": {}, "id": "BN85dx9NXlDeVPyUnffc9FFfivOtdoHkGQhBm10KyEI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "grmymc", "is_robot_indexable": true, "report_reasons": null, "author": "jrochkind", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/grmymc/rails_61_adds_support_for_signed_ids_to_active/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.saeloun.com/2020/05/20/rails-6-1-adds-support-for-signed-ids-to-active-record.html", "subreddit_subscribers": 65457, "created_utc": 1590597039.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Greetings,\n\nI'm trying different scripting methods to automate this task and am failing. Can someone see what is wrong with this script and why it's not pulling in links? I'm attempting to scrape this website for all filenext.com links and generate a report.\n\n    require 'open-uri'\n    require 'base64'\n    require 'net/http'\n    require 'net/https'\n    require 'uri'\n    require 'pstore'\n    require 'nokogiri'\n    require 'terminal-table'\n    \n    ROOT_URI = \"https://www.gfxtra31.com/\"\n    \n    if !File.exist?(\"gfxtra31_progress.pstore\")\n      print(\"Looks like this is your first run. Writing file to track progress...\")\n      progress = PStore.new(\"gfxtra31_progress.pstore\")\n      progress.transaction do\n        progress[:categories] = [\n          {:complete =&gt; false, :name=&gt;\"3d-models-files-addons/\", :pagecount=&gt;588, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"adobe-after-effects/\", :pagecount=&gt;477, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"artimages/\", :pagecount=&gt;143, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"celebrities/\", :pagecount=&gt;17, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"ebooks/\", :pagecount=&gt;1448, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"fashion/\", :pagecount=&gt;38, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"fonts/\", :pagecount=&gt;343, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"footages/\", :pagecount=&gt;428, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"only-for-you/\", :pagecount=&gt;1242, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"adobe-indesign/\", :pagecount=&gt;251, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"inspirational/\", :pagecount=&gt;1, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"magazines/\", :pagecount=&gt;2271, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"adobe-photoshop/\", :pagecount=&gt;3963, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"plug-ins-add-ons/\", :pagecount=&gt;100, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"portfolios/\", :pagecount=&gt;38, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"presentation-templates/\", :pagecount=&gt;174, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"scraps/\", :pagecount=&gt;423, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"scripts/\", :pagecount=&gt;578, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"software/\", :pagecount=&gt;3496, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"sounds/\", :pagecount=&gt;450, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"stock-image-cd/\", :pagecount=&gt;2889, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"themes/\", :pagecount=&gt;1437, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"tutorials/\", :pagecount=&gt;1884, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"vectors/\", :pagecount=&gt;4384, :next_page=&gt;1},\n          {:complete =&gt; false, :name=&gt;\"wallpapers/\", :pagecount=&gt;330, :next_page=&gt;1}\n        ]\n        progress[:posts] = []\n        progress[:links] = []\n      end\n      print(\" OK!\\n\")\n    end\n    \n    PROGRESS = PStore.new(\"gfxtra31_progress.pstore\")\n    \n    def get_categories\n      categories = []\n      DATA.readlines.map(&amp;:chomp).each do |category|\n        page = Nokogiri::HTML(open(ROOT_URI + category).read)\n        page_links = page.css('.navigation a')\n        pagecount = page_links.length &gt; 1 ? page_links[-2].text.to_i : 1\n        categories &lt;&lt; { name: category, pagecount: pagecount, next_page: 1 }\n      end\n      categories\n    end\n    \n    def get_posts(page_url)\n      Nokogiri::HTML(open(page_url).read).css('.baslik a').map { |e| e['href'] }\n    end\n    \n    def get_url(post_url)\n      doc = Nokogiri::HTML(open(post_url).read)\n      obscured = doc.at('a[rel=\"nofollow\"]')['href'].rpartition('?url=')[-1]\n      return obscured if obscured.include?(\"/\")\n      decoded = Base64.decode64(obscured)\n      if decoded.include?(\"filenext\")\n        return decoded.rpartition('.html')[0..1].join('')\n      end\n      url = URI.parse(URI.escape(decoded))\n      res = Net::HTTP.start(url.host, url.port) { |http| http.get(url.request_uri) }\n      sleep(rand(3..15))\n      res['location']\n    end\n    \n    def report_progress\n      rows = []\n      PROGRESS.transaction(true) do\n        PROGRESS[:categories].each do |cat|\n          rows &lt;&lt; [ cat[:name].tr(\"-/\", \" \"), \"#{cat[:next_page] - 1} / #{cat[:pagecount]}\" ]\n        end\n      end\n      table = Terminal::Table.new headings: [\"Category\", \"Pages Crawled\"], rows: rows\n      puts table\n    end\n    \n    def fetch_next_post_set\n      PROGRESS.transaction do\n        cat = PROGRESS[:categories].find { |c| !c[:complete] }\n        return false if cat == nil\n        link = ROOT_URI + cat[:name] + \"page/\" + cat[:next_page].to_s + \"/\"\n        new_batch = get_posts(link)\n        PROGRESS[:posts].concat(new_batch)\n        cat[:next_page] = cat[:next_page] + 1\n        if cat[:next_page] &gt; cat[:pagecount]\n          cat[:complete] = true\n        end\n        puts(\"Fetched #{new_batch.length} posts from #{cat[:name]}.\")\n      end\n      true\n    end\n    \n    def translate_all_posts_to_links(output_file)\n      PROGRESS.transaction do\n        while PROGRESS[:posts].length &gt; 0\n          link = get_url(PROGRESS[:posts].pop)\n          PROGRESS[:links] &lt;&lt; link\n          puts(\"\\t#{link}\")\n          output_file.puts(link)\n          output_file.flush\n          exit if Object.const_defined?(:Ocra)\n          sleep(rand(3..15))\n        end\n      end\n    end\n    \n    report_progress\n    \n    ongoing = true\n    File.open(\"filenext_links.txt\", \"a\") do |f|\n      while ongoing\n        ongoing = fetch_next_post_set\n        sleep(rand(3..15))\n        translate_all_posts_to_links(f)\n      end\n    end", "author_fullname": "t2_5mndpsy2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Help] Trying to scrape website with Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gs6iav", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590702186.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Greetings,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying different scripting methods to automate this task and am failing. Can someone see what is wrong with this script and why it&amp;#39;s not pulling in links? I&amp;#39;m attempting to scrape this website for all filenext.com links and generate a report.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require &amp;#39;open-uri&amp;#39;\nrequire &amp;#39;base64&amp;#39;\nrequire &amp;#39;net/http&amp;#39;\nrequire &amp;#39;net/https&amp;#39;\nrequire &amp;#39;uri&amp;#39;\nrequire &amp;#39;pstore&amp;#39;\nrequire &amp;#39;nokogiri&amp;#39;\nrequire &amp;#39;terminal-table&amp;#39;\n\nROOT_URI = &amp;quot;https://www.gfxtra31.com/&amp;quot;\n\nif !File.exist?(&amp;quot;gfxtra31_progress.pstore&amp;quot;)\n  print(&amp;quot;Looks like this is your first run. Writing file to track progress...&amp;quot;)\n  progress = PStore.new(&amp;quot;gfxtra31_progress.pstore&amp;quot;)\n  progress.transaction do\n    progress[:categories] = [\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;3d-models-files-addons/&amp;quot;, :pagecount=&amp;gt;588, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;adobe-after-effects/&amp;quot;, :pagecount=&amp;gt;477, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;artimages/&amp;quot;, :pagecount=&amp;gt;143, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;celebrities/&amp;quot;, :pagecount=&amp;gt;17, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;ebooks/&amp;quot;, :pagecount=&amp;gt;1448, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;fashion/&amp;quot;, :pagecount=&amp;gt;38, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;fonts/&amp;quot;, :pagecount=&amp;gt;343, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;footages/&amp;quot;, :pagecount=&amp;gt;428, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;only-for-you/&amp;quot;, :pagecount=&amp;gt;1242, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;adobe-indesign/&amp;quot;, :pagecount=&amp;gt;251, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;inspirational/&amp;quot;, :pagecount=&amp;gt;1, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;magazines/&amp;quot;, :pagecount=&amp;gt;2271, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;adobe-photoshop/&amp;quot;, :pagecount=&amp;gt;3963, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;plug-ins-add-ons/&amp;quot;, :pagecount=&amp;gt;100, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;portfolios/&amp;quot;, :pagecount=&amp;gt;38, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;presentation-templates/&amp;quot;, :pagecount=&amp;gt;174, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;scraps/&amp;quot;, :pagecount=&amp;gt;423, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;scripts/&amp;quot;, :pagecount=&amp;gt;578, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;software/&amp;quot;, :pagecount=&amp;gt;3496, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;sounds/&amp;quot;, :pagecount=&amp;gt;450, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;stock-image-cd/&amp;quot;, :pagecount=&amp;gt;2889, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;themes/&amp;quot;, :pagecount=&amp;gt;1437, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;tutorials/&amp;quot;, :pagecount=&amp;gt;1884, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;vectors/&amp;quot;, :pagecount=&amp;gt;4384, :next_page=&amp;gt;1},\n      {:complete =&amp;gt; false, :name=&amp;gt;&amp;quot;wallpapers/&amp;quot;, :pagecount=&amp;gt;330, :next_page=&amp;gt;1}\n    ]\n    progress[:posts] = []\n    progress[:links] = []\n  end\n  print(&amp;quot; OK!\\n&amp;quot;)\nend\n\nPROGRESS = PStore.new(&amp;quot;gfxtra31_progress.pstore&amp;quot;)\n\ndef get_categories\n  categories = []\n  DATA.readlines.map(&amp;amp;:chomp).each do |category|\n    page = Nokogiri::HTML(open(ROOT_URI + category).read)\n    page_links = page.css(&amp;#39;.navigation a&amp;#39;)\n    pagecount = page_links.length &amp;gt; 1 ? page_links[-2].text.to_i : 1\n    categories &amp;lt;&amp;lt; { name: category, pagecount: pagecount, next_page: 1 }\n  end\n  categories\nend\n\ndef get_posts(page_url)\n  Nokogiri::HTML(open(page_url).read).css(&amp;#39;.baslik a&amp;#39;).map { |e| e[&amp;#39;href&amp;#39;] }\nend\n\ndef get_url(post_url)\n  doc = Nokogiri::HTML(open(post_url).read)\n  obscured = doc.at(&amp;#39;a[rel=&amp;quot;nofollow&amp;quot;]&amp;#39;)[&amp;#39;href&amp;#39;].rpartition(&amp;#39;?url=&amp;#39;)[-1]\n  return obscured if obscured.include?(&amp;quot;/&amp;quot;)\n  decoded = Base64.decode64(obscured)\n  if decoded.include?(&amp;quot;filenext&amp;quot;)\n    return decoded.rpartition(&amp;#39;.html&amp;#39;)[0..1].join(&amp;#39;&amp;#39;)\n  end\n  url = URI.parse(URI.escape(decoded))\n  res = Net::HTTP.start(url.host, url.port) { |http| http.get(url.request_uri) }\n  sleep(rand(3..15))\n  res[&amp;#39;location&amp;#39;]\nend\n\ndef report_progress\n  rows = []\n  PROGRESS.transaction(true) do\n    PROGRESS[:categories].each do |cat|\n      rows &amp;lt;&amp;lt; [ cat[:name].tr(&amp;quot;-/&amp;quot;, &amp;quot; &amp;quot;), &amp;quot;#{cat[:next_page] - 1} / #{cat[:pagecount]}&amp;quot; ]\n    end\n  end\n  table = Terminal::Table.new headings: [&amp;quot;Category&amp;quot;, &amp;quot;Pages Crawled&amp;quot;], rows: rows\n  puts table\nend\n\ndef fetch_next_post_set\n  PROGRESS.transaction do\n    cat = PROGRESS[:categories].find { |c| !c[:complete] }\n    return false if cat == nil\n    link = ROOT_URI + cat[:name] + &amp;quot;page/&amp;quot; + cat[:next_page].to_s + &amp;quot;/&amp;quot;\n    new_batch = get_posts(link)\n    PROGRESS[:posts].concat(new_batch)\n    cat[:next_page] = cat[:next_page] + 1\n    if cat[:next_page] &amp;gt; cat[:pagecount]\n      cat[:complete] = true\n    end\n    puts(&amp;quot;Fetched #{new_batch.length} posts from #{cat[:name]}.&amp;quot;)\n  end\n  true\nend\n\ndef translate_all_posts_to_links(output_file)\n  PROGRESS.transaction do\n    while PROGRESS[:posts].length &amp;gt; 0\n      link = get_url(PROGRESS[:posts].pop)\n      PROGRESS[:links] &amp;lt;&amp;lt; link\n      puts(&amp;quot;\\t#{link}&amp;quot;)\n      output_file.puts(link)\n      output_file.flush\n      exit if Object.const_defined?(:Ocra)\n      sleep(rand(3..15))\n    end\n  end\nend\n\nreport_progress\n\nongoing = true\nFile.open(&amp;quot;filenext_links.txt&amp;quot;, &amp;quot;a&amp;quot;) do |f|\n  while ongoing\n    ongoing = fetch_next_post_set\n    sleep(rand(3..15))\n    translate_all_posts_to_links(f)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs6iav", "is_robot_indexable": true, "report_reasons": null, "author": "SysAdminDoc", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/gs6iav/help_trying_to_scrape_website_with_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/gs6iav/help_trying_to_scrape_website_with_ruby/", "subreddit_subscribers": 65457, "created_utc": 1590673386.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gs6iav", "before": null}}