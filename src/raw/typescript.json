{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - July", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hizg5z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 39, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 39, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1593590733.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hizg5z", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 6, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "subreddit_subscribers": 44071, "created_utc": 1593561933.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Figured this out recently, when I had to transform large plain objects of different shapes, and replace some leaf value with a different one. `Replaced` type takes 4 generic arguments:\n\n* `T` the object to be transformed.\n* `TReplace` the type to be replaced with\n* `TWith` the type to use instead of `TReplace`\n* `TKeep` the type to not transform. Defaults to primitive values.  \n\n\nObviously to be used as the return type of some function that does the actual transformation.\n\n    type Primitive = string | number | bigint | boolean | null | undefined;\n    \n    type Replaced&lt;T, TReplace, TWith, TKeep = Primitive&gt; = T extends TReplace | TKeep\n        ? (T extends TReplace\n            ? TWith | Exclude&lt;T, TReplace&gt;\n            : T)\n        : {\n            [P in keyof T]: Replaced&lt;T[P], TReplace, TWith, TKeep&gt;\n        }\n    \n    type Foo = symbol;\n    type Bar = \"3\";\n    \n    type ToReplace = {\n        x?: {\n            y: Foo | number;\n            z: string;\n        }[]\n    } | undefined;\n    \n    type WasReplaced = Replaced&lt;ToReplace, Foo, Bar&gt;;\n    /* Output:\n    {\n        x?: {\n            y: number | \"3\";\n            z: string;\n        }[];\n    }\n    */", "author_fullname": "t2_rrjaf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Cool helper type that will allow you to recursively replace all types in an object with another type.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_hr19a2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594761156.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Figured this out recently, when I had to transform large plain objects of different shapes, and replace some leaf value with a different one. &lt;code&gt;Replaced&lt;/code&gt; type takes 4 generic arguments:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;T&lt;/code&gt; the object to be transformed.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;TReplace&lt;/code&gt; the type to be replaced with&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;TWith&lt;/code&gt; the type to use instead of &lt;code&gt;TReplace&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;TKeep&lt;/code&gt; the type to not transform. Defaults to primitive values.&lt;br/&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Obviously to be used as the return type of some function that does the actual transformation.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Primitive = string | number | bigint | boolean | null | undefined;\n\ntype Replaced&amp;lt;T, TReplace, TWith, TKeep = Primitive&amp;gt; = T extends TReplace | TKeep\n    ? (T extends TReplace\n        ? TWith | Exclude&amp;lt;T, TReplace&amp;gt;\n        : T)\n    : {\n        [P in keyof T]: Replaced&amp;lt;T[P], TReplace, TWith, TKeep&amp;gt;\n    }\n\ntype Foo = symbol;\ntype Bar = &amp;quot;3&amp;quot;;\n\ntype ToReplace = {\n    x?: {\n        y: Foo | number;\n        z: string;\n    }[]\n} | undefined;\n\ntype WasReplaced = Replaced&amp;lt;ToReplace, Foo, Bar&amp;gt;;\n/* Output:\n{\n    x?: {\n        y: number | &amp;quot;3&amp;quot;;\n        z: string;\n    }[];\n}\n*/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hr19a2", "is_robot_indexable": true, "report_reasons": null, "author": "EstamelTharchon", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hr19a2/cool_helper_type_that_will_allow_you_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hr19a2/cool_helper_type_that_will_allow_you_to/", "subreddit_subscribers": 44071, "created_utc": 1594732356.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_yydc8gj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a Snapchat clone in the browser!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_hqfzmn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 162, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"reddit_video": {"fallback_url": "https://v.redd.it/gnbkqf8duma51/DASH_1080?source=fallback", "height": 1080, "width": 500, "scrubber_media_url": "https://v.redd.it/gnbkqf8duma51/DASH_96", "dash_url": "https://v.redd.it/gnbkqf8duma51/DASHPlaylist.mpd?a=1597325640%2CNmQzMDQ3NzQzOWNkMTU4NDE2M2QzOTQ1ODYzODE2ZWFiMzA0YTNmZjYzNGNhYjM4ZjZhZDMyNmU2NWRhMGE0Ng%3D%3D&amp;v=1&amp;f=sd", "duration": 104, "hls_url": "https://v.redd.it/gnbkqf8duma51/HLSPlaylist.m3u8?a=1597325640%2CNTBiYzNjYjM1N2RkNDY5ZjY2Y2Y4ZDVlYTc5MTI1N2YzMTMyNTQ5NTY1ZTRmNTQ3ZjJlY2U0MzY1MzVlNWEyYg%3D%3D&amp;v=1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 162, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/1oNAevYTgnUDqv04aokHUypqqH_ZTjc0--_fPjNxoi4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "hosted:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1594678478.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "v.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://v.redd.it/gnbkqf8duma51", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/gkmoiies927nUAUsF3_QLjrqD3JAEasdNQALHzQZjUg.png?format=pjpg&amp;auto=webp&amp;s=5cbf677abd42e0708df649a8cf3798b91c7b6f0d", "width": 828, "height": 1792}, "resolutions": [{"url": "https://external-preview.redd.it/gkmoiies927nUAUsF3_QLjrqD3JAEasdNQALHzQZjUg.png?width=108&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=2cb74b91622c5e8d49b612081af1c23308c5bc77", "width": 108, "height": 216}, {"url": "https://external-preview.redd.it/gkmoiies927nUAUsF3_QLjrqD3JAEasdNQALHzQZjUg.png?width=216&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=b1ca78b7b7c41f8c09ae7261aa3144b0de1fd150", "width": 216, "height": 432}, {"url": "https://external-preview.redd.it/gkmoiies927nUAUsF3_QLjrqD3JAEasdNQALHzQZjUg.png?width=320&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=36e17ac76114a5a51e82384bb2766ef46d9ef28d", "width": 320, "height": 640}, {"url": "https://external-preview.redd.it/gkmoiies927nUAUsF3_QLjrqD3JAEasdNQALHzQZjUg.png?width=640&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=32cbdbadb5527f3e90036ebe25a4702b976f3eae", "width": 640, "height": 1280}], "variants": {}, "id": "R2x_T5mbfTXwr7lwEHSEbUBuJLB-AVtAV3SDEAsfCnE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqfzmn", "is_robot_indexable": true, "report_reasons": null, "author": "TowhidKashem", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqfzmn/i_made_a_snapchat_clone_in_the_browser/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://v.redd.it/gnbkqf8duma51", "subreddit_subscribers": 44071, "created_utc": 1594649678.0, "num_crossposts": 0, "media": {"reddit_video": {"fallback_url": "https://v.redd.it/gnbkqf8duma51/DASH_1080?source=fallback", "height": 1080, "width": 500, "scrubber_media_url": "https://v.redd.it/gnbkqf8duma51/DASH_96", "dash_url": "https://v.redd.it/gnbkqf8duma51/DASHPlaylist.mpd?a=1597325640%2CNmQzMDQ3NzQzOWNkMTU4NDE2M2QzOTQ1ODYzODE2ZWFiMzA0YTNmZjYzNGNhYjM4ZjZhZDMyNmU2NWRhMGE0Ng%3D%3D&amp;v=1&amp;f=sd", "duration": 104, "hls_url": "https://v.redd.it/gnbkqf8duma51/HLSPlaylist.m3u8?a=1597325640%2CNTBiYzNjYjM1N2RkNDY5ZjY2Y2Y4ZDVlYTc5MTI1N2YzMTMyNTQ5NTY1ZTRmNTQ3ZjJlY2U0MzY1MzVlNWEyYg%3D%3D&amp;v=1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_video": true}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": " A community of student and professional developers. Join us for free instruction, paired programming, code/project review, collaboration, and more. Looking for exposure to new concepts? Engage in peer review on your projects? Looking for help getting through your latest assignment or project? **Looking to spread the \"Good News\" and show the rest of us Typescript isn't just good for Angular?** If you can ask a good question you're like to find a good answer here!\n\nEngage in the Feinberg method of learning, where you reinforce what you do know and spot weaknesses in your own studies, by teaching a few code-along courses or just share your latest project.\n\n**In short:** We'd love to have you. Come on in!\n\n[https://discord.gg/5vphZ5s](https://discord.gg/5vphZ5s)", "author_fullname": "t2_66jyw2ra", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Discord Community: Code Review, Paired Programming, Collab, and Live Instruction for TS Devs!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hqw7ts", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1594735930.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;A community of student and professional developers. Join us for free instruction, paired programming, code/project review, collaboration, and more. Looking for exposure to new concepts? Engage in peer review on your projects? Looking for help getting through your latest assignment or project? &lt;strong&gt;Looking to spread the &amp;quot;Good News&amp;quot; and show the rest of us Typescript isn&amp;#39;t just good for Angular?&lt;/strong&gt; If you can ask a good question you&amp;#39;re like to find a good answer here!&lt;/p&gt;\n\n&lt;p&gt;Engage in the Feinberg method of learning, where you reinforce what you do know and spot weaknesses in your own studies, by teaching a few code-along courses or just share your latest project.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;In short:&lt;/strong&gt; We&amp;#39;d love to have you. Come on in!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://discord.gg/5vphZ5s\"&gt;https://discord.gg/5vphZ5s&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/cCccIDSm91NNve6vRmZHfIEAzQfy-s6yW95wGt9Ob5Q.jpg?auto=webp&amp;s=4cd5a55578f6895c124ca05384a1f263474f8418", "width": 256, "height": 256}, "resolutions": [{"url": "https://external-preview.redd.it/cCccIDSm91NNve6vRmZHfIEAzQfy-s6yW95wGt9Ob5Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=507a19217e4a350c6e97989aa0f88a6df9fce5c4", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/cCccIDSm91NNve6vRmZHfIEAzQfy-s6yW95wGt9Ob5Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b3e2f5eae3b77968e931a49354d8471e0aafceda", "width": 216, "height": 216}], "variants": {}, "id": "oeKbgHE71FhQIvl3iGfcsj-d5t2C8mFf-GEzv7rtCE0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqw7ts", "is_robot_indexable": true, "report_reasons": null, "author": "Quick-Purple9633", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqw7ts/discord_community_code_review_paired_programming/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hqw7ts/discord_community_code_review_paired_programming/", "subreddit_subscribers": 44071, "created_utc": 1594707130.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello, I'm a novice typescript developer that is loving the language so far but is having some issues understanding how types definitions works.\n\nWhat I'm trying to achieve is creating a library that I would like to publish in a github repo and that should contains type definitions shared between multiple projects.   \n\n\nWhat's the best approach to achieve something similar?", "author_fullname": "t2_o43hd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Create a library with only type definitions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hqnc8g", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594701716.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, I&amp;#39;m a novice typescript developer that is loving the language so far but is having some issues understanding how types definitions works.&lt;/p&gt;\n\n&lt;p&gt;What I&amp;#39;m trying to achieve is creating a library that I would like to publish in a github repo and that should contains type definitions shared between multiple projects.   &lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s the best approach to achieve something similar?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqnc8g", "is_robot_indexable": true, "report_reasons": null, "author": "temagno", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqnc8g/create_a_library_with_only_type_definitions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hqnc8g/create_a_library_with_only_type_definitions/", "subreddit_subscribers": 44071, "created_utc": 1594672916.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    import ConfigData from '../setupWizard/ConfigDataInterface';\n    \n    // (alias) interface ConfigData\n    // import ConfigData\n    // 'ConfigData' is defined but never used.eslintno-unused-vars\n\nWhen removed the interface references become undefined as one would expect.\n\n&amp;#x200B;\n\n    export enum translationDirection { toForeign, toEnglish }\n    // (alias) interface ConfigData\n    // import ConfigData\n    // 'ConfigData' is defined but never used.eslintno-unused-vars\n    // same for toEnglish\n    \n    export enum voiceGender { male = 'MALE', female = 'FEMALE' }\n    \n    // (enum member) voiceGender.male = \"MALE\"\n    'male' is assigned a value but never used.eslintno-unused-vars\n    // (enum member) voiceGender.female = \"FEMALE\"\n    'female' is assigned a value but never used.eslintno-unused-vars\n\nThere is another enum defined inside of a method in the consuming file, even that one throws the lint/error for \"defined but not used\".\n\n&amp;#x200B;\n\nAnyone know how to fix these? The error fixing page seems JS-specific: [https://eslint.org/docs/rules/no-unused-vars](https://eslint.org/docs/rules/no-unused-vars)\n\n    // .eslintrc.js\n    module.exports = {\n      env: {\n        browser: false,\n        es2020: true,\n      },\n      extends: [\n        'airbnb-base',\n      ],\n      parser: '@typescript-eslint/parser',\n      parserOptions: {\n        ecmaVersion: 11,\n        sourceType: 'module',\n      },\n      plugins: [\n        '@typescript-eslint',\n      ],\n      rules: {\n        'import/extensions': 0, // off\n      },\n      settings: {\n        'import/resolver': {\n          node: {\n            extensions: ['.ts'],\n            moduleDirectory: ['node_modules', 'src'],\n          },\n        },\n      },\n    };", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ESLint TS-specific errors (interfaces/enums \"not used\")", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hqlv93", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1594714076.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1594696989.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;import ConfigData from &amp;#39;../setupWizard/ConfigDataInterface&amp;#39;;\n\n// (alias) interface ConfigData\n// import ConfigData\n// &amp;#39;ConfigData&amp;#39; is defined but never used.eslintno-unused-vars\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When removed the interface references become undefined as one would expect.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export enum translationDirection { toForeign, toEnglish }\n// (alias) interface ConfigData\n// import ConfigData\n// &amp;#39;ConfigData&amp;#39; is defined but never used.eslintno-unused-vars\n// same for toEnglish\n\nexport enum voiceGender { male = &amp;#39;MALE&amp;#39;, female = &amp;#39;FEMALE&amp;#39; }\n\n// (enum member) voiceGender.male = &amp;quot;MALE&amp;quot;\n&amp;#39;male&amp;#39; is assigned a value but never used.eslintno-unused-vars\n// (enum member) voiceGender.female = &amp;quot;FEMALE&amp;quot;\n&amp;#39;female&amp;#39; is assigned a value but never used.eslintno-unused-vars\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There is another enum defined inside of a method in the consuming file, even that one throws the lint/error for &amp;quot;defined but not used&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Anyone know how to fix these? The error fixing page seems JS-specific: &lt;a href=\"https://eslint.org/docs/rules/no-unused-vars\"&gt;https://eslint.org/docs/rules/no-unused-vars&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// .eslintrc.js\nmodule.exports = {\n  env: {\n    browser: false,\n    es2020: true,\n  },\n  extends: [\n    &amp;#39;airbnb-base&amp;#39;,\n  ],\n  parser: &amp;#39;@typescript-eslint/parser&amp;#39;,\n  parserOptions: {\n    ecmaVersion: 11,\n    sourceType: &amp;#39;module&amp;#39;,\n  },\n  plugins: [\n    &amp;#39;@typescript-eslint&amp;#39;,\n  ],\n  rules: {\n    &amp;#39;import/extensions&amp;#39;: 0, // off\n  },\n  settings: {\n    &amp;#39;import/resolver&amp;#39;: {\n      node: {\n        extensions: [&amp;#39;.ts&amp;#39;],\n        moduleDirectory: [&amp;#39;node_modules&amp;#39;, &amp;#39;src&amp;#39;],\n      },\n    },\n  },\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/IPj3iJ2r0ZYjPYw88RTbkj5AVSxOE-8yNvSSvGxD55U.jpg?auto=webp&amp;s=b7deaf314aca0418869c30ddeb13de038a7791f8", "width": 512, "height": 512}, "resolutions": [{"url": "https://external-preview.redd.it/IPj3iJ2r0ZYjPYw88RTbkj5AVSxOE-8yNvSSvGxD55U.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba16f39115adbe35cf013a201c39682b3d7e0ac3", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/IPj3iJ2r0ZYjPYw88RTbkj5AVSxOE-8yNvSSvGxD55U.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=86d1641971c2179208f8feacdc93123e58f566f2", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/IPj3iJ2r0ZYjPYw88RTbkj5AVSxOE-8yNvSSvGxD55U.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=45c15c7abc97c03c42119e351a1a8ccbd710a565", "width": 320, "height": 320}], "variants": {}, "id": "6Ebq4fpt4BYnb0NBU4la3F4B5GXnX9vOBmkqK8tECiw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqlv93", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqlv93/eslint_tsspecific_errors_interfacesenums_not_used/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hqlv93/eslint_tsspecific_errors_interfacesenums_not_used/", "subreddit_subscribers": 44071, "created_utc": 1594668189.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "For the most part, I try to program in a functional style - simple, reusable functions, accessing state, where needed, via closure, etc.  And certainly \\*anything\\* you can write as a class in JS/TS can be written as functions.  But sometimes classes are a simpler, easier solution and I find that when you have complex state to manage, they're nice to use. (Basically, when I start thinking that something will require a monad, I think it might be okay to switch to classes. :) ) \n\nThe question occurs when I have a class definition that Is more or less useless outside the class, but is purely functional - that is, no access to state, no mutations. \n\nNow, I would insist these functions be defined \\*outside the class\\* so that they can be independently unit tested.  (Though to keep concerns together, I'd put them in the same \\*file\\* where the class is the default export).  But is that being pedantic?    \n\n\nIn other words, I'm refactoring this: \n\n```typescript\nexport default class Match {\n  private checkCondition = (condition: Condition, input: any): boolean =&gt; {\n    if (typeof condition === \"function\") {\n      return condition(input);\n    }\n    return condition === input;\n  };\n}\n```\n\nto this:\n```typescript\nexport const checkCondition = (condition: Condition, input: any): boolean =&gt; {\n  if (typeof condition === \"function\") {\n    return condition(input);\n  }\n  return condition === input;\n};\n\nexport default class Match {\n  /* OPTIONAL!\n  private checkCondition = checkCondition;\n  */\n}\n```", "author_fullname": "t2_ss1w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Am I being pedantic when it comes to helper methods in classes?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hqar0k", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594653141.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For the most part, I try to program in a functional style - simple, reusable functions, accessing state, where needed, via closure, etc.  And certainly *anything* you can write as a class in JS/TS can be written as functions.  But sometimes classes are a simpler, easier solution and I find that when you have complex state to manage, they&amp;#39;re nice to use. (Basically, when I start thinking that something will require a monad, I think it might be okay to switch to classes. :) ) &lt;/p&gt;\n\n&lt;p&gt;The question occurs when I have a class definition that Is more or less useless outside the class, but is purely functional - that is, no access to state, no mutations. &lt;/p&gt;\n\n&lt;p&gt;Now, I would insist these functions be defined *outside the class* so that they can be independently unit tested.  (Though to keep concerns together, I&amp;#39;d put them in the same *file* where the class is the default export).  But is that being pedantic?    &lt;/p&gt;\n\n&lt;p&gt;In other words, I&amp;#39;m refactoring this: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;typescript\nexport default class Match {\n  private checkCondition = (condition: Condition, input: any): boolean =&amp;gt; {\n    if (typeof condition === &amp;quot;function&amp;quot;) {\n      return condition(input);\n    }\n    return condition === input;\n  };\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;to this:\n```typescript\nexport const checkCondition = (condition: Condition, input: any): boolean =&amp;gt; {\n  if (typeof condition === &amp;quot;function&amp;quot;) {\n    return condition(input);\n  }\n  return condition === input;\n};&lt;/p&gt;\n\n&lt;p&gt;export default class Match {\n  /* OPTIONAL!\n  private checkCondition = checkCondition;\n  */\n}\n```&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqar0k", "is_robot_indexable": true, "report_reasons": null, "author": "BrianBoyko", "discussion_type": null, "num_comments": 32, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqar0k/am_i_being_pedantic_when_it_comes_to_helper/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hqar0k/am_i_being_pedantic_when_it_comes_to_helper/", "subreddit_subscribers": 44071, "created_utc": 1594624341.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've never been able to figure this out. For complex things like array, objects and other components what type do you give them?", "author_fullname": "t2_9q4dw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "New to TypeScript. How do you know what types to use for things other than strings and booleans?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hqty7o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.29, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594725786.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve never been able to figure this out. For complex things like array, objects and other components what type do you give them?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqty7o", "is_robot_indexable": true, "report_reasons": null, "author": "MeltingDog", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqty7o/new_to_typescript_how_do_you_know_what_types_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hqty7o/new_to_typescript_how_do_you_know_what_types_to/", "subreddit_subscribers": 44071, "created_utc": 1594696986.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_qtig0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Express.js course with TypeScript Lesson 2 \u2014 Apollo &amp; WebSockets", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hqcfqa", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.71, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1594662484.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com//express-js-course-with-typescript-lesson-2-apollo-websockets-7eb2063186bf?source=friends_link&amp;sk=123f4b00527f5080717f1cbfa6f34ac2", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqcfqa", "is_robot_indexable": true, "report_reasons": null, "author": "Fewthp", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqcfqa/expressjs_course_with_typescript_lesson_2_apollo/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com//express-js-course-with-typescript-lesson-2-apollo-websockets-7eb2063186bf?source=friends_link&amp;sk=123f4b00527f5080717f1cbfa6f34ac2", "subreddit_subscribers": 44071, "created_utc": 1594633684.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm trying to wrap my head around the following behavior, say I have the following type definitions\n\n    type RMap = {\n        a: { foo: string }\n        b: { foo: unknown }\n    }\n    \n    type RType = keyof RMap\n    \n    type RState = {\n        [k: string]: {\n            s: RMap[RType]\n        }\n    }\n\nGiven these, what's the difference between f1 and f2 below? Why does the first one not compile?\n\n    declare const map: RState\n    \n    function f1&lt;R extends RType&gt;(k: string, f: (r: RMap[R]) =&gt; void): void {\n        f(map[k].s)\n    }\n    \n    function f2(k: string, f: (r: RMap[RType]) =&gt; void): void {\n        f(map[k].s)\n    }", "author_fullname": "t2_loi9wzu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Access mapped type by index", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hqc4h2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594660773.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to wrap my head around the following behavior, say I have the following type definitions&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type RMap = {\n    a: { foo: string }\n    b: { foo: unknown }\n}\n\ntype RType = keyof RMap\n\ntype RState = {\n    [k: string]: {\n        s: RMap[RType]\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Given these, what&amp;#39;s the difference between f1 and f2 below? Why does the first one not compile?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;declare const map: RState\n\nfunction f1&amp;lt;R extends RType&amp;gt;(k: string, f: (r: RMap[R]) =&amp;gt; void): void {\n    f(map[k].s)\n}\n\nfunction f2(k: string, f: (r: RMap[RType]) =&amp;gt; void): void {\n    f(map[k].s)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hqc4h2", "is_robot_indexable": true, "report_reasons": null, "author": "memptybugs", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hqc4h2/access_mapped_type_by_index/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hqc4h2/access_mapped_type_by_index/", "subreddit_subscribers": 44071, "created_utc": 1594631973.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Code:\n\n    const memoizedHandler = useCallback((e) =&gt; handler(e), dependencies);useEventListener({ eventName: 'click', handler: memoizedHandler }); // &lt;-- error here\n    ERROR:Error:(17, 42) TS2741: Property 'current' is missing in type '(e: any) =&gt; void' but required in type 'RefObject&lt;HTMLDivElement&gt;'.\n\nI am assigning to \"current\", WHY do I need it on the function I am trying to assign to it?\n\nwhich says it is originating from:\n\n    useEffect(() =&gt; {\n      savedHandler.current = handler;\n    }, [handler]);\n    \n    useEffect(() =&gt; {\n      const isSupported = element &amp;&amp; element.addEventListener;\n      if (!isSupported) return;\n    \n      const eventListener = (event: React.ChangeEvent&lt;HTMLDivElement&gt;) =&gt; \n      savedHandler?.current?.(event);\n    \n    // error at \"current\" says TS2349: This expression is not callable.\n    // Type 'RefObject&lt;HTMLDivElement&gt;' has no call signatures\n\ngetting so frustrated. lol", "author_fullname": "t2_9303mz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Having a hard time Typing a ref that is a function that gets assigned to ref.curent", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hq8tnc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594643496.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const memoizedHandler = useCallback((e) =&amp;gt; handler(e), dependencies);useEventListener({ eventName: &amp;#39;click&amp;#39;, handler: memoizedHandler }); // &amp;lt;-- error here\nERROR:Error:(17, 42) TS2741: Property &amp;#39;current&amp;#39; is missing in type &amp;#39;(e: any) =&amp;gt; void&amp;#39; but required in type &amp;#39;RefObject&amp;lt;HTMLDivElement&amp;gt;&amp;#39;.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I am assigning to &amp;quot;current&amp;quot;, WHY do I need it on the function I am trying to assign to it?&lt;/p&gt;\n\n&lt;p&gt;which says it is originating from:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;useEffect(() =&amp;gt; {\n  savedHandler.current = handler;\n}, [handler]);\n\nuseEffect(() =&amp;gt; {\n  const isSupported = element &amp;amp;&amp;amp; element.addEventListener;\n  if (!isSupported) return;\n\n  const eventListener = (event: React.ChangeEvent&amp;lt;HTMLDivElement&amp;gt;) =&amp;gt; \n  savedHandler?.current?.(event);\n\n// error at &amp;quot;current&amp;quot; says TS2349: This expression is not callable.\n// Type &amp;#39;RefObject&amp;lt;HTMLDivElement&amp;gt;&amp;#39; has no call signatures\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;getting so frustrated. lol&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hq8tnc", "is_robot_indexable": true, "report_reasons": null, "author": "Jamesfromvenice", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hq8tnc/having_a_hard_time_typing_a_ref_that_is_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hq8tnc/having_a_hard_time_typing_a_ref_that_is_a/", "subreddit_subscribers": 44071, "created_utc": 1594614696.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hq8tnc", "before": null}}