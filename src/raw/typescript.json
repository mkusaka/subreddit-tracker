{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - June", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gua247", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 35, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 35, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590998803.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gua247", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "subreddit_subscribers": 42248, "created_utc": 1590970003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_at13j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Variadic Kinds arriving in TypeScript 4!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_haw15b", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 115, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 115, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/YxMUH3h81JHBpVeOzHibLV1WWajgnZ0vtRF3K8znoXM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592444285.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?auto=webp&amp;s=cba779060580ed3f457410dab623d999244c625b", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=614e6bf4d7570c9c4d0e9da5224fcb0f4538375a", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=def3c0fba828bd11a25b8af3f4f19956f9a78586", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=eaf239dada5661bd9cc8cf071f171e89bae3b4ea", "width": 320, "height": 320}], "variants": {}, "id": "NJXrOyE3KfKBJ_zZ_HKaff4PvMVJeGk8i3forC7kCZE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "haw15b", "is_robot_indexable": true, "report_reasons": null, "author": "feihcsim", "discussion_type": null, "num_comments": 26, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/haw15b/variadic_kinds_arriving_in_typescript_4/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/microsoft/TypeScript/issues/5453#issuecomment-644984977", "subreddit_subscribers": 42248, "created_utc": 1592415485.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    export default abstract class StepsBase {\n        protected description: string = ``;\n     \n        /**** Duck Typed DEFAULT Methods ****/\n    \n        public explain() {\n            // Property 'header' does not exist on type 'never'.ts(2339)\n            if (\"header\" in this) { console.log(this.header); }\n    \n            if (\"description\" in this) { console.log(this.description); }\n        }\n\nThe lint is on the header property of `this.header`, I guess since `this` points back to this class definition.\n\nI thought my if statement would tell the interpreter to only type check inside that control flow block if the condition passed.\n\nI also tried the following type assertions but both failed:\n\n            if (\"header\" in this) { console.log(this.header as unknown); }\n            if (\"header\" in this) { console.log(this.header as any); }\n\nThis is meant to be a base class where some inheriting subclasses define their own `header` and `description` properties. How should the base class be setup to pass type checking? I can leave an empty default value for `header` as I did for `description`, but I would like to know the best practice (maybe it is exactly that).", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using a conditional filter, error still occurs: Property 'header' does not exist on type 'never'.ts(2339)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_hbe5ct", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592514055.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;export default abstract class StepsBase {\n    protected description: string = ``;\n\n    /**** Duck Typed DEFAULT Methods ****/\n\n    public explain() {\n        // Property &amp;#39;header&amp;#39; does not exist on type &amp;#39;never&amp;#39;.ts(2339)\n        if (&amp;quot;header&amp;quot; in this) { console.log(this.header); }\n\n        if (&amp;quot;description&amp;quot; in this) { console.log(this.description); }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The lint is on the header property of &lt;code&gt;this.header&lt;/code&gt;, I guess since &lt;code&gt;this&lt;/code&gt; points back to this class definition.&lt;/p&gt;\n\n&lt;p&gt;I thought my if statement would tell the interpreter to only type check inside that control flow block if the condition passed.&lt;/p&gt;\n\n&lt;p&gt;I also tried the following type assertions but both failed:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        if (&amp;quot;header&amp;quot; in this) { console.log(this.header as unknown); }\n        if (&amp;quot;header&amp;quot; in this) { console.log(this.header as any); }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is meant to be a base class where some inheriting subclasses define their own &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; properties. How should the base class be setup to pass type checking? I can leave an empty default value for &lt;code&gt;header&lt;/code&gt; as I did for &lt;code&gt;description&lt;/code&gt;, but I would like to know the best practice (maybe it is exactly that).&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hbe5ct", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hbe5ct/using_a_conditional_filter_error_still_occurs/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hbe5ct/using_a_conditional_filter_error_still_occurs/", "subreddit_subscribers": 42248, "created_utc": 1592485255.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I see the syntax for generics is:\n\n    function doX &lt;T&gt; (args: T): T {...}\n\nAnd sometimes there is a word in front:\n\n    function doY &lt;T&gt; (args: Array&lt;T&gt;): Partial&lt;T&gt; {...}\n\nI know what these represent. `Array` specifies an array of values of type `T`. `Partial` is a utility type that specific some k/v pairs of the generic are there, but not all are required.\n\nMy understanding is not complete. I understand  `Array` and `Partial` are modifiers of a generic type... but how exactly? Are they keywords? Can I make my own? Do they, as a whole, have a deeper syntactical structure (`Partial.If` for example)?\n\nAny help clarifying what that syntax is exactly is appreciated, thanks.", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type parameters: What is the name for the part that goes in front of &lt;&gt;?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hbasvp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592498163.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I see the syntax for generics is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function doX &amp;lt;T&amp;gt; (args: T): T {...}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And sometimes there is a word in front:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function doY &amp;lt;T&amp;gt; (args: Array&amp;lt;T&amp;gt;): Partial&amp;lt;T&amp;gt; {...}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I know what these represent. &lt;code&gt;Array&lt;/code&gt; specifies an array of values of type &lt;code&gt;T&lt;/code&gt;. &lt;code&gt;Partial&lt;/code&gt; is a utility type that specific some k/v pairs of the generic are there, but not all are required.&lt;/p&gt;\n\n&lt;p&gt;My understanding is not complete. I understand  &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Partial&lt;/code&gt; are modifiers of a generic type... but how exactly? Are they keywords? Can I make my own? Do they, as a whole, have a deeper syntactical structure (&lt;code&gt;Partial.If&lt;/code&gt; for example)?&lt;/p&gt;\n\n&lt;p&gt;Any help clarifying what that syntax is exactly is appreciated, thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hbasvp", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hbasvp/type_parameters_what_is_the_name_for_the_part/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hbasvp/type_parameters_what_is_the_name_for_the_part/", "subreddit_subscribers": 42248, "created_utc": 1592469363.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi! I've been stuck on this error all day: Argument of type 'any' is not assignable to parameter of type 'never'.\n\n I am using Object.entries(constraints).forEach(([k, v]) =&gt; strConstraint[k as keyof StringValidator](v)) to loop over a constraints object which can contain any combination of the following: \nmaxChars?: number; minChars?: number; regexToValidate? RegExp; equals?: string; notEquals?: string;. \n\nHere is the code for my stringValidator (error on line: 232) https://codesandbox.io/s/festive-bartik-6hdhm?file=/index.ts. If maxChars method (97-103) of number type is commented out, it works fine. \n\nAs a last resort, I could parse a string to a number which works since everything is a string then. Any thoughts?", "author_fullname": "t2_122fk3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help needed with error 'Argument of type 'any' is not assignable to parameter of type 'never'.'", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hb90fk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1592489540.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi! I&amp;#39;ve been stuck on this error all day: Argument of type &amp;#39;any&amp;#39; is not assignable to parameter of type &amp;#39;never&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;I am using Object.entries(constraints).forEach(([k, v]) =&amp;gt; strConstraint[k as keyof StringValidator](v)) to loop over a constraints object which can contain any combination of the following: \nmaxChars?: number; minChars?: number; regexToValidate? RegExp; equals?: string; notEquals?: string;. &lt;/p&gt;\n\n&lt;p&gt;Here is the code for my stringValidator (error on line: 232) &lt;a href=\"https://codesandbox.io/s/festive-bartik-6hdhm?file=/index.ts\"&gt;https://codesandbox.io/s/festive-bartik-6hdhm?file=/index.ts&lt;/a&gt;. If maxChars method (97-103) of number type is commented out, it works fine. &lt;/p&gt;\n\n&lt;p&gt;As a last resort, I could parse a string to a number which works since everything is a string then. Any thoughts?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/v32SxbpRSTMSpuRs5TF8ediXc6iTkWrHpvdksuowpJo.jpg?auto=webp&amp;s=76a7707d4ad1e3de83d9ef41bdc26b5a6857d0b1", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/v32SxbpRSTMSpuRs5TF8ediXc6iTkWrHpvdksuowpJo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=958067b3b610d5f22c6250b86f9774326615b9cb", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/v32SxbpRSTMSpuRs5TF8ediXc6iTkWrHpvdksuowpJo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e59db980a1f1bc6c83bda6c8e7d219f4015222e4", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/v32SxbpRSTMSpuRs5TF8ediXc6iTkWrHpvdksuowpJo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=353407f1df96dea9f0ab3f77328160bde530d872", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/v32SxbpRSTMSpuRs5TF8ediXc6iTkWrHpvdksuowpJo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7e0ba3a6c3d3c991fd9cc9a1e4274d29d1cb4089", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/v32SxbpRSTMSpuRs5TF8ediXc6iTkWrHpvdksuowpJo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c1fc2cc7f4874fa10571b47be33086f8b29ac626", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/v32SxbpRSTMSpuRs5TF8ediXc6iTkWrHpvdksuowpJo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d3e5b30ae7f9da5cae0f959f349b1ef5f44d93ca", "width": 1080, "height": 567}], "variants": {}, "id": "7cjkWCchgRNhFHFYXLLCm2T0xkiZswnSOqeg0PtjFPQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hb90fk", "is_robot_indexable": true, "report_reasons": null, "author": "OhThePete", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hb90fk/help_needed_with_error_argument_of_type_any_is/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hb90fk/help_needed_with_error_argument_of_type_any_is/", "subreddit_subscribers": 42248, "created_utc": 1592460740.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi.  I want to create a private class within a class.\n```ts\nclass Foo {\n  private class Bar extends Baz {\n    \u2026\n  }\n}\n```\nBut as of TypeScript 3.9.5, it is not possible.  How do I implement that in a non-hacky sane manner?", "author_fullname": "t2_1262th", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Non-hacky ways of doing nested classes?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hbbif6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592501936.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi.  I want to create a private class within a class.\n&lt;code&gt;ts\nclass Foo {\n  private class Bar extends Baz {\n    \u2026\n  }\n}\n&lt;/code&gt;\nBut as of TypeScript 3.9.5, it is not possible.  How do I implement that in a non-hacky sane manner?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hbbif6", "is_robot_indexable": true, "report_reasons": null, "author": "acagastya", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hbbif6/nonhacky_ways_of_doing_nested_classes/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hbbif6/nonhacky_ways_of_doing_nested_classes/", "subreddit_subscribers": 42248, "created_utc": 1592473136.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_mpe3q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rulr \ud83d\udcd0 TypeScript package to save you time writing validation.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_hb1nt6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/WngvDj-HI_VuWMMzFY9utcHTEaXyz-8PxcxOcvNC2tQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592461549.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/kbY_HSnP3CoimqTD84CK0PJdmRAPYsiTmjEYTMbZm-c.jpg?auto=webp&amp;s=890145c44afc243d600200bf8a282f6f7af05205", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/kbY_HSnP3CoimqTD84CK0PJdmRAPYsiTmjEYTMbZm-c.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8d3355462063f9ccd97469c3ca852209cb9ea847", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/kbY_HSnP3CoimqTD84CK0PJdmRAPYsiTmjEYTMbZm-c.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3b0980bfe87d1291e2aa9fcb592d1f4803782ab3", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/kbY_HSnP3CoimqTD84CK0PJdmRAPYsiTmjEYTMbZm-c.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=41065a9c4c32385aa8d859e64f55dcc8eb3fe453", "width": 320, "height": 320}], "variants": {}, "id": "b4xV24EzyAi_SyUv3vu0nvN_EubZfn8NPv4XeG_d8Ec"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hb1nt6", "is_robot_indexable": true, "report_reasons": null, "author": "ryansmith94", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hb1nt6/rulr_typescript_package_to_save_you_time_writing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/ryansmith94/rulr", "subreddit_subscribers": 42248, "created_utc": 1592432749.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_6igd1nhd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A collection of Algorithms and Data Structures with video lectures in Typescript [Update 2]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_haoirx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 49, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 49, "approved_by": null, "author_premium": true, "thumbnail": "https://b.thumbs.redditmedia.com/QnpFgm4qGegxIEu8POe8wkrgQxyfuFPQlzvBWjWGRxU.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592418027.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/0KT2JGMg_j9J1lS5Os_IiE0W3BnsNzm2OrzfaLOSwb8.jpg?auto=webp&amp;s=ca519b2bcb8fbb699f32e9a569ba92b9f01dc7bc", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/0KT2JGMg_j9J1lS5Os_IiE0W3BnsNzm2OrzfaLOSwb8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e57e08c51678ac51fbd9ca8f94c9a66680278831", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/0KT2JGMg_j9J1lS5Os_IiE0W3BnsNzm2OrzfaLOSwb8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=18475813accd86d1f75b787db13ae40902e75736", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/0KT2JGMg_j9J1lS5Os_IiE0W3BnsNzm2OrzfaLOSwb8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=419637a83bf04680143fe960c8531157b6547603", "width": 320, "height": 320}], "variants": {}, "id": "5IptL7NOoKGFqioIuCdUSevjBcLRVCQfkPgwi103aH8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "haoirx", "is_robot_indexable": true, "report_reasons": null, "author": "jeff_zh4ng", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/haoirx/a_collection_of_algorithms_and_data_structures/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/jeffzh4ng/algorithms-and-data-structures", "subreddit_subscribers": 42248, "created_utc": 1592389227.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_10yxradh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Understanding Mixins in TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hazjt0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592454860.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.bitsrc.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hazjt0", "is_robot_indexable": true, "report_reasons": null, "author": "JSislife", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hazjt0/understanding_mixins_in_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.bitsrc.io/understanding-mixins-in-typescript-3c2c9a545d87", "subreddit_subscribers": 42248, "created_utc": 1592426060.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_61e649kj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How To Build A Shopify Headless eCommerce Storefront", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 78, "top_awarded_type": null, "hide_score": false, "name": "t3_haq4kv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": true, "thumbnail": "https://b.thumbs.redditmedia.com/IKID73fjNWzdHW0noYLNIkOAG7O_n7kFu4VJMYwLhMg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592425521.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "selleo-shopify.xyz", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/C_00xU_miiNSfYXfLtpvcX7kB9DMQIgcWxGfdzUoPaI.jpg?auto=webp&amp;s=5fa837397af9e6aef3d6085f073917070158c5af", "width": 820, "height": 460}, "resolutions": [{"url": "https://external-preview.redd.it/C_00xU_miiNSfYXfLtpvcX7kB9DMQIgcWxGfdzUoPaI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=41db1123221a255888a2bfdaa8269bbfc4904b6e", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/C_00xU_miiNSfYXfLtpvcX7kB9DMQIgcWxGfdzUoPaI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7f133324d442cd9fc3f4c12528ef22be41cb794e", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/C_00xU_miiNSfYXfLtpvcX7kB9DMQIgcWxGfdzUoPaI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6df702bbec689773e659f430ad05c160328292fe", "width": 320, "height": 179}, {"url": "https://external-preview.redd.it/C_00xU_miiNSfYXfLtpvcX7kB9DMQIgcWxGfdzUoPaI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4ce03cf5e418ec7cd9587f051a7d5e5aad173260", "width": 640, "height": 359}], "variants": {}, "id": "-Yo3LJ68jgB-_iMijxRTUfT7AqvGd5uPfZ-2OYaUt1I"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "haq4kv", "is_robot_indexable": true, "report_reasons": null, "author": "Prize-Code", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/haq4kv/how_to_build_a_shopify_headless_ecommerce/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://selleo-shopify.xyz", "subreddit_subscribers": 42248, "created_utc": 1592396721.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have interfaces and classes which are rather cumbersome and, for various reasons, require creating \"default\" forms; for example, the strings need to be initialized to empty strings, the numbers need to be initialized to 0, the arrays need to be initialized to [], etc.\n\nCan anyone point me in the direction of information on how best to accomplish this? I tried looking at the \"ts-transformer-keys\" package but ran into the same error about \"ts_transformer_keys_1.keys is not a function\" people have reported from time to time.\n\nThanks in advance.", "author_fullname": "t2_inbu0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to iterate over the properties of an interface/class in order to default initialize an object?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hav4nv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592441675.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have interfaces and classes which are rather cumbersome and, for various reasons, require creating &amp;quot;default&amp;quot; forms; for example, the strings need to be initialized to empty strings, the numbers need to be initialized to 0, the arrays need to be initialized to [], etc.&lt;/p&gt;\n\n&lt;p&gt;Can anyone point me in the direction of information on how best to accomplish this? I tried looking at the &amp;quot;ts-transformer-keys&amp;quot; package but ran into the same error about &amp;quot;ts_transformer_keys_1.keys is not a function&amp;quot; people have reported from time to time.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hav4nv", "is_robot_indexable": true, "report_reasons": null, "author": "AlexKingstonsGigolo", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hav4nv/how_to_iterate_over_the_properties_of_an/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hav4nv/how_to_iterate_over_the_properties_of_an/", "subreddit_subscribers": 42248, "created_utc": 1592412875.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hav4nv", "before": null}}