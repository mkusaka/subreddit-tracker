{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3e3rw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go running on Nintendo Switch thanks to TinyGo", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ghjorq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 67, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Now &lt;a href=\"https://twitter.com/golang?ref_src=twsrc%5Etfw\"&gt;@golang&lt;/a&gt; runs on &lt;a href=\"https://twitter.com/hashtag/NintendoSwitch?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#NintendoSwitch&lt;/a&gt; using &lt;a href=\"https://twitter.com/TinyGolang?ref_src=twsrc%5Etfw\"&gt;@TinyGolang&lt;/a&gt;! There is a lot of stuff to do, but we can use fmt.Println!!!! &lt;a href=\"https://t.co/KvqxPmaMaP\"&gt;pic.twitter.com/KvqxPmaMaP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Cybernetic Lover (@lucasteske) &lt;a href=\"https://twitter.com/lucasteske/status/1259650256897298432?ref_src=twsrc%5Etfw\"&gt;May 11, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 351}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://twitter.com", "url": "https://twitter.com/lucasteske/status/1259650256897298432", "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Now &lt;a href=\"https://twitter.com/golang?ref_src=twsrc%5Etfw\"&gt;@golang&lt;/a&gt; runs on &lt;a href=\"https://twitter.com/hashtag/NintendoSwitch?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#NintendoSwitch&lt;/a&gt; using &lt;a href=\"https://twitter.com/TinyGolang?ref_src=twsrc%5Etfw\"&gt;@TinyGolang&lt;/a&gt;! There is a lot of stuff to do, but we can use fmt.Println!!!! &lt;a href=\"https://t.co/KvqxPmaMaP\"&gt;pic.twitter.com/KvqxPmaMaP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Cybernetic Lover (@lucasteske) &lt;a href=\"https://twitter.com/lucasteske/status/1259650256897298432?ref_src=twsrc%5Etfw\"&gt;May 11, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_name": "Cybernetic Lover", "height": 351, "width": 350, "version": "1.0", "author_url": "https://twitter.com/lucasteske", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}, "type": "twitter.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Now &lt;a href=\"https://twitter.com/golang?ref_src=twsrc%5Etfw\"&gt;@golang&lt;/a&gt; runs on &lt;a href=\"https://twitter.com/hashtag/NintendoSwitch?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#NintendoSwitch&lt;/a&gt; using &lt;a href=\"https://twitter.com/TinyGolang?ref_src=twsrc%5Etfw\"&gt;@TinyGolang&lt;/a&gt;! There is a lot of stuff to do, but we can use fmt.Println!!!! &lt;a href=\"https://t.co/KvqxPmaMaP\"&gt;pic.twitter.com/KvqxPmaMaP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Cybernetic Lover (@lucasteske) &lt;a href=\"https://twitter.com/lucasteske/status/1259650256897298432?ref_src=twsrc%5Etfw\"&gt;May 11, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/ghjorq", "height": 351}, "link_flair_text": null, "can_mod_post": false, "score": 67, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589214456.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghjorq", "is_robot_indexable": true, "report_reasons": null, "author": "siwu", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghjorq/go_running_on_nintendo_switch_thanks_to_tinygo/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/lucasteske/status/1259650256897298432?s=20", "subreddit_subscribers": 112154, "created_utc": 1589185656.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://twitter.com", "url": "https://twitter.com/lucasteske/status/1259650256897298432", "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Now &lt;a href=\"https://twitter.com/golang?ref_src=twsrc%5Etfw\"&gt;@golang&lt;/a&gt; runs on &lt;a href=\"https://twitter.com/hashtag/NintendoSwitch?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#NintendoSwitch&lt;/a&gt; using &lt;a href=\"https://twitter.com/TinyGolang?ref_src=twsrc%5Etfw\"&gt;@TinyGolang&lt;/a&gt;! There is a lot of stuff to do, but we can use fmt.Println!!!! &lt;a href=\"https://t.co/KvqxPmaMaP\"&gt;pic.twitter.com/KvqxPmaMaP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Cybernetic Lover (@lucasteske) &lt;a href=\"https://twitter.com/lucasteske/status/1259650256897298432?ref_src=twsrc%5Etfw\"&gt;May 11, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_name": "Cybernetic Lover", "height": 351, "width": 350, "version": "1.0", "author_url": "https://twitter.com/lucasteske", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}, "type": "twitter.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_knt9w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Writing a SQL database from scratch in Go: 4. a database/sql driver", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ghdjgi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 90, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 90, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589187240.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "notes.eatonphil.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghdjgi", "is_robot_indexable": true, "report_reasons": null, "author": "eatonphil", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghdjgi/writing_a_sql_database_from_scratch_in_go_4_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://notes.eatonphil.com/database-basics-a-database-sql-driver.html", "subreddit_subscribers": 112154, "created_utc": 1589158440.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Excelize is a library written in pure Go providing a set of functions that allow you to write to and read from XLSX / XLSM / XLTM files. Supports reading and writing spreadsheet documents generated by Microsoft Excel\u2122 2007 and later. Supports complex components by high compatibility, and provided streaming API for generating or reading data from a worksheet with huge amounts of data.\n\nGitHub: [github.com/xuri/excelize](https://github.com/xuri/excelize)\n\nA summary of changes is available in the [Release Notes](https://github.com/360EntSecGroup-Skylar/excelize/releases/tag/v2.2.0). A full list of changes is available in the [changelog](https://github.com/360EntSecGroup-Skylar/excelize/compare/v2.1.0...v2.2.0).\n\nRelease Notes\n------------\nThe most notable changes in this release are:\n\n#### Notable Features\n\n* Using the worksheet index instead of ID in the following functions: `GetSheetName`, `GetSheetIndex`, `GetActiveSheetIndex` and `SetActiveSheet`, relate issue #485\n* New function [`GetSheetList`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetSheetList) to get the worksheet, chart sheet and dialog sheet name list of workbook\n* New function [`AddChartSheet`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddChartSheet) support create chart sheet, relate issue #451\n* New function [`UnsetConditionalFormat`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.UnsetConditionalFormat), support for remove conditional format, relate issue #571\n* New function [`DeleteDataValidation`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.DeleteDataValidation), support delete data validation, relate issue #348\n* New function [`SetCellRichText`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.SetCellRichText), support set rich text, relate issue #172\n* New functions [`InsertPageBreak`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.InsertPageBreak) and [`RemovePageBreak`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.RemovePageBreak), support for insert and remove page break, relate issue #492\n* The [`AddPivotTable`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddPivotTable) API changed, support for setting date field subtotal and names of the pivot table, relate issue #582\n* The [`AddPivotTable`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddPivotTable) support to set filter for the pivot table, relate issue #598\n* The [`AddPivotTable`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddPivotTable) allow empty filter, data, and rows in the pivot table\n* Export [`ExcelDateToTime`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.ExcelDateToTime) function to convert excel date to time\n* Export [`Style`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#Style) structs to allow create the style for cells by given JSON or structure pointer, relate issue #470\n\n#### Bug Fixes\n\n* Fix `greaterThanOrEqual` and `lessThanOrEqual` operators did not work when setting the conditional format for cell by `SetConditionalFormat`, resolve issue #608\n* Fix corrupt worksheet created by [`StreamWriter`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#StreamWriter), resolve issue #576\n* Escape character in the formula, resolve issue #578\n* Fix the [`DuplicateRowTo`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.DuplicateRowTo) function doesn't duplicate merged cells, resolve issue #586\n* Fix conditional formatting hides the adjacent borders by ignore empty conditional format style, resolve issue #200\n* Fix missing comments by [`GetComments`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetComments), resolve issue #345\n* Fix reading wrong string by [`GetCellValue`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetCellValue) in some case, resolve issue #602\n* Check and fill the cell without `r` attribute in a row element, fix returned empty value when [`GetCellValue`](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetCellValue) in some case \n* Allow empty or default cell style formats, resolve #628\n\n#### Performance\n\n* Reduce redundant memory copy in `getRowHeight`\n\n#### Miscellaneous\n\n* Remove calculated properties to make recalculate formulas in some spreadsheet applications, such as Kingsoft WPS\u2122 Office\n* Add missing checking error in unit tests\n* [Documentation website](https://xuri.me/excelize) with multilingual: English, French, Russian, Chinese, Japanese, and Korean, which has been updated", "author_fullname": "t2_iaoxg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Excelize 2.2.0 is Released \u2013 Go lib for reading and writing Excel (XLSX) files", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gh4ab5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 121, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 121, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1589133695.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589156050.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Excelize is a library written in pure Go providing a set of functions that allow you to write to and read from XLSX / XLSM / XLTM files. Supports reading and writing spreadsheet documents generated by Microsoft Excel\u2122 2007 and later. Supports complex components by high compatibility, and provided streaming API for generating or reading data from a worksheet with huge amounts of data.&lt;/p&gt;\n\n&lt;p&gt;GitHub: &lt;a href=\"https://github.com/xuri/excelize\"&gt;github.com/xuri/excelize&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A summary of changes is available in the &lt;a href=\"https://github.com/360EntSecGroup-Skylar/excelize/releases/tag/v2.2.0\"&gt;Release Notes&lt;/a&gt;. A full list of changes is available in the &lt;a href=\"https://github.com/360EntSecGroup-Skylar/excelize/compare/v2.1.0...v2.2.0\"&gt;changelog&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h2&gt;Release Notes&lt;/h2&gt;\n\n&lt;p&gt;The most notable changes in this release are:&lt;/p&gt;\n\n&lt;h4&gt;Notable Features&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Using the worksheet index instead of ID in the following functions: &lt;code&gt;GetSheetName&lt;/code&gt;, &lt;code&gt;GetSheetIndex&lt;/code&gt;, &lt;code&gt;GetActiveSheetIndex&lt;/code&gt; and &lt;code&gt;SetActiveSheet&lt;/code&gt;, relate issue #485&lt;/li&gt;\n&lt;li&gt;New function &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetSheetList\"&gt;&lt;code&gt;GetSheetList&lt;/code&gt;&lt;/a&gt; to get the worksheet, chart sheet and dialog sheet name list of workbook&lt;/li&gt;\n&lt;li&gt;New function &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddChartSheet\"&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;/a&gt; support create chart sheet, relate issue #451&lt;/li&gt;\n&lt;li&gt;New function &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.UnsetConditionalFormat\"&gt;&lt;code&gt;UnsetConditionalFormat&lt;/code&gt;&lt;/a&gt;, support for remove conditional format, relate issue #571&lt;/li&gt;\n&lt;li&gt;New function &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.DeleteDataValidation\"&gt;&lt;code&gt;DeleteDataValidation&lt;/code&gt;&lt;/a&gt;, support delete data validation, relate issue #348&lt;/li&gt;\n&lt;li&gt;New function &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.SetCellRichText\"&gt;&lt;code&gt;SetCellRichText&lt;/code&gt;&lt;/a&gt;, support set rich text, relate issue #172&lt;/li&gt;\n&lt;li&gt;New functions &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.InsertPageBreak\"&gt;&lt;code&gt;InsertPageBreak&lt;/code&gt;&lt;/a&gt; and &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.RemovePageBreak\"&gt;&lt;code&gt;RemovePageBreak&lt;/code&gt;&lt;/a&gt;, support for insert and remove page break, relate issue #492&lt;/li&gt;\n&lt;li&gt;The &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddPivotTable\"&gt;&lt;code&gt;AddPivotTable&lt;/code&gt;&lt;/a&gt; API changed, support for setting date field subtotal and names of the pivot table, relate issue #582&lt;/li&gt;\n&lt;li&gt;The &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddPivotTable\"&gt;&lt;code&gt;AddPivotTable&lt;/code&gt;&lt;/a&gt; support to set filter for the pivot table, relate issue #598&lt;/li&gt;\n&lt;li&gt;The &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.AddPivotTable\"&gt;&lt;code&gt;AddPivotTable&lt;/code&gt;&lt;/a&gt; allow empty filter, data, and rows in the pivot table&lt;/li&gt;\n&lt;li&gt;Export &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.ExcelDateToTime\"&gt;&lt;code&gt;ExcelDateToTime&lt;/code&gt;&lt;/a&gt; function to convert excel date to time&lt;/li&gt;\n&lt;li&gt;Export &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#Style\"&gt;&lt;code&gt;Style&lt;/code&gt;&lt;/a&gt; structs to allow create the style for cells by given JSON or structure pointer, relate issue #470&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h4&gt;Bug Fixes&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Fix &lt;code&gt;greaterThanOrEqual&lt;/code&gt; and &lt;code&gt;lessThanOrEqual&lt;/code&gt; operators did not work when setting the conditional format for cell by &lt;code&gt;SetConditionalFormat&lt;/code&gt;, resolve issue #608&lt;/li&gt;\n&lt;li&gt;Fix corrupt worksheet created by &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#StreamWriter\"&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt;, resolve issue #576&lt;/li&gt;\n&lt;li&gt;Escape character in the formula, resolve issue #578&lt;/li&gt;\n&lt;li&gt;Fix the &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.DuplicateRowTo\"&gt;&lt;code&gt;DuplicateRowTo&lt;/code&gt;&lt;/a&gt; function doesn&amp;#39;t duplicate merged cells, resolve issue #586&lt;/li&gt;\n&lt;li&gt;Fix conditional formatting hides the adjacent borders by ignore empty conditional format style, resolve issue #200&lt;/li&gt;\n&lt;li&gt;Fix missing comments by &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetComments\"&gt;&lt;code&gt;GetComments&lt;/code&gt;&lt;/a&gt;, resolve issue #345&lt;/li&gt;\n&lt;li&gt;Fix reading wrong string by &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetCellValue\"&gt;&lt;code&gt;GetCellValue&lt;/code&gt;&lt;/a&gt; in some case, resolve issue #602&lt;/li&gt;\n&lt;li&gt;Check and fill the cell without &lt;code&gt;r&lt;/code&gt; attribute in a row element, fix returned empty value when &lt;a href=\"https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2?tab=doc#File.GetCellValue\"&gt;&lt;code&gt;GetCellValue&lt;/code&gt;&lt;/a&gt; in some case &lt;/li&gt;\n&lt;li&gt;Allow empty or default cell style formats, resolve #628&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h4&gt;Performance&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Reduce redundant memory copy in &lt;code&gt;getRowHeight&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h4&gt;Miscellaneous&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Remove calculated properties to make recalculate formulas in some spreadsheet applications, such as Kingsoft WPS\u2122 Office&lt;/li&gt;\n&lt;li&gt;Add missing checking error in unit tests&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://xuri.me/excelize\"&gt;Documentation website&lt;/a&gt; with multilingual: English, French, Russian, Chinese, Japanese, and Korean, which has been updated&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gh4ab5", "is_robot_indexable": true, "report_reasons": null, "author": "luxurioust", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gh4ab5/excelize_220_is_released_go_lib_for_reading_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/gh4ab5/excelize_220_is_released_go_lib_for_reading_and/", "subreddit_subscribers": 112154, "created_utc": 1589127250.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "If you go into almost any post (on Reddit, HN, Lobste.rs) about fasthttp itself or a project that uses it, you'll most likely find at least one person talking about how it doesn't implement HTTP or has edge cases, etc.\n\nMy question is: what exactly are these edge cases and missing HTTP features.\n\nI've been a Go dev since ~2010 so I've been here a looong time and I've never been able to find out what these edge cases and spec violations are, so I'm really curious to know.\n\n*I ready somewhere that it doesn't support http2, but I don't feel like that counts.*", "author_fullname": "t2_51iu6ea3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's wrong with fasthttp?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ghkboz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589217804.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you go into almost any post (on Reddit, HN, Lobste.rs) about fasthttp itself or a project that uses it, you&amp;#39;ll most likely find at least one person talking about how it doesn&amp;#39;t implement HTTP or has edge cases, etc.&lt;/p&gt;\n\n&lt;p&gt;My question is: what exactly are these edge cases and missing HTTP features.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been a Go dev since ~2010 so I&amp;#39;ve been here a looong time and I&amp;#39;ve never been able to find out what these edge cases and spec violations are, so I&amp;#39;m really curious to know.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;I ready somewhere that it doesn&amp;#39;t support http2, but I don&amp;#39;t feel like that counts.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghkboz", "is_robot_indexable": true, "report_reasons": null, "author": "A-AronBrown", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghkboz/whats_wrong_with_fasthttp/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ghkboz/whats_wrong_with_fasthttp/", "subreddit_subscribers": 112154, "created_utc": 1589189004.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "hi, so currently I've found the [gonum](https://godoc.org/gonum.org/v1/gonum/mat) package which supports matrix operations but from my understanding it only supports 2d matrices.\n\ndoes anyone know a package which provides the ability to manipulate 3d matrices?\n\nthanks", "author_fullname": "t2_sq6fv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "matrix operations in go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ghn69x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589231135.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hi, so currently I&amp;#39;ve found the &lt;a href=\"https://godoc.org/gonum.org/v1/gonum/mat\"&gt;gonum&lt;/a&gt; package which supports matrix operations but from my understanding it only supports 2d matrices.&lt;/p&gt;\n\n&lt;p&gt;does anyone know a package which provides the ability to manipulate 3d matrices?&lt;/p&gt;\n\n&lt;p&gt;thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghn69x", "is_robot_indexable": true, "report_reasons": null, "author": "OwlLeafage", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghn69x/matrix_operations_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ghn69x/matrix_operations_in_go/", "subreddit_subscribers": 112154, "created_utc": 1589202335.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_owlu3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Concurrency In Rust; Can It Stack Up Against Go's Goroutines?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ghmz0k", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589230319.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "qvault.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghmz0k", "is_robot_indexable": true, "report_reasons": null, "author": "kvothe1956", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghmz0k/concurrency_in_rust_can_it_stack_up_against_gos/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://qvault.io/2020/05/11/concurrency-in-rust-can-it-stack-up-against-gos-goroutines/", "subreddit_subscribers": 112154, "created_utc": 1589201519.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "So I imported a package which holds a generated protobuf interface. I've updated the protobuf definition, re-generated the interface and pushed it to GitHub.\n\nNow I want do download the \"new version\" of the package so that my import stays valid. What's the common way to solve that problem? `go mod download` didn't work unfortunately.", "author_fullname": "t2_4sq4u91a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to re-download a dependency?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ghmx5r", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589230117.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I imported a package which holds a generated protobuf interface. I&amp;#39;ve updated the protobuf definition, re-generated the interface and pushed it to GitHub.&lt;/p&gt;\n\n&lt;p&gt;Now I want do download the &amp;quot;new version&amp;quot; of the package so that my import stays valid. What&amp;#39;s the common way to solve that problem? &lt;code&gt;go mod download&lt;/code&gt; didn&amp;#39;t work unfortunately.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghmx5r", "is_robot_indexable": true, "report_reasons": null, "author": "airtrip2019", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghmx5r/how_to_redownload_a_dependency/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ghmx5r/how_to_redownload_a_dependency/", "subreddit_subscribers": 112154, "created_utc": 1589201317.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I apologize if there's a FAQ somewhere that I missed, but can anyone point me to a good resource to learn Go? Free is obviously preferable, but if there's a course for a few bucks that is significantly more edifying, I can deal with that too.\n\nFor biographical reference, I'm pretty well versed in Java, and have some background in JS and Python.", "author_fullname": "t2_1pbogbzq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learning Resources", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ghmu9p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589229790.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I apologize if there&amp;#39;s a FAQ somewhere that I missed, but can anyone point me to a good resource to learn Go? Free is obviously preferable, but if there&amp;#39;s a course for a few bucks that is significantly more edifying, I can deal with that too.&lt;/p&gt;\n\n&lt;p&gt;For biographical reference, I&amp;#39;m pretty well versed in Java, and have some background in JS and Python.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghmu9p", "is_robot_indexable": true, "report_reasons": null, "author": "VacatedSum", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghmu9p/learning_resources/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ghmu9p/learning_resources/", "subreddit_subscribers": 112154, "created_utc": 1589200990.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi, I am new to go unit testing. I want to know about ho can I write unit tests for testing slack API. IMO, we do not have any return value as to use that API successfully, we need an access token and since the tests are written for some dummy values, they are never going to be passed.", "author_fullname": "t2_3jj0x8wr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Unit testing slack API", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ghm5v4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589226998.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I am new to go unit testing. I want to know about ho can I write unit tests for testing slack API. IMO, we do not have any return value as to use that API successfully, we need an access token and since the tests are written for some dummy values, they are never going to be passed.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghm5v4", "is_robot_indexable": true, "report_reasons": null, "author": "shadow8856", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ghm5v4/unit_testing_slack_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ghm5v4/unit_testing_slack_api/", "subreddit_subscribers": 112154, "created_utc": 1589198198.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_4kcgc0y9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go: How to Take Advantage of the Symbols Table", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gh1mr0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 64, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 64, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589146608.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gh1mr0", "is_robot_indexable": true, "report_reasons": null, "author": "a_journey_with_go", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/gh1mr0/go_how_to_take_advantage_of_the_symbols_table/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/a-journey-with-go/go-how-to-take-advantage-of-the-symbols-table-360dd52269e5", "subreddit_subscribers": 112154, "created_utc": 1589117808.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gh1mr0", "before": null}}