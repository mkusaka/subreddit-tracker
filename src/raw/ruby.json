{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_7ogw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "One-liner introduction - Ruby one-liners cookbook", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j34eyl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1601568168.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "learnbyexample.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://learnbyexample.github.io/learn_ruby_oneliners/one-liner-introduction.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j34eyl", "is_robot_indexable": true, "report_reasons": null, "author": "pmz", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j34eyl/oneliner_introduction_ruby_oneliners_cookbook/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://learnbyexample.github.io/learn_ruby_oneliners/one-liner-introduction.html", "subreddit_subscribers": 67639, "created_utc": 1601539368.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_82qm090i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby 3.0 Freezes Range Objects", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 64, "top_awarded_type": null, "hide_score": false, "name": "t3_j332ai", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Q3j1Oh2UxLSXrCdt9aiik6XyEWt43qf1vlaZuhTC_AE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601561304.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "scriptday.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://scriptday.com/blog/2020/10/01/ruby-3-0-freezes-range-objects", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/M4dNCGGN2LRIHE6jbp0ZhnoZWyCsvTtUjz2gjXEYyc0.jpg?auto=webp&amp;s=7d8a92751550b995206d1ba427b1e08445a99a1e", "width": 888, "height": 412}, "resolutions": [{"url": "https://external-preview.redd.it/M4dNCGGN2LRIHE6jbp0ZhnoZWyCsvTtUjz2gjXEYyc0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c80c513dc859ace209c47020be4c25a61a8e18e0", "width": 108, "height": 50}, {"url": "https://external-preview.redd.it/M4dNCGGN2LRIHE6jbp0ZhnoZWyCsvTtUjz2gjXEYyc0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1f538ae10ac64a38b0df0a985c75f3f8c4dcf9f0", "width": 216, "height": 100}, {"url": "https://external-preview.redd.it/M4dNCGGN2LRIHE6jbp0ZhnoZWyCsvTtUjz2gjXEYyc0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=830efa30b6586b15033ed280970c15c94953c54e", "width": 320, "height": 148}, {"url": "https://external-preview.redd.it/M4dNCGGN2LRIHE6jbp0ZhnoZWyCsvTtUjz2gjXEYyc0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=864cbc4f4cc0e9e5fcbf173c2956520b1ebd1ab8", "width": 640, "height": 296}], "variants": {}, "id": "t_AXvsykCzuYdhv_7snqpPW2wdE3Ece8ikqVdZfLntk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j332ai", "is_robot_indexable": true, "report_reasons": null, "author": "scriptday", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j332ai/ruby_30_freezes_range_objects/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://scriptday.com/blog/2020/10/01/ruby-3-0-freezes-range-objects", "subreddit_subscribers": 67639, "created_utc": 1601532504.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I had an epiphany: Ruby is much better than Python for someone learning to program. :-) I realize those are fighting words in many corners of the Internet. Probably also in academia.\n\nI'm putting together my thoughts for blog posts. Does anyone here have any points or anecdotes about learning Ruby as a first language, or teaching someone?\n\nI had my realization [while coping with Python's cruft and arbitrary design decisions](https://www.reddit.com/r/learnpython/comments/ispgri/any_way_to_make_textsplitjoin_capitalize_possible/). It had been a while since I'd done much Python, and I was surprised at how bad the UX is. Python is held up as an amazing teaching language, yet it presents an uneven smorgasbord of global functions (which are misleadingly called \"builtins\"), classes, mutating \"functions\" and intentionally-difficult-to-use fp features.", "author_fullname": "t2_4emgi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gathering ideas: Ruby is the best programming language for beginners", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j2tu7k", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 48, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 48, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1601497470.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601525908.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I had an epiphany: Ruby is much better than Python for someone learning to program. :-) I realize those are fighting words in many corners of the Internet. Probably also in academia.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m putting together my thoughts for blog posts. Does anyone here have any points or anecdotes about learning Ruby as a first language, or teaching someone?&lt;/p&gt;\n\n&lt;p&gt;I had my realization &lt;a href=\"https://www.reddit.com/r/learnpython/comments/ispgri/any_way_to_make_textsplitjoin_capitalize_possible/\"&gt;while coping with Python&amp;#39;s cruft and arbitrary design decisions&lt;/a&gt;. It had been a while since I&amp;#39;d done much Python, and I was surprised at how bad the UX is. Python is held up as an amazing teaching language, yet it presents an uneven smorgasbord of global functions (which are misleadingly called &amp;quot;builtins&amp;quot;), classes, mutating &amp;quot;functions&amp;quot; and intentionally-difficult-to-use fp features.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2tu7k", "is_robot_indexable": true, "report_reasons": null, "author": "dogweather", "discussion_type": null, "num_comments": 52, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j2tu7k/gathering_ideas_ruby_is_the_best_programming/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/j2tu7k/gathering_ideas_ruby_is_the_best_programming/", "subreddit_subscribers": 67639, "created_utc": 1601497108.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_9p47di", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What surprised us in PostgreSQL-schema based multitenancy", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 68, "top_awarded_type": null, "hide_score": false, "name": "t3_j365oy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/QxrfrMVz3fpFM-Kakx2yF433Fk8Nj_J9V61I-JSPTt4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601577652.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.arkency.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.arkency.com/what-surprised-us-in-postgres-schema-multitenancy/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/s0NWBO1uTfp4eI7Tf3a2KZWgRvrAWMZtXNB93Yym9JQ.jpg?auto=webp&amp;s=59eedab5a4b493682305077b5dd45f4d22d39d0b", "width": 640, "height": 315}, "resolutions": [{"url": "https://external-preview.redd.it/s0NWBO1uTfp4eI7Tf3a2KZWgRvrAWMZtXNB93Yym9JQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e340600c891dc2d0bf675b8c22217d4c2066b465", "width": 108, "height": 53}, {"url": "https://external-preview.redd.it/s0NWBO1uTfp4eI7Tf3a2KZWgRvrAWMZtXNB93Yym9JQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=321fc1de8d5cafe994e895beddc5c9d21318bd4d", "width": 216, "height": 106}, {"url": "https://external-preview.redd.it/s0NWBO1uTfp4eI7Tf3a2KZWgRvrAWMZtXNB93Yym9JQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1b5ed44d3338d6ed9a0fd13325ca0cdd90cb22f8", "width": 320, "height": 157}, {"url": "https://external-preview.redd.it/s0NWBO1uTfp4eI7Tf3a2KZWgRvrAWMZtXNB93Yym9JQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4a40b30014cad3e0b7b5e7c370232ee20a33c98f", "width": 640, "height": 315}], "variants": {}, "id": "CfVAfGSD9W1oMQSpIAIxBpcEKuvD8uWgU7ycBybuITw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j365oy", "is_robot_indexable": true, "report_reasons": null, "author": "tomdzordzo", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j365oy/what_surprised_us_in_postgresqlschema_based/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.arkency.com/what-surprised-us-in-postgres-schema-multitenancy/", "subreddit_subscribers": 67639, "created_utc": 1601548852.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_qqcu9sy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Procedure - new rails design pattern", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": true, "name": "t3_j36wjs", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/tYv_ajzK6ky0U7xcIi2GDBl-pPj68Rv6Tks0d7hjFVM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601581154.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "longliveruby.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://longliveruby.com/articles/rails-procedure-design-pattern", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?auto=webp&amp;s=967d4bb1257ee8edc83901ea84d3fea14affa452", "width": 1200, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=07059b93c1a8da1b7ceb0e47954e195c53a64649", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f21c50f4b1048e3aad8d431507b5f2d1baea477f", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=88c52c186c28934b5a96ac6953d854b8d497482f", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=64bd635e35cababa8095e35067560ee66ab16d09", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5ef77a7b3e8f0aaa5775054ecd6b9060ed790bf0", "width": 960, "height": 501}, {"url": "https://external-preview.redd.it/giwsIQeuIfwUXN3NN9MCZqA41qXmCsRmPpqa1eqD4RQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=338c1639e0903225c91a882253d37af4f80e2dff", "width": 1080, "height": 564}], "variants": {}, "id": "x7SrNpNrr1N-CaFUgVFBhmDBniTs1eJixkVzU5M7h_w"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j36wjs", "is_robot_indexable": true, "report_reasons": null, "author": "pdabrowski", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j36wjs/procedure_new_rails_design_pattern/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://longliveruby.com/articles/rails-procedure-design-pattern", "subreddit_subscribers": 67639, "created_utc": 1601552354.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_69nb1qr8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Arriving at Station: The Evolution of Our API Documentation Platform [Built in Ruby]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_j2wdo9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/puRgFUyyyxs-vLGRFuCe_h34QJ_wnM5sdFbgjotoONE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601534233.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "nexmo.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.nexmo.com/blog/2020/09/02/arriving-at-station-the-evolution-of-our-api-documentation-platform?utm_source=reddit&amp;utm_medium=organic&amp;utm_campaign=social_media", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/QA9ziaZUUkX-8LJn1bUM6cTft7RLKkmMNzSfzN27ZMI.jpg?auto=webp&amp;s=eb4e546ced1c7506f3dce28c1823917c77d5e193", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/QA9ziaZUUkX-8LJn1bUM6cTft7RLKkmMNzSfzN27ZMI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e8739f929d3e32ade5f1c8f8bdc79e218ff0f4ae", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/QA9ziaZUUkX-8LJn1bUM6cTft7RLKkmMNzSfzN27ZMI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a871abbebbeae02399b72d04cfa203d3e3d272f8", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/QA9ziaZUUkX-8LJn1bUM6cTft7RLKkmMNzSfzN27ZMI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9d738dc885eb25e810d4a9aebc5234dc780362d2", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/QA9ziaZUUkX-8LJn1bUM6cTft7RLKkmMNzSfzN27ZMI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=dd53f3a292e80070673fee9d42cd253b68daba8d", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/QA9ziaZUUkX-8LJn1bUM6cTft7RLKkmMNzSfzN27ZMI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5d6a19c3ad69ab6befc871a6ef025457bef8c4c3", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/QA9ziaZUUkX-8LJn1bUM6cTft7RLKkmMNzSfzN27ZMI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ea5feadff2ff528024ec2e6ba7ad08617f1cf344", "width": 1080, "height": 540}], "variants": {}, "id": "i5mnvUOY1Uipazpc1IzBWqYwOy4U9QzQncpWb2QAztA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2wdo9", "is_robot_indexable": true, "report_reasons": null, "author": "ruskibenya", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j2wdo9/arriving_at_station_the_evolution_of_our_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.nexmo.com/blog/2020/09/02/arriving-at-station-the-evolution-of-our-api-documentation-platform?utm_source=reddit&amp;utm_medium=organic&amp;utm_campaign=social_media", "subreddit_subscribers": 67639, "created_utc": 1601505433.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello there! I need to ban malicious http requests made to \\`/api/check\\_user\\`, only if the email in the parameters is not present in the database.Given that:- We wanted to block that IP in the first line cause we already saw many malicious attempts  in the logs,- We had to throttle the requests  to the URLs matching \\`/oauth|check\\_user|recovery/\\`- And on top of that, we wanted to ban the IPs making too many http requests to \\`/api/check\\_user\\` when the email was not in the db.\n\nThe 410 rule was added to avoid some noise cause we already have some 403s in the system.\n\n    Rack::Attack.blocklist_ip(\"X.X.X.X\")\n    \n    # Throttle to same email 6 reqs/minute\n    Rack::Attack.throttle(\"limit logins per email\", limit: 6, period: 60) do |request|\n      if /oauth|check_user|recovery/.match?(request.path)\n        request.params[\"email\"].to_s.downcase.gsub(/\\s+/, \"\")\n      end\n    end\n    \n    Rack::Attack.blocklisted_response = lambda do |request|\n      [410, {}, [\"Gone\\n\"]]\n    end\n    \n    # This is the important bit\n    Rack::Attack.blocklist(\"fail2ban pentesters\") do |request|\n      Rack::Attack::Fail2Ban.filter(\"pentesters-#{request.ip}\", maxretry: 3, findtime: 10.minutes, bantime: 6.hours) do\n        /check_user/.match?(request.path) &amp;&amp;\n          !PanelUser.exists?(email: CGI.unescape(request.params[\"email\"].to_s.downcase.gsub(/\\s+/, \"\")))\n      end\n    end\n\nbut it looks like that the last block is blocking also requests to \\`/admin/login\\` (the backoffice URL). Can you help me to find the error? :)  \n\n\nI know that is not very performant to keep the query there, but that's not an issue at the moment.\n\n...And since we're here: is there a way to clean the rules and redefine them without redeploying every time we wanted to try another config?\n\nThanks!\n\nF", "author_fullname": "t2_byv1o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to use rack-attack with fail2ban, with a database query?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j2twhr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601526100.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello there! I need to ban malicious http requests made to `/api/check_user`, only if the email in the parameters is not present in the database.Given that:- We wanted to block that IP in the first line cause we already saw many malicious attempts  in the logs,- We had to throttle the requests  to the URLs matching `/oauth|check_user|recovery/`- And on top of that, we wanted to ban the IPs making too many http requests to `/api/check_user` when the email was not in the db.&lt;/p&gt;\n\n&lt;p&gt;The 410 rule was added to avoid some noise cause we already have some 403s in the system.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Rack::Attack.blocklist_ip(&amp;quot;X.X.X.X&amp;quot;)\n\n# Throttle to same email 6 reqs/minute\nRack::Attack.throttle(&amp;quot;limit logins per email&amp;quot;, limit: 6, period: 60) do |request|\n  if /oauth|check_user|recovery/.match?(request.path)\n    request.params[&amp;quot;email&amp;quot;].to_s.downcase.gsub(/\\s+/, &amp;quot;&amp;quot;)\n  end\nend\n\nRack::Attack.blocklisted_response = lambda do |request|\n  [410, {}, [&amp;quot;Gone\\n&amp;quot;]]\nend\n\n# This is the important bit\nRack::Attack.blocklist(&amp;quot;fail2ban pentesters&amp;quot;) do |request|\n  Rack::Attack::Fail2Ban.filter(&amp;quot;pentesters-#{request.ip}&amp;quot;, maxretry: 3, findtime: 10.minutes, bantime: 6.hours) do\n    /check_user/.match?(request.path) &amp;amp;&amp;amp;\n      !PanelUser.exists?(email: CGI.unescape(request.params[&amp;quot;email&amp;quot;].to_s.downcase.gsub(/\\s+/, &amp;quot;&amp;quot;)))\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but it looks like that the last block is blocking also requests to `/admin/login` (the backoffice URL). Can you help me to find the error? :)  &lt;/p&gt;\n\n&lt;p&gt;I know that is not very performant to keep the query there, but that&amp;#39;s not an issue at the moment.&lt;/p&gt;\n\n&lt;p&gt;...And since we&amp;#39;re here: is there a way to clean the rules and redefine them without redeploying every time we wanted to try another config?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n\n&lt;p&gt;F&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2twhr", "is_robot_indexable": true, "report_reasons": null, "author": "sekmo", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j2twhr/how_to_use_rackattack_with_fail2ban_with_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/j2twhr/how_to_use_rackattack_with_fail2ban_with_a/", "subreddit_subscribers": 67639, "created_utc": 1601497300.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_7jgguyep", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby 3.0 adds `Hash#except` and `ENV.except`", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_j2ka43", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 36, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/MfKOea3TeZlWF3OtHVUyo7ZSkiESIqDS7bh-U31-QHA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601493690.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.saeloun.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.saeloun.com/2020/09/30/ruby-adds-support-for-hash-except", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?auto=webp&amp;s=76ff1c57159ecd0635bde7262995c5f75ea5b2bf", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba7dc7c390da46504d7dff83a3777aa34d06da09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7174576a8c7a36330f60dff22893de50e2a459da", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b1f1f8a636baeb85c444c850de8e7747c45470f", "width": 320, "height": 320}], "variants": {}, "id": "BN85dx9NXlDeVPyUnffc9FFfivOtdoHkGQhBm10KyEI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2ka43", "is_robot_indexable": true, "report_reasons": null, "author": "Zealousideal-Fudge-2", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j2ka43/ruby_30_adds_hashexcept_and_envexcept/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.saeloun.com/2020/09/30/ruby-adds-support-for-hash-except", "subreddit_subscribers": 67639, "created_utc": 1601464890.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi all, created Terraspace, a Terraform Framework. It makes it more fun and easy to work with Terraform. Useful for folks building infrastructure-as-code.\n\nTerraspace is written in Ruby. Though it's more like \"Ruby Sprinkles\" on top of Terraform, you still have the full power of Ruby at your fingertips. Found that Ruby is one of the most expressive languages to build tools and frameworks like Terraspace.\n\nSharing with the Ruby community. \n\nDocs: https://terraspace.cloud/\nBlog Post: https://blog.boltops.com/2020/08/22/introducing-terraspace-the-terraform-framework", "author_fullname": "t2_6wdc6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Terraspace: The Terraform Framework", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j2m21y", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601501138.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all, created Terraspace, a Terraform Framework. It makes it more fun and easy to work with Terraform. Useful for folks building infrastructure-as-code.&lt;/p&gt;\n\n&lt;p&gt;Terraspace is written in Ruby. Though it&amp;#39;s more like &amp;quot;Ruby Sprinkles&amp;quot; on top of Terraform, you still have the full power of Ruby at your fingertips. Found that Ruby is one of the most expressive languages to build tools and frameworks like Terraspace.&lt;/p&gt;\n\n&lt;p&gt;Sharing with the Ruby community. &lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://terraspace.cloud/\"&gt;https://terraspace.cloud/&lt;/a&gt;\nBlog Post: &lt;a href=\"https://blog.boltops.com/2020/08/22/introducing-terraspace-the-terraform-framework\"&gt;https://blog.boltops.com/2020/08/22/introducing-terraspace-the-terraform-framework&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2m21y", "is_robot_indexable": true, "report_reasons": null, "author": "tongueroo", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j2m21y/terraspace_the_terraform_framework/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/j2m21y/terraspace_the_terraform_framework/", "subreddit_subscribers": 67639, "created_utc": 1601472338.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_cnyij", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Matz in 2019: \".. unless extremely bad things happen [next year]\"", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 89, "top_awarded_type": null, "hide_score": false, "name": "t3_j2fcm8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 72, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 72, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/7VDSp5r4HgSSC108POT233B57Wj-gse3rQki_69G5NM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601468712.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://i.redd.it/0qrcfnfgp7q51.png", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/0qrcfnfgp7q51.png?auto=webp&amp;s=6ac1d8e0102b2139592fb986bbccec25f9283d77", "width": 2666, "height": 1702}, "resolutions": [{"url": "https://preview.redd.it/0qrcfnfgp7q51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=aee6d4922d97282b3bfb2592f5b4a0c0c81a89e0", "width": 108, "height": 68}, {"url": "https://preview.redd.it/0qrcfnfgp7q51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=2df8bdda4335cc05a9d9c17aaec74802d8003fd1", "width": 216, "height": 137}, {"url": "https://preview.redd.it/0qrcfnfgp7q51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=dd4bffab994af0bb6c76b368dceeacade7e39480", "width": 320, "height": 204}, {"url": "https://preview.redd.it/0qrcfnfgp7q51.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=c8db0b7db3583053d19a7ddf145838dbce978a87", "width": 640, "height": 408}, {"url": "https://preview.redd.it/0qrcfnfgp7q51.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=b8d9f63d9aedf03ab0fe8bf6ec45f3513c825895", "width": 960, "height": 612}, {"url": "https://preview.redd.it/0qrcfnfgp7q51.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a2904e329a06d1b5a53749250787c7e8a662cf0a", "width": 1080, "height": 689}], "variants": {}, "id": "SijAy6eJGwqk0-ShUAnHb5DCz7nGI6m24e9U_SymTVE"}], "enabled": true}, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2fcm8", "is_robot_indexable": true, "report_reasons": null, "author": "rohitpaulk", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/j2fcm8/matz_in_2019_unless_extremely_bad_things_happen/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/0qrcfnfgp7q51.png", "subreddit_subscribers": 67639, "created_utc": 1601439912.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_j2fcm8", "before": null}}