{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "In this thread you can showcase your personal pet project to other redditors.\n\nNeed help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!\n\nA suggested format to get you started:\n\n1. **Name of your project**\n2. **A short description**\n3. **Application stack**\n4. **Link to Live app**\n5. **Link to GitHub**\n6. **You experience level**\n7. **Other information or areas that you would like advice on**\n\n\u00a0\n\n^(Many thanks to Kritnc for getting the ball rolling.)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Personal Projects - Show off your own project and/or ask for advice", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnbebg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590010359.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this thread you can showcase your personal pet project to other redditors.&lt;/p&gt;\n\n&lt;p&gt;Need help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!&lt;/p&gt;\n\n&lt;p&gt;A suggested format to get you started:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Name of your project&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;A short description&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Application stack&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to Live app&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to GitHub&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;You experience level&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Other information or areas that you would like advice on&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Many thanks to Kritnc for getting the ball rolling.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnbebg", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 4, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnbebg/personal_projects_show_off_your_own_project_andor/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/gnbebg/personal_projects_show_off_your_own_project_andor/", "subreddit_subscribers": 44253, "created_utc": 1589981559.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Please use this thread to discuss **cool** but relatively **unknown** gems you've found.\n\nYou **should not** post popular gems such as [those listed in wiki](https://www.reddit.com/r/rails/wiki/index#wiki_popular_gems) that are already well known.\n\nPlease include a **description** and a **link** to the gem's homepage in your comment.", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gimme Gems Thursdays - Found an awesome new gem? Post it here!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gs526t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590696394.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Please use this thread to discuss &lt;strong&gt;cool&lt;/strong&gt; but relatively &lt;strong&gt;unknown&lt;/strong&gt; gems you&amp;#39;ve found.&lt;/p&gt;\n\n&lt;p&gt;You &lt;strong&gt;should not&lt;/strong&gt; post popular gems such as &lt;a href=\"https://www.reddit.com/r/rails/wiki/index#wiki_popular_gems\"&gt;those listed in wiki&lt;/a&gt; that are already well known.&lt;/p&gt;\n\n&lt;p&gt;Please include a &lt;strong&gt;description&lt;/strong&gt; and a &lt;strong&gt;link&lt;/strong&gt; to the gem&amp;#39;s homepage in your comment.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs526t", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs526t/gimme_gems_thursdays_found_an_awesome_new_gem/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/gs526t/gimme_gems_thursdays_found_an_awesome_new_gem/", "subreddit_subscribers": 44253, "created_utc": 1590667594.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "\n\n[View Poll](https://www.reddit.com/poll/gs0x4b)", "author_fullname": "t2_411klsg1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "html.erb vs html.haml vs html.slim - which one do you use?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gs0x4b", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590676036.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.reddit.com/poll/gs0x4b\"&gt;View Poll&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs0x4b", "is_robot_indexable": true, "report_reasons": null, "author": "yarotheslav", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "poll_data": {"user_selection": null, "options": [{"text": "html.erb", "id": "1086505"}, {"text": "html.haml", "id": "1086506"}, {"text": "html.slim", "id": "1086507"}], "voting_end_timestamp": 1591252036779, "total_vote_count": 335}, "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs0x4b/htmlerb_vs_htmlhaml_vs_htmlslim_which_one_do_you/", "parent_whitelist_status": "all_ads", "stickied": false, "mod_reports": [], "url": "https://www.reddit.com/r/rails/comments/gs0x4b/htmlerb_vs_htmlhaml_vs_htmlslim_which_one_do_you/", "subreddit_subscribers": 44253, "created_utc": 1590647236.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "### Prerequisite\n1) If using rails then use the gem `google-api-client`\n2) I am considering here that you already have the `access_token` of the user. I will write a different blog to explain how to get that.\n\n### 1) Do full initial synch of events\nIt has the following steps - \n  * Fetch a new `access_token` if the token has expired.\n  * Create the service authorization object which will be used for fetching the events.\n\nRef code for `service authorization`\n```ruby\ndef create_service_auth\n  #create service auth\n  @service = Google::Apis::CalendarV3::CalendarService.new\n  @service.authorization = token.google_secret.to_authorization\n  return unless token.expired?\n\n  new_access_token = @service.authorization.refresh! #refresh access_token\nend\n```\n\n  * Fetching all calendar events(past, present and future).\n \n    * The full sync is the original request for all the resources of the collection you want to synchronize.\n    * In the response to the list operation, you will find a field called nextSyncToken representing a sync token. You'll need to store the value of nextSyncToken. If the result set is too large and the response gets paginated, then the nextSyncToken field is present only on the very last page.\n    * Depending on what your use case is, it will be better to perform this job as a background task.\n    * [Events: list API](https://developers.google.com/calendar/v3/reference/events/list) is used for this. The gem provides an easier method called `list_events`\n\nRef code for `syncing events`\n```ruby\n  def get_events\n    @events_arr = []\n    @events_list = @service.list_events('primary', single_events: true, max_results: 500)\n    @sync_token = @events_list.next_sync_token\n    @page_token = @events_list.next_page_token\n    @events_arr &lt;&lt; @events_list.items\n    while @sync_token.blank?\n      @events_list = @service.list_events('primary', single_events: true, max_results: 500, page_token: @page_token)\n      @sync_token = @events_list.next_sync_token\n      @page_token = @events_list.next_page_token\n      @events_arr &lt;&lt; @events_list.items\n    end\n  end\n```\n\n### 2) Create a webhook to receive push notifications\n\nAfter a full sync of events, the next step is to setup a Webhook so that google can inform us of the changes that we subscribe for.\nFor every user that links their calendar to the app, we will create a subscription so that we can be informed whenever there is a change in their calendar.\n\nIt has the following steps - \n  * Fetch a new `access_token` if the token has expired.\n  * Create the service authorisation object which will be used for fetching the events, exactly same as shown above.\n  * Set up a Channel - It creates a channel with google and specifies the callback URL or the web-hook URL.\n  * Watch events - After the web-hook is set up, we need to specify what events we want to watch and also need to specify from which calendar.\n\n```ruby\ndef setup_channel\n  @channel = Google::Apis::CalendarV3::Channel.new(address: callback_url, id: channel_id, type: \"web_hook\")\nend\n```\n\n`callback_url` - It can't be localhost, it has to be a valid `https` url. For testing purposes you can use [ngrok](https://ngrok.com/).\n`channel_id` - This is a UUID - `SecureRandom.uuid`\n\n\n```ruby\n  def watch_events\n    time_min = DateTime.now.rfc3339\n    @webhook = @service.watch_event('primary', @channel, single_events: true, time_min: time_min)\n  end\n```\n`primary` - refers to the `primary` calendar of the user.\n`single_events` - Setting it to true also gives all events belonging to 1 single recurring event.\n\nNow, whenever there will be any change in the primary calendar of the user google will hit the registered web-hook for the user.\n\nIn the request Google will pass `X-Goog-Resource-ID` and `X-Goog-Channel-ID`. We would have to hit the `list_events` API again to fetch the changed events data for that user.\n\nOnly difference will be that instead of passing the page token like we did earlier, we would pass the `sync_token`.\n\n```ruby\n  def get_events\n    @events_list = @service.list_events('primary', single_events: true, max_results: 2500, sync_token: sync_token)\n  end\n```\n\n\n\n### 3) Saving X-Goog-Resource-ID &amp; X-Goog-Channel-ID\n\nWhen we created the web-hook google will return us with a `resource_id`, `resource_uri`, `id`(that we created). We need to save all this data so that we can get to know for which user the events have changed.\nAlso the channel expires in around 1 week so we need to keep creating new web-hooks before it expires.\n\n### 3) Deleting the events with status `cancelled`\n\nThis is the flow that took me some time to understand. So what happens when a user changes the time of their event or has the user changed a single event or all the events in a recurring event. What google does is that \n* if the user changes a single event, then google keeps the `calendar_id` as same.\n* if the user changes a recurring event and selects `all` or `following events` as option then the `calendar_id` changes for all the events. Hence, in this case we need to delete the old events and add new events in our system. So, this is a check that you will have to add when saving the calendar events in your system.\n\n\nThat's it - It's quite messy if you are trying to figure it out from scratch and I hope this article will help you all.", "author_fullname": "t2_66mla47a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Integrating with Google Calendar in a Rails app - The Right Way", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "hide_score": false, "name": "t3_gs3qov", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1590672430.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590690400.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h3&gt;Prerequisite&lt;/h3&gt;\n\n&lt;p&gt;1) If using rails then use the gem &lt;code&gt;google-api-client&lt;/code&gt;\n2) I am considering here that you already have the &lt;code&gt;access_token&lt;/code&gt; of the user. I will write a different blog to explain how to get that.&lt;/p&gt;\n\n&lt;h3&gt;1) Do full initial synch of events&lt;/h3&gt;\n\n&lt;p&gt;It has the following steps - \n  * Fetch a new &lt;code&gt;access_token&lt;/code&gt; if the token has expired.\n  * Create the service authorization object which will be used for fetching the events.&lt;/p&gt;\n\n&lt;p&gt;Ref code for &lt;code&gt;service authorization&lt;/code&gt;\n```ruby\ndef create_service_auth\n  #create service auth\n  @service = Google::Apis::CalendarV3::CalendarService.new\n  @service.authorization = token.google_secret.to_authorization\n  return unless token.expired?&lt;/p&gt;\n\n&lt;p&gt;new_access_token = @service.authorization.refresh! #refresh access_token\nend\n```&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Fetching all calendar events(past, present and future).&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The full sync is the original request for all the resources of the collection you want to synchronize.&lt;/li&gt;\n&lt;li&gt;In the response to the list operation, you will find a field called nextSyncToken representing a sync token. You&amp;#39;ll need to store the value of nextSyncToken. If the result set is too large and the response gets paginated, then the nextSyncToken field is present only on the very last page.&lt;/li&gt;\n&lt;li&gt;Depending on what your use case is, it will be better to perform this job as a background task.&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://developers.google.com/calendar/v3/reference/events/list\"&gt;Events: list API&lt;/a&gt; is used for this. The gem provides an easier method called &lt;code&gt;list_events&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Ref code for &lt;code&gt;syncing events&lt;/code&gt;\n&lt;code&gt;ruby\n  def get_events\n    @events_arr = []\n    @events_list = @service.list_events(&amp;#39;primary&amp;#39;, single_events: true, max_results: 500)\n    @sync_token = @events_list.next_sync_token\n    @page_token = @events_list.next_page_token\n    @events_arr &amp;lt;&amp;lt; @events_list.items\n    while @sync_token.blank?\n      @events_list = @service.list_events(&amp;#39;primary&amp;#39;, single_events: true, max_results: 500, page_token: @page_token)\n      @sync_token = @events_list.next_sync_token\n      @page_token = @events_list.next_page_token\n      @events_arr &amp;lt;&amp;lt; @events_list.items\n    end\n  end\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h3&gt;2) Create a webhook to receive push notifications&lt;/h3&gt;\n\n&lt;p&gt;After a full sync of events, the next step is to setup a Webhook so that google can inform us of the changes that we subscribe for.\nFor every user that links their calendar to the app, we will create a subscription so that we can be informed whenever there is a change in their calendar.&lt;/p&gt;\n\n&lt;p&gt;It has the following steps - \n  * Fetch a new &lt;code&gt;access_token&lt;/code&gt; if the token has expired.\n  * Create the service authorisation object which will be used for fetching the events, exactly same as shown above.\n  * Set up a Channel - It creates a channel with google and specifies the callback URL or the web-hook URL.\n  * Watch events - After the web-hook is set up, we need to specify what events we want to watch and also need to specify from which calendar.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ruby\ndef setup_channel\n  @channel = Google::Apis::CalendarV3::Channel.new(address: callback_url, id: channel_id, type: &amp;quot;web_hook&amp;quot;)\nend\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;callback_url&lt;/code&gt; - It can&amp;#39;t be localhost, it has to be a valid &lt;code&gt;https&lt;/code&gt; url. For testing purposes you can use &lt;a href=\"https://ngrok.com/\"&gt;ngrok&lt;/a&gt;.\n&lt;code&gt;channel_id&lt;/code&gt; - This is a UUID - &lt;code&gt;SecureRandom.uuid&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ruby\n  def watch_events\n    time_min = DateTime.now.rfc3339\n    @webhook = @service.watch_event(&amp;#39;primary&amp;#39;, @channel, single_events: true, time_min: time_min)\n  end\n&lt;/code&gt;\n&lt;code&gt;primary&lt;/code&gt; - refers to the &lt;code&gt;primary&lt;/code&gt; calendar of the user.\n&lt;code&gt;single_events&lt;/code&gt; - Setting it to true also gives all events belonging to 1 single recurring event.&lt;/p&gt;\n\n&lt;p&gt;Now, whenever there will be any change in the primary calendar of the user google will hit the registered web-hook for the user.&lt;/p&gt;\n\n&lt;p&gt;In the request Google will pass &lt;code&gt;X-Goog-Resource-ID&lt;/code&gt; and &lt;code&gt;X-Goog-Channel-ID&lt;/code&gt;. We would have to hit the &lt;code&gt;list_events&lt;/code&gt; API again to fetch the changed events data for that user.&lt;/p&gt;\n\n&lt;p&gt;Only difference will be that instead of passing the page token like we did earlier, we would pass the &lt;code&gt;sync_token&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ruby\n  def get_events\n    @events_list = @service.list_events(&amp;#39;primary&amp;#39;, single_events: true, max_results: 2500, sync_token: sync_token)\n  end\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h3&gt;3) Saving X-Goog-Resource-ID &amp;amp; X-Goog-Channel-ID&lt;/h3&gt;\n\n&lt;p&gt;When we created the web-hook google will return us with a &lt;code&gt;resource_id&lt;/code&gt;, &lt;code&gt;resource_uri&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;(that we created). We need to save all this data so that we can get to know for which user the events have changed.\nAlso the channel expires in around 1 week so we need to keep creating new web-hooks before it expires.&lt;/p&gt;\n\n&lt;h3&gt;3) Deleting the events with status &lt;code&gt;cancelled&lt;/code&gt;&lt;/h3&gt;\n\n&lt;p&gt;This is the flow that took me some time to understand. So what happens when a user changes the time of their event or has the user changed a single event or all the events in a recurring event. What google does is that \n* if the user changes a single event, then google keeps the &lt;code&gt;calendar_id&lt;/code&gt; as same.\n* if the user changes a recurring event and selects &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;following events&lt;/code&gt; as option then the &lt;code&gt;calendar_id&lt;/code&gt; changes for all the events. Hence, in this case we need to delete the old events and add new events in our system. So, this is a check that you will have to add when saving the calendar events in your system.&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s it - It&amp;#39;s quite messy if you are trying to figure it out from scratch and I hope this article will help you all.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "2a348462-af75-11e4-abe9-22000b3d0989", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs3qov", "is_robot_indexable": true, "report_reasons": null, "author": "ydshmmt", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs3qov/integrating_with_google_calendar_in_a_rails_app/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gs3qov/integrating_with_google_calendar_in_a_rails_app/", "subreddit_subscribers": 44253, "created_utc": 1590661600.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hello there.\n\nI'm trying to set up some metrics monitoring on Heroku which would eventually be wired to Grafana Cloud. The formation on Heroku is multi-dyno (one web dyno running Rails and two dynos for some workers), with dynos potentially scaling up (especially web dyno).\n\nI've gave a shot at setting up Prometheus, trying out different Ruby gems ([discourse/prometheus_exporter](https://github.com/discourse/prometheus_exporter/) and [prometheus/client_ruby](https://github.com/prometheus/client_ruby/)) but with no luck. The problem I'm facing is that dynos are isolated, so even both of these gems have multi process support, it just doesn't work on Heroku. E.g., the official Prometheus client has `DirectFileStore` which writes to the same file on the filesystem so that different processes can write to it and then expose the same metrics when `/metrics` is called. This doesn't work on Heroku because each dyno gets its own filesystem, so the file can't be shared.\n\nAnother option I've looked into potentially is using StatsD, but that will require running a deamon parallel with the Rails app or workers.\n\nWas anyone in a similar situation before? Or do you use something totally different for your metrics for Heroku apps?\n\nThanks in advance!", "author_fullname": "t2_hp07f", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Monitoring multi-dyno Heroku app", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "hide_score": false, "name": "t3_gs3n7t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590689953.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello there.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to set up some metrics monitoring on Heroku which would eventually be wired to Grafana Cloud. The formation on Heroku is multi-dyno (one web dyno running Rails and two dynos for some workers), with dynos potentially scaling up (especially web dyno).&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve gave a shot at setting up Prometheus, trying out different Ruby gems (&lt;a href=\"https://github.com/discourse/prometheus_exporter/\"&gt;discourse/prometheus_exporter&lt;/a&gt; and &lt;a href=\"https://github.com/prometheus/client_ruby/\"&gt;prometheus/client_ruby&lt;/a&gt;) but with no luck. The problem I&amp;#39;m facing is that dynos are isolated, so even both of these gems have multi process support, it just doesn&amp;#39;t work on Heroku. E.g., the official Prometheus client has &lt;code&gt;DirectFileStore&lt;/code&gt; which writes to the same file on the filesystem so that different processes can write to it and then expose the same metrics when &lt;code&gt;/metrics&lt;/code&gt; is called. This doesn&amp;#39;t work on Heroku because each dyno gets its own filesystem, so the file can&amp;#39;t be shared.&lt;/p&gt;\n\n&lt;p&gt;Another option I&amp;#39;ve looked into potentially is using StatsD, but that will require running a deamon parallel with the Rails app or workers.&lt;/p&gt;\n\n&lt;p&gt;Was anyone in a similar situation before? Or do you use something totally different for your metrics for Heroku apps?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs3n7t", "is_robot_indexable": true, "report_reasons": null, "author": "Pritilender", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs3n7t/monitoring_multidyno_heroku_app/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gs3n7t/monitoring_multidyno_heroku_app/", "subreddit_subscribers": 44253, "created_utc": 1590661153.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I have various slack bots and little project apps and I feel like I am a little bit antiquated as I host them on a digital ocean VPS and deploy using capistrano. All the cool kids these days are on about containers and I'm wondering if I'm missing out.\n\nMy way works... And it's relatively easy to understand. But I guess one big drawback is that there is a decent amount of setup and config on my host. If I had to start over, there are nginx config files to make, databases to manually install and set up, specific ruby versions to install, etc.\n\nI've kind of given up on heroku because a $10 digital ocean VPS seems a better value than $7 per app. There are various cloud services out there, but pricing is not all that easy to figure out and they seem pretty complicated. \n\nI'm tempted to redo my apps using Dokku to get containers going easily on a digital ocean box, one nice thing there is that if I ever did need to burn down and start over containers make the setup a lot easier. \n\nI'm curious what others are doing for low cost hosting of small projects these days.", "author_fullname": "t2_4higu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How are you hosting small apps these days?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gs0hbh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590673865.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have various slack bots and little project apps and I feel like I am a little bit antiquated as I host them on a digital ocean VPS and deploy using capistrano. All the cool kids these days are on about containers and I&amp;#39;m wondering if I&amp;#39;m missing out.&lt;/p&gt;\n\n&lt;p&gt;My way works... And it&amp;#39;s relatively easy to understand. But I guess one big drawback is that there is a decent amount of setup and config on my host. If I had to start over, there are nginx config files to make, databases to manually install and set up, specific ruby versions to install, etc.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve kind of given up on heroku because a $10 digital ocean VPS seems a better value than $7 per app. There are various cloud services out there, but pricing is not all that easy to figure out and they seem pretty complicated. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m tempted to redo my apps using Dokku to get containers going easily on a digital ocean box, one nice thing there is that if I ever did need to burn down and start over containers make the setup a lot easier. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m curious what others are doing for low cost hosting of small projects these days.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs0hbh", "is_robot_indexable": true, "report_reasons": null, "author": "chadcf", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs0hbh/how_are_you_hosting_small_apps_these_days/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gs0hbh/how_are_you_hosting_small_apps_these_days/", "subreddit_subscribers": 44253, "created_utc": 1590645065.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Howdy all!   I'm currently working in the WordPress space on the frontend. I spent a few months about a decade ago deep-diving into Ruby and Rails before moving on to focusing more on FE and WordPress. That's paid off, as the work pays quite well and it seems like there's a decent amount of it out there. \n\nBut I'm still curious about the \"what-if\" I'd stayed with RoR. I never got too-too deep into Rails back then, but I remember really loving Ruby.   I'm wondering if anyone has moved from this frontend track to RoR. \n\nA few questions if I may:\n\nHow long would it take to get decent with RoR \u2014\u00a0decent as in employable. Skill-wise now, I've been doing frontend for 10 years or so, I'm probably intermediate-level with React/Vue, to give you some benchmark to go on. I'm definitely not a beginner, but I'm not a backend programmer either.\n\nThere's so many posts about the job market from 1-2-3-4+ years ago, with lots of different opinions. The Covid19 situation not withstanding, anyone got an opinion on the 2020-2021 job market? \n\nThanks!\n\nps: I recognize I'm talking about leaving one of the current hottest spaces (React / frontend) and going to a far less hot area, but still interested in perspectives.", "author_fullname": "t2_gx9z9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anyone move from frontend to learn RoR?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gs4jsj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590694156.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Howdy all!   I&amp;#39;m currently working in the WordPress space on the frontend. I spent a few months about a decade ago deep-diving into Ruby and Rails before moving on to focusing more on FE and WordPress. That&amp;#39;s paid off, as the work pays quite well and it seems like there&amp;#39;s a decent amount of it out there. &lt;/p&gt;\n\n&lt;p&gt;But I&amp;#39;m still curious about the &amp;quot;what-if&amp;quot; I&amp;#39;d stayed with RoR. I never got too-too deep into Rails back then, but I remember really loving Ruby.   I&amp;#39;m wondering if anyone has moved from this frontend track to RoR. &lt;/p&gt;\n\n&lt;p&gt;A few questions if I may:&lt;/p&gt;\n\n&lt;p&gt;How long would it take to get decent with RoR \u2014\u00a0decent as in employable. Skill-wise now, I&amp;#39;ve been doing frontend for 10 years or so, I&amp;#39;m probably intermediate-level with React/Vue, to give you some benchmark to go on. I&amp;#39;m definitely not a beginner, but I&amp;#39;m not a backend programmer either.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s so many posts about the job market from 1-2-3-4+ years ago, with lots of different opinions. The Covid19 situation not withstanding, anyone got an opinion on the 2020-2021 job market? &lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n\n&lt;p&gt;ps: I recognize I&amp;#39;m talking about leaving one of the current hottest spaces (React / frontend) and going to a far less hot area, but still interested in perspectives.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs4jsj", "is_robot_indexable": true, "report_reasons": null, "author": "saltcod", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs4jsj/anyone_move_from_frontend_to_learn_ror/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gs4jsj/anyone_move_from_frontend_to_learn_ror/", "subreddit_subscribers": 44253, "created_utc": 1590665356.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Over ten years ago, we invited our community to participate in the first survey about the state of deploying Ruby on Rails applications. Over the years, we've evolved this to include questions about tools, frameworks, and workflows in order to see how the environment is changing.\n\nTo view previous results: [https://rails-hosting.com/](https://rails-hosting.com/)\n\nTo take the 2020 survey visit [https://planetargon.survey.fm/rails-survey-2020](https://planetargon.survey.fm/rails-survey-2020)\n\nThanks in advance for helping spread the word!", "author_fullname": "t2_l6up", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "OPEN: 2020 Ruby on Rails Developer Community Survey", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_grlcry", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590620672.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Over ten years ago, we invited our community to participate in the first survey about the state of deploying Ruby on Rails applications. Over the years, we&amp;#39;ve evolved this to include questions about tools, frameworks, and workflows in order to see how the environment is changing.&lt;/p&gt;\n\n&lt;p&gt;To view previous results: &lt;a href=\"https://rails-hosting.com/\"&gt;https://rails-hosting.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;To take the 2020 survey visit &lt;a href=\"https://planetargon.survey.fm/rails-survey-2020\"&gt;https://planetargon.survey.fm/rails-survey-2020&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance for helping spread the word!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "grlcry", "is_robot_indexable": true, "report_reasons": null, "author": "robbyrussell", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/grlcry/open_2020_ruby_on_rails_developer_community_survey/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/grlcry/open_2020_ruby_on_rails_developer_community_survey/", "subreddit_subscribers": 44253, "created_utc": 1590591872.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hi guys\n\nThe title more or less says it all. I am contemplating using graphql-ruby and rails for a project that involves a social network mobile app built in react native.\n\nI put little stock in flavour of the month tech so I don't want just jump ship and go with something like Hasura or other BaaS solutions but I do want to be critical enough to ask if Rails is the best solution in this case?  \n\n\nAny opinions are welcome!  \nThanks!", "author_fullname": "t2_nt4f4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Would Rails be considered a good option as api backend for a social network mobile app?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gs1bxt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590678150.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi guys&lt;/p&gt;\n\n&lt;p&gt;The title more or less says it all. I am contemplating using graphql-ruby and rails for a project that involves a social network mobile app built in react native.&lt;/p&gt;\n\n&lt;p&gt;I put little stock in flavour of the month tech so I don&amp;#39;t want just jump ship and go with something like Hasura or other BaaS solutions but I do want to be critical enough to ask if Rails is the best solution in this case?  &lt;/p&gt;\n\n&lt;p&gt;Any opinions are welcome!&lt;br/&gt;\nThanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs1bxt", "is_robot_indexable": true, "report_reasons": null, "author": "Eunoia_R", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs1bxt/would_rails_be_considered_a_good_option_as_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gs1bxt/would_rails_be_considered_a_good_option_as_api/", "subreddit_subscribers": 44253, "created_utc": 1590649350.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hello All,\n\nI\u2019m about to start a new project and I\u2019m scoping out options for various parts. The project will contain a front end web app and a backend API which would be used by a mobile app. Normally, I\u2019d use devise for the front end and devise token with for the backend, but I\u2019m considering firebase auth to move the authentication part out of this application. \n\nThe intention is to use a traditional rails front end with sessions, and the api is to be consumed solely for the mobile app. \n\nHas anybody got any tips on firebase authentication in this way? The firebase docs show javascript examples for authentication. I\u2019m not keen on turning the front end into a full javascript consumer of the api since it increases the complexity of the application (but I\u2019m not completely against this idea). The original plan was to use sprinklings of stimulus on the front end, but I\u2019m happy to use react or vue. \n\nAfter spending a day looking at options I\u2019m thinking that this isn\u2019t realistic in 2020, with firebase, but it\u2019d work with the devise solution. \n\nI\u2019m just looking for thoughts and ideas. \n\nThanks :)\n\n*edit typo", "author_fullname": "t2_mv8ry", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Firebase Authentication", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gs2s0u", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590685579.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello All,&lt;/p&gt;\n\n&lt;p&gt;I\u2019m about to start a new project and I\u2019m scoping out options for various parts. The project will contain a front end web app and a backend API which would be used by a mobile app. Normally, I\u2019d use devise for the front end and devise token with for the backend, but I\u2019m considering firebase auth to move the authentication part out of this application. &lt;/p&gt;\n\n&lt;p&gt;The intention is to use a traditional rails front end with sessions, and the api is to be consumed solely for the mobile app. &lt;/p&gt;\n\n&lt;p&gt;Has anybody got any tips on firebase authentication in this way? The firebase docs show javascript examples for authentication. I\u2019m not keen on turning the front end into a full javascript consumer of the api since it increases the complexity of the application (but I\u2019m not completely against this idea). The original plan was to use sprinklings of stimulus on the front end, but I\u2019m happy to use react or vue. &lt;/p&gt;\n\n&lt;p&gt;After spending a day looking at options I\u2019m thinking that this isn\u2019t realistic in 2020, with firebase, but it\u2019d work with the devise solution. &lt;/p&gt;\n\n&lt;p&gt;I\u2019m just looking for thoughts and ideas. &lt;/p&gt;\n\n&lt;p&gt;Thanks :)&lt;/p&gt;\n\n&lt;p&gt;*edit typo&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs2s0u", "is_robot_indexable": true, "report_reasons": null, "author": "glapworth", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs2s0u/firebase_authentication/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gs2s0u/firebase_authentication/", "subreddit_subscribers": 44253, "created_utc": 1590656779.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Good afternoon people! I hope this sub reddit is active because I have a problem and it would be great if you can help me.\n\nIt turns out that when trying to make an online purchase with a debit card, it pops up a notification on my bank app saying that the page is in BLACKLIST, exactly it says: \"identifier of the business included in Blacklist\".\n\nWhat I need to know is the following:\n\n\\-Is it possible to alter the merchant's identifier without being part of the team of trade programmers? (like a VPN for web pages ID)\n\n\\-What solution can you think of to circumvent the system and be able to buy on this page (I swear it is not illegal! )\n\n&amp;#x200B;\n\nI appreciate your opinions in advance!", "author_fullname": "t2_69kzcgxq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Identifier of the bussines included in BLACKLIST", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gs5map", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.25, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590698740.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Good afternoon people! I hope this sub reddit is active because I have a problem and it would be great if you can help me.&lt;/p&gt;\n\n&lt;p&gt;It turns out that when trying to make an online purchase with a debit card, it pops up a notification on my bank app saying that the page is in BLACKLIST, exactly it says: &amp;quot;identifier of the business included in Blacklist&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;What I need to know is the following:&lt;/p&gt;\n\n&lt;p&gt;-Is it possible to alter the merchant&amp;#39;s identifier without being part of the team of trade programmers? (like a VPN for web pages ID)&lt;/p&gt;\n\n&lt;p&gt;-What solution can you think of to circumvent the system and be able to buy on this page (I swear it is not illegal! )&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I appreciate your opinions in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gs5map", "is_robot_indexable": true, "report_reasons": null, "author": "HomoSapien-sa", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gs5map/identifier_of_the_bussines_included_in_blacklist/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gs5map/identifier_of_the_bussines_included_in_blacklist/", "subreddit_subscribers": 44253, "created_utc": 1590669940.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I am new to rails, and the version I am using is 6, I faced an issue with referring to my static files like CSS and javascript, I tried:\n\n\\-  typical ways\n\n`&lt;link href='assets/stylesheets/customs.css' rel='stylesheet' type='text/css'&gt;`\n\nor\n\n`&lt;link href='javascript/stylesheets/customs.css' rel='stylesheet' type='text/css'&gt;`\n\nor\n\n`&lt;link href='vendor/stylesheets/customs.css' rel='stylesheet' type='text/css'&gt;`\n\n\\- import in application.css\n\n`@import './theme/css/clean-blog.css';`\n\nand none of them work, any suggestions, please?", "author_fullname": "t2_3qtdu6xo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to use your custom static files?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_grxmgn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590661444.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am new to rails, and the version I am using is 6, I faced an issue with referring to my static files like CSS and javascript, I tried:&lt;/p&gt;\n\n&lt;p&gt;-  typical ways&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;lt;link href=&amp;#39;assets/stylesheets/customs.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; type=&amp;#39;text/css&amp;#39;&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;or&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;lt;link href=&amp;#39;javascript/stylesheets/customs.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; type=&amp;#39;text/css&amp;#39;&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;or&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;lt;link href=&amp;#39;vendor/stylesheets/customs.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; type=&amp;#39;text/css&amp;#39;&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;- import in application.css&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;@import &amp;#39;./theme/css/clean-blog.css&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;and none of them work, any suggestions, please?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "grxmgn", "is_robot_indexable": true, "report_reasons": null, "author": "iaidar", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/grxmgn/how_to_use_your_custom_static_files/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/grxmgn/how_to_use_your_custom_static_files/", "subreddit_subscribers": 44253, "created_utc": 1590632644.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_grxmgn", "before": null}}