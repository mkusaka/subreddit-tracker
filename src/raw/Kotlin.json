{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_jxff6u5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Coroutines and exceptions: things to know", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g3mbju", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587239633.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rockandnull.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g3mbju", "is_robot_indexable": true, "report_reasons": null, "author": "palebt", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g3mbju/coroutines_and_exceptions_things_to_know/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.rockandnull.com/coroutines-and-exceptions/", "subreddit_subscribers": 30261, "created_utc": 1587210833.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "MVI in Kotlin Multiplatform \u2014 part 1", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g35sle", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587171245.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "badootech.badoo.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g35sle", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g35sle/mvi_in_kotlin_multiplatform_part_1/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://badootech.badoo.com/mvi-in-kotlin-multiplatform-part-1-1-of-3-205c6feb4ac7", "subreddit_subscribers": 30261, "created_utc": 1587142445.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I'm new to Android/Kotlin and try to understand ListView:\n\nlet say my App shows:\n\nyellow\n\nblue\n\norange\n\n....\n\nin a ListView.\n\n\\-&gt; when I use:\n\nmylist.setOnItemClickListener **{** parent, **view**, position, id **-&gt;**  \n Toast.makeText(this, \"Clicked item/fruit is **:\"**\\+**\" \"**\\+position+**view**,Toast.*LENGTH\\_SHORT*).show()  \n}\n\n&amp;#x200B;\n\nI get the position (0/1/2/3/...) + the view as an array from the clicked item.\n\nHow can I get the text-value that is shown  (e.g. \"yellow\", \"blue\" or \"orange\")  of the item?\n\nthx", "author_fullname": "t2_asc7l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Newbie-question] [Kotlin/Android] ListView + setOnItemClickListener -&gt; how to get value?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g3bths", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587190643.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m new to Android/Kotlin and try to understand ListView:&lt;/p&gt;\n\n&lt;p&gt;let say my App shows:&lt;/p&gt;\n\n&lt;p&gt;yellow&lt;/p&gt;\n\n&lt;p&gt;blue&lt;/p&gt;\n\n&lt;p&gt;orange&lt;/p&gt;\n\n&lt;p&gt;....&lt;/p&gt;\n\n&lt;p&gt;in a ListView.&lt;/p&gt;\n\n&lt;p&gt;-&amp;gt; when I use:&lt;/p&gt;\n\n&lt;p&gt;mylist.setOnItemClickListener &lt;strong&gt;{&lt;/strong&gt; parent, &lt;strong&gt;view&lt;/strong&gt;, position, id &lt;strong&gt;-&amp;gt;&lt;/strong&gt;&lt;br/&gt;\n Toast.makeText(this, &amp;quot;Clicked item/fruit is &lt;strong&gt;:&amp;quot;&lt;/strong&gt;+&lt;strong&gt;&amp;quot; &amp;quot;&lt;/strong&gt;+position+&lt;strong&gt;view&lt;/strong&gt;,Toast.&lt;em&gt;LENGTH_SHORT&lt;/em&gt;).show()&lt;br/&gt;\n}&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I get the position (0/1/2/3/...) + the view as an array from the clicked item.&lt;/p&gt;\n\n&lt;p&gt;How can I get the text-value that is shown  (e.g. &amp;quot;yellow&amp;quot;, &amp;quot;blue&amp;quot; or &amp;quot;orange&amp;quot;)  of the item?&lt;/p&gt;\n\n&lt;p&gt;thx&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g3bths", "is_robot_indexable": true, "report_reasons": null, "author": "pangux", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g3bths/newbiequestion_kotlinandroid_listview/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g3bths/newbiequestion_kotlinandroid_listview/", "subreddit_subscribers": 30261, "created_utc": 1587161843.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi, I'm on the volunteer team for one of the top 20 projects in the German government's Wir Vs Virus Hackathon. We (nexd) are developing a platform to coordinate grocery shopping helpers for all those who cannot leave the house at the moment. The twist here is that even people without a smartphone and technical knowledge can submit their shopping list via a simple phone call. This way, we reach the people most affected by the crisis: seniors.\n\nWe are about to launch the beta test but are in dire need of Kotlin developers. If you are interested in helping (our slack is in English) please contact mail@nexd.app More information about the project (German only, sadly): https://www.youtube.com/watch?v=0PmuLrq4Hno\n\nThank you and stay healthy!", "author_fullname": "t2_r22hp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "In march, the german government started a hackathon to develop solutions for the corona crisis. We are one of the top 20 solutions and are in need of volunteers for Kotlin development!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g2jwq3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 70, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 70, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587088505.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m on the volunteer team for one of the top 20 projects in the German government&amp;#39;s Wir Vs Virus Hackathon. We (nexd) are developing a platform to coordinate grocery shopping helpers for all those who cannot leave the house at the moment. The twist here is that even people without a smartphone and technical knowledge can submit their shopping list via a simple phone call. This way, we reach the people most affected by the crisis: seniors.&lt;/p&gt;\n\n&lt;p&gt;We are about to launch the beta test but are in dire need of Kotlin developers. If you are interested in helping (our slack is in English) please contact &lt;a href=\"mailto:mail@nexd.app\"&gt;mail@nexd.app&lt;/a&gt; More information about the project (German only, sadly): &lt;a href=\"https://www.youtube.com/watch?v=0PmuLrq4Hno\"&gt;https://www.youtube.com/watch?v=0PmuLrq4Hno&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Thank you and stay healthy!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g2jwq3", "is_robot_indexable": true, "report_reasons": null, "author": "Jouleys", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g2jwq3/in_march_the_german_government_started_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g2jwq3/in_march_the_german_government_started_a/", "subreddit_subscribers": 30261, "created_utc": 1587059705.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_qtig0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gradle &amp; Kotlin \u2014 create tests artifact", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g2ygpq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587143376.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g2ygpq", "is_robot_indexable": true, "report_reasons": null, "author": "Fewthp", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g2ygpq/gradle_kotlin_create_tests_artifact/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com//gradle-kotlin-create-tests-artifact-1e22bb00b1e1?source=friends_link&amp;sk=5bc717c40eb14b24c190e686d2834f21", "subreddit_subscribers": 30261, "created_utc": 1587114576.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "gRPC, meet Kotlin | Google Cloud Blog", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g2mbe9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587095799.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "cloud.google.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g2mbe9", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g2mbe9/grpc_meet_kotlin_google_cloud_blog/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://cloud.google.com/blog/products/application-development/use-grpc-with-kotlin", "subreddit_subscribers": 30261, "created_utc": 1587066999.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_4ekb4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My first Kotlin Project: ServerNeat - a standalone Mock/Stub server that is able to generate dynamic data", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g2hhxd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587081141.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g2hhxd", "is_robot_indexable": true, "report_reasons": null, "author": "nomemory", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g2hhxd/my_first_kotlin_project_serverneat_a_standalone/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/nomemory/serverneat", "subreddit_subscribers": 30261, "created_utc": 1587052341.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A comparison between Kotlin Native approach and native solutions by Marek Multarzy\u0144ski", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g2memo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/u6u_MaQBxAs?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "A comparison between Kotlin Native approach and native solutions by Marek Multarzy\u0144ski", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/u6u_MaQBxAs?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Kt. Academy", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/u6u_MaQBxAs/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCunuRhW4uV8M98mNa9v6u0Q"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/u6u_MaQBxAs?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/g2memo", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587096068.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g2memo", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g2memo/a_comparison_between_kotlin_native_approach_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=u6u_MaQBxAs", "subreddit_subscribers": 30261, "created_utc": 1587067268.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "A comparison between Kotlin Native approach and native solutions by Marek Multarzy\u0144ski", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/u6u_MaQBxAs?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "Kt. Academy", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/u6u_MaQBxAs/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCunuRhW4uV8M98mNa9v6u0Q"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_3hfuxt4m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Implementing Retrofit in Android | Request methods | Part 6", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g2l4z8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/Bke3kmujg_A?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 459, "scrolling": false, "height": 344}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Implementing Retrofit in Android | Request methods | Part 6", "html": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/Bke3kmujg_A?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 344, "width": 459, "version": "1.0", "author_name": "teachmesome", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/Bke3kmujg_A/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCIWC3bm2eKj0wLGFULhzKdA"}, "type": "youtube.com"}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/Bke3kmujg_A?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 459, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/g2l4z8", "height": 344}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587092241.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g2l4z8", "is_robot_indexable": true, "report_reasons": null, "author": "teachmesome_com", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g2l4z8/implementing_retrofit_in_android_request_methods/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=Bke3kmujg_A", "subreddit_subscribers": 30261, "created_utc": 1587063441.0, "num_crossposts": 0, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "title": "Implementing Retrofit in Android | Request methods | Part 6", "html": "&lt;iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/Bke3kmujg_A?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 344, "width": 459, "version": "1.0", "author_name": "teachmesome", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/Bke3kmujg_A/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCIWC3bm2eKj0wLGFULhzKdA"}, "type": "youtube.com"}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Let's say I have a class with a single type parameter, T.\n\nIn this class, I can use T? when I want a value of type T to be nullable.\n\nBut T could already be a nullable type. \n\nMy question is, how do I do the opposite, i.e. safely represent that a member function that returns type T is NOT nullable even if T happens to be nullable?\n\nOr if that is confusing let me phrase it in another way: given intended construction like MyClass&lt;MyType?&gt;(), how could I write a function inside MyClass that returns a (MyType) instead of a (MyType?)\n\nThanks for your help", "author_fullname": "t2_3in3vb2t", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Question about nullable generics", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g2e4mh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587069532.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s say I have a class with a single type parameter, T.&lt;/p&gt;\n\n&lt;p&gt;In this class, I can use T? when I want a value of type T to be nullable.&lt;/p&gt;\n\n&lt;p&gt;But T could already be a nullable type. &lt;/p&gt;\n\n&lt;p&gt;My question is, how do I do the opposite, i.e. safely represent that a member function that returns type T is NOT nullable even if T happens to be nullable?&lt;/p&gt;\n\n&lt;p&gt;Or if that is confusing let me phrase it in another way: given intended construction like MyClass&amp;lt;MyType?&amp;gt;(), how could I write a function inside MyClass that returns a (MyType) instead of a (MyType?)&lt;/p&gt;\n\n&lt;p&gt;Thanks for your help&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g2e4mh", "is_robot_indexable": true, "report_reasons": null, "author": "vvv561", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g2e4mh/question_about_nullable_generics/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g2e4mh/question_about_nullable_generics/", "subreddit_subscribers": 30261, "created_utc": 1587040732.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_g2e4mh", "before": null}}