{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hey,\n\nI am currently studying Kotlin but having a hard time since I feel every tutorial I find somehow expects you to be a bit experienced in Java. In which I have zero experience. Are there any books which really offer the reader an extensive overview of the language? I prefer reading over videos.  \nThanks!", "author_fullname": "t2_17ytn3kx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "New to Kotlin", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ftjw23", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585851473.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey,&lt;/p&gt;\n\n&lt;p&gt;I am currently studying Kotlin but having a hard time since I feel every tutorial I find somehow expects you to be a bit experienced in Java. In which I have zero experience. Are there any books which really offer the reader an extensive overview of the language? I prefer reading over videos.&lt;br/&gt;\nThanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ftjw23", "is_robot_indexable": true, "report_reasons": null, "author": "Keef_Beef", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ftjw23/new_to_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/ftjw23/new_to_kotlin/", "subreddit_subscribers": 29351, "created_utc": 1585822673.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I am thinking of a making a math solver app, mostly linear algebra stuff, matrixes, vectors etc.\n\nIf i were to make something like symbolab/wolfram (much less complex, only some features), would it be resonable to do the computation on the mobile app, or should i do it with api calls to a backend?\n\nThank you :)", "author_fullname": "t2_fd6zf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Math solver android app question", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ftkzsu", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585857104.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am thinking of a making a math solver app, mostly linear algebra stuff, matrixes, vectors etc.&lt;/p&gt;\n\n&lt;p&gt;If i were to make something like symbolab/wolfram (much less complex, only some features), would it be resonable to do the computation on the mobile app, or should i do it with api calls to a backend?&lt;/p&gt;\n\n&lt;p&gt;Thank you :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ftkzsu", "is_robot_indexable": true, "report_reasons": null, "author": "HavardP", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ftkzsu/math_solver_android_app_question/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/ftkzsu/math_solver_android_app_question/", "subreddit_subscribers": 29351, "created_utc": 1585828304.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_xx6r9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Setting up Google Authentication in a Kotlin Android App", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ft1wft", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585783799.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "codesource.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ft1wft", "is_robot_indexable": true, "report_reasons": null, "author": "deven_rathore", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ft1wft/setting_up_google_authentication_in_a_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://codesource.io/setting-up-google-authentication-in-a-kotlin-android-app/", "subreddit_subscribers": 29351, "created_utc": 1585754999.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_16ybf2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "`scan()` and `scanReduce()` in Kotlin 1.3.70!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fsywl7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Starting from 1.3.70, the Kotlin standard library contains the useful &amp;#39;scan()&amp;#39; and &amp;#39;scanReduce()&amp;#39; functions. Read more details about them in this thread &lt;a href=\"https://twitter.com/hashtag/KotlinTips?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#KotlinTips&lt;/a&gt; &lt;a href=\"https://t.co/sngv2FrrAz\"&gt;pic.twitter.com/sngv2FrrAz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kotlin (@kotlin) &lt;a href=\"https://twitter.com/kotlin/status/1245300637916594179?ref_src=twsrc%5Etfw\"&gt;April 1, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 274}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/kotlin/status/1245300637916594179", "author_name": "Kotlin", "height": 274, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Starting from 1.3.70, the Kotlin standard library contains the useful &amp;#39;scan()&amp;#39; and &amp;#39;scanReduce()&amp;#39; functions. Read more details about them in this thread &lt;a href=\"https://twitter.com/hashtag/KotlinTips?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#KotlinTips&lt;/a&gt; &lt;a href=\"https://t.co/sngv2FrrAz\"&gt;pic.twitter.com/sngv2FrrAz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kotlin (@kotlin) &lt;a href=\"https://twitter.com/kotlin/status/1245300637916594179?ref_src=twsrc%5Etfw\"&gt;April 1, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/kotlin", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Starting from 1.3.70, the Kotlin standard library contains the useful &amp;#39;scan()&amp;#39; and &amp;#39;scanReduce()&amp;#39; functions. Read more details about them in this thread &lt;a href=\"https://twitter.com/hashtag/KotlinTips?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#KotlinTips&lt;/a&gt; &lt;a href=\"https://t.co/sngv2FrrAz\"&gt;pic.twitter.com/sngv2FrrAz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kotlin (@kotlin) &lt;a href=\"https://twitter.com/kotlin/status/1245300637916594179?ref_src=twsrc%5Etfw\"&gt;April 1, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/fsywl7", "height": 274}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585773166.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsywl7", "is_robot_indexable": true, "report_reasons": null, "author": "gopalakshintala", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fsywl7/scan_and_scanreduce_in_kotlin_1370/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/kotlin/status/1245300637916594179?s=20", "subreddit_subscribers": 29351, "created_utc": 1585744366.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/kotlin/status/1245300637916594179", "author_name": "Kotlin", "height": 274, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Starting from 1.3.70, the Kotlin standard library contains the useful &amp;#39;scan()&amp;#39; and &amp;#39;scanReduce()&amp;#39; functions. Read more details about them in this thread &lt;a href=\"https://twitter.com/hashtag/KotlinTips?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#KotlinTips&lt;/a&gt; &lt;a href=\"https://t.co/sngv2FrrAz\"&gt;pic.twitter.com/sngv2FrrAz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kotlin (@kotlin) &lt;a href=\"https://twitter.com/kotlin/status/1245300637916594179?ref_src=twsrc%5Etfw\"&gt;April 1, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/kotlin", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_9m25m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "\ud83c\udf89 GraphQL Kotlin 2.0.0!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fsru6c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 49, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 49, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585740879.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsru6c", "is_robot_indexable": true, "report_reasons": null, "author": "smyrick", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fsru6c/graphql_kotlin_200/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/ExpediaGroup/graphql-kotlin/releases/tag/2.0.0", "subreddit_subscribers": 29351, "created_utc": 1585712079.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I'd like to say \"all good 'til Coroutines\".  \nJokes asides, in Java I'm used to `CompletableFuture`s.  \nSo I was using that one in Kotlin too\n\n```\nmyList\n  .map {\n    CompletableFuture\n      .supplyAsync { it.fn() }\n      .orTimeout(1, SECONDS)\n      .exceptionally { emptyList() }\n  }\n  .toList()\n  .flatMap { it.join() }\n\n```\n\nNow, in Kotlin, all what I could come up is\n\n```\nmyList\n  .map {\n    try {\n      withTimeout(1000) {\n        async {\n          it.fn()\n        }\n      }\n    } catch (e: Exception) {\n      async { emptyList() }\n    }\n  }\n  .awaitAll()\n  .asSequence()\n  .flatten()\n```\n\nHonestly this looks a bit weird on a functional flow.  \nWhat am I missing?", "author_fullname": "t2_ln0qf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Async Coroutine error handling", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ft1ro1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585783383.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d like to say &amp;quot;all good &amp;#39;til Coroutines&amp;quot;.&lt;br/&gt;\nJokes asides, in Java I&amp;#39;m used to &lt;code&gt;CompletableFuture&lt;/code&gt;s.&lt;br/&gt;\nSo I was using that one in Kotlin too&lt;/p&gt;\n\n&lt;p&gt;```\nmyList\n  .map {\n    CompletableFuture\n      .supplyAsync { it.fn() }\n      .orTimeout(1, SECONDS)\n      .exceptionally { emptyList() }\n  }\n  .toList()\n  .flatMap { it.join() }&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;Now, in Kotlin, all what I could come up is&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nmyList\n  .map {\n    try {\n      withTimeout(1000) {\n        async {\n          it.fn()\n        }\n      }\n    } catch (e: Exception) {\n      async { emptyList() }\n    }\n  }\n  .awaitAll()\n  .asSequence()\n  .flatten()\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Honestly this looks a bit weird on a functional flow.&lt;br/&gt;\nWhat am I missing?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ft1ro1", "is_robot_indexable": true, "report_reasons": null, "author": "lppedd", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ft1ro1/async_coroutine_error_handling/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/ft1ro1/async_coroutine_error_handling/", "subreddit_subscribers": 29351, "created_utc": 1585754583.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "So, im making an for the purpose of calculating numbers in a game while the user plays the game.\n\nFor that i've made a floating button that draws over all apps.\n\nThe issue im facing is that the button isn't clickable, and when i set a listener it crashes.\n\nHeres the code.. thanks for help.\n\nMainActivity.kt\n\n    package com.example.rokcalkot\n    \n    import android.content.Intent\n    import android.app.Activity\n    import android.os.Build\n    import android.provider.Settings\n    import android.view.View\n    import android.content.pm.PackageManager\n    import android.os.Bundle\n    import android.util.Log\n    import android.widget.Button\n    import android.widget.Toast\n    import androidx.appcompat.app.AlertDialog\n    import androidx.appcompat.app.AppCompatActivity\n    import android.net.Uri\n    import androidx.core.app.ActivityCompat\n    import androidx.core.content.ContextCompat\n    import kotlinx.android.synthetic.main.onscreen.*\n    \n    import android.graphics.Canvas\n    import android.graphics.Color\n    import android.graphics.Bitmap\n    \n    \n    class MainActivity : AppCompatActivity() {\n    \n        val requestCode = 201\n    \n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_main)\n    \n            //-------------------------- LAUNCH BUTTON BTN ---------------------------\n            val btnL = findViewById&lt;Button&gt;(R.id.btnShow)\n            val btnS= findViewById&lt;Button&gt;(R.id.btnService)\n    \n            /*btnS.setOnClickListener{\n                Toast.makeText(this@MainActivity, \"CLICKBLE\", Toast.LENGTH_LONG).show()\n            }*/\n            //btnShow?.setOnClickListener { Toast.makeText(this@MainActivity, \"Bannaa\", Toast.LENGTH_LONG).show() }\n            btnL.setOnClickListener {\n                if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M &amp;&amp; !Settings.canDrawOverlays(this)) {\n                    val intent = Intent(\n                        Settings.ACTION_MANAGE_OVERLAY_PERMISSION,\n                        Uri.parse(\"package:$packageName\")\n                    )\n    \n                    startActivityForResult(intent, requestCode)\n                    //startActivityForResult(intent2,requestCode1)\n                } else {\n                    startService(Intent(this, MyFloatingWindowService::class.java))\n    \n                    finish()\n                }\n                //Toast.makeText(this@MainActivity, \"Bannaa\", Toast.LENGTH_LONG).show()\n                }\n    \n            fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n                super.onActivityResult(requestCode, resultCode, data)\n                if (resultCode == Activity.RESULT_OK) {\n                    startService(Intent(this, MyFloatingWindowService::class.java))\n                    finish()\n                }\n            }\n        }\n    }\n\n&amp;#x200B;\n\nActivity\\_Main.xml\n\n    &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n    &lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:theme=\"@style/AppTheme\"\n        tools:context=\".MainActivity\"&gt;\n    \n        &lt;Button\n            android:id=\"@+id/btnShow\"\n            android:layout_width=\"95dp\"\n            android:layout_height=\"96dp\"\n            android:text=\"Start Rok Cal\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintHorizontal_bias=\"0.5\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" /&gt;\n    \n        &lt;TextView\n            android:id=\"@+id/textView\"\n            android:layout_width=\"141dp\"\n            android:layout_height=\"45dp\"\n            android:text=\"Welcome to Rok Cal\"\n            app:layout_constraintBottom_toTopOf=\"@+id/btnShow\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintHorizontal_bias=\"0.5\"\n            app:layout_constraintStart_toStartOf=\"parent\" /&gt;\n    \n    &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n\n&amp;#x200B;\n\nMyFloatingWindowService.kt\n\n    package com.example.rokcalkot\n    import android.annotation.SuppressLint\n    import android.app.Service\n    import android.content.Context\n    import android.content.Intent\n    import android.graphics.PixelFormat\n    import android.os.Build\n    import android.os.IBinder\n    import android.view.*\n    import android.widget.Toast\n    import kotlin.math.roundToInt\n    \n    class MyFloatingWindowService : Service() {\n    \n        var LAYOUT_FLAG: Int = 0\n    \n        lateinit var floatingView: View\n        lateinit var floatingViewMain: View\n        lateinit var manager: WindowManager\n        lateinit var params: WindowManager.LayoutParams\n        override fun onBind(intent: Intent?): IBinder? {\n            TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates.\n    \n        }\n    \n    \n        override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\n    \n            LAYOUT_FLAG = if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {\n                WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY\n            } else {\n                WindowManager.LayoutParams.TYPE_PHONE\n            }\n            val params = WindowManager.LayoutParams(\n                WindowManager.LayoutParams.WRAP_CONTENT,\n                WindowManager.LayoutParams.WRAP_CONTENT,\n                LAYOUT_FLAG,\n                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE,\n                PixelFormat.TRANSLUCENT\n            )\n    \n            this.params = params\n            //Specify the view position\n            params.gravity =\n                Gravity.TOP or Gravity.CENTER //Initially view will be added to top-left corner\n            params.x = 0\n            params.y = 0\n    \n    \n            manager = getSystemService(Context.WINDOW_SERVICE) as WindowManager\n            floatingView = LayoutInflater.from(this).inflate(R.layout.onscreen, null)\n            floatingViewMain = LayoutInflater.from(this).inflate(R.layout.activity_main, null)\n            manager.addView(floatingView, params)\n            floatingView.findViewById&lt;View&gt;(R.id.btnService)?.setOnTouchListener(object :\n                View.OnTouchListener {\n                var initialX: Int? = null\n                var initialY: Int? = null\n                var initialTouchX: Float? = null\n                var initialTouchY: Float? = null\n    \n    \n                @SuppressLint(\"ClickableViewAccessibility\")\n                override fun onTouch(view: View?, motionEvent: MotionEvent?): Boolean {\n                    //Toast.makeText(this@MyFloatingWindowService, \"Clickble\", Toast.LENGTH_SHORT).show()\n                    when (motionEvent!!.action) {\n                        MotionEvent.ACTION_DOWN -&gt; {\n                            //remember the initial position.\n                            initialX = params.x\n                            initialY = params.y\n    \n    \n                            //get the touch location\n                            //Toast.makeText(this@MyFloatingWindowService, \"ACTION DOWN\", Toast.LENGTH_SHORT).show()\n                            initialTouchX = motionEvent!!.getRawX()\n                            initialTouchY = motionEvent!!.getRawY()\n                            return true\n                        }\n                        MotionEvent.ACTION_UP -&gt; {\n                            //Toast.makeText(this@MyFloatingWindowService, \"ACTION UP\", Toast.LENGTH_SHORT).show()\n                            val Xdiff = (motionEvent.getRawX() - initialTouchX!!)\n                            val Ydiff = (motionEvent.getRawY() - initialTouchY!!)\n                            return true\n                        }\n                        MotionEvent.ACTION_MOVE -&gt; {\n                            //Calculate the X and Y coordinates of the view.\n    \n                            params.x = initialX!!.plus((motionEvent.getRawX() - initialTouchX!!)).roundToInt()\n                            params.y = initialY!!.plus((motionEvent.getRawY() - initialTouchY!!).roundToInt())\n                            manager.updateViewLayout(floatingView, params)\n                            return true\n                        }\n    \n                    }\n                    return false\n                }\n            })\n    \n    \n            return START_NOT_STICKY\n        }\n    \n    \n    \n        fun CHECK() {\n            Toast.makeText(this@MyFloatingWindowService, \"Clickble\", Toast.LENGTH_LONG).show()\n        }\n    \n        override fun onDestroy() {\n            super.onDestroy()\n            manager.removeView(floatingView)\n        }\n    \n    \n    }\n\n&amp;#x200B;\n\nonscreen.xml --&gt; the xml that the service interacts with which draws over all apps.\n\n    &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n    &lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:theme=\"@style/AppTheme\"\n        tools:context=\".MainActivity\"\n        android:launchMode=\"singleTask\"&gt;\n    \n        &lt;Button\n            android:id=\"@+id/btnService\"\n            android:layout_width=\"51dp\"\n            android:layout_height=\"62dp\"\n            android:clickable=\"true\"\n            android:text=\"Start Service\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintHorizontal_bias=\"0.0\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintVertical_bias=\"0.522\" /&gt;\n    \n    &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;", "author_fullname": "t2_177ehw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Help] View/Button ins't clickable", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ft5vwi", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585795189.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So, im making an for the purpose of calculating numbers in a game while the user plays the game.&lt;/p&gt;\n\n&lt;p&gt;For that i&amp;#39;ve made a floating button that draws over all apps.&lt;/p&gt;\n\n&lt;p&gt;The issue im facing is that the button isn&amp;#39;t clickable, and when i set a listener it crashes.&lt;/p&gt;\n\n&lt;p&gt;Heres the code.. thanks for help.&lt;/p&gt;\n\n&lt;p&gt;MainActivity.kt&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package com.example.rokcalkot\n\nimport android.content.Intent\nimport android.app.Activity\nimport android.os.Build\nimport android.provider.Settings\nimport android.view.View\nimport android.content.pm.PackageManager\nimport android.os.Bundle\nimport android.util.Log\nimport android.widget.Button\nimport android.widget.Toast\nimport androidx.appcompat.app.AlertDialog\nimport androidx.appcompat.app.AppCompatActivity\nimport android.net.Uri\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.ContextCompat\nimport kotlinx.android.synthetic.main.onscreen.*\n\nimport android.graphics.Canvas\nimport android.graphics.Color\nimport android.graphics.Bitmap\n\n\nclass MainActivity : AppCompatActivity() {\n\n    val requestCode = 201\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        //-------------------------- LAUNCH BUTTON BTN ---------------------------\n        val btnL = findViewById&amp;lt;Button&amp;gt;(R.id.btnShow)\n        val btnS= findViewById&amp;lt;Button&amp;gt;(R.id.btnService)\n\n        /*btnS.setOnClickListener{\n            Toast.makeText(this@MainActivity, &amp;quot;CLICKBLE&amp;quot;, Toast.LENGTH_LONG).show()\n        }*/\n        //btnShow?.setOnClickListener { Toast.makeText(this@MainActivity, &amp;quot;Bannaa&amp;quot;, Toast.LENGTH_LONG).show() }\n        btnL.setOnClickListener {\n            if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.M &amp;amp;&amp;amp; !Settings.canDrawOverlays(this)) {\n                val intent = Intent(\n                    Settings.ACTION_MANAGE_OVERLAY_PERMISSION,\n                    Uri.parse(&amp;quot;package:$packageName&amp;quot;)\n                )\n\n                startActivityForResult(intent, requestCode)\n                //startActivityForResult(intent2,requestCode1)\n            } else {\n                startService(Intent(this, MyFloatingWindowService::class.java))\n\n                finish()\n            }\n            //Toast.makeText(this@MainActivity, &amp;quot;Bannaa&amp;quot;, Toast.LENGTH_LONG).show()\n            }\n\n        fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n            super.onActivityResult(requestCode, resultCode, data)\n            if (resultCode == Activity.RESULT_OK) {\n                startService(Intent(this, MyFloatingWindowService::class.java))\n                finish()\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Activity_Main.xml&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;\n&amp;lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;\n    xmlns:app=&amp;quot;http://schemas.android.com/apk/res-auto&amp;quot;\n    xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot;\n    android:layout_width=&amp;quot;match_parent&amp;quot;\n    android:layout_height=&amp;quot;match_parent&amp;quot;\n    android:theme=&amp;quot;@style/AppTheme&amp;quot;\n    tools:context=&amp;quot;.MainActivity&amp;quot;&amp;gt;\n\n    &amp;lt;Button\n        android:id=&amp;quot;@+id/btnShow&amp;quot;\n        android:layout_width=&amp;quot;95dp&amp;quot;\n        android:layout_height=&amp;quot;96dp&amp;quot;\n        android:text=&amp;quot;Start Rok Cal&amp;quot;\n        app:layout_constraintBottom_toBottomOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintEnd_toEndOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintHorizontal_bias=&amp;quot;0.5&amp;quot;\n        app:layout_constraintStart_toStartOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintTop_toTopOf=&amp;quot;parent&amp;quot; /&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&amp;quot;@+id/textView&amp;quot;\n        android:layout_width=&amp;quot;141dp&amp;quot;\n        android:layout_height=&amp;quot;45dp&amp;quot;\n        android:text=&amp;quot;Welcome to Rok Cal&amp;quot;\n        app:layout_constraintBottom_toTopOf=&amp;quot;@+id/btnShow&amp;quot;\n        app:layout_constraintEnd_toEndOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintHorizontal_bias=&amp;quot;0.5&amp;quot;\n        app:layout_constraintStart_toStartOf=&amp;quot;parent&amp;quot; /&amp;gt;\n\n&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;MyFloatingWindowService.kt&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package com.example.rokcalkot\nimport android.annotation.SuppressLint\nimport android.app.Service\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.PixelFormat\nimport android.os.Build\nimport android.os.IBinder\nimport android.view.*\nimport android.widget.Toast\nimport kotlin.math.roundToInt\n\nclass MyFloatingWindowService : Service() {\n\n    var LAYOUT_FLAG: Int = 0\n\n    lateinit var floatingView: View\n    lateinit var floatingViewMain: View\n    lateinit var manager: WindowManager\n    lateinit var params: WindowManager.LayoutParams\n    override fun onBind(intent: Intent?): IBinder? {\n        TODO(&amp;quot;not implemented&amp;quot;) //To change body of created functions use File | Settings | File Templates.\n\n    }\n\n\n    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\n\n        LAYOUT_FLAG = if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.O) {\n            WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY\n        } else {\n            WindowManager.LayoutParams.TYPE_PHONE\n        }\n        val params = WindowManager.LayoutParams(\n            WindowManager.LayoutParams.WRAP_CONTENT,\n            WindowManager.LayoutParams.WRAP_CONTENT,\n            LAYOUT_FLAG,\n            WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE,\n            PixelFormat.TRANSLUCENT\n        )\n\n        this.params = params\n        //Specify the view position\n        params.gravity =\n            Gravity.TOP or Gravity.CENTER //Initially view will be added to top-left corner\n        params.x = 0\n        params.y = 0\n\n\n        manager = getSystemService(Context.WINDOW_SERVICE) as WindowManager\n        floatingView = LayoutInflater.from(this).inflate(R.layout.onscreen, null)\n        floatingViewMain = LayoutInflater.from(this).inflate(R.layout.activity_main, null)\n        manager.addView(floatingView, params)\n        floatingView.findViewById&amp;lt;View&amp;gt;(R.id.btnService)?.setOnTouchListener(object :\n            View.OnTouchListener {\n            var initialX: Int? = null\n            var initialY: Int? = null\n            var initialTouchX: Float? = null\n            var initialTouchY: Float? = null\n\n\n            @SuppressLint(&amp;quot;ClickableViewAccessibility&amp;quot;)\n            override fun onTouch(view: View?, motionEvent: MotionEvent?): Boolean {\n                //Toast.makeText(this@MyFloatingWindowService, &amp;quot;Clickble&amp;quot;, Toast.LENGTH_SHORT).show()\n                when (motionEvent!!.action) {\n                    MotionEvent.ACTION_DOWN -&amp;gt; {\n                        //remember the initial position.\n                        initialX = params.x\n                        initialY = params.y\n\n\n                        //get the touch location\n                        //Toast.makeText(this@MyFloatingWindowService, &amp;quot;ACTION DOWN&amp;quot;, Toast.LENGTH_SHORT).show()\n                        initialTouchX = motionEvent!!.getRawX()\n                        initialTouchY = motionEvent!!.getRawY()\n                        return true\n                    }\n                    MotionEvent.ACTION_UP -&amp;gt; {\n                        //Toast.makeText(this@MyFloatingWindowService, &amp;quot;ACTION UP&amp;quot;, Toast.LENGTH_SHORT).show()\n                        val Xdiff = (motionEvent.getRawX() - initialTouchX!!)\n                        val Ydiff = (motionEvent.getRawY() - initialTouchY!!)\n                        return true\n                    }\n                    MotionEvent.ACTION_MOVE -&amp;gt; {\n                        //Calculate the X and Y coordinates of the view.\n\n                        params.x = initialX!!.plus((motionEvent.getRawX() - initialTouchX!!)).roundToInt()\n                        params.y = initialY!!.plus((motionEvent.getRawY() - initialTouchY!!).roundToInt())\n                        manager.updateViewLayout(floatingView, params)\n                        return true\n                    }\n\n                }\n                return false\n            }\n        })\n\n\n        return START_NOT_STICKY\n    }\n\n\n\n    fun CHECK() {\n        Toast.makeText(this@MyFloatingWindowService, &amp;quot;Clickble&amp;quot;, Toast.LENGTH_LONG).show()\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        manager.removeView(floatingView)\n    }\n\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;onscreen.xml --&amp;gt; the xml that the service interacts with which draws over all apps.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;\n&amp;lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;\n    xmlns:app=&amp;quot;http://schemas.android.com/apk/res-auto&amp;quot;\n    xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot;\n    android:layout_width=&amp;quot;match_parent&amp;quot;\n    android:layout_height=&amp;quot;match_parent&amp;quot;\n    android:theme=&amp;quot;@style/AppTheme&amp;quot;\n    tools:context=&amp;quot;.MainActivity&amp;quot;\n    android:launchMode=&amp;quot;singleTask&amp;quot;&amp;gt;\n\n    &amp;lt;Button\n        android:id=&amp;quot;@+id/btnService&amp;quot;\n        android:layout_width=&amp;quot;51dp&amp;quot;\n        android:layout_height=&amp;quot;62dp&amp;quot;\n        android:clickable=&amp;quot;true&amp;quot;\n        android:text=&amp;quot;Start Service&amp;quot;\n        app:layout_constraintBottom_toBottomOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintEnd_toEndOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintHorizontal_bias=&amp;quot;0.0&amp;quot;\n        app:layout_constraintStart_toStartOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintTop_toTopOf=&amp;quot;parent&amp;quot;\n        app:layout_constraintVertical_bias=&amp;quot;0.522&amp;quot; /&amp;gt;\n\n&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ft5vwi", "is_robot_indexable": true, "report_reasons": null, "author": "XploRs", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ft5vwi/help_viewbutton_inst_clickable/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/ft5vwi/help_viewbutton_inst_clickable/", "subreddit_subscribers": 29351, "created_utc": 1585766389.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin Coroutined", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ft5i2s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585793992.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ft5i2s", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/ft5i2s/kotlin_coroutined/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@shelbyc0hen/kotlin-coroutined-8c57acd3c45e", "subreddit_subscribers": 29351, "created_utc": 1585765192.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_13bifoz7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "\u201cHow to Combine Kotlin Flows\u201d #androiddev #androiddevelopment #kotlin #roomdatabase #kotlin_multiplatform #programming #androiddeveloper", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fssg5b", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585743351.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fssg5b", "is_robot_indexable": true, "report_reasons": null, "author": "siva_ganesh", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fssg5b/how_to_combine_kotlin_flows_androiddev/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/better-programming/learn-how-to-combine-kotlin-flows-317849a71d3e?source=friends_link&amp;sk=fc6ee71b885f67afe4dae695cb179a0b", "subreddit_subscribers": 29351, "created_utc": 1585714551.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hello there, \n\n So I am software engineer and I started with C++, transitioned to Java in Uni, and I used a lot of Perl and Bash during my job that started around 6 months ago. I started developing Android apps about 1 year ago in Java, and never looked at Kotlin. A couple of days ago, I finally gave it a chance before starting a new project (might as well start with a new programming language as well). \n\n I am amazed by the syntax and the language features. Everything that I like in C-like languages and that is good in scripting languages is combined in Kotlin. I even had an idea to implement a new language of my own (just as a learning exercise) and some stuff that I wanted to bring \"new\" to the table, they are implemented in Kotlin. \n\n My questions are, is it actually that much better of a coding experience as it looks? What are some drawbacks that you experience ? Also, why do you thing it's not that popular ? \n\n&amp;#x200B;\n\nJust joined the subreddit and I am still having a look around so please be kind :)", "author_fullname": "t2_5uqbc0en", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why does Kotlin look so good ? Am I missing something?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_frr50s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 67, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 67, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585605022.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello there, &lt;/p&gt;\n\n&lt;p&gt;So I am software engineer and I started with C++, transitioned to Java in Uni, and I used a lot of Perl and Bash during my job that started around 6 months ago. I started developing Android apps about 1 year ago in Java, and never looked at Kotlin. A couple of days ago, I finally gave it a chance before starting a new project (might as well start with a new programming language as well). &lt;/p&gt;\n\n&lt;p&gt;I am amazed by the syntax and the language features. Everything that I like in C-like languages and that is good in scripting languages is combined in Kotlin. I even had an idea to implement a new language of my own (just as a learning exercise) and some stuff that I wanted to bring &amp;quot;new&amp;quot; to the table, they are implemented in Kotlin. &lt;/p&gt;\n\n&lt;p&gt;My questions are, is it actually that much better of a coding experience as it looks? What are some drawbacks that you experience ? Also, why do you thing it&amp;#39;s not that popular ? &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Just joined the subreddit and I am still having a look around so please be kind :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "frr50s", "is_robot_indexable": true, "report_reasons": null, "author": "VMihaiDev", "discussion_type": null, "num_comments": 64, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/frr50s/why_does_kotlin_look_so_good_am_i_missing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/frr50s/why_does_kotlin_look_so_good_am_i_missing/", "subreddit_subscribers": 29351, "created_utc": 1585576222.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_frr50s", "before": null}}