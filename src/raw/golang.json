{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_qnt5p69", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Olric v0.3.0-beta.6 is out: Distributed cache and in-memory key/value data store. It can be used both as an embedded Go library and as a language-independent service.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc7gfg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1602872966.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/buraksezer/olric/releases/tag/v0.3.0-beta.6", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc7gfg", "is_robot_indexable": true, "report_reasons": null, "author": "mastabadtomm", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc7gfg/olric_v030beta6_is_out_distributed_cache_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/buraksezer/olric/releases/tag/v0.3.0-beta.6", "subreddit_subscribers": 127765, "created_utc": 1602844166.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_upj0q40", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to customize Go's HTTP client", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc5a1i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1602860921.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rafallorenz.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://rafallorenz.com/go/customize-http-client/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc5a1i", "is_robot_indexable": true, "report_reasons": null, "author": "_vardius", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc5a1i/how_to_customize_gos_http_client/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rafallorenz.com/go/customize-http-client/", "subreddit_subscribers": 127765, "created_utc": 1602832121.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "How do you people manage logger throughout whole application?\n\nBeen using Uber's zap for past 4 years, initially via dependency injection:\n\n    type myImpl struct {\n        logger *zap.Logger\n    }\n    \n    func (impl myImpl) myFunct() {\n        impl.logger.Info(\"Hello world!\")\n    }\n\nBut for past year [via context](https://github.com/cantor-systems/zapctx):\n\n    func myFunc(ctx context.Context) {\n        zapctx.Info(ctx, \"Hello world!)\n    }\n\nThe latter approach works, however it implies global context and whenever you need to access logger, you need to pass context to that function.\n\nHowever, I have grown a bit doubtful of that and I am not sure if this is the way to go in the long term as for example I would like to add additional field \"service\", that contains the struct name, for all logger method calls in that struct implementation, however that is not doable with context logger, only with dependency inversion.\n\nSo I was wondering, how do you do it?. What are your approaches to logging?", "author_fullname": "t2_hfd4j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you log?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc7mkx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602873902.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;How do you people manage logger throughout whole application?&lt;/p&gt;\n\n&lt;p&gt;Been using Uber&amp;#39;s zap for past 4 years, initially via dependency injection:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type myImpl struct {\n    logger *zap.Logger\n}\n\nfunc (impl myImpl) myFunct() {\n    impl.logger.Info(&amp;quot;Hello world!&amp;quot;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But for past year &lt;a href=\"https://github.com/cantor-systems/zapctx\"&gt;via context&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func myFunc(ctx context.Context) {\n    zapctx.Info(ctx, &amp;quot;Hello world!)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The latter approach works, however it implies global context and whenever you need to access logger, you need to pass context to that function.&lt;/p&gt;\n\n&lt;p&gt;However, I have grown a bit doubtful of that and I am not sure if this is the way to go in the long term as for example I would like to add additional field &amp;quot;service&amp;quot;, that contains the struct name, for all logger method calls in that struct implementation, however that is not doable with context logger, only with dependency inversion.&lt;/p&gt;\n\n&lt;p&gt;So I was wondering, how do you do it?. What are your approaches to logging?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc7mkx", "is_robot_indexable": true, "report_reasons": null, "author": "IamJustAWizard", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc7mkx/how_do_you_log/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jc7mkx/how_do_you_log/", "subreddit_subscribers": 127765, "created_utc": 1602845102.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I've got a quick question more in terms of code quality, but it's a go code, so I decided to post it here.\n\nI have such piece of code:\n\n    shortVar := some.Nested.Struct.Field\n    ... // do some processing (around 40 lines if that shortVar)\n    ...\n    some.Nested.Struct.Field = shortVar // is it a bad practice?\n\nI'm wondering if it's a bad practice to do so? Should I do it like in the above example or should I use `some.Nested.Struct.Field` everywhere?", "author_fullname": "t2_1f7u5617", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is it a bad practice to assign variable to other and then reassign it back?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc7att", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602872106.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve got a quick question more in terms of code quality, but it&amp;#39;s a go code, so I decided to post it here.&lt;/p&gt;\n\n&lt;p&gt;I have such piece of code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;shortVar := some.Nested.Struct.Field\n... // do some processing (around 40 lines if that shortVar)\n...\nsome.Nested.Struct.Field = shortVar // is it a bad practice?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m wondering if it&amp;#39;s a bad practice to do so? Should I do it like in the above example or should I use &lt;code&gt;some.Nested.Struct.Field&lt;/code&gt; everywhere?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc7att", "is_robot_indexable": true, "report_reasons": null, "author": "0x113", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc7att/is_it_a_bad_practice_to_assign_variable_to_other/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jc7att/is_it_a_bad_practice_to_assign_variable_to_other/", "subreddit_subscribers": 127765, "created_utc": 1602843306.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I've been teaching my son programming and go and he has progressed to the point that I'm trying to find some actual real world problems for him to swing at. Can anyone suggest some good open source projects that have a decemt sized backlog of issues I could unleash him at?", "author_fullname": "t2_6vgfu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Looking for project to contribute bugfixes", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc5b2o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602861067.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been teaching my son programming and go and he has progressed to the point that I&amp;#39;m trying to find some actual real world problems for him to swing at. Can anyone suggest some good open source projects that have a decemt sized backlog of issues I could unleash him at?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc5b2o", "is_robot_indexable": true, "report_reasons": null, "author": "timlin45", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc5b2o/looking_for_project_to_contribute_bugfixes/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jc5b2o/looking_for_project_to_contribute_bugfixes/", "subreddit_subscribers": 127765, "created_utc": 1602832267.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_6gkybq01", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I wrote a tool to dump SSL Informations and test TLS Versions like SSLShopper e SSL Labs", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_jc96nk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1602881318.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/msfidelis/cassler", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc96nk", "is_robot_indexable": true, "report_reasons": null, "author": "D0ct0rrr", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc96nk/i_wrote_a_tool_to_dump_ssl_informations_and_test/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/msfidelis/cassler", "subreddit_subscribers": 127765, "created_utc": 1602852518.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm currently following this:\n\n[https://medium.com/utility-warehouse-technology/advanced-grpc-error-usage-1b37398f0ff4](https://medium.com/utility-warehouse-technology/advanced-grpc-error-usage-1b37398f0ff4)\n\nI'm able to correctly add the details to the Error, but when I make a request to my endpoint via Postman. The body is just:  \n{  \n \"error\": \"This is an error!\"  \n}\n\nWhat steps should I follow to get the details to show up in the body as well?", "author_fullname": "t2_7c57940r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Returning gRPC error status WithDetails, but not showing up in body?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc0521", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602838711.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m currently following this:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://medium.com/utility-warehouse-technology/advanced-grpc-error-usage-1b37398f0ff4\"&gt;https://medium.com/utility-warehouse-technology/advanced-grpc-error-usage-1b37398f0ff4&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m able to correctly add the details to the Error, but when I make a request to my endpoint via Postman. The body is just:&lt;br/&gt;\n{&lt;br/&gt;\n &amp;quot;error&amp;quot;: &amp;quot;This is an error!&amp;quot;&lt;br/&gt;\n}&lt;/p&gt;\n\n&lt;p&gt;What steps should I follow to get the details to show up in the body as well?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc0521", "is_robot_indexable": true, "report_reasons": null, "author": "decahydrate_", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc0521/returning_grpc_error_status_withdetails_but_not/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jc0521/returning_grpc_error_status_withdetails_but_not/", "subreddit_subscribers": 127765, "created_utc": 1602809911.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "So, I am very new to golang and I am working on a personal project of mine. So I am using gorm for db stuffs and whenever I do any operation gorm automatically  populate created, modified and deleted column depending on what operation I do. Now I want to also populate some custom columns of mine whenever any operation is done. Does anyone knows best and easy solution for this?", "author_fullname": "t2_2h2hqjxd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Need help with GORM!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc3bj6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.73, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602851575.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So, I am very new to golang and I am working on a personal project of mine. So I am using gorm for db stuffs and whenever I do any operation gorm automatically  populate created, modified and deleted column depending on what operation I do. Now I want to also populate some custom columns of mine whenever any operation is done. Does anyone knows best and easy solution for this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc3bj6", "is_robot_indexable": true, "report_reasons": null, "author": "ghostwitch123", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jc3bj6/need_help_with_gorm/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jc3bj6/need_help_with_gorm/", "subreddit_subscribers": 127765, "created_utc": 1602822775.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3hn41pel", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Academic] Software Development Survey (Software Developers)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jc61ak", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "SampleSize", "selftext": "We are a team of researchers interested in improving software development.\n\nIf you are a software developer, we ask for your help by answering questions about your contribution and motivation.\n\nAnswering\u00a0[these questions](https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j)\u00a0is estimated to take about 10 minutes of your time.\n\nThree of the participants will receive a 50$ gift card.\n\nThank you so much for your help in\u00a0answering \u00a0[the\u00a0survey](https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j).  \nIf you are familiar with a person that might be interested in the survey, please forward this message.\n\nProf. Dror Feitelson, Prof. Avi Kluger, \u00a0Ph.D. candidate Idan Amit\n\nPS.\n\nA while ago we posted a survey on open source development. Due to the responses, we modified it to software development in general.", "author_fullname": "t2_3hn41pel", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Academic] Software Development Survey (Software Developers)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/SampleSize", "hidden": false, "pwls": 6, "link_flair_css_class": "academic", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jbsju0", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Academic", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602813085.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.SampleSize", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We are a team of researchers interested in improving software development.&lt;/p&gt;\n\n&lt;p&gt;If you are a software developer, we ask for your help by answering questions about your contribution and motivation.&lt;/p&gt;\n\n&lt;p&gt;Answering\u00a0&lt;a href=\"https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j\"&gt;these questions&lt;/a&gt;\u00a0is estimated to take about 10 minutes of your time.&lt;/p&gt;\n\n&lt;p&gt;Three of the participants will receive a 50$ gift card.&lt;/p&gt;\n\n&lt;p&gt;Thank you so much for your help in\u00a0answering \u00a0&lt;a href=\"https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j\"&gt;the\u00a0survey&lt;/a&gt;.&lt;br/&gt;\nIf you are familiar with a person that might be interested in the survey, please forward this message.&lt;/p&gt;\n\n&lt;p&gt;Prof. Dror Feitelson, Prof. Avi Kluger, \u00a0Ph.D. candidate Idan Amit&lt;/p&gt;\n\n&lt;p&gt;PS.&lt;/p&gt;\n\n&lt;p&gt;A while ago we posted a survey on open source development. Due to the responses, we modified it to software development in general.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "599bc8d2-1845-11e3-800b-12313d223dbc", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2tlqg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#609eaf", "id": "jbsju0", "is_robot_indexable": true, "report_reasons": null, "author": "idan_huji", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/SampleSize/comments/jbsju0/academic_software_development_survey_software/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/SampleSize/comments/jbsju0/academic_software_development_survey_software/", "subreddit_subscribers": 146119, "created_utc": 1602784285.0, "num_crossposts": 14, "media": null, "is_video": false}], "created": 1602864971.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.SampleSize", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "/r/SampleSize/comments/jbsju0/academic_software_development_survey_software/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc61ak", "is_robot_indexable": true, "report_reasons": null, "author": "idan_huji", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_jbsju0", "author_flair_text_color": null, "permalink": "/r/golang/comments/jc61ak/academic_software_development_survey_software/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/SampleSize/comments/jbsju0/academic_software_development_survey_software/", "subreddit_subscribers": 127765, "created_utc": 1602836171.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3rboflzg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Free offline solution to convert PDFs into audiobooks -", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jbmmga", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 87, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 87, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1602793824.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/Harry-027/go-audio", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jbmmga", "is_robot_indexable": true, "report_reasons": null, "author": "harry0027", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jbmmga/free_offline_solution_to_convert_pdfs_into/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/Harry-027/go-audio", "subreddit_subscribers": 127765, "created_utc": 1602765024.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jbmmga", "before": null}}