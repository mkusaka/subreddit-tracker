{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_bfzvc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to run slow RSpec files on Github Actions with parallel jobs by doing an auto split of the spec file by test examples", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 90, "top_awarded_type": null, "hide_score": false, "name": "t3_h9beb4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/1NtgE1_g9gvKnJk0br_quLei9BhFczHB2xHKVXn9Xdw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592235148.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "docs.knapsackpro.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8tpyNmqwZZoY32NTe65hnmjql4Qlfe5T24dJsuCG7Eg.jpg?auto=webp&amp;s=f7e8a61f951c0f2a364fe254ca5fe2d2de72c7bc", "width": 1448, "height": 937}, "resolutions": [{"url": "https://external-preview.redd.it/8tpyNmqwZZoY32NTe65hnmjql4Qlfe5T24dJsuCG7Eg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5472ab562b7d8713270e63473f58d3ee6f831300", "width": 108, "height": 69}, {"url": "https://external-preview.redd.it/8tpyNmqwZZoY32NTe65hnmjql4Qlfe5T24dJsuCG7Eg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2e863b950bed6ec05d36bbcbb986a871f775f1c1", "width": 216, "height": 139}, {"url": "https://external-preview.redd.it/8tpyNmqwZZoY32NTe65hnmjql4Qlfe5T24dJsuCG7Eg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0e7081da38e47a8bbc5ed319eca3cee63185c895", "width": 320, "height": 207}, {"url": "https://external-preview.redd.it/8tpyNmqwZZoY32NTe65hnmjql4Qlfe5T24dJsuCG7Eg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b9c02bfdbf8e5f826d638969e750c900e0af005c", "width": 640, "height": 414}, {"url": "https://external-preview.redd.it/8tpyNmqwZZoY32NTe65hnmjql4Qlfe5T24dJsuCG7Eg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ebf96785ba2b185e544daa309321b906802ceb85", "width": 960, "height": 621}, {"url": "https://external-preview.redd.it/8tpyNmqwZZoY32NTe65hnmjql4Qlfe5T24dJsuCG7Eg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=763bc31d928557c11df0da42acc305b2b50458c6", "width": 1080, "height": 698}], "variants": {}, "id": "EMS8rbzFRc0KwXT5RbX6uDEwUNNF1KNqYzVTDWOgp64"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9beb4", "is_robot_indexable": true, "report_reasons": null, "author": "ArturT", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h9beb4/how_to_run_slow_rspec_files_on_github_actions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://docs.knapsackpro.com/2020/how-to-run-slow-rspec-files-on-github-actions-with-parallel-jobs-by-doing-an-auto-split-of-the-spec-file-by-test-examples", "subreddit_subscribers": 65765, "created_utc": 1592206348.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_nrest", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "datoji - Remote JSON storage server. Create, Read, Update, Delete and Search JSON data.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": true, "name": "t3_h9fvqs", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/ruby", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/zVAe7JBTGkeIx8RFXlivCNEtpR2N8Cd7KMb2xge3bj0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592254812.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "datoji.dev", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/kpr5Q7bLlUck1FHYaLJK9SKeOitwO-IcegolUcNP1MI.jpg?auto=webp&amp;s=fedc3dae886daac1e645d4997c350e4a98ed5eee", "width": 300, "height": 300}, "resolutions": [{"url": "https://external-preview.redd.it/kpr5Q7bLlUck1FHYaLJK9SKeOitwO-IcegolUcNP1MI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8dfb32d26cfcd57b88c2f9f685d5483b1142e0dd", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/kpr5Q7bLlUck1FHYaLJK9SKeOitwO-IcegolUcNP1MI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=988bca595c53d177d4fbc23461f6a0e4b6851796", "width": 216, "height": 216}], "variants": {}, "id": "aDvG3pDbxaEL09XWMPlvgwLHCbvjmshCgDAjALun91o"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d57de81a-873c-11e9-9a25-0e18d14df676", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h9fvqs", "is_robot_indexable": true, "report_reasons": null, "author": "davidesantangelo", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h9fvqs/datoji_remote_json_storage_server_create_read/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://datoji.dev", "subreddit_subscribers": 65765, "created_utc": 1592226012.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Thanks for reading this. I have very little experience with Ruby.  I have a RedHat Linux server that has a homemade Ruby application running on it. The person who created it is long gone. It's started manually now, but I'd like it to start on reboot. I was going to add a cron job for the script, but it's started with the command \"rvmsudo bundle exec puma\". Is adding this to a \"@reboot\" cron job the best path here, and if so do I just put that path and command in a script?\n\n&amp;#x200B;\n\nThanks again, any help is appreciated.", "author_fullname": "t2_392or", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Noob ruby/Linux cron job question", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h93lk9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592203767.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for reading this. I have very little experience with Ruby.  I have a RedHat Linux server that has a homemade Ruby application running on it. The person who created it is long gone. It&amp;#39;s started manually now, but I&amp;#39;d like it to start on reboot. I was going to add a cron job for the script, but it&amp;#39;s started with the command &amp;quot;rvmsudo bundle exec puma&amp;quot;. Is adding this to a &amp;quot;@reboot&amp;quot; cron job the best path here, and if so do I just put that path and command in a script?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks again, any help is appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h93lk9", "is_robot_indexable": true, "report_reasons": null, "author": "schaefer", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h93lk9/noob_rubylinux_cron_job_question/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/h93lk9/noob_rubylinux_cron_job_question/", "subreddit_subscribers": 65765, "created_utc": 1592174967.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_pcq1n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a template for running a ruby app (sinatra) in Docker, feedback wanted", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_h8qmr3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/-8995lcmk3LSKw0E1oWY1AT9BB-9wAN3pPDBumrq9JQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592155487.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Z308sXOgEF0ug4MgKMCsrPLuH0PiaPlHvSN47S19H0E.jpg?auto=webp&amp;s=7cf9037b74f61b2184d91660455e44d3869e51ec", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/Z308sXOgEF0ug4MgKMCsrPLuH0PiaPlHvSN47S19H0E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7b8d5fe876280c53d6a6e02258266100625bfcc2", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/Z308sXOgEF0ug4MgKMCsrPLuH0PiaPlHvSN47S19H0E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=03395071269303efca9f4f48f17852c6d4775795", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/Z308sXOgEF0ug4MgKMCsrPLuH0PiaPlHvSN47S19H0E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=dd54b5519f3962fe68f821afd8ee66fd5fe867fe", "width": 320, "height": 320}], "variants": {}, "id": "b0AEMO90riQUWfJ87PySGhKicYpVy9WbqPU5p0uN4vE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h8qmr3", "is_robot_indexable": true, "report_reasons": null, "author": "sthorn_", "discussion_type": null, "num_comments": 31, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h8qmr3/i_made_a_template_for_running_a_ruby_app_sinatra/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/SebastianThorn/ruby-docker-skeleton", "subreddit_subscribers": 65765, "created_utc": 1592126687.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_74wps", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Puma NewRelic plugin to monitor pools", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_h8rsgh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/MmXlqSnzQ4_iUm3qWApz3vn9Xx6sG2s8tu-U_PtIZpA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1592161216.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Jo8-aGQPYpXWfNAEo6BcMVIS0nWVVDaEEhrpZLv2WSo.jpg?auto=webp&amp;s=02a4cc4b3a9a0b64e265b30e25cd46da63574724", "width": 300, "height": 300}, "resolutions": [{"url": "https://external-preview.redd.it/Jo8-aGQPYpXWfNAEo6BcMVIS0nWVVDaEEhrpZLv2WSo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b60ce8960abfecc8fce2c940bf4492e478ebf976", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/Jo8-aGQPYpXWfNAEo6BcMVIS0nWVVDaEEhrpZLv2WSo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=78db625921a77a70f90b7bc21a12a818630527e7", "width": 216, "height": 216}], "variants": {}, "id": "BygVTHcI-wxkiBwPeBYyc8ffQwFyBg7z5i8sFYUP9uY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h8rsgh", "is_robot_indexable": true, "report_reasons": null, "author": "akakees", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h8rsgh/puma_newrelic_plugin_to_monitor_pools/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/benoist/puma-newrelic", "subreddit_subscribers": 65765, "created_utc": 1592132416.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello! I am a PHP developer with few years experience and I want to switch to ruby and get a job as a junior ROR dev. I was hoping you could point me to some good and tested tutorials or courses where the focus is put on creating a real-life application.", "author_fullname": "t2_109fs9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Good (can be paid) courses for learning Ruby + Rails for PHP developer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h7p6tm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592011969.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello! I am a PHP developer with few years experience and I want to switch to ruby and get a job as a junior ROR dev. I was hoping you could point me to some good and tested tutorials or courses where the focus is put on creating a real-life application.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7p6tm", "is_robot_indexable": true, "report_reasons": null, "author": "cadocad", "discussion_type": null, "num_comments": 16, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h7p6tm/good_can_be_paid_courses_for_learning_ruby_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/h7p6tm/good_can_be_paid_courses_for_learning_ruby_rails/", "subreddit_subscribers": 65765, "created_utc": 1591983169.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Currently with ruby 2.7.1, when you do something like `Date.today.to_s(:long)` you'll get something like\n\n`June 09, 2020` \n\nBut with older versions of ruby (for instance 2.2.4), that format would look like this: \n\n`June 9, 2020`\n\nWithout that 0 padding on the day. Is there anyway to revert back to this old formatting, i.e **without** the 0 padding on the day? Without changing the `to_s(:long)` part and without going back to an older  version of ruby? \n\nOr is there anyway to specify that `:long` should follow this structure: `%B %e, %Y`\n\nAll help is appreciated!", "author_fullname": "t2_5av2fqxp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Reverting to an older string time format", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h7pq7v", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592013683.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Currently with ruby 2.7.1, when you do something like &lt;code&gt;Date.today.to_s(:long)&lt;/code&gt; you&amp;#39;ll get something like&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;June 09, 2020&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;But with older versions of ruby (for instance 2.2.4), that format would look like this: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;June 9, 2020&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Without that 0 padding on the day. Is there anyway to revert back to this old formatting, i.e &lt;strong&gt;without&lt;/strong&gt; the 0 padding on the day? Without changing the &lt;code&gt;to_s(:long)&lt;/code&gt; part and without going back to an older  version of ruby? &lt;/p&gt;\n\n&lt;p&gt;Or is there anyway to specify that &lt;code&gt;:long&lt;/code&gt; should follow this structure: &lt;code&gt;%B %e, %Y&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;All help is appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7pq7v", "is_robot_indexable": true, "report_reasons": null, "author": "tytonidae_", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h7pq7v/reverting_to_an_older_string_time_format/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/h7pq7v/reverting_to_an_older_string_time_format/", "subreddit_subscribers": 65765, "created_utc": 1591984883.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "    def two_sum?(array, value)\n    \tarray.sort! # O(nlogn)\n    \tarray.each do |element|\n    \t\treturn true if bsearch(array - [element], value - element) == true\n    \tend\n    \treturn false\n    end\n    \n    def bsearch(array, value)\n    \treturn false if array.empty?\n    \tmid_idx = array.length / 2\n    \tmid_value = array[mid_idx]\n    \treturn true if mid_value == value\n    \tmid_value &lt; value ? bsearch(array[0...mid_idx], value) : bsearch(array[mid_idx+1..-1], value)\n    end\n\nI'm trying to create a function that finds a two unique numbers in an array whose sum equals the value in the second argument. I believe my implementation has a time complexity of O(n log n). However, when I run it with another function whose time complexity is also O(n log n), the total time is way different (calculated using the Benchmark gem) using the same input. For my function, it takes about 0.9 seconds. For the other function, it is taking 0.003 seconds. Is there any error in my algorithm analysis? Is my implementation not O(n log n)?", "author_fullname": "t2_10m5e4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is my algorithm's time complexity O(n log n)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h7s4yg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.7, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592021427.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;def two_sum?(array, value)\n    array.sort! # O(nlogn)\n    array.each do |element|\n        return true if bsearch(array - [element], value - element) == true\n    end\n    return false\nend\n\ndef bsearch(array, value)\n    return false if array.empty?\n    mid_idx = array.length / 2\n    mid_value = array[mid_idx]\n    return true if mid_value == value\n    mid_value &amp;lt; value ? bsearch(array[0...mid_idx], value) : bsearch(array[mid_idx+1..-1], value)\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m trying to create a function that finds a two unique numbers in an array whose sum equals the value in the second argument. I believe my implementation has a time complexity of O(n log n). However, when I run it with another function whose time complexity is also O(n log n), the total time is way different (calculated using the Benchmark gem) using the same input. For my function, it takes about 0.9 seconds. For the other function, it is taking 0.003 seconds. Is there any error in my algorithm analysis? Is my implementation not O(n log n)?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7s4yg", "is_robot_indexable": true, "report_reasons": null, "author": "Orange2341", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h7s4yg/is_my_algorithms_time_complexity_on_log_n/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/h7s4yg/is_my_algorithms_time_complexity_on_log_n/", "subreddit_subscribers": 65765, "created_utc": 1591992627.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_xj3y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Spark Joy by Running Fewer Tests", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_h7cclo", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 34, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/m9VlKd9TDjJGHzqNlMN6MK1Rexx9DBOb9FTsg9MksV8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591958121.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "engineering.shopify.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/r0BzBfdcoXo_UTx1UlMq5mmIArlhKDqFsCMMgNRBTRU.jpg?auto=webp&amp;s=6fd4973cdbc91b383a52bb99434054382b421416", "width": 1024, "height": 683}, "resolutions": [{"url": "https://external-preview.redd.it/r0BzBfdcoXo_UTx1UlMq5mmIArlhKDqFsCMMgNRBTRU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=095d508ccb8102bba1bfd316e6c8ffbaaaa7d376", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/r0BzBfdcoXo_UTx1UlMq5mmIArlhKDqFsCMMgNRBTRU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=38d1129c674493ffd5110bdba21f06f30272e1da", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/r0BzBfdcoXo_UTx1UlMq5mmIArlhKDqFsCMMgNRBTRU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=959e6b2b0c10ddeb02b176f6a28b6a0c4853ecaa", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/r0BzBfdcoXo_UTx1UlMq5mmIArlhKDqFsCMMgNRBTRU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2afd47727f82652fb746c8042188cda973e2ceda", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/r0BzBfdcoXo_UTx1UlMq5mmIArlhKDqFsCMMgNRBTRU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9cdad72ceb52e56a50dd59fe41f91369155ce1c7", "width": 960, "height": 640}], "variants": {}, "id": "fqGRydxZXlXQ8HhzSmW3NAzmCgt4H8_EU7BC956aMyU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7cclo", "is_robot_indexable": true, "report_reasons": null, "author": "stanislavb", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h7cclo/spark_joy_by_running_fewer_tests/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://engineering.shopify.com/blogs/engineering/spark-joy-by-running-fewer-tests", "subreddit_subscribers": 65765, "created_utc": 1591929321.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lc0kps6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Fun facts about Ruby #4", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_h12yg6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 120, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 120, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/HsAiXVnUhM6iRXF4Ck5neUelhiiDuXS7bR-ydu6Mxec.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "image", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591922832.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "i.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://preview.redd.it/n22dyxmq8b451.png?auto=webp&amp;s=0f4eed2bae5a69eec11809ee17bf3f052e4fbc74", "width": 1024, "height": 512}, "resolutions": [{"url": "https://preview.redd.it/n22dyxmq8b451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=2279ada8e50c3ccde91b66ac0b5c5c8eddfa1229", "width": 108, "height": 54}, {"url": "https://preview.redd.it/n22dyxmq8b451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=f28bd15b67b8e7d633c7fe737f8e7508ff42b69d", "width": 216, "height": 108}, {"url": "https://preview.redd.it/n22dyxmq8b451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=59e4fad2f0a3a2a1b644410e68eb95eed01eb8da", "width": 320, "height": 160}, {"url": "https://preview.redd.it/n22dyxmq8b451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=1ac8d9d071d772c87af432d417b2328612a2a189", "width": 640, "height": 320}, {"url": "https://preview.redd.it/n22dyxmq8b451.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=f15473e66fd29ae5d4cf573453928387debc5e99", "width": 960, "height": 480}], "variants": {}, "id": "_D278SL27OCmyYoGQyF-cBKRLRSWkbsfEhDqRgHH4J4"}], "enabled": true}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h12yg6", "is_robot_indexable": true, "report_reasons": null, "author": "mehdifarsi", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/h12yg6/fun_facts_about_ruby_4/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://i.redd.it/n22dyxmq8b451.png", "subreddit_subscribers": 65765, "created_utc": 1591894032.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_h12yg6", "before": null}}