{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_44i8gwm6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How we optimized our DNS server using go tools", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_en4pds", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578758080.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en4pds", "is_robot_indexable": true, "report_reasons": null, "author": "codinglatte", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/en4pds/how_we_optimized_our_dns_server_using_go_tools/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@arash.cordi/how-we-optimized-our-dns-server-using-go-tools-d753e1a5e709", "subreddit_subscribers": 99205, "created_utc": 1578729280.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "If anyone is interested, I just wrote a simply proxy server (called gossl) that allows you to easily support HTTPS through Let's Encrypt. Here's an example of serving static files with HTTPS:\n\n/home/ubuntu&gt; sudo ./gossl -staticDir=/path/to/your/static/content/dir -domains=[mydomain.com](https://slack-redir.net/link?url=http%3A%2F%2Fmydomain.com),[www.mydomain.com](https://slack-redir.net/link?url=http%3A%2F%2Fwww.mydomain.com)\n\nThat's really all you need to do. No libraries to install. No certificate renewal service to set up. It uses the autocert library in Go. I have instructions on my GitHub page explaining how to set it up as a service using systemd on Linux and how to write a proxy mapping file. You can proxy to several different servers and still serve up static files. One good use for it is running your primary server on localhost on a non-public port and using gossl to provide HTTPS support. I'm not sure if this is useful to anyone else or if I'm reinventing the wheel (don't care--was still interesting to write), but if so, it's open source. There's also a link to a binary (built for Ubuntu 18.04) on the page and instructions for how to build it: [https://github.com/metaphyze/gossl](https://slack-redir.net/link?url=https%3A%2F%2Fgithub.com%2Fmetaphyze%2Fgossl)", "author_fullname": "t2_33670", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A dead simple proxy server that allows you to support HTTPS automatically with the Let's Encrypt certificate authority", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_en2yvk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 30, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 30, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578746815.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If anyone is interested, I just wrote a simply proxy server (called gossl) that allows you to easily support HTTPS through Let&amp;#39;s Encrypt. Here&amp;#39;s an example of serving static files with HTTPS:&lt;/p&gt;\n\n&lt;p&gt;/home/ubuntu&amp;gt; sudo ./gossl -staticDir=/path/to/your/static/content/dir -domains=&lt;a href=\"https://slack-redir.net/link?url=http%3A%2F%2Fmydomain.com\"&gt;mydomain.com&lt;/a&gt;,&lt;a href=\"https://slack-redir.net/link?url=http%3A%2F%2Fwww.mydomain.com\"&gt;www.mydomain.com&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s really all you need to do. No libraries to install. No certificate renewal service to set up. It uses the autocert library in Go. I have instructions on my GitHub page explaining how to set it up as a service using systemd on Linux and how to write a proxy mapping file. You can proxy to several different servers and still serve up static files. One good use for it is running your primary server on localhost on a non-public port and using gossl to provide HTTPS support. I&amp;#39;m not sure if this is useful to anyone else or if I&amp;#39;m reinventing the wheel (don&amp;#39;t care--was still interesting to write), but if so, it&amp;#39;s open source. There&amp;#39;s also a link to a binary (built for Ubuntu 18.04) on the page and instructions for how to build it: &lt;a href=\"https://slack-redir.net/link?url=https%3A%2F%2Fgithub.com%2Fmetaphyze%2Fgossl\"&gt;https://github.com/metaphyze/gossl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en2yvk", "is_robot_indexable": true, "report_reasons": null, "author": "metaphyze", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/en2yvk/a_dead_simple_proxy_server_that_allows_you_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/en2yvk/a_dead_simple_proxy_server_that_allows_you_to/", "subreddit_subscribers": 99205, "created_utc": 1578718015.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3rv016h3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Multiplexing Channels in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_en6nus", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578773124.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "katcipis.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en6nus", "is_robot_indexable": true, "report_reasons": null, "author": "katcipis", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/en6nus/multiplexing_channels_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://katcipis.github.io/blog/mux-channels-go/", "subreddit_subscribers": 99205, "created_utc": 1578744324.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_aga23", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go 1.4 significant reduction in defer performance footprint", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emr462", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 163, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;&lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; 1.14 will bring massive improvement in defer performance footprint &lt;a href=\"https://t.co/eiNZhscJPH\"&gt;pic.twitter.com/eiNZhscJPH&lt;/a&gt;&lt;/p&gt;&amp;mdash; janisz (@janiszt) &lt;a href=\"https://twitter.com/janiszt/status/1215601972281253888?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 379}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/janiszt/status/1215601972281253888", "author_name": "janisz", "height": 379, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;&lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; 1.14 will bring massive improvement in defer performance footprint &lt;a href=\"https://t.co/eiNZhscJPH\"&gt;pic.twitter.com/eiNZhscJPH&lt;/a&gt;&lt;/p&gt;&amp;mdash; janisz (@janiszt) &lt;a href=\"https://twitter.com/janiszt/status/1215601972281253888?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/janiszt", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;&lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; 1.14 will bring massive improvement in defer performance footprint &lt;a href=\"https://t.co/eiNZhscJPH\"&gt;pic.twitter.com/eiNZhscJPH&lt;/a&gt;&lt;/p&gt;&amp;mdash; janisz (@janiszt) &lt;a href=\"https://twitter.com/janiszt/status/1215601972281253888?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/emr462", "height": 379}, "link_flair_text": null, "can_mod_post": false, "score": 163, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578692776.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emr462", "is_robot_indexable": true, "report_reasons": null, "author": "janiszt", "discussion_type": null, "num_comments": 37, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/emr462/go_14_significant_reduction_in_defer_performance/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/janiszt/status/1215601972281253888?s=19", "subreddit_subscribers": 99205, "created_utc": 1578663976.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/janiszt/status/1215601972281253888", "author_name": "janisz", "height": 379, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;&lt;a href=\"https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#golang&lt;/a&gt; 1.14 will bring massive improvement in defer performance footprint &lt;a href=\"https://t.co/eiNZhscJPH\"&gt;pic.twitter.com/eiNZhscJPH&lt;/a&gt;&lt;/p&gt;&amp;mdash; janisz (@janiszt) &lt;a href=\"https://twitter.com/janiszt/status/1215601972281253888?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/janiszt", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_51iu6ea3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ok-zoomer: A Go program that takes an image, uses pigo to detect a face, and creates a gif that zooms in on the face", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_en615f", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578768447.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en615f", "is_robot_indexable": true, "report_reasons": null, "author": "A-AronBrown", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/en615f/okzoomer_a_go_program_that_takes_an_image_uses/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/jbirms/ok-zoomer", "subreddit_subscribers": 99205, "created_utc": 1578739647.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_16lko04o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Complete Guide to Create Docker Container for Your Golang Application", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emxfxo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578720245.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emxfxo", "is_robot_indexable": true, "report_reasons": null, "author": "poulius82", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/emxfxo/complete_guide_to_create_docker_container_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@afdolriski/complete-guide-to-create-docker-container-for-your-golang-application-80f3fb59a15e", "subreddit_subscribers": 99205, "created_utc": 1578691445.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5altezy2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Complete Go + Typescript application with proper system design, testing, and modern architecture explanations", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emyffo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578724510.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emyffo", "is_robot_indexable": true, "report_reasons": null, "author": "marchsnow", "discussion_type": null, "num_comments": 18, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/emyffo/complete_go_typescript_application_with_proper/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/short-d/short#system-design", "subreddit_subscribers": 99205, "created_utc": 1578695710.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "friends\n\nThe following is the first (of hopefully a few more to come) tools that I built for DevOps. Hoping it will be of use to the community. Both written in go and support a number of languages besides go.\n\n[https://github.com/RajaSrinivasan/srctrace.git](https://github.com/RajaSrinivasan/srctrace.git)\n\n[https://github.com/RajaSrinivasan/repotrace.git](https://github.com/RajaSrinivasan/repotrace.git)\n\nbest, srini", "author_fullname": "t2_1bwl5rwr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ann: Repotrace and srctrace", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_en6mtd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578772920.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;friends&lt;/p&gt;\n\n&lt;p&gt;The following is the first (of hopefully a few more to come) tools that I built for DevOps. Hoping it will be of use to the community. Both written in go and support a number of languages besides go.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/RajaSrinivasan/srctrace.git\"&gt;https://github.com/RajaSrinivasan/srctrace.git&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/RajaSrinivasan/repotrace.git\"&gt;https://github.com/RajaSrinivasan/repotrace.git&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;best, srini&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en6mtd", "is_robot_indexable": true, "report_reasons": null, "author": "RajaSrinivasan", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/en6mtd/ann_repotrace_and_srctrace/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/en6mtd/ann_repotrace_and_srctrace/", "subreddit_subscribers": 99205, "created_utc": 1578744120.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "This is our fresher training project in [ZaloPay.](https://github.com/zalopay-oss) [GodBee](https://github.com/zalopay-oss/godbee) is a Key-Value Store Service project. In this project, we choose B-Tree and B+Tree data structures to organize and manipulate data. Key-Value Storage is written in C++ and Service layer is written in Golang programming language. We use gRPC services to handle requests from client and use CGO to access data from C++ storage.", "author_fullname": "t2_471l0u60", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "An experimental &amp; simple key-value service written in Go/C++", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_en6l5m", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578772585.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is our fresher training project in &lt;a href=\"https://github.com/zalopay-oss\"&gt;ZaloPay.&lt;/a&gt; &lt;a href=\"https://github.com/zalopay-oss/godbee\"&gt;GodBee&lt;/a&gt; is a Key-Value Store Service project. In this project, we choose B-Tree and B+Tree data structures to organize and manipulate data. Key-Value Storage is written in C++ and Service layer is written in Golang programming language. We use gRPC services to handle requests from client and use CGO to access data from C++ storage.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en6l5m", "is_robot_indexable": true, "report_reasons": null, "author": "AJPham", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/en6l5m/an_experimental_simple_keyvalue_service_written/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/en6l5m/an_experimental_simple_keyvalue_service_written/", "subreddit_subscribers": 99205, "created_utc": 1578743785.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_dj410qs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "maildir-tools scripting tools for Maildirs, along with a simple TUI based email-client.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_en5z7a", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578768037.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en5z7a", "is_robot_indexable": true, "report_reasons": null, "author": "steve_in_finland", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/en5z7a/maildirtools_scripting_tools_for_maildirs_along/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/skx/maildir-tools", "subreddit_subscribers": 99205, "created_utc": 1578739237.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_en5z7a", "before": null}}