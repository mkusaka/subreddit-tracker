{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_zmb2u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why the Release of Ruby 3 Will Be Monumental", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 75, "top_awarded_type": null, "hide_score": true, "name": "t3_jtfzdp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/l1DQGZI0OsBmZWJgxHpm3t8lorNi_X0icMrtg1XECHY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1605298635.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "ruby3.dev", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.ruby3.dev/the-art-of-code/2020/11/12/ruby-3-monumental/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/fkNuwfoGzzeR8IUVBwrIL-BfRQUeUtiIIa_KnCEVzm4.jpg?auto=webp&amp;s=18a37e7919265c96f96c1691ee0b3c589ed221dd", "width": 2048, "height": 1107}, "resolutions": [{"url": "https://external-preview.redd.it/fkNuwfoGzzeR8IUVBwrIL-BfRQUeUtiIIa_KnCEVzm4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0af1fc8ce8569d772778f326dec27ecb2f8d5b7e", "width": 108, "height": 58}, {"url": "https://external-preview.redd.it/fkNuwfoGzzeR8IUVBwrIL-BfRQUeUtiIIa_KnCEVzm4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b1a5dbac6f6c42dca79308574f2983d8c2d43c65", "width": 216, "height": 116}, {"url": "https://external-preview.redd.it/fkNuwfoGzzeR8IUVBwrIL-BfRQUeUtiIIa_KnCEVzm4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ae678a6ea01c6542a5485fa116ccb1a096db72f7", "width": 320, "height": 172}, {"url": "https://external-preview.redd.it/fkNuwfoGzzeR8IUVBwrIL-BfRQUeUtiIIa_KnCEVzm4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e26495d3f2a1a1386dcd6a730a2529762a9a3d9f", "width": 640, "height": 345}, {"url": "https://external-preview.redd.it/fkNuwfoGzzeR8IUVBwrIL-BfRQUeUtiIIa_KnCEVzm4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a270ca7f2645e6d3dc01563e6994ddb55aa6fd12", "width": 960, "height": 518}, {"url": "https://external-preview.redd.it/fkNuwfoGzzeR8IUVBwrIL-BfRQUeUtiIIa_KnCEVzm4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=109f2dbd9bcdef972b49e03d82ce2c401451b62a", "width": 1080, "height": 583}], "variants": {}, "id": "MShzJ-guTgNWv4GDo7lZQy7kO4eIuw73WT4URXwybVU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jtfzdp", "is_robot_indexable": true, "report_reasons": null, "author": "geospeck", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jtfzdp/why_the_release_of_ruby_3_will_be_monumental/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.ruby3.dev/the-art-of-code/2020/11/12/ruby-3-monumental/", "subreddit_subscribers": 68262, "created_utc": 1605269835.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_5ms07", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "DragonRuby Game Toolkit Sound Synthesis in Pure Ruby ^_^", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_jtbtkb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/zEzovM5jT-k?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "DragonRuby Game Toolkit Pro - Sound Synthesis", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/zEzovM5jT-k?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Amir Rajan", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/zEzovM5jT-k/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCiohWAjXWS034PnTPsJ37-Q"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/zEzovM5jT-k?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/jtbtkb", "height": 338}, "link_flair_text": "Show /r/ruby", "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": true, "thumbnail": "https://a.thumbs.redditmedia.com/VHOGnWNvAW2Eo2Asd3Vdkg43a-9yultTEM8wJ5xi4I8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1605275989.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=zEzovM5jT-k&amp;feature=youtu.be&amp;ab_channel=AmirRajan", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/wEZev0DbWkPiJdWmLh1YkY9HO6PDeczniKC7i3GZ97U.jpg?auto=webp&amp;s=b4f8ce67a65fcf6e62903646eef5f3594305b80b", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/wEZev0DbWkPiJdWmLh1YkY9HO6PDeczniKC7i3GZ97U.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=10a1713a5705d36ca044e809e6d6ad3b46077613", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/wEZev0DbWkPiJdWmLh1YkY9HO6PDeczniKC7i3GZ97U.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4da28c041c905fc8417cdfc349cd4befbfedcd0d", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/wEZev0DbWkPiJdWmLh1YkY9HO6PDeczniKC7i3GZ97U.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b1851ab1da79e96329d213b34d25a038f33bbe41", "width": 320, "height": 240}], "variants": {}, "id": "pEn0M7pGLMhUXCvvHiHUW_L5LVKGd5aNMm57TNNDjHk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d57de81a-873c-11e9-9a25-0e18d14df676", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jtbtkb", "is_robot_indexable": true, "report_reasons": null, "author": "amirrajan", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jtbtkb/dragonruby_game_toolkit_sound_synthesis_in_pure/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=zEzovM5jT-k&amp;feature=youtu.be&amp;ab_channel=AmirRajan", "subreddit_subscribers": 68262, "created_utc": 1605247189.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "DragonRuby Game Toolkit Pro - Sound Synthesis", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/zEzovM5jT-k?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Amir Rajan", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/zEzovM5jT-k/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCiohWAjXWS034PnTPsJ37-Q"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_4lutb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Deep Dive: Moving ruby projects from Travis to Github Actions for CI", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 34, "top_awarded_type": null, "hide_score": false, "name": "t3_jt2uub", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/nw6axmaTovnzJYkxtoBSpn53IvO4MC39pF_CkINi38A.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1605242806.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "bibwild.wordpress.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://bibwild.wordpress.com/2020/11/12/deep-dive-moving-ruby-projects-from-travis-to-github-actions-for-ci/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/4CjN7gbIWv2Cgcq7QWR1q0hBUU5f1U-FRf7TBYF8DIw.jpg?auto=webp&amp;s=43646de864e1a63448ac38a104413ad958faa6dc", "width": 850, "height": 210}, "resolutions": [{"url": "https://external-preview.redd.it/4CjN7gbIWv2Cgcq7QWR1q0hBUU5f1U-FRf7TBYF8DIw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6dde9abe8ada27213e544fbfcec6cb6237da8e42", "width": 108, "height": 26}, {"url": "https://external-preview.redd.it/4CjN7gbIWv2Cgcq7QWR1q0hBUU5f1U-FRf7TBYF8DIw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9d8d1f41f22988796f55085e5640f253acbe308a", "width": 216, "height": 53}, {"url": "https://external-preview.redd.it/4CjN7gbIWv2Cgcq7QWR1q0hBUU5f1U-FRf7TBYF8DIw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=043bccea9c7a08a8861bf8c701082e17738d9609", "width": 320, "height": 79}, {"url": "https://external-preview.redd.it/4CjN7gbIWv2Cgcq7QWR1q0hBUU5f1U-FRf7TBYF8DIw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2e948338c56a7e22f7120d2a09535a6ea9b64fe1", "width": 640, "height": 158}], "variants": {}, "id": "D4G70EYXA0sQVKN8oFT8SgMHi3Lk3elCYPkL2dxt6fA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jt2uub", "is_robot_indexable": true, "report_reasons": null, "author": "jrochkind", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jt2uub/deep_dive_moving_ruby_projects_from_travis_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://bibwild.wordpress.com/2020/11/12/deep-dive-moving-ruby-projects-from-travis-to-github-actions-for-ci/", "subreddit_subscribers": 68262, "created_utc": 1605214006.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_bu67h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "footballdata-12xpert gem - download, convert &amp; import 22+ top football leagues from 25 seasons back to 1993/94 from Joseph Buchdahl (12Xpert)'s Football Data website", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jtee59", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/adP86WleQlGi7jb1_0ZMugaxOndcpjkOAE3re2A8QCA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1605289755.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/sportdb/sport.db.sources/tree/master/footballdata-12xpert", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?auto=webp&amp;s=fcfeb2c7ed5e8865543dc1e8389788c267751203", "width": 256, "height": 256}, "resolutions": [{"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a267236eaf74e37372b928904a5056062f51b220", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fae722694a3d6d2f6053b6d843ac48e65b9b93f8", "width": 216, "height": 216}], "variants": {}, "id": "8ZTcnSVObHBt8VFL60JctEY-J_urvNxJK1UL_K1j7Ig"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jtee59", "is_robot_indexable": true, "report_reasons": null, "author": "geraldbauer", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jtee59/footballdata12xpert_gem_download_convert_import/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/sportdb/sport.db.sources/tree/master/footballdata-12xpert", "subreddit_subscribers": 68262, "created_utc": 1605260955.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Let's say we have a simple Mailer as:\n\n    class PostmanMailer &lt; ApplicationMailer   \n        rescue_from CustomError do |exception|\n        ... do something ...\n        end\n         def invitation(user)\n            mail(to: user.email,subject: user)\n        end \n    end\n\nAnd invoke that mailer with the line:\n\n    PostmanMailer.invitation(user).deliver_later\n\nActionMailer is using delivery jobs and enqueues email delivery as a job through Active Job, so I can't wrap this with being/rescue to insert custom exception.\n\nHow would you handle this? Is there any way for not monkey patching?", "author_fullname": "t2_pfyd408", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Custom exception on mailers deliver_later - question", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jtebo4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1605262969.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1605289350.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s say we have a simple Mailer as:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class PostmanMailer &amp;lt; ApplicationMailer   \n    rescue_from CustomError do |exception|\n    ... do something ...\n    end\n     def invitation(user)\n        mail(to: user.email,subject: user)\n    end \nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And invoke that mailer with the line:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;PostmanMailer.invitation(user).deliver_later\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ActionMailer is using delivery jobs and enqueues email delivery as a job through Active Job, so I can&amp;#39;t wrap this with being/rescue to insert custom exception.&lt;/p&gt;\n\n&lt;p&gt;How would you handle this? Is there any way for not monkey patching?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jtebo4", "is_robot_indexable": true, "report_reasons": null, "author": "kmetJoza", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jtebo4/custom_exception_on_mailers_deliver_later_question/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jtebo4/custom_exception_on_mailers_deliver_later_question/", "subreddit_subscribers": 68262, "created_utc": 1605260550.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_yovw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby refinements have ONE good use case", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_jsur5u", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 36, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/6ht1hCrEnSyq48ZI7umBmOoAvUbuAgifP3DoArWO6Ac.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1605217257.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "soulcutter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "http://www.soulcutter.com/articles/ruby-refinements-have-one-good-use-case.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/A-wwvxvNlNMDU_1ownEVtzGM1Jt271jzrPZbOOjUIv0.jpg?auto=webp&amp;s=28636113ae7c5e85a56e77000ec6e2d4373cf927", "width": 1080, "height": 720}, "resolutions": [{"url": "https://external-preview.redd.it/A-wwvxvNlNMDU_1ownEVtzGM1Jt271jzrPZbOOjUIv0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d095a8100ad097752682a2868c185b4d54516a6f", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/A-wwvxvNlNMDU_1ownEVtzGM1Jt271jzrPZbOOjUIv0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=105b3bc64bcb09aa2f0bdc737bbf632e1a8cd596", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/A-wwvxvNlNMDU_1ownEVtzGM1Jt271jzrPZbOOjUIv0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=131f238cbe3a645a0d70757ffdf79da3b7da5b68", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/A-wwvxvNlNMDU_1ownEVtzGM1Jt271jzrPZbOOjUIv0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=275ea37c94e5ea6671936c7e8d0a329daff32b21", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/A-wwvxvNlNMDU_1ownEVtzGM1Jt271jzrPZbOOjUIv0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=8367ee2b1ee0645c12e6b3391d89213fbb6904f2", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/A-wwvxvNlNMDU_1ownEVtzGM1Jt271jzrPZbOOjUIv0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=dd7982f4c1dfa86d21ed02a84a4d7f4ace167d78", "width": 1080, "height": 720}], "variants": {}, "id": "XGKFoEC_s-8nfksWEj2R74ujchUz6KCYdFvWM8O82hI"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jsur5u", "is_robot_indexable": true, "report_reasons": null, "author": "soulcutter", "discussion_type": null, "num_comments": 32, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jsur5u/ruby_refinements_have_one_good_use_case/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://www.soulcutter.com/articles/ruby-refinements-have-one-good-use-case.html", "subreddit_subscribers": 68262, "created_utc": 1605188457.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3jx09i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "lazaronixon/react-native-turbolinks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jt0cd9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/2bzH-vtoTtqvXnUzESpwSch3EsLcJnlJEC3DmeuRF5I.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1605235346.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/lazaronixon/react-native-turbolinks", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/KI0ikrIxXrT2xa813v484TEP6alWBnlluk3eiNE_h7M.jpg?auto=webp&amp;s=ca9a71a51ea5da73672abf405947761988a21c4a", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/KI0ikrIxXrT2xa813v484TEP6alWBnlluk3eiNE_h7M.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=02c4bf0dd576f5c697b7bd055808fd7b6b9d4c5d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/KI0ikrIxXrT2xa813v484TEP6alWBnlluk3eiNE_h7M.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=cae0be142f59dbefd5a8ed2a463fc45934c82cad", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/KI0ikrIxXrT2xa813v484TEP6alWBnlluk3eiNE_h7M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4511fed62320f85bcfe95e5f01d219d714d02d94", "width": 320, "height": 320}], "variants": {}, "id": "6cUp0fn4fRJ52y0v4MvnUrTHO1_3Ax2_yWX_9V7nmpg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jt0cd9", "is_robot_indexable": true, "report_reasons": null, "author": "lazaronixon", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jt0cd9/lazaronixonreactnativeturbolinks/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/lazaronixon/react-native-turbolinks", "subreddit_subscribers": 68262, "created_utc": 1605206546.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_bec40hs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Creating a Weekly iOS Release Train", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 87, "top_awarded_type": null, "hide_score": false, "name": "t3_jsukp6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/DHlsklc8JWtVHcDU3A2JELJ0FnChcOMii8wOyUBtnu8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1605216535.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/pipedrive-engineering/welcome-aboard-the-pipedrive-ios-release-train-40fd9123ceac?source=friends_link&amp;sk=9c1d9183fb49b1648ccefe44deb233e3", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zlhF7EEm66X3pYNJ0ri_gdqKQoqD16FUFHCsQrUmuWc.jpg?auto=webp&amp;s=1a4b3861860bc2e6774c9ea6906464eda84031a5", "width": 1200, "height": 750}, "resolutions": [{"url": "https://external-preview.redd.it/zlhF7EEm66X3pYNJ0ri_gdqKQoqD16FUFHCsQrUmuWc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d4383cbc2298c6e64ce65c6a186b509e8bb0aae0", "width": 108, "height": 67}, {"url": "https://external-preview.redd.it/zlhF7EEm66X3pYNJ0ri_gdqKQoqD16FUFHCsQrUmuWc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7918df3ae152c3a9e846a746c5be5d3ac2c423c0", "width": 216, "height": 135}, {"url": "https://external-preview.redd.it/zlhF7EEm66X3pYNJ0ri_gdqKQoqD16FUFHCsQrUmuWc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1d77ca19e09d565994bdf1dcd054be390e32efd6", "width": 320, "height": 200}, {"url": "https://external-preview.redd.it/zlhF7EEm66X3pYNJ0ri_gdqKQoqD16FUFHCsQrUmuWc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=daf81db12fa969cf9dde33a5bc773fc868db52de", "width": 640, "height": 400}, {"url": "https://external-preview.redd.it/zlhF7EEm66X3pYNJ0ri_gdqKQoqD16FUFHCsQrUmuWc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a396767c1e04dbfb1708838f9dad386c51aa3696", "width": 960, "height": 600}, {"url": "https://external-preview.redd.it/zlhF7EEm66X3pYNJ0ri_gdqKQoqD16FUFHCsQrUmuWc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a061e555d62047b5eda2d8400e0ecda9b4ff8ddc", "width": 1080, "height": 675}], "variants": {}, "id": "Z4cLpTd1XO_sImtTsdIqvaCnSDtnOXRqHoEFKS55jo0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jsukp6", "is_robot_indexable": true, "report_reasons": null, "author": "PoliceBroTality", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jsukp6/creating_a_weekly_ios_release_train/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/pipedrive-engineering/welcome-aboard-the-pipedrive-ios-release-train-40fd9123ceac?source=friends_link&amp;sk=9c1d9183fb49b1648ccefe44deb233e3", "subreddit_subscribers": 68262, "created_utc": 1605187735.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi,\n\nI have to write some ruby code to fill the pdf form. I found this gem [https://github.com/jkraemer/pdf-forms](https://github.com/jkraemer/pdf-forms) which is good to fill the text fields. But how do I upload images as it has some input field to attach images. I tried something like this but none of them worked.\n\n&amp;#x200B;\n\n    [1] pry(main)&gt; pdftk = PdfForms.new('/usr/local/bin/pdftk')\n    =&gt; #&lt;PdfForms::PdftkWrapper:0x007fbf617a0b48 @options={}, @pdftk=\"/usr/local/bin/pdftk\"&gt;\n    [2] pry(main)&gt; photo_file = File.open('/Users/aruprakshit/Documents/testdocs/download.jpeg')\n    =&gt; #&lt;File:/Users/aruprakshit/Documents/testdocs/download.jpeg&gt;\n    [3] pry(main)&gt; photo_file = File.open('/Users/aruprakshit/Documents/testdocs/ship-289664_960_720.jpg')\n    =&gt; #&lt;File:/Users/aruprakshit/Documents/testdocs/ship-289664_960_720.jpg&gt;\n    [4] pry(main)&gt; pdftk.fill_form file.to_s, Rails.root.join('public', 'photo.pdf').to_s, {'Photo 1' =&gt; photo_file.read, 'Project ID': 123334}\n    =&gt; nil\n    [5] pry(main)&gt; pdftk.fill_form file.to_s, Rails.root.join('public', 'photo.pdf').to_s, {'Photo 1' =&gt; '/Users/aruprakshit/Documents/testdocs/ship-289664_960_720.jpg', 'Project ID': 123334}\n    =&gt; nil\n\nCan anyone share some ideas if you worked on this?", "author_fullname": "t2_lywglr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby pdf-forms gem and upload images to file field.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_js93sw", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1605133841.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I have to write some ruby code to fill the pdf form. I found this gem &lt;a href=\"https://github.com/jkraemer/pdf-forms\"&gt;https://github.com/jkraemer/pdf-forms&lt;/a&gt; which is good to fill the text fields. But how do I upload images as it has some input field to attach images. I tried something like this but none of them worked.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[1] pry(main)&amp;gt; pdftk = PdfForms.new(&amp;#39;/usr/local/bin/pdftk&amp;#39;)\n=&amp;gt; #&amp;lt;PdfForms::PdftkWrapper:0x007fbf617a0b48 @options={}, @pdftk=&amp;quot;/usr/local/bin/pdftk&amp;quot;&amp;gt;\n[2] pry(main)&amp;gt; photo_file = File.open(&amp;#39;/Users/aruprakshit/Documents/testdocs/download.jpeg&amp;#39;)\n=&amp;gt; #&amp;lt;File:/Users/aruprakshit/Documents/testdocs/download.jpeg&amp;gt;\n[3] pry(main)&amp;gt; photo_file = File.open(&amp;#39;/Users/aruprakshit/Documents/testdocs/ship-289664_960_720.jpg&amp;#39;)\n=&amp;gt; #&amp;lt;File:/Users/aruprakshit/Documents/testdocs/ship-289664_960_720.jpg&amp;gt;\n[4] pry(main)&amp;gt; pdftk.fill_form file.to_s, Rails.root.join(&amp;#39;public&amp;#39;, &amp;#39;photo.pdf&amp;#39;).to_s, {&amp;#39;Photo 1&amp;#39; =&amp;gt; photo_file.read, &amp;#39;Project ID&amp;#39;: 123334}\n=&amp;gt; nil\n[5] pry(main)&amp;gt; pdftk.fill_form file.to_s, Rails.root.join(&amp;#39;public&amp;#39;, &amp;#39;photo.pdf&amp;#39;).to_s, {&amp;#39;Photo 1&amp;#39; =&amp;gt; &amp;#39;/Users/aruprakshit/Documents/testdocs/ship-289664_960_720.jpg&amp;#39;, &amp;#39;Project ID&amp;#39;: 123334}\n=&amp;gt; nil\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Can anyone share some ideas if you worked on this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Pr5lruuEshmKmKbLpAamrJ9KQ_6GTov4awIxjWWTrpY.jpg?auto=webp&amp;s=7e8596f61509ee926d7a0fe8e75e68dabbd6eecf", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/Pr5lruuEshmKmKbLpAamrJ9KQ_6GTov4awIxjWWTrpY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a0bf1e1bc8aaad9f4e0fba3c7f35af9ffd50fbbe", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/Pr5lruuEshmKmKbLpAamrJ9KQ_6GTov4awIxjWWTrpY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7611ec5e1e8eac7e78350c75ab84ab05c58e4bab", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/Pr5lruuEshmKmKbLpAamrJ9KQ_6GTov4awIxjWWTrpY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=984549ad1aee6f5bed133f4e4ce37ddc61527441", "width": 320, "height": 320}], "variants": {}, "id": "fmUziZLDHnq6YdLxkxGOHVilJ9CfIuJz13WERI6IGXU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "js93sw", "is_robot_indexable": true, "report_reasons": null, "author": "arup_r", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/js93sw/ruby_pdfforms_gem_and_upload_images_to_file_field/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/js93sw/ruby_pdfforms_gem_and_upload_images_to_file_field/", "subreddit_subscribers": 68262, "created_utc": 1605105041.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "  \n\nHi everyone,\n\nI\u2019m a programmer who is also a beginner in Ruby.  I\u2019ve inherited a Ruby program from another colleague, and I need to figure out the syntax to safely modify the original code.\n\nThe original code accepts a data record (a linked list, perhaps, I\u2019m not sure) from an external source. The code then opens a socket on TCP 12345, sends the entire record, and then listens to the socket for a response from the remote host. The remote guy does some analysis and then sends back a string. The Ruby code then takes that string and appends it to the data record in a new field called \u201cnew\\_information\u201d. Here\u2019s the code:\n\n`require 'socket'`\n\n`...accept data record \"event\"...`\n\n`socket = TCPSocket.new(\"192.168.3.1\", 12345)`\n\n`socket.write (event.to_hash).to_s`\n\n`response = socket.recv(1000)`\n\n`socket.close`\n\n`event.set(\"new_information\", response)`\n\nAll of this works flawlessly. (For those who are curious, this is part of a Logstash implementation. Logstash allows Ruby code to help process incoming log records.)\n\nBut now I\u2019m worried about the scenario where the remote host is down and unavailable. I need to include an if/else or try/catch structure so that if the Ruby socket times out and no answer is ever received, the \u201cnew\\_information\u201d field can still be populated with something meaningful. Here\u2019s my stab at the modified code:\n\n`require 'socket'`\n\n`...accept data record \"event\"...`\n\n`begin`\n\n   `socket = TCPSocket.new(\"192.168.3.1\", 12345)`\n\n   `socket.write (event.to_hash).to_s`\n\n   `response = socket.recv(1000)`\n\n   `socket.close`\n\n   `event.set(\"new_information\", response)`\n\n`rescue Errno::ETIMEDOUT`\n\n   `p 'timeout'`\n\n   `event.set(\"new_information\", \"remote_svr_down!\")`\n\n`end`\n\nAs you can probably tell, I don\u2019t really know what I\u2019m doing. Trouble is, the Logstash system with which I am working does not allow you to see the precise syntax error when the code crashes. So I have no idea if my modified code is nearly correct or way, way off.\n\nAnother question I have is\u2026 how long is the socket timeout here? I assume it is the default value. Is there a way to set that?\n\nThank you!", "author_fullname": "t2_3t78edqi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby :: How to add a try/catch clause to a TCP Socket? (to catch timeouts)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jsemk2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1605151102.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone,&lt;/p&gt;\n\n&lt;p&gt;I\u2019m a programmer who is also a beginner in Ruby.  I\u2019ve inherited a Ruby program from another colleague, and I need to figure out the syntax to safely modify the original code.&lt;/p&gt;\n\n&lt;p&gt;The original code accepts a data record (a linked list, perhaps, I\u2019m not sure) from an external source. The code then opens a socket on TCP 12345, sends the entire record, and then listens to the socket for a response from the remote host. The remote guy does some analysis and then sends back a string. The Ruby code then takes that string and appends it to the data record in a new field called \u201cnew_information\u201d. Here\u2019s the code:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;require &amp;#39;socket&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;...accept data record &amp;quot;event&amp;quot;...&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;socket = TCPSocket.new(&amp;quot;192.168.3.1&amp;quot;, 12345)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;socket.write (event.to_hash).to_s&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;response = socket.recv(1000)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;socket.close&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;event.set(&amp;quot;new_information&amp;quot;, response)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;All of this works flawlessly. (For those who are curious, this is part of a Logstash implementation. Logstash allows Ruby code to help process incoming log records.)&lt;/p&gt;\n\n&lt;p&gt;But now I\u2019m worried about the scenario where the remote host is down and unavailable. I need to include an if/else or try/catch structure so that if the Ruby socket times out and no answer is ever received, the \u201cnew_information\u201d field can still be populated with something meaningful. Here\u2019s my stab at the modified code:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;require &amp;#39;socket&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;...accept data record &amp;quot;event&amp;quot;...&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;socket = TCPSocket.new(&amp;quot;192.168.3.1&amp;quot;, 12345)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;socket.write (event.to_hash).to_s&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;response = socket.recv(1000)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;socket.close&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;event.set(&amp;quot;new_information&amp;quot;, response)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;rescue Errno::ETIMEDOUT&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;p &amp;#39;timeout&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;event.set(&amp;quot;new_information&amp;quot;, &amp;quot;remote_svr_down!&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;As you can probably tell, I don\u2019t really know what I\u2019m doing. Trouble is, the Logstash system with which I am working does not allow you to see the precise syntax error when the code crashes. So I have no idea if my modified code is nearly correct or way, way off.&lt;/p&gt;\n\n&lt;p&gt;Another question I have is\u2026 how long is the socket timeout here? I assume it is the default value. Is there a way to set that?&lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jsemk2", "is_robot_indexable": true, "report_reasons": null, "author": "redapplesonly", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jsemk2/ruby_how_to_add_a_trycatch_clause_to_a_tcp_socket/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jsemk2/ruby_how_to_add_a_trycatch_clause_to_a_tcp_socket/", "subreddit_subscribers": 68262, "created_utc": 1605122302.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jsemk2", "before": null}}