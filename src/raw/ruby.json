{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3v9zl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Managing Bundler and Rubygems with Ansible", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_izgtki", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/5xhqK1gQ2kmd4ZqsXo36UZU_kcxLPf4HkmMX4tEx10A.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601056988.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "thibautbarrere.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://thibautbarrere.com/2020/09/19/managing-bundler-and-rubygems-with-ansible", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/52NyJSH2AbKV8cJSQcSg8BduTYRJJKKXa2P7SSRL0C0.jpg?auto=webp&amp;s=efac746f51814b602f7cafed73400fc317255b4e", "width": 500, "height": 250}, "resolutions": [{"url": "https://external-preview.redd.it/52NyJSH2AbKV8cJSQcSg8BduTYRJJKKXa2P7SSRL0C0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b9dd5525d6dc68d39c23d91305420160ad87a7bf", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/52NyJSH2AbKV8cJSQcSg8BduTYRJJKKXa2P7SSRL0C0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=10d3ed97efa73d13e69c8b72a306324a0bdd1642", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/52NyJSH2AbKV8cJSQcSg8BduTYRJJKKXa2P7SSRL0C0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1cc8e5b6d40e280c34e8628a33c7197ed2be5bcc", "width": 320, "height": 160}], "variants": {}, "id": "dXCA7MCjIfBXmSRjQhvr8G_puntoNYxJfV761ixeihs"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "izgtki", "is_robot_indexable": true, "report_reasons": null, "author": "thibaut_barrere", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/izgtki/managing_bundler_and_rubygems_with_ansible/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://thibautbarrere.com/2020/09/19/managing-bundler-and-rubygems-with-ansible", "subreddit_subscribers": 67555, "created_utc": 1601028188.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "How do I get usable certificates for creating a simple document signing app using the below libraries? PSPDFKit for annotating the PDF with an ink signature, then Origami for applying a digital signature to the PDF.\n\nI tried to buy an Adobe approved trustlist cert, but they only offer them on USB and and try to charge me 10x as much for aws cloudhsm support. and aws cloudhsm is super expensive as well.\n\nHow am I supposed to do this? Am I barking up the wrong tree with aws cloudhsm?\n\n[https://pspdfkit.com/guides/web/current/digital-signatures/digital-signatures-on-web/](https://pspdfkit.com/guides/web/current/digital-signatures/digital-signatures-on-web/)\n\n[https://gist.github.com/matiaskorhonen/223bd527279cf49bed1e](https://gist.github.com/matiaskorhonen/223bd527279cf49bed1e) ", "author_fullname": "t2_j3r29", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Digital Signatures for Ruby app, clueless", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_izcm0g", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.63, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1601035297.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;How do I get usable certificates for creating a simple document signing app using the below libraries? PSPDFKit for annotating the PDF with an ink signature, then Origami for applying a digital signature to the PDF.&lt;/p&gt;\n\n&lt;p&gt;I tried to buy an Adobe approved trustlist cert, but they only offer them on USB and and try to charge me 10x as much for aws cloudhsm support. and aws cloudhsm is super expensive as well.&lt;/p&gt;\n\n&lt;p&gt;How am I supposed to do this? Am I barking up the wrong tree with aws cloudhsm?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pspdfkit.com/guides/web/current/digital-signatures/digital-signatures-on-web/\"&gt;https://pspdfkit.com/guides/web/current/digital-signatures/digital-signatures-on-web/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/matiaskorhonen/223bd527279cf49bed1e\"&gt;https://gist.github.com/matiaskorhonen/223bd527279cf49bed1e&lt;/a&gt; &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/dYgA2xyZqcfyvcOdlR4XP4GCqlDUtGdPktAwNZC_ucI.jpg?auto=webp&amp;s=b03a42604d78733bfc336d8dee14ecaf01b777c8", "width": 2160, "height": 1081}, "resolutions": [{"url": "https://external-preview.redd.it/dYgA2xyZqcfyvcOdlR4XP4GCqlDUtGdPktAwNZC_ucI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=cbd4a940b90a447211be03dca472e46d10cccd22", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/dYgA2xyZqcfyvcOdlR4XP4GCqlDUtGdPktAwNZC_ucI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0bf48d41bef9281763f3f315dbd1dc2e37075028", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/dYgA2xyZqcfyvcOdlR4XP4GCqlDUtGdPktAwNZC_ucI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=912b1efb6b8aa3236c85fd4d405d9b38930a4de1", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/dYgA2xyZqcfyvcOdlR4XP4GCqlDUtGdPktAwNZC_ucI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2244188446e05788127085736dbf31f2bf946e41", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/dYgA2xyZqcfyvcOdlR4XP4GCqlDUtGdPktAwNZC_ucI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=31409fcb21555afad43ca6f3bc10112820ccf303", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/dYgA2xyZqcfyvcOdlR4XP4GCqlDUtGdPktAwNZC_ucI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9ee00e4b525c19212174aada9562936fefa576f4", "width": 1080, "height": 540}], "variants": {}, "id": "jQB3i2ZEtBPMyINDLta0Mezh96zxeqls0bOROBjFsg4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "izcm0g", "is_robot_indexable": true, "report_reasons": null, "author": "entwederoder", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/izcm0g/digital_signatures_for_ruby_app_clueless/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/izcm0g/digital_signatures_for_ruby_app_clueless/", "subreddit_subscribers": 67555, "created_utc": 1601006497.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello, am looking for a good gui framework or \"gem\" for ruby, while i know some will recommend c# i tried it 5 times and it doesnt click me...\n\nThanks.", "author_fullname": "t2_3ite7fp0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Some good gui framework", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ize6lw", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601042407.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, am looking for a good gui framework or &amp;quot;gem&amp;quot; for ruby, while i know some will recommend c# i tried it 5 times and it doesnt click me...&lt;/p&gt;\n\n&lt;p&gt;Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ize6lw", "is_robot_indexable": true, "report_reasons": null, "author": "Haitamdragon", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ize6lw/some_good_gui_framework/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ize6lw/some_good_gui_framework/", "subreddit_subscribers": 67555, "created_utc": 1601013607.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'm new to developing software and trying to learn best practices.\n\nI have a class to wrap AWS Dynamo API calls that will be used by several other classes.\n\n```\nclass Dynamo &lt; AWS\n    def initialize profile=nil, dryrun=true, region, table_name\n      super\n      @region = region\n      @table_name = table_name\n    end\n\n    def put_item(item)\n      begin\n        get_aws_client(\n            :dynamodb,\n            { region: @region}\n          ).put_item({\n            table_name: @table_name,\n            item: item\n          })\n      rescue  Aws::DynamoDB::Errors::ServiceError =&gt; e\n        log :error, \"#{e}\"\n      end\n    end\n  end\n```\n\nWhat is the proper error handling and logging workflow if another class uses this class to utilize the put\\_item() method and it throws an error?", "author_fullname": "t2_568qpubr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to use proper error handling flow in Ruby?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iz1l3a", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600997162.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m new to developing software and trying to learn best practices.&lt;/p&gt;\n\n&lt;p&gt;I have a class to wrap AWS Dynamo API calls that will be used by several other classes.&lt;/p&gt;\n\n&lt;p&gt;```\nclass Dynamo &amp;lt; AWS\n    def initialize profile=nil, dryrun=true, region, table_name\n      super\n      @region = region\n      @table_name = table_name\n    end&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def put_item(item)\n  begin\n    get_aws_client(\n        :dynamodb,\n        { region: @region}\n      ).put_item({\n        table_name: @table_name,\n        item: item\n      })\n  rescue  Aws::DynamoDB::Errors::ServiceError =&amp;gt; e\n    log :error, &amp;quot;#{e}&amp;quot;\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;end\n```&lt;/p&gt;\n\n&lt;p&gt;What is the proper error handling and logging workflow if another class uses this class to utilize the put_item() method and it throws an error?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iz1l3a", "is_robot_indexable": true, "report_reasons": null, "author": "devOpsBop", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iz1l3a/how_to_use_proper_error_handling_flow_in_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/iz1l3a/how_to_use_proper_error_handling_flow_in_ruby/", "subreddit_subscribers": 67555, "created_utc": 1600968362.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_4y3iq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Improve the performance of super by eileencodes \u2022 Pull Request #3545", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iyp7rz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 88, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 88, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/IslAaI1PQZ5gznbJ5pSrzQb60fDz2YUlHb_adpJK3E4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600945941.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/ruby/ruby/pull/3545", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/USQajWB9Kg4asjHIBPj9sKWWENjpzQtlC2KpRr1zE5s.jpg?auto=webp&amp;s=0788da4ddfac5adb8566527b4ae8997ed1902e85", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/USQajWB9Kg4asjHIBPj9sKWWENjpzQtlC2KpRr1zE5s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=996a241acbc85f56a5a962150c5394b41068618b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/USQajWB9Kg4asjHIBPj9sKWWENjpzQtlC2KpRr1zE5s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b42d4473691f8c5b929b7d407b48da0b79c75f4b", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/USQajWB9Kg4asjHIBPj9sKWWENjpzQtlC2KpRr1zE5s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ef07605687d4ab09a05d05c25c77c71e55731a25", "width": 320, "height": 320}], "variants": {}, "id": "3SP7kqmMBLbFk1rxKTSH_9qrIEVO1CkoW6vTd7-_IBU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyp7rz", "is_robot_indexable": true, "report_reasons": null, "author": "slushie31", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iyp7rz/improve_the_performance_of_super_by_eileencodes/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/ruby/ruby/pull/3545", "subreddit_subscribers": 67555, "created_utc": 1600917141.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_32aqmyw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Resize and optimise images on upload with ActiveStorage", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iyxsty", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1600984878.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "vitobotta.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://vitobotta.com/2020/09/24/resize-and-optimise-images-on-upload-with-activestorage/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyxsty", "is_robot_indexable": true, "report_reasons": null, "author": "Sky_Linx", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iyxsty/resize_and_optimise_images_on_upload_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://vitobotta.com/2020/09/24/resize-and-optimise-images-on-upload-with-activestorage/", "subreddit_subscribers": 67555, "created_utc": 1600956078.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_v4959hb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Packwerk is a Ruby gem used to enforce boundaries and modularize Rails applications.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iyfrz7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 56, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 56, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/bEuTBXIcvzI8HbvNIKoNjgY6awHxTZqQrWCzpr4X3dg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600914153.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/shopify/packwerk", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/-D5a7A-S9S8YkTiRtbrXfnUkdUUUrQeCLJi9g69jbNk.jpg?auto=webp&amp;s=ea618be79c4135c6c3a7dd85996456f91389587d", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/-D5a7A-S9S8YkTiRtbrXfnUkdUUUrQeCLJi9g69jbNk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29cd9c978c96ba119d1f6a0a291d20a88090d188", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/-D5a7A-S9S8YkTiRtbrXfnUkdUUUrQeCLJi9g69jbNk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b4d549fcd9d575df7710e600a2dbd5bb154e759f", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/-D5a7A-S9S8YkTiRtbrXfnUkdUUUrQeCLJi9g69jbNk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=95789ff8f70a90a635d1b1df5fa0bd44a945fc90", "width": 320, "height": 320}], "variants": {}, "id": "I2rENKI0nkebw8AraAsCUserbwhP4irSBvxPh1ARhlY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyfrz7", "is_robot_indexable": true, "report_reasons": null, "author": "zitrusgrape", "discussion_type": null, "num_comments": 47, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iyfrz7/packwerk_is_a_ruby_gem_used_to_enforce_boundaries/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/shopify/packwerk", "subreddit_subscribers": 67555, "created_utc": 1600885353.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I built my first open-sourc project and I wrote about it and my motivations here: [https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil](https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil)", "author_fullname": "t2_9aty894", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My First open-source Project: Building AmazonPay Gem", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iy7m2f", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600885818.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I built my first open-sourc project and I wrote about it and my motivations here: &lt;a href=\"https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil\"&gt;https://blog.everistus.xyz/my-first-open-source-project-building-amazonpay-gem-ckff8s5ov043o65s13ngx0pil&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iy7m2f", "is_robot_indexable": true, "report_reasons": null, "author": "bytenaija", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iy7m2f/my_first_opensource_project_building_amazonpay_gem/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/iy7m2f/my_first_opensource_project_building_amazonpay_gem/", "subreddit_subscribers": 67555, "created_utc": 1600857018.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I've been working on a gem that's very much experimental, and would love some feedback. The ReadMe is not complete, but I'm hoping there's enough to get the point across. What I'd really like to find out is:\n\n\\- Is there anything out there that already satisfies these requirements but better?\n\n\\- Would you as a dev find this data structure useful?\n\n\\- Is my implementation the ideal way to go about things?\n\n&amp;#x200B;\n\n[https://github.com/DylanBlakemore/structish](https://github.com/DylanBlakemore/structish)", "author_fullname": "t2_87i63gsh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Structish Objects", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iykhi5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1600928125.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been working on a gem that&amp;#39;s very much experimental, and would love some feedback. The ReadMe is not complete, but I&amp;#39;m hoping there&amp;#39;s enough to get the point across. What I&amp;#39;d really like to find out is:&lt;/p&gt;\n\n&lt;p&gt;- Is there anything out there that already satisfies these requirements but better?&lt;/p&gt;\n\n&lt;p&gt;- Would you as a dev find this data structure useful?&lt;/p&gt;\n\n&lt;p&gt;- Is my implementation the ideal way to go about things?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DylanBlakemore/structish\"&gt;https://github.com/DylanBlakemore/structish&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/epQIBmjm7MpUIJc20tqMOsTREIhaBTR1j69tOfffwrA.jpg?auto=webp&amp;s=26f668344a44a2fc2ec5e3fafefd366ebc0167a4", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/epQIBmjm7MpUIJc20tqMOsTREIhaBTR1j69tOfffwrA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ef6986ba735cd04193a67144e1d0c016b6f964df", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/epQIBmjm7MpUIJc20tqMOsTREIhaBTR1j69tOfffwrA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0ef880d3eead219106cccc5e95fa6bcf25385e89", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/epQIBmjm7MpUIJc20tqMOsTREIhaBTR1j69tOfffwrA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5684fc1af7f371f20c6a6cfd46f12ac01184f499", "width": 320, "height": 320}], "variants": {}, "id": "s469jGqZs5nMNNSDcnkf-N30WRr1DOw4-oOiZQTHijU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iykhi5", "is_robot_indexable": true, "report_reasons": null, "author": "RubyDevDyl", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iykhi5/structish_objects/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/iykhi5/structish_objects/", "subreddit_subscribers": 67555, "created_utc": 1600899325.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_4lutb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails will allow a module with extend ActiveSupport::Concern to be prepended", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iy91jy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/zV_adxxIoF17xzG_Qicg-fLQ5XZHCxjI4nwjaKLF3vA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600892594.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.saeloun.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.saeloun.com/2020/09/23/prepend-class-methods-for-concerns.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?auto=webp&amp;s=76ff1c57159ecd0635bde7262995c5f75ea5b2bf", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba7dc7c390da46504d7dff83a3777aa34d06da09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7174576a8c7a36330f60dff22893de50e2a459da", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b1f1f8a636baeb85c444c850de8e7747c45470f", "width": 320, "height": 320}], "variants": {}, "id": "BN85dx9NXlDeVPyUnffc9FFfivOtdoHkGQhBm10KyEI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iy91jy", "is_robot_indexable": true, "report_reasons": null, "author": "jrochkind", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iy91jy/rails_will_allow_a_module_with_extend/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.saeloun.com/2020/09/23/prepend-class-methods-for-concerns.html", "subreddit_subscribers": 67555, "created_utc": 1600863794.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_iy91jy", "before": null}}