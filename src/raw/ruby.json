{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "[https://blog.saeloun.com/2020/04/27/ruby-adds-endless-method-definition-experimental](https://blog.saeloun.com/2020/04/27/ruby-adds-endless-method-definition-experimental)\n\n&amp;#x200B;\n\nPS: Do not shoot the messenger. I come in peace.", "author_fullname": "t2_29m4iyby", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby adds experimental support for end-less method definition", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g9hlar", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588081997.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://blog.saeloun.com/2020/04/27/ruby-adds-endless-method-definition-experimental\"&gt;https://blog.saeloun.com/2020/04/27/ruby-adds-endless-method-definition-experimental&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;PS: Do not shoot the messenger. I come in peace.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?auto=webp&amp;s=76ff1c57159ecd0635bde7262995c5f75ea5b2bf", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba7dc7c390da46504d7dff83a3777aa34d06da09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7174576a8c7a36330f60dff22893de50e2a459da", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b1f1f8a636baeb85c444c850de8e7747c45470f", "width": 320, "height": 320}], "variants": {}, "id": "BN85dx9NXlDeVPyUnffc9FFfivOtdoHkGQhBm10KyEI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9hlar", "is_robot_indexable": true, "report_reasons": null, "author": "prateekkish", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g9hlar/ruby_adds_experimental_support_for_endless_method/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/g9hlar/ruby_adds_experimental_support_for_endless_method/", "subreddit_subscribers": 64786, "created_utc": 1588053197.0, "num_crossposts": 2, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_z2t7t", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Redis connection pool in Rails", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g9i2oy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1588084467.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tejasbubane.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9i2oy", "is_robot_indexable": true, "report_reasons": null, "author": "tejasbubane", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g9i2oy/redis_connection_pool_in_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://tejasbubane.github.io/posts/2020-04-22-redis-connection-pool-in-rails/", "subreddit_subscribers": 64786, "created_utc": 1588055667.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_hfztd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Code walkthrough - concurrent writes, race conditions and other fun stuff when you need to rename stream with zero downtime.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 68, "hide_score": false, "name": "t3_g9k6nx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/ciaywIMUkEjtQ4x4YsqWPMqGM-4sVUcmn5HHHZ_4sHA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1588095176.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.arkency.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BRHg9bXxKY3C0NgWE_eOdshVB8HhQO1xv-3uTw-rPoc.jpg?auto=webp&amp;s=479d34788893dd5b0ff7828d7d7a4455b427a055", "width": 640, "height": 315}, "resolutions": [{"url": "https://external-preview.redd.it/BRHg9bXxKY3C0NgWE_eOdshVB8HhQO1xv-3uTw-rPoc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d24579ba0ca2bfafbb67d25bb14d5ae9baecaaff", "width": 108, "height": 53}, {"url": "https://external-preview.redd.it/BRHg9bXxKY3C0NgWE_eOdshVB8HhQO1xv-3uTw-rPoc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e247cbf75d21c687c150834fa2d722f4205c80be", "width": 216, "height": 106}, {"url": "https://external-preview.redd.it/BRHg9bXxKY3C0NgWE_eOdshVB8HhQO1xv-3uTw-rPoc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cda6629396ef2fea43a178ed49a66752795d8323", "width": 320, "height": 157}, {"url": "https://external-preview.redd.it/BRHg9bXxKY3C0NgWE_eOdshVB8HhQO1xv-3uTw-rPoc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0168433a413cb0a9c1b82b9aea1a5e0b15b4c4ce", "width": 640, "height": 315}], "variants": {}, "id": "Vuo3u3h1muWw6ovTDm5UoCvuWpGECNzbzxRZsPKUoas"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9k6nx", "is_robot_indexable": true, "report_reasons": null, "author": "mpraglowski", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g9k6nx/code_walkthrough_concurrent_writes_race/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.arkency.com/rename-stream-in-rails-event-store-with-zero-downtime/", "subreddit_subscribers": 64786, "created_utc": 1588066376.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_48an11gt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails - Added sub seconds to Time inspect", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_g9iey4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/FMxUsPy1s_WiJV0m9xJqgmb1Rya9ruQRYacfDolVTcE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1588086232.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.saeloun.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?auto=webp&amp;s=76ff1c57159ecd0635bde7262995c5f75ea5b2bf", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba7dc7c390da46504d7dff83a3777aa34d06da09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7174576a8c7a36330f60dff22893de50e2a459da", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b1f1f8a636baeb85c444c850de8e7747c45470f", "width": 320, "height": 320}], "variants": {}, "id": "BN85dx9NXlDeVPyUnffc9FFfivOtdoHkGQhBm10KyEI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9iey4", "is_robot_indexable": true, "report_reasons": null, "author": "alkesh26", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g9iey4/rails_added_sub_seconds_to_time_inspect/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.saeloun.com/2020/04/27/rails-time-subseconds", "subreddit_subscribers": 64786, "created_utc": 1588057432.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "https://github.com/Ubuntu19019/learnruby/blob/master/abbreviate_sentence\n\nThis is a practice problem from the app academy open website. I spent way too long solving this problem. I want to make sure my comments reflect what is actually going on. I don't think I understand line 27 and line 7.\n\nLine 7 wasn't working, because I was doing\n&gt; no_vowels = new_word\n\nTo understand line 7 I think I need to understand line 27. This is what I think, but I think it's wrong. In the array in the first function let's say we have the word \"elephant\" that the computer is checking. It has more than 4 letters so it goes to the second function. The second function checks each letter of elephant and adds the non vowels to new_word. Return new_word is the answer function 1 gets back from function 2. Function 1 repeats the process of sending it to function 2 until it's looped through every word. If you don't do return new_word it doesn't work, because you have all the non vowels in a string, but the program hasn't been told to send it back to function 1.", "author_fullname": "t2_l69k8x4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "New to programming. This code works. I want to know if I am thinking about it right.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g9ibqd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588085767.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Ubuntu19019/learnruby/blob/master/abbreviate_sentence\"&gt;https://github.com/Ubuntu19019/learnruby/blob/master/abbreviate_sentence&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is a practice problem from the app academy open website. I spent way too long solving this problem. I want to make sure my comments reflect what is actually going on. I don&amp;#39;t think I understand line 27 and line 7.&lt;/p&gt;\n\n&lt;p&gt;Line 7 wasn&amp;#39;t working, because I was doing&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;no_vowels = new_word&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;To understand line 7 I think I need to understand line 27. This is what I think, but I think it&amp;#39;s wrong. In the array in the first function let&amp;#39;s say we have the word &amp;quot;elephant&amp;quot; that the computer is checking. It has more than 4 letters so it goes to the second function. The second function checks each letter of elephant and adds the non vowels to new_word. Return new_word is the answer function 1 gets back from function 2. Function 1 repeats the process of sending it to function 2 until it&amp;#39;s looped through every word. If you don&amp;#39;t do return new_word it doesn&amp;#39;t work, because you have all the non vowels in a string, but the program hasn&amp;#39;t been told to send it back to function 1.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/1pacNBHmdS--ajgE0qtU6MhxD0NtrIZPLzqqmX79iXo.jpg?auto=webp&amp;s=0202287f488589a82bb09c5fa8a6b55dae709708", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/1pacNBHmdS--ajgE0qtU6MhxD0NtrIZPLzqqmX79iXo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b0fe6a8d5e50ea0358e5863378b2d8d275d9f787", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/1pacNBHmdS--ajgE0qtU6MhxD0NtrIZPLzqqmX79iXo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c723bc29ceb6847cbc68429ff422bc12bace0e01", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/1pacNBHmdS--ajgE0qtU6MhxD0NtrIZPLzqqmX79iXo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4487d6cad48f591f082cb910b69782406c3d4c89", "width": 320, "height": 320}], "variants": {}, "id": "_OMK1YiBosvXNlVjjLC_nzGJFi1Xt1DhBEs3h1WwzRM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g9ibqd", "is_robot_indexable": true, "report_reasons": null, "author": "dMCH1xrADPorzhGA7MH1", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g9ibqd/new_to_programming_this_code_works_i_want_to_know/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/g9ibqd/new_to_programming_this_code_works_i_want_to_know/", "subreddit_subscribers": 64786, "created_utc": 1588056967.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "As some of you might know, I'm a big advocate for the [Sequel](https://github.com/jeremyevans/sequel) database library. However, it can be difficult to use it an app that's already using ActiveRecord, because Sequel requires its own database connection.\n\nSo I've created the [sequel-activerecord-adapter](https://github.com/janko/sequel-activerecord-adapter) gem that allows Sequel to reuse the existing ActiveRecord connection for its database interaction.\n\n    require \"sequel-activerecord-adapter\"\n\n    ActiveRecord::Base.establish_connection(\"postgresql:///mydb\")\n\n    DB = Sequel.activerecord # reuses the ActiveRecord connection\n   \n    DB.tables #=&gt; [:users, :articles, ...]\n\n    DB[:articles].insert(title: \"Sequel ActiveRecord Adapter\")\n    DB[:articles].all #=&gt; [{ title: \"Sequel ActiveRecord Adapter\" }]\n    DB[:articles].update(author_id: 2)\n\nThis means you can now easily use Sequel in parts of your app that might be more performance-sensitive or require more advanced database queries that ActiveRecord doesn't support.\n\nIt also means you can use libraries like [Rodauth](https://github.com/jeremyevans/rodauth) that use Sequel under-the-hood without the performance impact and mental overhead that would come with dealing with separate database connections.", "author_fullname": "t2_k1bwx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Just released sequel-activerecord-adapter gem", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g8z5iv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 55, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 55, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1588002803.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588016502.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As some of you might know, I&amp;#39;m a big advocate for the &lt;a href=\"https://github.com/jeremyevans/sequel\"&gt;Sequel&lt;/a&gt; database library. However, it can be difficult to use it an app that&amp;#39;s already using ActiveRecord, because Sequel requires its own database connection.&lt;/p&gt;\n\n&lt;p&gt;So I&amp;#39;ve created the &lt;a href=\"https://github.com/janko/sequel-activerecord-adapter\"&gt;sequel-activerecord-adapter&lt;/a&gt; gem that allows Sequel to reuse the existing ActiveRecord connection for its database interaction.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require &amp;quot;sequel-activerecord-adapter&amp;quot;\n\nActiveRecord::Base.establish_connection(&amp;quot;postgresql:///mydb&amp;quot;)\n\nDB = Sequel.activerecord # reuses the ActiveRecord connection\n\nDB.tables #=&amp;gt; [:users, :articles, ...]\n\nDB[:articles].insert(title: &amp;quot;Sequel ActiveRecord Adapter&amp;quot;)\nDB[:articles].all #=&amp;gt; [{ title: &amp;quot;Sequel ActiveRecord Adapter&amp;quot; }]\nDB[:articles].update(author_id: 2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This means you can now easily use Sequel in parts of your app that might be more performance-sensitive or require more advanced database queries that ActiveRecord doesn&amp;#39;t support.&lt;/p&gt;\n\n&lt;p&gt;It also means you can use libraries like &lt;a href=\"https://github.com/jeremyevans/rodauth\"&gt;Rodauth&lt;/a&gt; that use Sequel under-the-hood without the performance impact and mental overhead that would come with dealing with separate database connections.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/uJLpQo6ayttu5oYytZmlKKP_3Wvg4JYAPszxh8S1Cio.jpg?auto=webp&amp;s=dd245ab219bfc525e5e80eba255ebcd43b5e4b83", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/uJLpQo6ayttu5oYytZmlKKP_3Wvg4JYAPszxh8S1Cio.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=32a2ec26a216b951b02548295c7c401271c157b1", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/uJLpQo6ayttu5oYytZmlKKP_3Wvg4JYAPszxh8S1Cio.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=75279e8896a2723411e91def2fdb2774aba649fa", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/uJLpQo6ayttu5oYytZmlKKP_3Wvg4JYAPszxh8S1Cio.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=44e166a6387c0104e9a45e30063acf7980cda379", "width": 320, "height": 320}], "variants": {}, "id": "AF4Ygi3-SCqcEf5-7cZquUNGUZzj-l4R5uHBpyD9dGA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g8z5iv", "is_robot_indexable": true, "report_reasons": null, "author": "janko-m", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g8z5iv/just_released_sequelactiverecordadapter_gem/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/g8z5iv/just_released_sequelactiverecordadapter_gem/", "subreddit_subscribers": 64786, "created_utc": 1587987702.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'd like to try JRuby for development for the JVM. It looks pretty nice, but I'm used to use VSCode for all of my development stuff and VSCode doesn't seem to have a good Ruby plugin. Is there a good and free IDE for JRuby development I could use? Obvioisly I know about RubyMine, but I'd prefer some free and not java based IDE. Thanks!", "author_fullname": "t2_1a4cuq3p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "IDE for JRuby?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g95jl0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588038386.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d like to try JRuby for development for the JVM. It looks pretty nice, but I&amp;#39;m used to use VSCode for all of my development stuff and VSCode doesn&amp;#39;t seem to have a good Ruby plugin. Is there a good and free IDE for JRuby development I could use? Obvioisly I know about RubyMine, but I&amp;#39;d prefer some free and not java based IDE. Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g95jl0", "is_robot_indexable": true, "report_reasons": null, "author": "AlexKotik", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g95jl0/ide_for_jruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/g95jl0/ide_for_jruby/", "subreddit_subscribers": 64786, "created_utc": 1588009586.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'm working on project to enhance the rdoc for Ruby.  It's gradually being merged into the Ruby project.\n\nRecently I was surprised by my research into dig.  Some of you may be, too.\n\n\\- My proposed rdoc:  [https://github.com/BurdetteLamar/AboutRuby/blob/master/core/Hash/api/markdown.md#dig](https://github.com/BurdetteLamar/AboutRuby/blob/master/core/Hash/api/markdown.md#dig)\n\n\\- The existing rdoc:  [https://ruby-doc.org/core-2.7.0/Hash.html#method-i-dig](https://ruby-doc.org/core-2.7.0/Hash.html#method-i-dig)", "author_fullname": "t2_1ruooe", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Dig", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g92d0v", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588028663.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m working on project to enhance the rdoc for Ruby.  It&amp;#39;s gradually being merged into the Ruby project.&lt;/p&gt;\n\n&lt;p&gt;Recently I was surprised by my research into dig.  Some of you may be, too.&lt;/p&gt;\n\n&lt;p&gt;- My proposed rdoc:  &lt;a href=\"https://github.com/BurdetteLamar/AboutRuby/blob/master/core/Hash/api/markdown.md#dig\"&gt;https://github.com/BurdetteLamar/AboutRuby/blob/master/core/Hash/api/markdown.md#dig&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;- The existing rdoc:  &lt;a href=\"https://ruby-doc.org/core-2.7.0/Hash.html#method-i-dig\"&gt;https://ruby-doc.org/core-2.7.0/Hash.html#method-i-dig&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/I0-qe3HFXyWDhFwC7jitrqzaOo-1Dg4D3FAQyf0szdc.jpg?auto=webp&amp;s=eccab7cff31c21aad73e7e14923987cfed0ecd0f", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/I0-qe3HFXyWDhFwC7jitrqzaOo-1Dg4D3FAQyf0szdc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8f3db35031c81575036c9a5bc0b7dfef2c8e5e05", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/I0-qe3HFXyWDhFwC7jitrqzaOo-1Dg4D3FAQyf0szdc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ff010554cdba484206a55cfc11a0a1839c2920f6", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/I0-qe3HFXyWDhFwC7jitrqzaOo-1Dg4D3FAQyf0szdc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=29a49bdb338e6cfc5d4dc2e4928c6a32367ca34c", "width": 320, "height": 320}], "variants": {}, "id": "a6Emg0xrCplYdKfiZG6iXHpaE4gCUCBxmQ1N_7CqTiM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g92d0v", "is_robot_indexable": true, "report_reasons": null, "author": "BurdetteLamar", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g92d0v/dig/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/g92d0v/dig/", "subreddit_subscribers": 64786, "created_utc": 1587999863.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I have a web scraper that's parses rows, and sometimes it cannot find elements and throws an exception.  I've added a check to see if the query returns nill object, and if so return a blank string instead.\n\nI was curious if there's a better way to do this in general or more idiomatic way in Ruby to write this.\n\n&amp;#x200B;\n\n    def parse_single_post(row)\n    title     =  row.at_css('.topictitle')\n    replies   =  row.at_css('.replies')\n    views     =  row.at_css('.posts')\n    last_post =  row.at_css('.lastpost')\n    author    =  row.at_css('.username')\n    link      =  row.at_css('a.topictitle')\n\n    posts &lt;&lt; OpenStruct.new(\n      title:     title ? title.text : \"\",\n      link:      link ? link['href'] : \"\",\n      author:    author ? author.text : \"\",\n      last_post: last_post ? last_post.text : \"\",\n      replies:   replies ? replies.text : \"\",\n      views:     views ? views.text : \"\"\n    )\n end", "author_fullname": "t2_e4ycg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Idiomatic way to check if object responds to method, otherwise return blank string", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g8zydx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588020071.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a web scraper that&amp;#39;s parses rows, and sometimes it cannot find elements and throws an exception.  I&amp;#39;ve added a check to see if the query returns nill object, and if so return a blank string instead.&lt;/p&gt;\n\n&lt;p&gt;I was curious if there&amp;#39;s a better way to do this in general or more idiomatic way in Ruby to write this.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def parse_single_post(row)\ntitle     =  row.at_css(&amp;#39;.topictitle&amp;#39;)\nreplies   =  row.at_css(&amp;#39;.replies&amp;#39;)\nviews     =  row.at_css(&amp;#39;.posts&amp;#39;)\nlast_post =  row.at_css(&amp;#39;.lastpost&amp;#39;)\nauthor    =  row.at_css(&amp;#39;.username&amp;#39;)\nlink      =  row.at_css(&amp;#39;a.topictitle&amp;#39;)\n\nposts &amp;lt;&amp;lt; OpenStruct.new(\n  title:     title ? title.text : &amp;quot;&amp;quot;,\n  link:      link ? link[&amp;#39;href&amp;#39;] : &amp;quot;&amp;quot;,\n  author:    author ? author.text : &amp;quot;&amp;quot;,\n  last_post: last_post ? last_post.text : &amp;quot;&amp;quot;,\n  replies:   replies ? replies.text : &amp;quot;&amp;quot;,\n  views:     views ? views.text : &amp;quot;&amp;quot;\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;end&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g8zydx", "is_robot_indexable": true, "report_reasons": null, "author": "Jberczel", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g8zydx/idiomatic_way_to_check_if_object_responds_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/g8zydx/idiomatic_way_to_check_if_object_responds_to/", "subreddit_subscribers": 64786, "created_utc": 1587991271.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hey ! just like the title states , I\u2019m looking for a ruby/rails mentor for the next month or so until I get hired. I\u2019ve taught myself ruby and rails but I know I need a little help gaining a better understanding of advanced concepts. Unfortunately code-mentor and similar sites charge up the arse and I really can\u2019t afford it just yet. I\u2019m extremely hard working and persistent, loyal and dedicated. If anyone could spare some time I would be forever grateful.", "author_fullname": "t2_5qcvv4b", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "LOOKING FOR A MENTOR", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g91gjq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588025693.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey ! just like the title states , I\u2019m looking for a ruby/rails mentor for the next month or so until I get hired. I\u2019ve taught myself ruby and rails but I know I need a little help gaining a better understanding of advanced concepts. Unfortunately code-mentor and similar sites charge up the arse and I really can\u2019t afford it just yet. I\u2019m extremely hard working and persistent, loyal and dedicated. If anyone could spare some time I would be forever grateful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g91gjq", "is_robot_indexable": true, "report_reasons": null, "author": "daytradekingpin", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/g91gjq/looking_for_a_mentor/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/g91gjq/looking_for_a_mentor/", "subreddit_subscribers": 64786, "created_utc": 1587996893.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_g91gjq", "before": null}}