{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "You know of a roadmap (similar [https://roadmap.sh/roadmaps](https://roadmap.sh/roadmaps) [https://www.quora.com/What-is-Ruby-On-Rails-framework-learning-road-map](https://www.quora.com/What-is-Ruby-On-Rails-framework-learning-road-map)) but for Ruby or Ruby On Rails, I'd like to create one for Ruby and another for Ruby On Rails, but first I'd like to know if you know of one that already exists and thus extend it or develop it as a learning path that can help novice programmers in their learning. Thanks for your input!", "author_fullname": "t2_34b2zdq4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Roadmap Ruby and Ruby On Rails", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_huf714", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595249525.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;You know of a roadmap (similar &lt;a href=\"https://roadmap.sh/roadmaps\"&gt;https://roadmap.sh/roadmaps&lt;/a&gt; &lt;a href=\"https://www.quora.com/What-is-Ruby-On-Rails-framework-learning-road-map\"&gt;https://www.quora.com/What-is-Ruby-On-Rails-framework-learning-road-map&lt;/a&gt;) but for Ruby or Ruby On Rails, I&amp;#39;d like to create one for Ruby and another for Ruby On Rails, but first I&amp;#39;d like to know if you know of one that already exists and thus extend it or develop it as a learning path that can help novice programmers in their learning. Thanks for your input!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/xutYXBR3x_ozgsvFXvZXkedw1H9Py3fTCKogT8OTALM.jpg?auto=webp&amp;s=c700bb9ac1b4f57c7f8739478cddc18a61927ee1", "width": 512, "height": 512}, "resolutions": [{"url": "https://external-preview.redd.it/xutYXBR3x_ozgsvFXvZXkedw1H9Py3fTCKogT8OTALM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f843d627cbd76d8ba219a79d49ada509f01cc03b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/xutYXBR3x_ozgsvFXvZXkedw1H9Py3fTCKogT8OTALM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=33872d4cfc9ca33ea818009c021241385351f4b5", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/xutYXBR3x_ozgsvFXvZXkedw1H9Py3fTCKogT8OTALM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=690bb96363d8976886302463b9b717f9185fbc3d", "width": 320, "height": 320}], "variants": {}, "id": "Z5z22lffsWEqJdxBCVty7o6vOmc5HWxOC1iBy36McV4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "huf714", "is_robot_indexable": true, "report_reasons": null, "author": "vifrac", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/huf714/roadmap_ruby_and_ruby_on_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/huf714/roadmap_ruby_and_ruby_on_rails/", "subreddit_subscribers": 66433, "created_utc": 1595220725.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "If you were to demo or explain what Ruby is to a bunch of non-ruby devs (e.g. Java or C# developers) what would you demonstrate or explain about Ruby which you think other devs might find interesting?  Any specific methods or facts that might impress a developer with little or no ruby knowledge?\n\nPerhaps there is already a good website with some examples?\n\nThanks", "author_fullname": "t2_7d3am", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Interesting or cool ruby features?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_huip5j", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595268292.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you were to demo or explain what Ruby is to a bunch of non-ruby devs (e.g. Java or C# developers) what would you demonstrate or explain about Ruby which you think other devs might find interesting?  Any specific methods or facts that might impress a developer with little or no ruby knowledge?&lt;/p&gt;\n\n&lt;p&gt;Perhaps there is already a good website with some examples?&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "huip5j", "is_robot_indexable": true, "report_reasons": null, "author": "chadwell", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/huip5j/interesting_or_cool_ruby_features/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/huip5j/interesting_or_cool_ruby_features/", "subreddit_subscribers": 66433, "created_utc": 1595239492.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3vpxj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Making RSpec Tests More Robust", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_hukup6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1595278971.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "jakeyesbeck.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "http://jakeyesbeck.com/2020/07/19/making-rspec-tests-more-robust/?src=reddit", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hukup6", "is_robot_indexable": true, "report_reasons": null, "author": "yez", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hukup6/making_rspec_tests_more_robust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://jakeyesbeck.com/2020/07/19/making-rspec-tests-more-robust/?src=reddit", "subreddit_subscribers": 66433, "created_utc": 1595250171.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I was able to get this running yesterday, but it started throwing errors even when I reverted back to an earlier draft of my Ruby file. Now it still throws the same error when I'm trying to just use a verbatim copy-and-paste (that worked in the past) example from the documentation.\n\n[https://squib.rocks/](https://squib.rocks/)\n\nThis is the error it throws on the sample from the above link (on the bottom of the page, which I've been able to run before).\n\nI'm running this through WSL (Ubuntu).\n\n    $ ruby deck.rb\n    WARNING: Nokogiri was built against LibXML version 2.9.9, but has dynamically loaded 2.9.10  \n    Traceback (most recent call last):  \n    9: from deck.rb:3:in '&lt;main&gt;'  \n    8: from deck.rb:3:in 'new'  \n    7: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/deck.rb:74:in 'initialize'  \n    6: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/deck.rb:74:in 'instance_eval'  \n    5: from deck.rb:5:in 'block in &lt;main&gt;'  \n    4: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:124:in 'xlsx'  \n    3: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:18:in 'xlsx'  \n    2: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:18:in 'upto'  \n    1: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:20:in 'block in xlsx' /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:20:in 'strip!': can't modify frozen String: \"\" (FrozenError)  \n\n&amp;#x200B;", "author_fullname": "t2_6x52w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby (Squib) error when running", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_huc7bh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1595208124.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595236701.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was able to get this running yesterday, but it started throwing errors even when I reverted back to an earlier draft of my Ruby file. Now it still throws the same error when I&amp;#39;m trying to just use a verbatim copy-and-paste (that worked in the past) example from the documentation.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://squib.rocks/\"&gt;https://squib.rocks/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is the error it throws on the sample from the above link (on the bottom of the page, which I&amp;#39;ve been able to run before).&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m running this through WSL (Ubuntu).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ ruby deck.rb\nWARNING: Nokogiri was built against LibXML version 2.9.9, but has dynamically loaded 2.9.10  \nTraceback (most recent call last):  \n9: from deck.rb:3:in &amp;#39;&amp;lt;main&amp;gt;&amp;#39;  \n8: from deck.rb:3:in &amp;#39;new&amp;#39;  \n7: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/deck.rb:74:in &amp;#39;initialize&amp;#39;  \n6: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/deck.rb:74:in &amp;#39;instance_eval&amp;#39;  \n5: from deck.rb:5:in &amp;#39;block in &amp;lt;main&amp;gt;&amp;#39;  \n4: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:124:in &amp;#39;xlsx&amp;#39;  \n3: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:18:in &amp;#39;xlsx&amp;#39;  \n2: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:18:in &amp;#39;upto&amp;#39;  \n1: from /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:20:in &amp;#39;block in xlsx&amp;#39; /var/lib/gems/2.7.0/gems/squib-0.15.3/lib/squib/api/data.rb:20:in &amp;#39;strip!&amp;#39;: can&amp;#39;t modify frozen String: &amp;quot;&amp;quot; (FrozenError)  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Ak3lvw4ETYOWTDHD4zpfUycuBR3zo3MTVLiRWm7oXgw.jpg?auto=webp&amp;s=7ac9aab0f0c49df11dc090c7d066b6a7d3be82c9", "width": 2296, "height": 1592}, "resolutions": [{"url": "https://external-preview.redd.it/Ak3lvw4ETYOWTDHD4zpfUycuBR3zo3MTVLiRWm7oXgw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=dea598e36224eb311b914a3da07f80b76d426cf4", "width": 108, "height": 74}, {"url": "https://external-preview.redd.it/Ak3lvw4ETYOWTDHD4zpfUycuBR3zo3MTVLiRWm7oXgw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=315b9b160ec93a515e2b16b857127f5e89e002cd", "width": 216, "height": 149}, {"url": "https://external-preview.redd.it/Ak3lvw4ETYOWTDHD4zpfUycuBR3zo3MTVLiRWm7oXgw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f4d39f28e16776bf7e261f78d3d16811a799bded", "width": 320, "height": 221}, {"url": "https://external-preview.redd.it/Ak3lvw4ETYOWTDHD4zpfUycuBR3zo3MTVLiRWm7oXgw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=04822dccfc9b12a93e0a2ec9691d6de0c14d697c", "width": 640, "height": 443}, {"url": "https://external-preview.redd.it/Ak3lvw4ETYOWTDHD4zpfUycuBR3zo3MTVLiRWm7oXgw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9ca04e1b6ddd371fd3b9c3aa65e3cbebd1908fd0", "width": 960, "height": 665}, {"url": "https://external-preview.redd.it/Ak3lvw4ETYOWTDHD4zpfUycuBR3zo3MTVLiRWm7oXgw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9cd1f981dc5703f15164f98cfefbaaac156a28f5", "width": 1080, "height": 748}], "variants": {}, "id": "mxeKtoriyI7fytZUO_1o1MxXPBBVbm1vLAEX2zoSbFE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "huc7bh", "is_robot_indexable": true, "report_reasons": null, "author": "magusonline", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/huc7bh/ruby_squib_error_when_running/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/huc7bh/ruby_squib_error_when_running/", "subreddit_subscribers": 66433, "created_utc": 1595207901.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello everyone!\n\nI have started learning ruby and I've just finished my first OOP project (I am learning through the odin project). I want to know what kind of mistakes  am I making early on. So I would appreciate any reviews/critiques/mistake identification.\n\n[https://github.com/e-km0d/Ruby-Projects/tree/master/Tic\\_Tac\\_Toe](https://github.com/e-km0d/Ruby-Projects/tree/master/Tic_Tac_Toe)\n\nWhat can I improve here?\n\nThanks!", "author_fullname": "t2_nxenm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Request for code review", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hu5xxd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595214053.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone!&lt;/p&gt;\n\n&lt;p&gt;I have started learning ruby and I&amp;#39;ve just finished my first OOP project (I am learning through the odin project). I want to know what kind of mistakes  am I making early on. So I would appreciate any reviews/critiques/mistake identification.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/e-km0d/Ruby-Projects/tree/master/Tic_Tac_Toe\"&gt;https://github.com/e-km0d/Ruby-Projects/tree/master/Tic_Tac_Toe&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;What can I improve here?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/J-4OMTIjUf50m7zZdEX9jz5ljF3thxbXmM4YVE4xuWY.jpg?auto=webp&amp;s=04d3b1a395a0f893432ea019f623e5d1e6630cfb", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/J-4OMTIjUf50m7zZdEX9jz5ljF3thxbXmM4YVE4xuWY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=53b5065097e7ec899c8e4cad446b2a003d2102ee", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/J-4OMTIjUf50m7zZdEX9jz5ljF3thxbXmM4YVE4xuWY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=99f7d9d90141d62edd059ebb8803977ea2a860df", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/J-4OMTIjUf50m7zZdEX9jz5ljF3thxbXmM4YVE4xuWY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e4e0c7a437347cc1d3a7c440faf1bf32c04105e4", "width": 320, "height": 320}], "variants": {}, "id": "8tT2RxLr9TwIiJL5gDj8zZbEGpkVxPSR2_MCKLCRAKY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hu5xxd", "is_robot_indexable": true, "report_reasons": null, "author": "domke89", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hu5xxd/request_for_code_review/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hu5xxd/request_for_code_review/", "subreddit_subscribers": 66433, "created_utc": 1595185253.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3in07", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How we migrated application servers from Unicorn to Puma (GitLab)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_htw2iy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": "", "subreddit_type": "public", "ups": 47, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 47, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/2C09waEnrmnDYCmFFQEgeansP5MiDw78e-4INUNKMK0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1595169141.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "about.gitlab.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://about.gitlab.com/blog/2020/07/08/migrating-to-puma-on-gitlab/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/LhYr6LHYbFTNIfKo0kOzzWCP9-t5TIY39q6RKsmPHJQ.jpg?auto=webp&amp;s=c80e4bba1329a61f80999d59d8892d42a84760d6", "width": 1819, "height": 1213}, "resolutions": [{"url": "https://external-preview.redd.it/LhYr6LHYbFTNIfKo0kOzzWCP9-t5TIY39q6RKsmPHJQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2c448512f6628ce0db95093c64fbd8a7ed953abb", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/LhYr6LHYbFTNIfKo0kOzzWCP9-t5TIY39q6RKsmPHJQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=111f19209c249318de1aebd78ac3f48267cd2401", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/LhYr6LHYbFTNIfKo0kOzzWCP9-t5TIY39q6RKsmPHJQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=aedce579e6b393eb79e613105793b69225e7b0f2", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/LhYr6LHYbFTNIfKo0kOzzWCP9-t5TIY39q6RKsmPHJQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=a9f9270d7d5d449b6475550d071d7aae9220528e", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/LhYr6LHYbFTNIfKo0kOzzWCP9-t5TIY39q6RKsmPHJQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=870c49ca5cbb830164387ea10318f336b3e3e222", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/LhYr6LHYbFTNIfKo0kOzzWCP9-t5TIY39q6RKsmPHJQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8cd7ab251e0ffb5c64c3978e35e0a4b66729f41e", "width": 1080, "height": 720}], "variants": {}, "id": "x21wrO2iuc0KCgIDLzvTKgV8Kvn2sOB9wDR_NFwBwEE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "Puma maintainer", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htw2iy", "is_robot_indexable": true, "report_reasons": null, "author": "nateberkopec", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/ruby/comments/htw2iy/how_we_migrated_application_servers_from_unicorn/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://about.gitlab.com/blog/2020/07/08/migrating-to-puma-on-gitlab/", "subreddit_subscribers": 66433, "created_utc": 1595140341.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I'm currently re-evaluating how to name methods that are, to the user, getter and setter methods but are more complex in their implementation than just setting a variable.\n\nIf just a variable needs to be set, we have the `attr_reader`, `attr_writer` and `attr_accessor` methods. That's easy and okay for simple cases.\n\nIn more complex cases where, for example, multiple arguments are required the `attr_*` methods won't work because only one value can be given as argument.\n\nThe way I'm currently doing this in most cases is to have a single method like `#line_dash_pattern(value = nil, phase = 0, &amp;block)` which acts as getter if `value` is `nil` or as a setter if `value` isn't.  The definition for this method can be found [here](https://github.com/gettalong/hexapdf/blob/master/lib/hexapdf/content/canvas.rb#L615) and its implementation [here](https://github.com/gettalong/hexapdf/blob/master/lib/hexapdf/content/canvas.rb#L2027).\n\nI find it a bit ugly due to big `if/else` statement but haven't found anything better. For example, using methods named `get_line_dash_pattern` and `set_line_dash_pattern` feels a bit un-Ruby like, though it allows for consistent naming, even if only getter or setter is needed.\n\nSince, I guess, this \"problem\" is something that many have encountered, I would be interested in hearing how you solved it! Thanks!", "author_fullname": "t2_12k0ek", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "RFC: Naming complex getter/setter methods", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hu22bk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595200507.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m currently re-evaluating how to name methods that are, to the user, getter and setter methods but are more complex in their implementation than just setting a variable.&lt;/p&gt;\n\n&lt;p&gt;If just a variable needs to be set, we have the &lt;code&gt;attr_reader&lt;/code&gt;, &lt;code&gt;attr_writer&lt;/code&gt; and &lt;code&gt;attr_accessor&lt;/code&gt; methods. That&amp;#39;s easy and okay for simple cases.&lt;/p&gt;\n\n&lt;p&gt;In more complex cases where, for example, multiple arguments are required the &lt;code&gt;attr_*&lt;/code&gt; methods won&amp;#39;t work because only one value can be given as argument.&lt;/p&gt;\n\n&lt;p&gt;The way I&amp;#39;m currently doing this in most cases is to have a single method like &lt;code&gt;#line_dash_pattern(value = nil, phase = 0, &amp;amp;block)&lt;/code&gt; which acts as getter if &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; or as a setter if &lt;code&gt;value&lt;/code&gt; isn&amp;#39;t.  The definition for this method can be found &lt;a href=\"https://github.com/gettalong/hexapdf/blob/master/lib/hexapdf/content/canvas.rb#L615\"&gt;here&lt;/a&gt; and its implementation &lt;a href=\"https://github.com/gettalong/hexapdf/blob/master/lib/hexapdf/content/canvas.rb#L2027\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I find it a bit ugly due to big &lt;code&gt;if/else&lt;/code&gt; statement but haven&amp;#39;t found anything better. For example, using methods named &lt;code&gt;get_line_dash_pattern&lt;/code&gt; and &lt;code&gt;set_line_dash_pattern&lt;/code&gt; feels a bit un-Ruby like, though it allows for consistent naming, even if only getter or setter is needed.&lt;/p&gt;\n\n&lt;p&gt;Since, I guess, this &amp;quot;problem&amp;quot; is something that many have encountered, I would be interested in hearing how you solved it! Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/d7rVH3XZpRaWUbywyR938_3KfEpe8VbcFnFhgamf-Fg.jpg?auto=webp&amp;s=23a725835828727a563214d714c1653833cb927c", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/d7rVH3XZpRaWUbywyR938_3KfEpe8VbcFnFhgamf-Fg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0560d4869fb7ddbd6dc4471b9c147bc08c99214f", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/d7rVH3XZpRaWUbywyR938_3KfEpe8VbcFnFhgamf-Fg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=375910786cf87fbf61d585c36bf3cf692da99f57", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/d7rVH3XZpRaWUbywyR938_3KfEpe8VbcFnFhgamf-Fg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=57a06453baece6b03e168f4fa82c6f436bfb9026", "width": 320, "height": 320}], "variants": {}, "id": "iuDyaH3wIhuySRZRngWm3KTJF_S9LRf0eO2grwvDgiI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hu22bk", "is_robot_indexable": true, "report_reasons": null, "author": "gettalong", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/hu22bk/rfc_naming_complex_gettersetter_methods/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/hu22bk/rfc_naming_complex_gettersetter_methods/", "subreddit_subscribers": 66433, "created_utc": 1595171707.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Wrote an article about log delivery and in this article, I'll explain TCP/UDP using ruby. Hope this will help you understand TCP/UDP better\n\n[https://dev.sweatco.in/centralized-logging-delivery/](https://dev.sweatco.in/centralized-logging-delivery/)", "author_fullname": "t2_48mu6txv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TCP/UDP explanation with ruby (using log delivery as an example)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_htxyhs", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1595173550.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595180496.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Wrote an article about log delivery and in this article, I&amp;#39;ll explain TCP/UDP using ruby. Hope this will help you understand TCP/UDP better&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://dev.sweatco.in/centralized-logging-delivery/\"&gt;https://dev.sweatco.in/centralized-logging-delivery/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bM6ZI8r0ixXqAo26cIJv5XxJmylJPJOAedjtc0UfG1g.jpg?auto=webp&amp;s=91a1733247f52aee6507dfcaa67a1ae9b17263fd", "width": 2000, "height": 1500}, "resolutions": [{"url": "https://external-preview.redd.it/bM6ZI8r0ixXqAo26cIJv5XxJmylJPJOAedjtc0UfG1g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c5b4a31612f4f7099761cd693eaef5719d0f31d7", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/bM6ZI8r0ixXqAo26cIJv5XxJmylJPJOAedjtc0UfG1g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=59ab728b799cad9f0b75554247131b0da5d839d2", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/bM6ZI8r0ixXqAo26cIJv5XxJmylJPJOAedjtc0UfG1g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1ef76c2d1c07e0c80dd97346a82736a9a71963a0", "width": 320, "height": 240}, {"url": "https://external-preview.redd.it/bM6ZI8r0ixXqAo26cIJv5XxJmylJPJOAedjtc0UfG1g.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=df8cb6ab10d3e52b18dd3d9492009662fe4848e3", "width": 640, "height": 480}, {"url": "https://external-preview.redd.it/bM6ZI8r0ixXqAo26cIJv5XxJmylJPJOAedjtc0UfG1g.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ca5452f35784c973adfd534e6a9569c5b75cc7cc", "width": 960, "height": 720}, {"url": "https://external-preview.redd.it/bM6ZI8r0ixXqAo26cIJv5XxJmylJPJOAedjtc0UfG1g.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c5661ff22f602a0ed2f814bd4d22b8ab572438ea", "width": 1080, "height": 810}], "variants": {}, "id": "rF8RJS2ugUoI17wNOhLuvNn9thRUnV-uP3u8SY5PshA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htxyhs", "is_robot_indexable": true, "report_reasons": null, "author": "maierru", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/htxyhs/tcpudp_explanation_with_ruby_using_log_delivery/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/htxyhs/tcpudp_explanation_with_ruby_using_log_delivery/", "subreddit_subscribers": 66433, "created_utc": 1595151696.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello! My question is about such a popular concept in other programming languages - async/await. Have you tried out a gem [async-await](https://github.com/socketry/async-await) which is built on top of [async](https://github.com/socketry/async) that gives us async decorator for functions and await method (accepting a block)?\n\n[code example](https://imgur.com/I3kACSF)\n\nPlease share your thoughts/experience about it.", "author_fullname": "t2_te5tv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using async/await syntax in ruby with async-await gem", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_htpwuf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1595167150.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1595141504.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello! My question is about such a popular concept in other programming languages - async/await. Have you tried out a gem &lt;a href=\"https://github.com/socketry/async-await\"&gt;async-await&lt;/a&gt; which is built on top of &lt;a href=\"https://github.com/socketry/async\"&gt;async&lt;/a&gt; that gives us async decorator for functions and await method (accepting a block)?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://imgur.com/I3kACSF\"&gt;code example&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Please share your thoughts/experience about it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/ZJrL5Ct9j-d6iMKiGgV_RAxXWzvJmrw1wKKplbnu22s.jpg?auto=webp&amp;s=7726a5e705b7b10ab6f06f0c8ffbc8cd768f658e", "width": 822, "height": 1056}, "resolutions": [{"url": "https://external-preview.redd.it/ZJrL5Ct9j-d6iMKiGgV_RAxXWzvJmrw1wKKplbnu22s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6525a821d78d15cc2467eaf3a81df5cd06df2099", "width": 108, "height": 138}, {"url": "https://external-preview.redd.it/ZJrL5Ct9j-d6iMKiGgV_RAxXWzvJmrw1wKKplbnu22s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=401b428e89d6b68e746186bf5c7a3895c73c22a7", "width": 216, "height": 277}, {"url": "https://external-preview.redd.it/ZJrL5Ct9j-d6iMKiGgV_RAxXWzvJmrw1wKKplbnu22s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=186e25030e944632db664a3c351a87744aa9e358", "width": 320, "height": 411}, {"url": "https://external-preview.redd.it/ZJrL5Ct9j-d6iMKiGgV_RAxXWzvJmrw1wKKplbnu22s.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=31c1b89b3b22525082a5a75d0ec3f184219f1be2", "width": 640, "height": 822}], "variants": {}, "id": "mrNmLiLmHJJD-TVE42F7R8VUB6t7hrj0VsWQsRGyW20"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htpwuf", "is_robot_indexable": true, "report_reasons": null, "author": "GlesCorpint", "discussion_type": null, "num_comments": 27, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/htpwuf/using_asyncawait_syntax_in_ruby_with_asyncawait/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/htpwuf/using_asyncawait_syntax_in_ruby_with_asyncawait/", "subreddit_subscribers": 66433, "created_utc": 1595112704.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_217qpjne", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How can I create class instance and run a class method when .txt file gets added to the directory in Ruby?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_htz846", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1595187995.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "htz846", "is_robot_indexable": true, "report_reasons": null, "author": "Scorpio2023", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/htz846/how_can_i_create_class_instance_and_run_a_class/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/htz846/how_can_i_create_class_instance_and_run_a_class/", "subreddit_subscribers": 66433, "created_utc": 1595159195.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_htz846", "before": null}}