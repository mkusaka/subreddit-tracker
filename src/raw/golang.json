{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_f4wzr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "/r/golang hit 100k subscribers yesterday", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_er8klk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 75, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 75, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579526194.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "redditmetrics.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "er8klk", "is_robot_indexable": true, "report_reasons": null, "author": "TrendingBot", "discussion_type": null, "num_comments": 5, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/er8klk/rgolang_hit_100k_subscribers_yesterday/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://redditmetrics.com/r/golang", "subreddit_subscribers": 100099, "created_utc": 1579497394.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "[github.com/AllenDang/giu](https://github.com/AllenDang/giu)\n\nCross platform rapid GUI framework for golang based on [imgui](https://github.com/ocornut/imgui) and the great golang binding [imgui-go](https://github.com/inkyblackness/imgui-go).\n\n# Features\n\nCompare to other imgui golang bindings, giu has following features:\n\n* Live-update during the resizing of OS window (implemented on GLFW 3.3 and OpenGL 3.2).\n* Redraw only when user event occurred. Costs only 0.5% CPU usage with 60FPS.\n* Declarative UI (see examples for more detail).\n* Drop in usage, no need to implement render and platform.\n* Freetype font rendering support.\n* OS clipboard support.\n\nhttps://preview.redd.it/twjsquplvub41.png?width=1200&amp;format=png&amp;auto=webp&amp;s=2ed4bdf30b1f38bb85c7046b25c9f137577c9665", "author_fullname": "t2_pv4im3s", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "giu - cross platform rapid GUI framework for golang based on imgui", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "media_metadata": {"twjsquplvub41": {"status": "valid", "e": "Image", "s": {"y": 1169, "x": 1200, "u": "https://preview.redd.it/twjsquplvub41.png?width=1200&amp;format=png&amp;auto=webp&amp;s=2ed4bdf30b1f38bb85c7046b25c9f137577c9665"}, "m": "image/png", "id": "twjsquplvub41"}}, "name": "t3_er7js0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1579499698.0, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579520997.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/AllenDang/giu\"&gt;github.com/AllenDang/giu&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Cross platform rapid GUI framework for golang based on &lt;a href=\"https://github.com/ocornut/imgui\"&gt;imgui&lt;/a&gt; and the great golang binding &lt;a href=\"https://github.com/inkyblackness/imgui-go\"&gt;imgui-go&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h1&gt;Features&lt;/h1&gt;\n\n&lt;p&gt;Compare to other imgui golang bindings, giu has following features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Live-update during the resizing of OS window (implemented on GLFW 3.3 and OpenGL 3.2).&lt;/li&gt;\n&lt;li&gt;Redraw only when user event occurred. Costs only 0.5% CPU usage with 60FPS.&lt;/li&gt;\n&lt;li&gt;Declarative UI (see examples for more detail).&lt;/li&gt;\n&lt;li&gt;Drop in usage, no need to implement render and platform.&lt;/li&gt;\n&lt;li&gt;Freetype font rendering support.&lt;/li&gt;\n&lt;li&gt;OS clipboard support.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/twjsquplvub41.png?width=1200&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2ed4bdf30b1f38bb85c7046b25c9f137577c9665\"&gt;https://preview.redd.it/twjsquplvub41.png?width=1200&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2ed4bdf30b1f38bb85c7046b25c9f137577c9665&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "er7js0", "is_robot_indexable": true, "report_reasons": null, "author": "AllenGnr", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/er7js0/giu_cross_platform_rapid_gui_framework_for_golang/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/er7js0/giu_cross_platform_rapid_gui_framework_for_golang/", "subreddit_subscribers": 100099, "created_utc": 1579492197.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_146xxl4f", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TutorialEdge/Go: A list of Go Programming Tutorials, their write-ups, their source code and their current build status!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_er3dsy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 46, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 46, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579501305.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "er3dsy", "is_robot_indexable": true, "report_reasons": null, "author": "elliotforbes", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/er3dsy/tutorialedgego_a_list_of_go_programming_tutorials/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/TutorialEdge/go", "subreddit_subscribers": 100099, "created_utc": 1579472505.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_6xrkn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Algorithms with Go (free)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eqvurh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 217, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 217, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579467003.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "algorithmswithgo.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eqvurh", "is_robot_indexable": true, "report_reasons": null, "author": "joncalhoun", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/eqvurh/algorithms_with_go_free/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://algorithmswithgo.com/", "subreddit_subscribers": 100099, "created_utc": 1579438203.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Currently I'm an undergraduate student in Computer Science and had gotten into Go and have loved it ever since. I was wondering, if later down the line I ever wanted to join the Go Team, what do you think would be the appropriate prerequisites/background to have? Are there any computer science/math areas that would be useful to know?", "author_fullname": "t2_5cru763f", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What things are necessary before being able to work on Go in the Go Team.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_erc3qy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579548782.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Currently I&amp;#39;m an undergraduate student in Computer Science and had gotten into Go and have loved it ever since. I was wondering, if later down the line I ever wanted to join the Go Team, what do you think would be the appropriate prerequisites/background to have? Are there any computer science/math areas that would be useful to know?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "erc3qy", "is_robot_indexable": true, "report_reasons": null, "author": "rockedurham253", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/erc3qy/what_things_are_necessary_before_being_able_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/erc3qy/what_things_are_necessary_before_being_able_to/", "subreddit_subscribers": 100099, "created_utc": 1579519982.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_8fhhl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "S-expressions parser (play with LISP-like expressions!)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_er8p8o", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579526896.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "er8p8o", "is_robot_indexable": true, "report_reasons": null, "author": "xiamk", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/er8p8o/sexpressions_parser_play_with_lisplike_expressions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/xiam/sexpr", "subreddit_subscribers": 100099, "created_utc": 1579498096.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "## Slasher\n\n[Slasher](https://github.com/autom8ter/slasher) makes it easy to write http servers that respond to slack slash commands. Please note, a custom slack app must be created within your target workspace. Visit the following link to learn how to setup a custom slack app: [https://api.slack.com/interactivity/slash-commands](https://api.slack.com/interactivity/slash-commands)\n\n## Example\n\n&amp;#x200B;\n\n    import (\n    \t\"fmt\"\n    \t\"github.com/autom8ter/slasher\"\n    \t\"github.com/nlopes/slack\"\n    \t\"github.com/pkg/errors\"\n    \t\"net/http\"\n    \t\"os\"\n    )\n    \n    \n    func helloWorld() slasher.HandlerFunc{\n    \treturn func(s *slasher.Slasher, client *slack.Client, command *slack.SlashCommand) (i interface{}, err error) {\n    \t\tscript := `echo \"hello world!\"`\n    \t\toutput, err := s.ShellScript(script)\n    \t\tif err != nil {\n    \t\t\treturn nil,  errors.Wrapf(err, \"failed to run script: %s\", script)\n    \t\t}\n    \t\treturn &amp;slack.Message{\n    \t\t\tMsg: slack.Msg{\n    \t\t\t\tText: string(output),\n    \t\t\t},\n    \t\t}, nil\n    \t}\n    }\n    \n    func main() {\n    \tslash := slasher.NewSlasher(os.Getenv(\"SLACK_TOKEN\"), []string{\"autom8ter\"})\n    \tslash.AddHandler(\"/hello-world\", helloWorld())\n    \tmux := http.NewServeMux()\n    \tmux.Handle(\"/slasher\", slash.HandlerFunc())\n    \tif err := http.ListenAndServe(\":8080\", mux); err != nil {\n    \t\tfmt.Printf(\"failed to start server: %s\", err.Error())\n    \t\tos.Exit(1)\n    \t}\n    }", "author_fullname": "t2_1fdwxo4n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Slasher-write http servers that respond to slack slash commands", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_er6vpo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1579489104.0, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579517690.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h2&gt;Slasher&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/autom8ter/slasher\"&gt;Slasher&lt;/a&gt; makes it easy to write http servers that respond to slack slash commands. Please note, a custom slack app must be created within your target workspace. Visit the following link to learn how to setup a custom slack app: &lt;a href=\"https://api.slack.com/interactivity/slash-commands\"&gt;https://api.slack.com/interactivity/slash-commands&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Example&lt;/h2&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;github.com/autom8ter/slasher&amp;quot;\n    &amp;quot;github.com/nlopes/slack&amp;quot;\n    &amp;quot;github.com/pkg/errors&amp;quot;\n    &amp;quot;net/http&amp;quot;\n    &amp;quot;os&amp;quot;\n)\n\n\nfunc helloWorld() slasher.HandlerFunc{\n    return func(s *slasher.Slasher, client *slack.Client, command *slack.SlashCommand) (i interface{}, err error) {\n        script := `echo &amp;quot;hello world!&amp;quot;`\n        output, err := s.ShellScript(script)\n        if err != nil {\n            return nil,  errors.Wrapf(err, &amp;quot;failed to run script: %s&amp;quot;, script)\n        }\n        return &amp;amp;slack.Message{\n            Msg: slack.Msg{\n                Text: string(output),\n            },\n        }, nil\n    }\n}\n\nfunc main() {\n    slash := slasher.NewSlasher(os.Getenv(&amp;quot;SLACK_TOKEN&amp;quot;), []string{&amp;quot;autom8ter&amp;quot;})\n    slash.AddHandler(&amp;quot;/hello-world&amp;quot;, helloWorld())\n    mux := http.NewServeMux()\n    mux.Handle(&amp;quot;/slasher&amp;quot;, slash.HandlerFunc())\n    if err := http.ListenAndServe(&amp;quot;:8080&amp;quot;, mux); err != nil {\n        fmt.Printf(&amp;quot;failed to start server: %s&amp;quot;, err.Error())\n        os.Exit(1)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "er6vpo", "is_robot_indexable": true, "report_reasons": null, "author": "303cloudnative", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/er6vpo/slasherwrite_http_servers_that_respond_to_slack/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/er6vpo/slasherwrite_http_servers_that_respond_to_slack/", "subreddit_subscribers": 100099, "created_utc": 1579488890.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "[github.com/gofiber/fiber](https://github.com/gofiber/fiber)\n\nI've been developing micro web services in node for years, personally and professionally. In 2019 I faced some challenges regarding the performance for a high load micro service on a budget. This was the moment I had to seek for alternatives and porting the project to Go was the first thing that came in mind. Go always intrigued me since I saw Rob Pike gave [this](https://www.youtube.com/watch?v=PAAkCSZUG1c) talk, I recommend watching it if you didn't see it yet.\n\nAfter porting the node code to Go, I observed three things:\n\n* The community is awesome and so helpful!\n* Performance, performance, performance!\n* I fell in \ud83d\udc96 with Go and knew this was the beginning of a new chapter\n\nAfter debugging and bootstrapping my micro service, I decided to rewrite all my projects in Go.This took me some some months, but I thought it was a great way to learn more about the language.\n\nMost of my micro services are mostly build up out of API endpoints, and I always used [Expressjs](https://expressjs.com/) for fast prototyping and ease of use. [NGINX](https://www.nginx.com/) for load balancing and in most cases this made me able to deploy multiple services in a week. This worked seamlessly for me and the companies I worked for, time is \ud83d\udcb8 money.\n\n* Was it perfect code?       **No**\n* Was it error proof?          **No**\n* Was it efficient?                **No**\n* Did it get the job done?  **Yes**\n\nAll my current projects that I ported to Go are using [Fasthttp](https://github.com/valyala/fasthttp), an amazing package that has some great people that helped me to understand some fundamentals regarding the network part in Go.\n\nI tried to convince some of my co-workers to also switch to Go, some tried but had a hard time with the learning curve. This was my motivation to create a package for them that makes it easier porting [Expressjs](https://expressjs.com/) related projects to Go. In the hope that the performance gain in the end would made them fall in \ud83d\udc96 with Go too. Thats when [Fiber](https://github.com/gofiber/fiber) was born with some extended [Documentation](https://gofiber.github.io/fiber/#/) to help my colleagues out.\n\nIt's basically an [Expressjs](https://expressjs.com/) styled router build on top of [Fasthttp](https://github.com/valyala/fasthttp), I made sure almost all express methods are include ([Context API)](https://gofiber.github.io/fiber/#/context). It worked, my colleagues ported some node projects within a day and fell in love on both the language and performance. More gophers, mission complete \ud83d\udcaa.\n\nMy plan this year is to deploy all our projects in production using Go. I think there is a lot of improvement to be made to this new library, that's one of the reasons I wanted to post it here. I would love to get some feedback, suggestions, pull requests or even criticism!\n\nI would like to take the opportunity to thank some people for helping and inspiring me: [@valyala](https://github.com/valyala)([Fasthttp](https://github.com/valyala/fasthttp/blob/master/LICENSE)) / [@julienschmidt](https://github.com/julienschmidt)([HttpRouter](https://github.com/julienschmidt/httprouter)) / [@savsgio](https://github.com/savsgio)([Atreugo](https://github.com/savsgio/atreugo/blob/master/LICENSE)) / [@vincentLiuxiang](https://github.com/vincentLiuxiang)([Lu](https://github.com/vincentLiuxiang/lu/blob/master/LICENSE)) / [@tj](https://github.com/tj)([Expressjs](https://github.com/expressjs/express)) / [@pillarjs](https://github.com/pillarjs)([Path-to-regexp](https://github.com/pillarjs/path-to-regexp/blob/master/LICENSE)) / [@techempower](https://github.com/TechEmpower)([FrameworkBenchmarks](https://github.com/TechEmpower/FrameworkBenchmarks)) / [@erikdubbelboer](https://github.com/erikdubbelboer)([Fasthttp](https://github.com/valyala/fasthttp/blob/master/LICENSE))\n\nThanks all! \ud83d\udc96", "author_fullname": "t2_59s96ywp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "\ud83d\udd0c Fiber is an Expressjs inspired web framework build on \ud83d\ude80 Fasthttp.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_er8qjw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1579519060.0, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579527081.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/gofiber/fiber\"&gt;github.com/gofiber/fiber&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been developing micro web services in node for years, personally and professionally. In 2019 I faced some challenges regarding the performance for a high load micro service on a budget. This was the moment I had to seek for alternatives and porting the project to Go was the first thing that came in mind. Go always intrigued me since I saw Rob Pike gave &lt;a href=\"https://www.youtube.com/watch?v=PAAkCSZUG1c\"&gt;this&lt;/a&gt; talk, I recommend watching it if you didn&amp;#39;t see it yet.&lt;/p&gt;\n\n&lt;p&gt;After porting the node code to Go, I observed three things:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The community is awesome and so helpful!&lt;/li&gt;\n&lt;li&gt;Performance, performance, performance!&lt;/li&gt;\n&lt;li&gt;I fell in \ud83d\udc96 with Go and knew this was the beginning of a new chapter&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;After debugging and bootstrapping my micro service, I decided to rewrite all my projects in Go.This took me some some months, but I thought it was a great way to learn more about the language.&lt;/p&gt;\n\n&lt;p&gt;Most of my micro services are mostly build up out of API endpoints, and I always used &lt;a href=\"https://expressjs.com/\"&gt;Expressjs&lt;/a&gt; for fast prototyping and ease of use. &lt;a href=\"https://www.nginx.com/\"&gt;NGINX&lt;/a&gt; for load balancing and in most cases this made me able to deploy multiple services in a week. This worked seamlessly for me and the companies I worked for, time is \ud83d\udcb8 money.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Was it perfect code?       &lt;strong&gt;No&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;Was it error proof?          &lt;strong&gt;No&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;Was it efficient?                &lt;strong&gt;No&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;Did it get the job done?  &lt;strong&gt;Yes&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;All my current projects that I ported to Go are using &lt;a href=\"https://github.com/valyala/fasthttp\"&gt;Fasthttp&lt;/a&gt;, an amazing package that has some great people that helped me to understand some fundamentals regarding the network part in Go.&lt;/p&gt;\n\n&lt;p&gt;I tried to convince some of my co-workers to also switch to Go, some tried but had a hard time with the learning curve. This was my motivation to create a package for them that makes it easier porting &lt;a href=\"https://expressjs.com/\"&gt;Expressjs&lt;/a&gt; related projects to Go. In the hope that the performance gain in the end would made them fall in \ud83d\udc96 with Go too. Thats when &lt;a href=\"https://github.com/gofiber/fiber\"&gt;Fiber&lt;/a&gt; was born with some extended &lt;a href=\"https://gofiber.github.io/fiber/#/\"&gt;Documentation&lt;/a&gt; to help my colleagues out.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s basically an &lt;a href=\"https://expressjs.com/\"&gt;Expressjs&lt;/a&gt; styled router build on top of &lt;a href=\"https://github.com/valyala/fasthttp\"&gt;Fasthttp&lt;/a&gt;, I made sure almost all express methods are include (&lt;a href=\"https://gofiber.github.io/fiber/#/context\"&gt;Context API)&lt;/a&gt;. It worked, my colleagues ported some node projects within a day and fell in love on both the language and performance. More gophers, mission complete \ud83d\udcaa.&lt;/p&gt;\n\n&lt;p&gt;My plan this year is to deploy all our projects in production using Go. I think there is a lot of improvement to be made to this new library, that&amp;#39;s one of the reasons I wanted to post it here. I would love to get some feedback, suggestions, pull requests or even criticism!&lt;/p&gt;\n\n&lt;p&gt;I would like to take the opportunity to thank some people for helping and inspiring me: &lt;a href=\"https://github.com/valyala\"&gt;@valyala&lt;/a&gt;(&lt;a href=\"https://github.com/valyala/fasthttp/blob/master/LICENSE\"&gt;Fasthttp&lt;/a&gt;) / &lt;a href=\"https://github.com/julienschmidt\"&gt;@julienschmidt&lt;/a&gt;(&lt;a href=\"https://github.com/julienschmidt/httprouter\"&gt;HttpRouter&lt;/a&gt;) / &lt;a href=\"https://github.com/savsgio\"&gt;@savsgio&lt;/a&gt;(&lt;a href=\"https://github.com/savsgio/atreugo/blob/master/LICENSE\"&gt;Atreugo&lt;/a&gt;) / &lt;a href=\"https://github.com/vincentLiuxiang\"&gt;@vincentLiuxiang&lt;/a&gt;(&lt;a href=\"https://github.com/vincentLiuxiang/lu/blob/master/LICENSE\"&gt;Lu&lt;/a&gt;) / &lt;a href=\"https://github.com/tj\"&gt;@tj&lt;/a&gt;(&lt;a href=\"https://github.com/expressjs/express\"&gt;Expressjs&lt;/a&gt;) / &lt;a href=\"https://github.com/pillarjs\"&gt;@pillarjs&lt;/a&gt;(&lt;a href=\"https://github.com/pillarjs/path-to-regexp/blob/master/LICENSE\"&gt;Path-to-regexp&lt;/a&gt;) / &lt;a href=\"https://github.com/TechEmpower\"&gt;@techempower&lt;/a&gt;(&lt;a href=\"https://github.com/TechEmpower/FrameworkBenchmarks\"&gt;FrameworkBenchmarks&lt;/a&gt;) / &lt;a href=\"https://github.com/erikdubbelboer\"&gt;@erikdubbelboer&lt;/a&gt;(&lt;a href=\"https://github.com/valyala/fasthttp/blob/master/LICENSE\"&gt;Fasthttp&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Thanks all! \ud83d\udc96&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "er8qjw", "is_robot_indexable": true, "report_reasons": null, "author": "fennydev", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/er8qjw/fiber_is_an_expressjs_inspired_web_framework/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/er8qjw/fiber_is_an_expressjs_inspired_web_framework/", "subreddit_subscribers": 100099, "created_utc": 1579498281.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_2dv6kda5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Starting Golang: Implementing GNU Tee", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ercwcd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579553999.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ercwcd", "is_robot_indexable": true, "report_reasons": null, "author": "Cleathia", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ercwcd/starting_golang_implementing_gnu_tee/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@sddkal/starting-golang-implementing-gnu-tee-49d33fd60028", "subreddit_subscribers": 100099, "created_utc": 1579525199.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm planning to use a encryption method like AES or something . Could anyone please help me to follow a good approach ?   \n\n\nthanks", "author_fullname": "t2_16t4bad3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey all , How to secure the data communicated over a websockets ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_ercja3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579551681.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m planning to use a encryption method like AES or something . Could anyone please help me to follow a good approach ?   &lt;/p&gt;\n\n&lt;p&gt;thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ercja3", "is_robot_indexable": true, "report_reasons": null, "author": "MYTHiN07", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ercja3/hey_all_how_to_secure_the_data_communicated_over/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ercja3/hey_all_how_to_secure_the_data_communicated_over/", "subreddit_subscribers": 100099, "created_utc": 1579522881.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ercja3", "before": null}}