{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_81yj9s9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Actual arbitrary monkeypatching for Go. Yes really.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fatlme", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1582919699.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fatlme", "is_robot_indexable": true, "report_reasons": null, "author": "donutloop", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fatlme/actual_arbitrary_monkeypatching_for_go_yes_really/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/bouk/monkey", "subreddit_subscribers": 104356, "created_utc": 1582890899.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "In this tutorial, I'll show you how easy it is to build a web application with Go and the Gin framework and add authentication to it. \n\n[https://hakaselogs.me/2018-04-20/building-a-web-app-with-go-gin-and-react/](https://hakaselogs.me/2018-04-20/building-a-web-app-with-go-gin-and-react/)", "author_fullname": "t2_a1yvn5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Building a Web App With Go, Gin and React", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_faj4kr", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 74, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 74, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582867067.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this tutorial, I&amp;#39;ll show you how easy it is to build a web application with Go and the Gin framework and add authentication to it. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://hakaselogs.me/2018-04-20/building-a-web-app-with-go-gin-and-react/\"&gt;https://hakaselogs.me/2018-04-20/building-a-web-app-with-go-gin-and-react/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "faj4kr", "is_robot_indexable": true, "report_reasons": null, "author": "codehakase", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/faj4kr/building_a_web_app_with_go_gin_and_react/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/faj4kr/building_a_web_app_with_go_gin_and_react/", "subreddit_subscribers": 104356, "created_utc": 1582838267.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I write a tcp/udp port forwarding/reverse forwarding tool and hope it's useful for you :)\n\n[https://github.com/xitongsys/gogw](https://github.com/xitongsys/gogw)", "author_fullname": "t2_1lnreug1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A tcp/udp port forwarding/reverse forwarding tool", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fashw1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582912703.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I write a tcp/udp port forwarding/reverse forwarding tool and hope it&amp;#39;s useful for you :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/xitongsys/gogw\"&gt;https://github.com/xitongsys/gogw&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fashw1", "is_robot_indexable": true, "report_reasons": null, "author": "xitongsys", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fashw1/a_tcpudp_port_forwardingreverse_forwarding_tool/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fashw1/a_tcpudp_port_forwardingreverse_forwarding_tool/", "subreddit_subscribers": 104356, "created_utc": 1582883903.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I\u2019m trying to find a framework that allows me to define and parse network packets. Does anyone is working on or using one?", "author_fullname": "t2_5sokd367", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Does anyone know an good alternative for Scapy in golang?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_faqoiu", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582901286.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m trying to find a framework that allows me to define and parse network packets. Does anyone is working on or using one?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "faqoiu", "is_robot_indexable": true, "report_reasons": null, "author": "juan794", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/faqoiu/does_anyone_know_an_good_alternative_for_scapy_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/faqoiu/does_anyone_know_an_good_alternative_for_scapy_in/", "subreddit_subscribers": 104356, "created_utc": 1582872486.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_49u7dffb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "v1.3 of sessionup - simple and straightforward HTTP session management", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fatxgd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1582921472.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fatxgd", "is_robot_indexable": true, "report_reasons": null, "author": "swithek", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fatxgd/v13_of_sessionup_simple_and_straightforward_http/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/swithek/sessionup", "subreddit_subscribers": 104356, "created_utc": 1582892672.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "We use nginx exclusively. We compile modules such as LDAP [https://github.com/kvspb/nginx-auth-ldap](https://github.com/kvspb/nginx-auth-ldap)\n\nIt works but was wondering if there was a golang service which handles authentication and gives the request back to nginx. I like golang service because its a single binary.", "author_fullname": "t2_3kpxl4d0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "nginx and golang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fatt3y", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582920847.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We use nginx exclusively. We compile modules such as LDAP &lt;a href=\"https://github.com/kvspb/nginx-auth-ldap\"&gt;https://github.com/kvspb/nginx-auth-ldap&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It works but was wondering if there was a golang service which handles authentication and gives the request back to nginx. I like golang service because its a single binary.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fatt3y", "is_robot_indexable": true, "report_reasons": null, "author": "uragnorson", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fatt3y/nginx_and_golang/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fatt3y/nginx_and_golang/", "subreddit_subscribers": 104356, "created_utc": 1582892047.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi folks, forgive me the question but I am very n00b.\n\nI would like to properly dockerize a sample Go application (just a server for now listening on port 80 and displaying a message). \n\nI decided to try the multistage build approach inside Docker, so I build everything in a official golang image, then I switch to `scratch` and copy just the compiled binary, using it as `ENTRYPOINT`.\n\nI began though to have some \"File not found\" errors, so I realized - at least I think - that some dependent libraries were missing. \n\nSo I began to search if there were some proper `go build` parameters that could help me build a self-sufficient binary; but I found very contradictory statements about some environment vars, [workarounds](https://github.com/golang/go/issues/9344) that depend on the version used, ...\n\nSo, for specifically version 1.13 of Golang, which is the correct way to build the executable into the container so I can just copy it into a blank image?", "author_fullname": "t2_7kwe26", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best practice to Dockerize Golang 1.13", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fah0v8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 34, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582859058.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi folks, forgive me the question but I am very n00b.&lt;/p&gt;\n\n&lt;p&gt;I would like to properly dockerize a sample Go application (just a server for now listening on port 80 and displaying a message). &lt;/p&gt;\n\n&lt;p&gt;I decided to try the multistage build approach inside Docker, so I build everything in a official golang image, then I switch to &lt;code&gt;scratch&lt;/code&gt; and copy just the compiled binary, using it as &lt;code&gt;ENTRYPOINT&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;I began though to have some &amp;quot;File not found&amp;quot; errors, so I realized - at least I think - that some dependent libraries were missing. &lt;/p&gt;\n\n&lt;p&gt;So I began to search if there were some proper &lt;code&gt;go build&lt;/code&gt; parameters that could help me build a self-sufficient binary; but I found very contradictory statements about some environment vars, &lt;a href=\"https://github.com/golang/go/issues/9344\"&gt;workarounds&lt;/a&gt; that depend on the version used, ...&lt;/p&gt;\n\n&lt;p&gt;So, for specifically version 1.13 of Golang, which is the correct way to build the executable into the container so I can just copy it into a blank image?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fah0v8", "is_robot_indexable": true, "report_reasons": null, "author": "Cranio76", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fah0v8/best_practice_to_dockerize_golang_113/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fah0v8/best_practice_to_dockerize_golang_113/", "subreddit_subscribers": 104356, "created_utc": 1582830258.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I've made a microservice which checkout go repos and scores the PRs (using github api) based on GoReportCard.\n\nHere is the readme for [README and Examples](https://github.com/gogitops/gogitops-examples) for running it against your own PRs.\n\nI've been just developing this in my spare time and hosting it on gcloud at the moment.\n\nLooking for feedback and opinion :) \n\n**Example Curl**\n\ncurl -X GET \\\\ \thttps://gogitops.beau.cf/submit/$(GITHUB\\_REPOSITORY)/pull/$(PR\\_ID) \\\\ \t  \n-H 'apikey: RlqchS8EnQ7edvgyNTLIaAdC2yncRQ8v'\n\n**ofcourse theres no warranty or guarantee of service.**\n\n&amp;#x200B;\n\nhttps://preview.redd.it/gjvt6yptxnj41.png?width=800&amp;format=png&amp;auto=webp&amp;s=f91ac078d14646a472811bab078d1e546b2411fc", "author_fullname": "t2_5qyet", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a service for scoring go pull requests based on GoReportCard", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "media_metadata": {"gjvt6yptxnj41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 180, "x": 108, "u": "https://external-preview.redd.it/gjvt6yptxnj41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=4b0f70475a9d47e117b73360f1cc1a0d5bab6497"}, {"y": 360, "x": 216, "u": "https://external-preview.redd.it/gjvt6yptxnj41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=cc81eb8e2b79ae814972fd62602c863fef87da9f"}, {"y": 534, "x": 320, "u": "https://external-preview.redd.it/gjvt6yptxnj41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=c90ca5a23eda28048e22b49c51e80a3541c13c33"}, {"y": 1068, "x": 640, "u": "https://external-preview.redd.it/gjvt6yptxnj41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=856fb9ab7331773f30bdebf37d333a706812ae5d"}], "s": {"y": 1336, "x": 800, "u": "https://preview.redd.it/gjvt6yptxnj41.png?width=800&amp;format=png&amp;auto=webp&amp;s=f91ac078d14646a472811bab078d1e546b2411fc"}, "id": "gjvt6yptxnj41"}}, "name": "t3_fauibb", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582924376.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve made a microservice which checkout go repos and scores the PRs (using github api) based on GoReportCard.&lt;/p&gt;\n\n&lt;p&gt;Here is the readme for &lt;a href=\"https://github.com/gogitops/gogitops-examples\"&gt;README and Examples&lt;/a&gt; for running it against your own PRs.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been just developing this in my spare time and hosting it on gcloud at the moment.&lt;/p&gt;\n\n&lt;p&gt;Looking for feedback and opinion :) &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example Curl&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;curl -X GET \\  &lt;a href=\"https://gogitops.beau.cf/submit/$(GITHUB%5C_REPOSITORY)/pull/$(PR%5C_ID)\"&gt;https://gogitops.beau.cf/submit/$(GITHUB\\_REPOSITORY)/pull/$(PR\\_ID)&lt;/a&gt; \\&lt;br/&gt;\n-H &amp;#39;apikey: RlqchS8EnQ7edvgyNTLIaAdC2yncRQ8v&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;ofcourse theres no warranty or guarantee of service.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/gjvt6yptxnj41.png?width=800&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f91ac078d14646a472811bab078d1e546b2411fc\"&gt;https://preview.redd.it/gjvt6yptxnj41.png?width=800&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f91ac078d14646a472811bab078d1e546b2411fc&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fauibb", "is_robot_indexable": true, "report_reasons": null, "author": "InvertedB", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fauibb/i_made_a_service_for_scoring_go_pull_requests/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fauibb/i_made_a_service_for_scoring_go_pull_requests/", "subreddit_subscribers": 104356, "created_utc": 1582895576.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Will there be an official go standard gui framework? Like tkinter is for python.", "author_fullname": "t2_4hlcq5h8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Will there be an official go gui framework?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fabea5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 69, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 69, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1582835426.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Will there be an official go standard gui framework? Like tkinter is for python.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fabea5", "is_robot_indexable": true, "report_reasons": null, "author": "xzenon86", "discussion_type": null, "num_comments": 75, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fabea5/will_there_be_an_official_go_gui_framework/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fabea5/will_there_be_an_official_go_gui_framework/", "subreddit_subscribers": 104356, "created_utc": 1582806626.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_g4m9981", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "gnark: a fast zero knowledge proof library (written in Go)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fafdj1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 35, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 35, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1582852669.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "hackmd.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fafdj1", "is_robot_indexable": true, "report_reasons": null, "author": "gbotrel", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fafdj1/gnark_a_fast_zero_knowledge_proof_library_written/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://hackmd.io/@zkteam/gnark", "subreddit_subscribers": 104356, "created_utc": 1582823869.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fafdj1", "before": null}}