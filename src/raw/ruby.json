{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Does anyone know what happened to Jesse Storimer, the author of the brilliant books \u201cWorking With Unix Processes\u201c, \u201cWorking With TCP Sockets\u201c and \u201cWorking With Ruby Threads\u201c? His GitHub profile shows that the last activity was in 2015 and I couldn\u2019t find any information on what he\u2019s been doing since. It\u2019s sad because he is such a great teacher and I feel like there\u2019s so much more he could cover to the benefit of the Ruby community.", "author_fullname": "t2_2xl0us5u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What happened to Jesse Storimer?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iq1etj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1599737030.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599765620.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone know what happened to Jesse Storimer, the author of the brilliant books \u201cWorking With Unix Processes\u201c, \u201cWorking With TCP Sockets\u201c and \u201cWorking With Ruby Threads\u201c? His GitHub profile shows that the last activity was in 2015 and I couldn\u2019t find any information on what he\u2019s been doing since. It\u2019s sad because he is such a great teacher and I feel like there\u2019s so much more he could cover to the benefit of the Ruby community.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iq1etj", "is_robot_indexable": true, "report_reasons": null, "author": "teh_kinkou", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iq1etj/what_happened_to_jesse_storimer/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/iq1etj/what_happened_to_jesse_storimer/", "subreddit_subscribers": 67324, "created_utc": 1599736820.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_7jgguyep", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby adds `Symbol#name` to return frozen string corresponding to the symbol name", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_ipk3fu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 57, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 57, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/pzJ04LHTn6R8YzhcnWlLvWGrPoUDSn5pizXsKAzBbFk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1599700063.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.saeloun.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.saeloun.com/2020/09/09/ruby-adds-name-method-to-symbol", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?auto=webp&amp;s=76ff1c57159ecd0635bde7262995c5f75ea5b2bf", "width": 600, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba7dc7c390da46504d7dff83a3777aa34d06da09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7174576a8c7a36330f60dff22893de50e2a459da", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BSXG3R40nLm97ab5wMnbcdOvEqM1HtA4-KNM2vn7-do.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b1f1f8a636baeb85c444c850de8e7747c45470f", "width": 320, "height": 320}], "variants": {}, "id": "BN85dx9NXlDeVPyUnffc9FFfivOtdoHkGQhBm10KyEI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ipk3fu", "is_robot_indexable": true, "report_reasons": null, "author": "Zealousideal-Fudge-2", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ipk3fu/ruby_adds_symbolname_to_return_frozen_string/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.saeloun.com/2020/09/09/ruby-adds-name-method-to-symbol", "subreddit_subscribers": 67324, "created_utc": 1599671263.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_4lutb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "These Rails apps are overpacking their JavaScript bundles", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_iplq0z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/udRk2384xRKAr31JDPvtZUYezOOq418SBdVyCOIE0R4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1599704539.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rossta.net", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://rossta.net/blog/rails-apps-overpacking-with-webpacker.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/N2G2GYvBHiGvmbUW9wl8KH5Molaj6sUjHX6cwXzmmRg.jpg?auto=webp&amp;s=12e9f03fd0786670b8e312280b605e0679487165", "width": 1200, "height": 800}, "resolutions": [{"url": "https://external-preview.redd.it/N2G2GYvBHiGvmbUW9wl8KH5Molaj6sUjHX6cwXzmmRg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8829a9f63eefbf37e1f44682a9a0d88ba2e45d47", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/N2G2GYvBHiGvmbUW9wl8KH5Molaj6sUjHX6cwXzmmRg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=db89d69dde73326fd99600d002ff86a2164ec973", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/N2G2GYvBHiGvmbUW9wl8KH5Molaj6sUjHX6cwXzmmRg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1a9d8a1365f42b4eca68d4b83667412d0a6733da", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/N2G2GYvBHiGvmbUW9wl8KH5Molaj6sUjHX6cwXzmmRg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c29ad7e683d218f25e879e373c3cb1e9577adb21", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/N2G2GYvBHiGvmbUW9wl8KH5Molaj6sUjHX6cwXzmmRg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fbe1f34482aa3d5a2254a755887b814a539ee88a", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/N2G2GYvBHiGvmbUW9wl8KH5Molaj6sUjHX6cwXzmmRg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1e3de50979545c2177607ec31297218dcff74c0b", "width": 1080, "height": 720}], "variants": {}, "id": "sWVEq2Efg0to4-jQ8uK0l6x3rvSOSDuWy_3B5o1e8x4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iplq0z", "is_robot_indexable": true, "report_reasons": null, "author": "jrochkind", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iplq0z/these_rails_apps_are_overpacking_their_javascript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rossta.net/blog/rails-apps-overpacking-with-webpacker.html", "subreddit_subscribers": 67324, "created_utc": 1599675739.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I am looking for a book to master Rspec.\n\nI already know the basics of RSpec testing but I am looking to learn good practices and advanced topics in Rspec.\n\nI have not been able to find something online apart from basic tutorials. And was hoping for suggestions from you guys.", "author_fullname": "t2_11z3y5xf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Book suggestion for Rspec", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ipitcj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599696342.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am looking for a book to master Rspec.&lt;/p&gt;\n\n&lt;p&gt;I already know the basics of RSpec testing but I am looking to learn good practices and advanced topics in Rspec.&lt;/p&gt;\n\n&lt;p&gt;I have not been able to find something online apart from basic tutorials. And was hoping for suggestions from you guys.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ipitcj", "is_robot_indexable": true, "report_reasons": null, "author": "ikhurramraza", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ipitcj/book_suggestion_for_rspec/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ipitcj/book_suggestion_for_rspec/", "subreddit_subscribers": 67324, "created_utc": 1599667542.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi, In the near future I have the plan to implement a Slack bot.   \nI did some research and because of my favorite programming language is Ruby I think about using [https://www.lita.io](https://www.lita.io).  \nAre any of you used this or can recommend better solution for building a Slack bot?  \n\n\nThanks in advance", "author_fullname": "t2_3ntagupq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Choosing solution for Chat Bot", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ipm3xt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1599705435.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, In the near future I have the plan to implement a Slack bot.&lt;br/&gt;\nI did some research and because of my favorite programming language is Ruby I think about using &lt;a href=\"https://www.lita.io\"&gt;https://www.lita.io&lt;/a&gt;.&lt;br/&gt;\nAre any of you used this or can recommend better solution for building a Slack bot?  &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8Bg-fCxg31WXxPjGnsbpZjRte5ROjc4tBGbMPnUnE5c.jpg?auto=webp&amp;s=94bf90e01132bbc85e54d57a9738d203c6624312", "width": 195, "height": 353}, "resolutions": [{"url": "https://external-preview.redd.it/8Bg-fCxg31WXxPjGnsbpZjRte5ROjc4tBGbMPnUnE5c.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=48c61b6704904af752e39b8dfbf3ddef71856e1f", "width": 108, "height": 195}], "variants": {}, "id": "LYNeqGwz_M4JBb02mXVcVJPMux6Yw_IwwLnk5X-mVI0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ipm3xt", "is_robot_indexable": true, "report_reasons": null, "author": "members92", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ipm3xt/choosing_solution_for_chat_bot/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ipm3xt/choosing_solution_for_chat_bot/", "subreddit_subscribers": 67324, "created_utc": 1599676635.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I am trying to benchmark a few ways I can check for equality, like so\n\n    Benchmark.ips do |x|\n      x.config(:time =&gt; 40, :warmup =&gt; 5)\n    \n      model = User.new\n      x.report(\"equals\") do\n        model.class.name == 'User'\n      end\n    \n      x.report(\"equals freeze\") do\n        model.class.name == 'User'.freeze\n      end\n    \n      x.report(\"array\") do\n        ['User'].include?(model.class.name)\n      end\n    \n      set = Set.new(['User'])\n      x.report(\"set\") do\n        set.include?(model.class.name)\n      end\n    \n      frozen_set = Set.new(['User']).freeze\n      x.report(\"frozen set\") do\n        frozen_set.include?(model.class.name)\n      end\n    \n      # Compare the iterations per second of the various reports!\n      x.compare!\n    end\n\nAnd this is the result it gave  \n \n\n    Warming up --------------------------------------\n    equals  423.483k i/100ms\n    equals freeze  573.846k i/100ms\n    array  315.613k i/100ms\n    set  459.956k i/100ms\n    frozen set  461.620k i/100ms\n    Calculating -------------------------------------\n    equals 4.381M (\u00b1 5.7%) i/s - 174.898M in 40.074310s\n    equals freeze 6.038M (\u00b1 3.5%) i/s - 241.589M in 40.059452s\n    array 3.261M (\u00b1 5.0%) i/s - 130.348M in 40.074906s\n    set 4.698M (\u00b1 3.3%) i/s - 188.122M in 40.087738s\n    frozen set 4.741M (\u00b1 4.0%) i/s - 189.726M in 40.090792s\n    Comparison:\n    equals freeze: 6038148.2 i/s\n    frozen set: 4741206.2 i/s - 1.27x (\u00b1 0.00) slower\n    set: 4698138.7 i/s - 1.29x (\u00b1 0.00) slower\n    equals: 4381153.2 i/s - 1.38x (\u00b1 0.00) slower\n    array: 3261099.2 i/s - 1.85x (\u00b1 0.00) slower\n\nI have a few questions regd. this\n\n1. Is there any documentation on how I can understand the output from this better. I can see that more I/O is better but more information on these numbers would be great.\n2. How do I measure the memory consumption of each of the approaches, i.e. the numbers of objects each approach creates.\n\nThanks.", "author_fullname": "t2_7m8mv9r7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help with benchmark-ips", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ipgffm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1599662331.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599688900.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to benchmark a few ways I can check for equality, like so&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Benchmark.ips do |x|\n  x.config(:time =&amp;gt; 40, :warmup =&amp;gt; 5)\n\n  model = User.new\n  x.report(&amp;quot;equals&amp;quot;) do\n    model.class.name == &amp;#39;User&amp;#39;\n  end\n\n  x.report(&amp;quot;equals freeze&amp;quot;) do\n    model.class.name == &amp;#39;User&amp;#39;.freeze\n  end\n\n  x.report(&amp;quot;array&amp;quot;) do\n    [&amp;#39;User&amp;#39;].include?(model.class.name)\n  end\n\n  set = Set.new([&amp;#39;User&amp;#39;])\n  x.report(&amp;quot;set&amp;quot;) do\n    set.include?(model.class.name)\n  end\n\n  frozen_set = Set.new([&amp;#39;User&amp;#39;]).freeze\n  x.report(&amp;quot;frozen set&amp;quot;) do\n    frozen_set.include?(model.class.name)\n  end\n\n  # Compare the iterations per second of the various reports!\n  x.compare!\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this is the result it gave  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Warming up --------------------------------------\nequals  423.483k i/100ms\nequals freeze  573.846k i/100ms\narray  315.613k i/100ms\nset  459.956k i/100ms\nfrozen set  461.620k i/100ms\nCalculating -------------------------------------\nequals 4.381M (\u00b1 5.7%) i/s - 174.898M in 40.074310s\nequals freeze 6.038M (\u00b1 3.5%) i/s - 241.589M in 40.059452s\narray 3.261M (\u00b1 5.0%) i/s - 130.348M in 40.074906s\nset 4.698M (\u00b1 3.3%) i/s - 188.122M in 40.087738s\nfrozen set 4.741M (\u00b1 4.0%) i/s - 189.726M in 40.090792s\nComparison:\nequals freeze: 6038148.2 i/s\nfrozen set: 4741206.2 i/s - 1.27x (\u00b1 0.00) slower\nset: 4698138.7 i/s - 1.29x (\u00b1 0.00) slower\nequals: 4381153.2 i/s - 1.38x (\u00b1 0.00) slower\narray: 3261099.2 i/s - 1.85x (\u00b1 0.00) slower\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I have a few questions regd. this&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Is there any documentation on how I can understand the output from this better. I can see that more I/O is better but more information on these numbers would be great.&lt;/li&gt;\n&lt;li&gt;How do I measure the memory consumption of each of the approaches, i.e. the numbers of objects each approach creates.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ipgffm", "is_robot_indexable": true, "report_reasons": null, "author": "prosperousdoggo", "discussion_type": null, "num_comments": 18, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ipgffm/help_with_benchmarkips/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ipgffm/help_with_benchmarkips/", "subreddit_subscribers": 67324, "created_utc": 1599660100.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi,\n\nI'm new to the Ruby world, and a project at work is using a gem implementing a wrapper to a remote service API. What troubles me is that this gem is exposing only class-level methods, including the \"configure\" method which does *not* return an object instance.\n\nIts usage is something like this :\n\n```ruby  \nZooApiWrapper.configure { |config|\n  config.token = \"abcdef1234\"\n  config.url = \"https://my.api/\"\n}\n\nlions = ZooApiWrapper.animals.lions\n\nnew_pet = ZooApiWrapper::Animal::Dog.new\nnew_pet.name = \"Spot\"\nnew_pet.save\n\n# etc...\n```\n\nI would have expected to have the configure call return a wrapper object, and use this wrapper object to access the various resources exposed via the API. Is it usual to use global state for such things instead in Ruby ?", "author_fullname": "t2_1i1kctlu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gem API design question", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ipce8i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599670590.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m new to the Ruby world, and a project at work is using a gem implementing a wrapper to a remote service API. What troubles me is that this gem is exposing only class-level methods, including the &amp;quot;configure&amp;quot; method which does &lt;em&gt;not&lt;/em&gt; return an object instance.&lt;/p&gt;\n\n&lt;p&gt;Its usage is something like this :&lt;/p&gt;\n\n&lt;p&gt;```ruby&lt;br/&gt;\nZooApiWrapper.configure { |config|\n  config.token = &amp;quot;abcdef1234&amp;quot;\n  config.url = &amp;quot;&lt;a href=\"https://my.api/\"&gt;https://my.api/&lt;/a&gt;&amp;quot;\n}&lt;/p&gt;\n\n&lt;p&gt;lions = ZooApiWrapper.animals.lions&lt;/p&gt;\n\n&lt;p&gt;new_pet = ZooApiWrapper::Animal::Dog.new\nnew_pet.name = &amp;quot;Spot&amp;quot;\nnew_pet.save&lt;/p&gt;\n\n&lt;h1&gt;etc...&lt;/h1&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;I would have expected to have the configure call return a wrapper object, and use this wrapper object to access the various resources exposed via the API. Is it usual to use global state for such things instead in Ruby ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ipce8i", "is_robot_indexable": true, "report_reasons": null, "author": "laarmen", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ipce8i/gem_api_design_question/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ipce8i/gem_api_design_question/", "subreddit_subscribers": 67324, "created_utc": 1599641790.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_70372", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The difference between let, let! and instance variables in RSpec", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_ip0se6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": "", "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/yL1LXmwK9JJ977jp7IQTVsYmYnTF3G0LJuX9Ii7YX1A.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1599623622.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "codewithjason.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.codewithjason.com/difference-let-let-instance-variables-rspec/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/n0Gj1pbe3MdIRXolM24PPTWLAr6pXTa4II6qD5yQv48.jpg?auto=webp&amp;s=8434e4704dc5ddabc9f51f764f7984f6fa8a7317", "width": 754, "height": 809}, "resolutions": [{"url": "https://external-preview.redd.it/n0Gj1pbe3MdIRXolM24PPTWLAr6pXTa4II6qD5yQv48.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c1378bb49c5ad7f3d4aa627af09f5bfc3a693c5b", "width": 108, "height": 115}, {"url": "https://external-preview.redd.it/n0Gj1pbe3MdIRXolM24PPTWLAr6pXTa4II6qD5yQv48.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=71e3a6754179065d77d8cf8be8553407fe9012ea", "width": 216, "height": 231}, {"url": "https://external-preview.redd.it/n0Gj1pbe3MdIRXolM24PPTWLAr6pXTa4II6qD5yQv48.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=39871fab5bbdea8a738291fcf4cfd56cb1c6d22e", "width": 320, "height": 343}, {"url": "https://external-preview.redd.it/n0Gj1pbe3MdIRXolM24PPTWLAr6pXTa4II6qD5yQv48.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4eca2f6e77ea7e05a7e7cba093ed5ed70944ba60", "width": 640, "height": 686}], "variants": {}, "id": "3drNhwiSGExmramCDw1VKG6tY70Ozdnn7KggVG-2yKM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "Rails with Jason", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ip0se6", "is_robot_indexable": true, "report_reasons": null, "author": "jasonswett", "discussion_type": null, "num_comments": 33, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/ruby/comments/ip0se6/the_difference_between_let_let_and_instance/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.codewithjason.com/difference-let-let-instance-variables-rspec/", "subreddit_subscribers": 67324, "created_utc": 1599594822.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3v9zl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Writing a Ractor-based web server", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iozx5h", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/8vKfu5ygUvjdm1Cq9kIgMHZoAvj28SPwy1CtaznFBzc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1599620928.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "kirshatrov.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://kirshatrov.com/2020/09/08/ruby-ractor-web-server/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/1ZzbDTPzEj-WqF6n_ygFTo2Ew1sVcTL0Vi1zzjSw4Jc.jpg?auto=webp&amp;s=d62b115a9fc04add41ff5bcb6ef0f064b04fa535", "width": 220, "height": 220}, "resolutions": [{"url": "https://external-preview.redd.it/1ZzbDTPzEj-WqF6n_ygFTo2Ew1sVcTL0Vi1zzjSw4Jc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=15c558efb91ec9b700406ab198cfa1e94a7db956", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/1ZzbDTPzEj-WqF6n_ygFTo2Ew1sVcTL0Vi1zzjSw4Jc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=93c5e3765253c294e0773ba96a1d3ffabdc419fc", "width": 216, "height": 216}], "variants": {}, "id": "iAPhEb4fsQKf1BHkkg8KtQqVQ130GydupCssmGf7em8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iozx5h", "is_robot_indexable": true, "report_reasons": null, "author": "thibaut_barrere", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iozx5h/writing_a_ractorbased_web_server/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kirshatrov.com/2020/09/08/ruby-ractor-web-server/", "subreddit_subscribers": 67324, "created_utc": 1599592128.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3bqpj6lm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails 6.1 adds --minimal option support", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_iovpbj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 44, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 44, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/s9TEfkfdRTxn0KMWvzDrFPihsAa_q1ZjaAKjVqGH46k.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1599607939.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.bigbinary.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.bigbinary.com/2020/09/08/rails-6-1-adds-minimal-option-support.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?auto=webp&amp;s=8503cddbb4afa6e7607bb9bd69e37b60c8277de5", "width": 1200, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5b9233ede74a4b70d3fc1bb02f8868dc0ac244b", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f9ab25c6613259424aa727e0c7ec14ac17690caa", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=256692068e925b15f9d1dd1de698cf9df7c106ae", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c42a5ce0c0eacb1c7fa5e0269698b389b15deabc", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0a98a64e4087be88191a2d856ec69b079e60f251", "width": 960, "height": 501}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a8cc0c6c354a48809d03ee1f01d4641a253e5d2e", "width": 1080, "height": 564}], "variants": {}, "id": "LuCVRyBbE00ARi7DYri8NjRvSe2GL2B8baeyQdYI0rw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iovpbj", "is_robot_indexable": true, "report_reasons": null, "author": "SanMane", "discussion_type": null, "num_comments": 32, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iovpbj/rails_61_adds_minimal_option_support/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.bigbinary.com/2020/09/08/rails-6-1-adds-minimal-option-support.html", "subreddit_subscribers": 67324, "created_utc": 1599579139.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_iovpbj", "before": null}}