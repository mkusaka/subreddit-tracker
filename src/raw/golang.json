{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "[https://github.com/Akatsuki-py/Worldwide](https://github.com/Akatsuki-py/Worldwide)\n\nhttps://i.redd.it/9znnudgpm0651.gif", "author_fullname": "t2_l3y21qu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Worldwide - a GameBoyColor emulator written in Go (Ebiten)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"9znnudgpm0651": {"status": "valid", "e": "AnimatedImage", "m": "image/gif", "p": [{"y": 93, "x": 108, "u": "https://preview.redd.it/9znnudgpm0651.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=4dbf7a4e5a8fc1861e0870d910ff6fba873f231b"}, {"y": 187, "x": 216, "u": "https://preview.redd.it/9znnudgpm0651.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=26c91ff70766e03eef4e78a13f8fec3a6b7c70e4"}, {"y": 277, "x": 320, "u": "https://preview.redd.it/9znnudgpm0651.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=0bf0257d72cc74991b463aa705bbb229d37b5282"}, {"y": 554, "x": 640, "u": "https://preview.redd.it/9znnudgpm0651.gif?width=640&amp;crop=smart&amp;format=png8&amp;s=f7f091d3368b5ebf2bac144f2273ff642ff948e9"}], "s": {"y": 628, "gif": "https://i.redd.it/9znnudgpm0651.gif", "mp4": "https://preview.redd.it/9znnudgpm0651.gif?format=mp4&amp;s=2ccdc5ab697f9aaa2dea77f6d40ddfa7fb8364a8", "x": 725}, "id": "9znnudgpm0651"}}, "name": "t3_hchnmh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 46, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 46, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592666013.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Akatsuki-py/Worldwide\"&gt;https://github.com/Akatsuki-py/Worldwide&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.redd.it/9znnudgpm0651.gif\"&gt;https://i.redd.it/9znnudgpm0651.gif&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hchnmh", "is_robot_indexable": true, "report_reasons": null, "author": "Akatsuki_py", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hchnmh/worldwide_a_gameboycolor_emulator_written_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hchnmh/worldwide_a_gameboycolor_emulator_written_in_go/", "subreddit_subscribers": 116482, "created_utc": 1592637213.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "This is a repost from [r/OpenDiablo2](https://www.reddit.com/r/OpenDiablo2/comments/hc5w6f/news_multiplayer_mapgen_and_patreon/)\n\nJust a quick status update:\n\n* OpenDiablo2 now has a functional UDP client/server network implementation\n* More data dictionary loaders for the txt files have been added\n* Rudimentary map-generation work has begun, added the ability to stitch discrete map regions (pre-defined map sections). Character path-finding works between the regions.\n* The game audio/input/rendering framework [Ebiten](https://ebiten.org/) has been updated and increased performance\n* [A Patreon page has been set up](https://www.patreon.com/user?u=37261055&amp;fan_landing=true) \\- We will be using the money to guide development efforts, offer bug bounties, and pay developers/designers for their work. Please, consider becoming a patron!\n\nThe project website can be found at [https://opendiablo2.com/](https://opendiablo2.com/)\n\nThe source can be found on Github at [https://github.com/OpenDiablo2/OpenDiablo2](https://github.com/OpenDiablo2/OpenDiablo2)\n\nIf you want to get involved, ask questions, suggest features, or just hang out you can find us over on our [Discord server](https://discord.gg/5jd4CwW)", "author_fullname": "t2_37ncx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "OpenDiablo2 News: The open-source Diablo 2 engine written in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hc667q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 232, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 232, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1592593355.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592620684.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is a repost from &lt;a href=\"https://www.reddit.com/r/OpenDiablo2/comments/hc5w6f/news_multiplayer_mapgen_and_patreon/\"&gt;r/OpenDiablo2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Just a quick status update:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;OpenDiablo2 now has a functional UDP client/server network implementation&lt;/li&gt;\n&lt;li&gt;More data dictionary loaders for the txt files have been added&lt;/li&gt;\n&lt;li&gt;Rudimentary map-generation work has begun, added the ability to stitch discrete map regions (pre-defined map sections). Character path-finding works between the regions.&lt;/li&gt;\n&lt;li&gt;The game audio/input/rendering framework &lt;a href=\"https://ebiten.org/\"&gt;Ebiten&lt;/a&gt; has been updated and increased performance&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.patreon.com/user?u=37261055&amp;amp;fan_landing=true\"&gt;A Patreon page has been set up&lt;/a&gt; - We will be using the money to guide development efforts, offer bug bounties, and pay developers/designers for their work. Please, consider becoming a patron!&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The project website can be found at &lt;a href=\"https://opendiablo2.com/\"&gt;https://opendiablo2.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The source can be found on Github at &lt;a href=\"https://github.com/OpenDiablo2/OpenDiablo2\"&gt;https://github.com/OpenDiablo2/OpenDiablo2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you want to get involved, ask questions, suggest features, or just hang out you can find us over on our &lt;a href=\"https://discord.gg/5jd4CwW\"&gt;Discord server&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hc667q", "is_robot_indexable": true, "report_reasons": null, "author": "idhats", "discussion_type": null, "num_comments": 47, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hc667q/opendiablo2_news_the_opensource_diablo_2_engine/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hc667q/opendiablo2_news_the_opensource_diablo_2_engine/", "subreddit_subscribers": 116482, "created_utc": 1592591884.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3em9l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "People's efficiency expectations for generics in 'Go 2' and patterns of use", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hcce4e", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592641891.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "utcc.utoronto.ca", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hcce4e", "is_robot_indexable": true, "report_reasons": null, "author": "skeeto", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hcce4e/peoples_efficiency_expectations_for_generics_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://utcc.utoronto.ca/~cks/space/blog/programming/Go2GenericsExpectedEfficiency", "subreddit_subscribers": 116482, "created_utc": 1592613091.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I wrote a [blog](https://www.loginradius.com/engineering/blog/twitter-authentication-with-golang-and-goth/) on integrating twitter login with **golang** application and share it on [Github](https://github.com/LoginRadius/engineering-blog-samples/tree/master/GoLang/TwitterAuthenticationGoth) too. Please check this out and let me know if it helps uh in same", "author_fullname": "t2_5czkqdxq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Integrate twitter login with golang application", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_hcm2ga", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592687489.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote a &lt;a href=\"https://www.loginradius.com/engineering/blog/twitter-authentication-with-golang-and-goth/\"&gt;blog&lt;/a&gt; on integrating twitter login with &lt;strong&gt;golang&lt;/strong&gt; application and share it on &lt;a href=\"https://github.com/LoginRadius/engineering-blog-samples/tree/master/GoLang/TwitterAuthenticationGoth\"&gt;Github&lt;/a&gt; too. Please check this out and let me know if it helps uh in same&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hcm2ga", "is_robot_indexable": true, "report_reasons": null, "author": "mock_coder", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hcm2ga/integrate_twitter_login_with_golang_application/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hcm2ga/integrate_twitter_login_with_golang_application/", "subreddit_subscribers": 116482, "created_utc": 1592658689.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Does anyone use Datadog and write integrations using Go? I know there is a python implemention([https://docs.datadoghq.com/developers/write\\_agent\\_check/?tab=agentv6v7](https://docs.datadoghq.com/developers/write_agent_check/?tab=agentv6v7)) but I have a preference to write my checks in Go, obviously.", "author_fullname": "t2_3kpxl4d0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go DataDog", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_hclrpj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592686120.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone use Datadog and write integrations using Go? I know there is a python implemention(&lt;a href=\"https://docs.datadoghq.com/developers/write_agent_check/?tab=agentv6v7\"&gt;https://docs.datadoghq.com/developers/write_agent_check/?tab=agentv6v7&lt;/a&gt;) but I have a preference to write my checks in Go, obviously.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hclrpj", "is_robot_indexable": true, "report_reasons": null, "author": "uragnorson", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hclrpj/go_datadog/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hclrpj/go_datadog/", "subreddit_subscribers": 116482, "created_utc": 1592657320.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5yn8b59a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to change terminal/console output color in golang?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_hcl9f1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592683730.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hcl9f1", "is_robot_indexable": true, "report_reasons": null, "author": "ilyes24Azzi", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hcl9f1/how_to_change_terminalconsole_output_color_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hcl9f1/how_to_change_terminalconsole_output_color_in/", "subreddit_subscribers": 116482, "created_utc": 1592654930.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello guys,\n\nI'm new to GoLang and came up with a small learning path for myself to get started with GoLang.Posting it here to get suggestions whether I'm going in right directions or not.\n\nAlso, I'm forcing myself to learn Go concepts/APIs first (as mentioned in **Directions to Follow**) from official docs and refer to other sources if I don't understand from official docs. Is this the right way to do it?\n\n**Directions to Follow**\n\n* Use official docs as primary source, this way I will learn how to read Go Packages and use it implement in my code.\n* Use `other sources` if I\u2019m really stuck on some tasks and not able to figure out from Official docs. (Because I can learn reading Docs and understanding APIs form Docs)\n\n&amp;#x200B;\n\n**Official Reference**\n\n* Go Doc - [https://golang.org/doc/](https://golang.org/doc/)\n* Go Packages - [https://golang.org/pkg/](https://golang.org/pkg/)\n* Effective Go - [https://golang.org/doc/effective\\_go.html](https://golang.org/doc/effective_go.html)\n\n&amp;#x200B;\n\n**Useful Links**\n\n* [https://pmihaylov.com/](https://pmihaylov.com/)\n* [https://medium.com/a-journey-with-go](https://medium.com/a-journey-with-go)\n* [https://quii.gitbook.io/learn-go-with-tests/](https://quii.gitbook.io/learn-go-with-tests/)\n\n&amp;#x200B;\n\n**Basic**\n\n* Get familiar with Go syntax - [https://gobyexample.com/](https://gobyexample.com/)\n* Get familiar with Go project structure\n* Build a basic App `Calculator-v1`\n   * Ask user to select which arithmetic operation to do\n   * Ask user to input 2 number to do operation on\n   * Write test cases\n   * Return result\n* Build a basic App `Calculator-v2`\n   * Think how to refactor `Calculator-v1`\n   * Explore using command line arguments in Go\n   * More test cases\n\n&amp;#x200B;\n\n**Intermediate**\n\n* Understand Methods (Pointers vs Values) - [https://golang.org/doc/effective\\_go.html#methods](https://golang.org/doc/effective_go.html#methods)\n* Understand Interfaces - [https://golang.org/doc/effective\\_go.html#interfaces\\_and\\_types](https://golang.org/doc/effective_go.html#interfaces_and_types)\n* Understand Errors - [https://golang.org/doc/effective\\_go.html#errors](https://golang.org/doc/effective_go.html#errors)\n* Explore the net/http package - [https://golang.org/pkg/net/http/](https://golang.org/pkg/net/http/)\n* Build an App `GithubTopRepos-v1`\n   * Use Github APIs to get the top 10 repos for a particular programming language\n* To be continued\u2026\n\nFeedback is much appreciated :)Thank you :)", "author_fullname": "t2_179oor", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My Learning Path - GoLang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hcgctg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.71, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1592630725.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592659178.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello guys,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m new to GoLang and came up with a small learning path for myself to get started with GoLang.Posting it here to get suggestions whether I&amp;#39;m going in right directions or not.&lt;/p&gt;\n\n&lt;p&gt;Also, I&amp;#39;m forcing myself to learn Go concepts/APIs first (as mentioned in &lt;strong&gt;Directions to Follow&lt;/strong&gt;) from official docs and refer to other sources if I don&amp;#39;t understand from official docs. Is this the right way to do it?&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Directions to Follow&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Use official docs as primary source, this way I will learn how to read Go Packages and use it implement in my code.&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;other sources&lt;/code&gt; if I\u2019m really stuck on some tasks and not able to figure out from Official docs. (Because I can learn reading Docs and understanding APIs form Docs)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Official Reference&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Go Doc - &lt;a href=\"https://golang.org/doc/\"&gt;https://golang.org/doc/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Go Packages - &lt;a href=\"https://golang.org/pkg/\"&gt;https://golang.org/pkg/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Effective Go - &lt;a href=\"https://golang.org/doc/effective_go.html\"&gt;https://golang.org/doc/effective_go.html&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Useful Links&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://pmihaylov.com/\"&gt;https://pmihaylov.com/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://medium.com/a-journey-with-go\"&gt;https://medium.com/a-journey-with-go&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://quii.gitbook.io/learn-go-with-tests/\"&gt;https://quii.gitbook.io/learn-go-with-tests/&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Basic&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Get familiar with Go syntax - &lt;a href=\"https://gobyexample.com/\"&gt;https://gobyexample.com/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Get familiar with Go project structure&lt;/li&gt;\n&lt;li&gt;Build a basic App &lt;code&gt;Calculator-v1&lt;/code&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Ask user to select which arithmetic operation to do&lt;/li&gt;\n&lt;li&gt;Ask user to input 2 number to do operation on&lt;/li&gt;\n&lt;li&gt;Write test cases&lt;/li&gt;\n&lt;li&gt;Return result&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Build a basic App &lt;code&gt;Calculator-v2&lt;/code&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Think how to refactor &lt;code&gt;Calculator-v1&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Explore using command line arguments in Go&lt;/li&gt;\n&lt;li&gt;More test cases&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Intermediate&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Understand Methods (Pointers vs Values) - &lt;a href=\"https://golang.org/doc/effective_go.html#methods\"&gt;https://golang.org/doc/effective_go.html#methods&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Understand Interfaces - &lt;a href=\"https://golang.org/doc/effective_go.html#interfaces_and_types\"&gt;https://golang.org/doc/effective_go.html#interfaces_and_types&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Understand Errors - &lt;a href=\"https://golang.org/doc/effective_go.html#errors\"&gt;https://golang.org/doc/effective_go.html#errors&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Explore the net/http package - &lt;a href=\"https://golang.org/pkg/net/http/\"&gt;https://golang.org/pkg/net/http/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Build an App &lt;code&gt;GithubTopRepos-v1&lt;/code&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Use Github APIs to get the top 10 repos for a particular programming language&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;To be continued\u2026&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Feedback is much appreciated :)Thank you :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hcgctg", "is_robot_indexable": true, "report_reasons": null, "author": "jp10815", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hcgctg/my_learning_path_golang/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hcgctg/my_learning_path_golang/", "subreddit_subscribers": 116482, "created_utc": 1592630378.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_f6wgk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tested the new generics proposal and I think they will be a game changer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hck2sz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1592678206.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hck2sz", "is_robot_indexable": true, "report_reasons": null, "author": "michi-e", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hck2sz/tested_the_new_generics_proposal_and_i_think_they/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/swlh/the-new-generics-proposal-tested-b9bd24f86547", "subreddit_subscribers": 116482, "created_utc": 1592649406.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "--------------------\nTLDR;\nGoLand IDE not looking into $GOPATH/pkg/mod for the packages of my go project and hence, giving issues and red highlights on code where I am importing packages. GoLand seems to only look into $GOPATH/src for the packages where packages are not there coz packages got downloaded in pkg/mod where GoLand is not looking into.\n----------------------\nSo, the thing is\nI was going with open source dev with go...\n: So, I forked and cloned a repo ....\n\ndid a \"go get -d ./...\"\n\nAnd all the required modules and all got downloaded under the directory $GOPATH/pkg/mod\nNow, I can \"go build\" the project ... It's all cool and all\nBUT BUT BUT\nBUT BUT BUT\n\nwhen I am opening the project in GoLand IDE... It is giving issues and red highlights while importing the packages... And the reason seems that GoLand is not looking inside \n$GOPATH/pkg/mod\n\nGoLand seems to look inside $GOPATH/src for any package and hence, provides auto suggestions accordingly but well, in my case the packages and all got downloaded in $GOPATH/pkg/mod.\n\nNow, golang doesn't have a problem... Because while doing \"go build\", it happily looks into pkg/mod finds the required packages and builds the binary\n\n\"The problem is with GoLand not looking into pkg/mod and hence, not providing autosuggestion and just highlight the import statements as red  because it thinks the package does not exist\"\nI have been stuck at it since a long bloody time.... Rambled through soo many stackoverflow posts and all,... But nothing worked out :'(", "author_fullname": "t2_1506l4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Very basic doubt. Craving for some help :'(", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hcijn3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.4, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592670628.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;hr/&gt;\n\n&lt;p&gt;TLDR;&lt;/p&gt;\n\n&lt;h2&gt;GoLand IDE not looking into $GOPATH/pkg/mod for the packages of my go project and hence, giving issues and red highlights on code where I am importing packages. GoLand seems to only look into $GOPATH/src for the packages where packages are not there coz packages got downloaded in pkg/mod where GoLand is not looking into.&lt;/h2&gt;\n\n&lt;p&gt;So, the thing is\nI was going with open source dev with go...\n: So, I forked and cloned a repo ....&lt;/p&gt;\n\n&lt;p&gt;did a &amp;quot;go get -d ./...&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;And all the required modules and all got downloaded under the directory $GOPATH/pkg/mod\nNow, I can &amp;quot;go build&amp;quot; the project ... It&amp;#39;s all cool and all\nBUT BUT BUT\nBUT BUT BUT&lt;/p&gt;\n\n&lt;p&gt;when I am opening the project in GoLand IDE... It is giving issues and red highlights while importing the packages... And the reason seems that GoLand is not looking inside \n$GOPATH/pkg/mod&lt;/p&gt;\n\n&lt;p&gt;GoLand seems to look inside $GOPATH/src for any package and hence, provides auto suggestions accordingly but well, in my case the packages and all got downloaded in $GOPATH/pkg/mod.&lt;/p&gt;\n\n&lt;p&gt;Now, golang doesn&amp;#39;t have a problem... Because while doing &amp;quot;go build&amp;quot;, it happily looks into pkg/mod finds the required packages and builds the binary&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;The problem is with GoLand not looking into pkg/mod and hence, not providing autosuggestion and just highlight the import statements as red  because it thinks the package does not exist&amp;quot;\nI have been stuck at it since a long bloody time.... Rambled through soo many stackoverflow posts and all,... But nothing worked out :&amp;#39;(&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hcijn3", "is_robot_indexable": true, "report_reasons": null, "author": "Luci4_Yash", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hcijn3/very_basic_doubt_craving_for_some_help/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hcijn3/very_basic_doubt_craving_for_some_help/", "subreddit_subscribers": 116482, "created_utc": 1592641828.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "YouTube live steam at [https://www.youtube.com/watch?v=vjmoNQmXAeI](https://www.youtube.com/watch?v=vjmoNQmXAeI). RSVP at [https://www.meetup.com/golangvan/events/271386675](https://www.meetup.com/golangvan/events/271386675/)", "author_fullname": "t2_4a67w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Golang Vancouver Online Meetup on July 8", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hcbzeb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1592612602.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1592640430.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;YouTube live steam at &lt;a href=\"https://www.youtube.com/watch?v=vjmoNQmXAeI\"&gt;https://www.youtube.com/watch?v=vjmoNQmXAeI&lt;/a&gt;. RSVP at &lt;a href=\"https://www.meetup.com/golangvan/events/271386675/\"&gt;https://www.meetup.com/golangvan/events/271386675&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hcbzeb", "is_robot_indexable": true, "report_reasons": null, "author": "jingweno", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/hcbzeb/golang_vancouver_online_meetup_on_july_8/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/hcbzeb/golang_vancouver_online_meetup_on_july_8/", "subreddit_subscribers": 116482, "created_utc": 1592611630.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hcbzeb", "before": null}}