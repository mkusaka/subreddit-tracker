{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - April", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_fsojx3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1585728331.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsojx3", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 7, "send_replies": false, "whitelist_status": null, "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/fsojx3/whos_hiring_typescript_developers_april/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/fsojx3/whos_hiring_typescript_developers_april/", "subreddit_subscribers": 38432, "created_utc": 1585699531.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_za7u6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Problem Solving with the TypeScript Compiler (Recorded Meetup/Webinar talk)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "hide_score": true, "name": "t3_g8dlhy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/ZHiT33F11mk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Online Meetup: Problem Solving using the TypeScript Compiler - Gal Schlezinger", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/ZHiT33F11mk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Wix Engineering Tech Talks", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/ZHiT33F11mk/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/WixTechTalks"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/ZHiT33F11mk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/g8dlhy", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/YnHVwIf6CgyNkHcc79xWq6Gpr_7yeg16YwRkDLAktfw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1587933286.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/MVRW8jqdOFBow2X-earKG6AcU-rZQoNgkZARC9YfrjI.jpg?auto=webp&amp;s=2f355b271dd7b021950e4e4adf70fd0097b37a66", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/MVRW8jqdOFBow2X-earKG6AcU-rZQoNgkZARC9YfrjI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=dc2617ef2b50ba01a3569124c2dafd666d975a75", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/MVRW8jqdOFBow2X-earKG6AcU-rZQoNgkZARC9YfrjI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a127743c69373bc577589361e41ce44161b815a4", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/MVRW8jqdOFBow2X-earKG6AcU-rZQoNgkZARC9YfrjI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b9579c5e13bbdc9daa9a69487f6a509d5b2d3d25", "width": 320, "height": 240}], "variants": {}, "id": "sD7YEx4LWIdAG7LfzG89KGsa1g81lr4lAVDgBdwYNIk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g8dlhy", "is_robot_indexable": true, "report_reasons": null, "author": "galstarx", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g8dlhy/problem_solving_with_the_typescript_compiler/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.youtube.com/watch?v=ZHiT33F11mk&amp;feature=youtu.be", "subreddit_subscribers": 38432, "created_utc": 1587904486.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Online Meetup: Problem Solving using the TypeScript Compiler - Gal Schlezinger", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/ZHiT33F11mk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Wix Engineering Tech Talks", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/ZHiT33F11mk/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/WixTechTalks"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello. \n\nSo I'm making a typescript module that will be used by other project (ts and js). And **I CANNOT** make the declaration file work the way it is supposed to.\n\nMy module is made out of 3 files :\n\n```\n- mainclass.ts\n- otherclass.ts\n- types.d.ts\n```\nAll my types are generated in the `types.d.ts` like this at top level.\n```javascript\nexport type mainClassConstructor = new (\n  config: Config,\n) =&gt; void\n\nexport interface mainClassInterface {\n  config: Config\n  getIndex(indexUid: string): Index\n  ...\n}\n```\n\nin my `mainClass.ts` which is the entry point of my module my class is like this: \n```javascript\n\nconst mainClass: Types.mainClassConstructor = class implements Types.mainClassInterface {\n  config: Types.Config\n  constructor(config: Types.Config) {\n    this.config = config\n  }\n  getIndex(indexUid: string): Index {\n     return new Index(indexUid);\n  }\n}\n```\n\nNow, when I add this module to another typescript project using `types.d.ts` as typing in `package.json`. Upon creating my first object I receive this error:\n\n```javascript\nconst myClass = new MainClass(config);\n```\n\n&gt; Type 'typeof import(\"/mymodule-js/src/types\")' has no construct signatures.  TS2351\n\n\nbut when I generate the declaration files with the typescript module of rollup and \nuse `mainClass.d.ts` as typing file in package.json\n\nAlthough I can finally use my MainClass, I cannot import any type that is found in types.d.ts \n\n```\nimport MainClass, { IndexObject } from 'mymodule';\n```\nI get this error:\n\n&gt; Module '\"/mymodule-js/dist/types/mainclass\"' has no exported member 'IndexObject'. Did you mean to use 'import IndexObject from \"/mymodule-js/dist/types/meilisearch\"'\n\nSo my question is: How do I create a proper declaration file that  \n- recognizes all types\n- Lets you import all types", "author_fullname": "t2_ojvpn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to correctly make type files for a typescript module", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_g8d2cr", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1587902197.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587930725.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello. &lt;/p&gt;\n\n&lt;p&gt;So I&amp;#39;m making a typescript module that will be used by other project (ts and js). And &lt;strong&gt;I CANNOT&lt;/strong&gt; make the declaration file work the way it is supposed to.&lt;/p&gt;\n\n&lt;p&gt;My module is made out of 3 files :&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n- mainclass.ts\n- otherclass.ts\n- types.d.ts\n&lt;/code&gt;\nAll my types are generated in the &lt;code&gt;types.d.ts&lt;/code&gt; like this at top level.\n```javascript\nexport type mainClassConstructor = new (\n  config: Config,\n) =&amp;gt; void&lt;/p&gt;\n\n&lt;p&gt;export interface mainClassInterface {\n  config: Config\n  getIndex(indexUid: string): Index\n  ...\n}\n```&lt;/p&gt;\n\n&lt;p&gt;in my &lt;code&gt;mainClass.ts&lt;/code&gt; which is the entry point of my module my class is like this: \n```javascript&lt;/p&gt;\n\n&lt;p&gt;const mainClass: Types.mainClassConstructor = class implements Types.mainClassInterface {\n  config: Types.Config\n  constructor(config: Types.Config) {\n    this.config = config\n  }\n  getIndex(indexUid: string): Index {\n     return new Index(indexUid);\n  }\n}\n```&lt;/p&gt;\n\n&lt;p&gt;Now, when I add this module to another typescript project using &lt;code&gt;types.d.ts&lt;/code&gt; as typing in &lt;code&gt;package.json&lt;/code&gt;. Upon creating my first object I receive this error:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;javascript\nconst myClass = new MainClass(config);\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Type &amp;#39;typeof import(&amp;quot;/mymodule-js/src/types&amp;quot;)&amp;#39; has no construct signatures.  TS2351&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;but when I generate the declaration files with the typescript module of rollup and \nuse &lt;code&gt;mainClass.d.ts&lt;/code&gt; as typing file in package.json&lt;/p&gt;\n\n&lt;p&gt;Although I can finally use my MainClass, I cannot import any type that is found in types.d.ts &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nimport MainClass, { IndexObject } from &amp;#39;mymodule&amp;#39;;\n&lt;/code&gt;\nI get this error:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Module &amp;#39;&amp;quot;/mymodule-js/dist/types/mainclass&amp;quot;&amp;#39; has no exported member &amp;#39;IndexObject&amp;#39;. Did you mean to use &amp;#39;import IndexObject from &amp;quot;/mymodule-js/dist/types/meilisearch&amp;quot;&amp;#39;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So my question is: How do I create a proper declaration file that&lt;br/&gt;\n- recognizes all types\n- Lets you import all types&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g8d2cr", "is_robot_indexable": true, "report_reasons": null, "author": "scrongneugneu", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g8d2cr/how_to_correctly_make_type_files_for_a_typescript/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/g8d2cr/how_to_correctly_make_type_files_for_a_typescript/", "subreddit_subscribers": 38432, "created_utc": 1587901925.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "A\u00a0popular\u00a0bundle\u00a0of\u00a0.NET\u00a0+\u00a0SPA\u00a0framework\u00a0written in TypeScript has\u00a0a\u00a0notorious\u00a0problem\u00a0of\u00a0enforcing\u00a0contracts\u00a0between\u00a0the\u00a0back-end\u00a0and\u00a0the\u00a0front-end.\u00a0\n\n[Here is my analysis of 6 options](https://alex-klaus.com/marry-csharp-typescript/) to generate TypeScript code from C#:\u00a0NSwag,\u00a0Swagger\u00a0Codegen,\u00a0OpenAPI\u00a0Generator,\u00a0AutoRest,\u00a0WebApiClientGen\u00a0and\u00a0TypeWriter.\n\nHave you used any of these tools, did you try others? Any feedback welcome", "author_fullname": "t2_sxzec", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "6 ways to marry C# with TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g7stb9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1587846959.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;A\u00a0popular\u00a0bundle\u00a0of\u00a0.NET\u00a0+\u00a0SPA\u00a0framework\u00a0written in TypeScript has\u00a0a\u00a0notorious\u00a0problem\u00a0of\u00a0enforcing\u00a0contracts\u00a0between\u00a0the\u00a0back-end\u00a0and\u00a0the\u00a0front-end.\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://alex-klaus.com/marry-csharp-typescript/\"&gt;Here is my analysis of 6 options&lt;/a&gt; to generate TypeScript code from C#:\u00a0NSwag,\u00a0Swagger\u00a0Codegen,\u00a0OpenAPI\u00a0Generator,\u00a0AutoRest,\u00a0WebApiClientGen\u00a0and\u00a0TypeWriter.&lt;/p&gt;\n\n&lt;p&gt;Have you used any of these tools, did you try others? Any feedback welcome&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/a1EZMBr8vZo1EVPxy3TGSRFn4_tmjTGjLej7cAEyJ-M.jpg?auto=webp&amp;s=6af549b4e5dfecb0ebaf78735f2260ba9a9b892d", "width": 72, "height": 72}, "resolutions": [], "variants": {}, "id": "1EwO0ZHXLGl6ozNlIGAcALs1fP0-41luqne0Lkc15jk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7stb9", "is_robot_indexable": true, "report_reasons": null, "author": "AlKla", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7stb9/6_ways_to_marry_c_with_typescript/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/g7stb9/6_ways_to_marry_c_with_typescript/", "subreddit_subscribers": 38432, "created_utc": 1587818159.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_i6r2m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using fetch with Typescript and the Todoist API", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_g7vfkz", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Xs12Nydt92_oqQkD6dAfeU63efKXUMJHiGMl0wY0mDI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1587857739.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/xeS0_K559GsAc0SU0sqG7Bw0sWG8pPeCZQdrKrPu_qg.jpg?auto=webp&amp;s=489812d2f14157cc8181d6d62975f4b5815a1f90", "width": 160, "height": 160}, "resolutions": [{"url": "https://external-preview.redd.it/xeS0_K559GsAc0SU0sqG7Bw0sWG8pPeCZQdrKrPu_qg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fa61a29648eaf7dd42aa73488687f227dcdd8a7c", "width": 108, "height": 108}], "variants": {}, "id": "3eTnBmuV3zU36P23dP2KHPoBi5klz74TbAJkkiCrVfc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7vfkz", "is_robot_indexable": true, "report_reasons": null, "author": "trindax19", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7vfkz/using_fetch_with_typescript_and_the_todoist_api/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@ricardo.trindade743/using-fetch-with-typescript-and-the-todoist-api-5203c5177ed5", "subreddit_subscribers": 38432, "created_utc": 1587828939.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I wrote a small library for validating typescript types: https://github.com/mmkal/ts/blob/master/packages/expect-type/readme.md\n\nI had previously used both `dtslint` and `ts-expect` but found them lacking for a few reasons - dtslint depends on the deprecated tslint, and the assertions are quite crude and comment-based. ts-expect is good but involves a fair amount of boilerplate, making anything but very basic assertions hard to read - and it doesn't support \"negative\" assertions out of the box. \n\n- a fluent, jest-inspired API, making the difference between `actual` and `expected` clear. This is helpful with complex types and assertions.\n- inverting assertions intuitively and easily via `expectType(...).not`\n- first-class support for:\n    - `any` (as well as `unknown` and `never`).\n      - This can be especially useful in combination with `not`, to protect against functions returning too-permissive types. For example, `const parseFile = (filename: string) =&gt; JSON.parse(readFileSync(filename).toString())` returns `any`, which could lead to errors. After giving it a proper return-type, you can add a test for this with `expect(parseFile).returns.not.toBeAny()`\n    - object properties\n    - function parameters\n    - function return values\n    - array item values\n    - nullable types\n    - assertions on types \"matching\" rather than exact type equality, for \"is-a\" relationships e.g. `expectTypeOf(square).toMatchTypeOf&lt;Shape&gt;()`\n- built into existing tooling with no dependencies. No extra build step, cli tool, or lint plugin is needed. Just import the function and start writing tests.", "author_fullname": "t2_5u0zugs4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "expect-type - intuitive compile-time test assertions, inspired by jest's expect API", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g7uk48", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1587854419.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote a small library for validating typescript types: &lt;a href=\"https://github.com/mmkal/ts/blob/master/packages/expect-type/readme.md\"&gt;https://github.com/mmkal/ts/blob/master/packages/expect-type/readme.md&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I had previously used both &lt;code&gt;dtslint&lt;/code&gt; and &lt;code&gt;ts-expect&lt;/code&gt; but found them lacking for a few reasons - dtslint depends on the deprecated tslint, and the assertions are quite crude and comment-based. ts-expect is good but involves a fair amount of boilerplate, making anything but very basic assertions hard to read - and it doesn&amp;#39;t support &amp;quot;negative&amp;quot; assertions out of the box. &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;a fluent, jest-inspired API, making the difference between &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;expected&lt;/code&gt; clear. This is helpful with complex types and assertions.&lt;/li&gt;\n&lt;li&gt;inverting assertions intuitively and easily via &lt;code&gt;expectType(...).not&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;first-class support for:\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;any&lt;/code&gt; (as well as &lt;code&gt;unknown&lt;/code&gt; and &lt;code&gt;never&lt;/code&gt;).\n\n&lt;ul&gt;\n&lt;li&gt;This can be especially useful in combination with &lt;code&gt;not&lt;/code&gt;, to protect against functions returning too-permissive types. For example, &lt;code&gt;const parseFile = (filename: string) =&amp;gt; JSON.parse(readFileSync(filename).toString())&lt;/code&gt; returns &lt;code&gt;any&lt;/code&gt;, which could lead to errors. After giving it a proper return-type, you can add a test for this with &lt;code&gt;expect(parseFile).returns.not.toBeAny()&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;object properties&lt;/li&gt;\n&lt;li&gt;function parameters&lt;/li&gt;\n&lt;li&gt;function return values&lt;/li&gt;\n&lt;li&gt;array item values&lt;/li&gt;\n&lt;li&gt;nullable types&lt;/li&gt;\n&lt;li&gt;assertions on types &amp;quot;matching&amp;quot; rather than exact type equality, for &amp;quot;is-a&amp;quot; relationships e.g. &lt;code&gt;expectTypeOf(square).toMatchTypeOf&amp;lt;Shape&amp;gt;()&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;built into existing tooling with no dependencies. No extra build step, cli tool, or lint plugin is needed. Just import the function and start writing tests.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/rVYnqnoKih5PE2MxahnH9vDfrr774NSj1Wo0bHIGcTk.jpg?auto=webp&amp;s=7238de47df57d658fb76b1fcbe33f03824f75a37", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/rVYnqnoKih5PE2MxahnH9vDfrr774NSj1Wo0bHIGcTk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6196284c2c5484d35630bb380b435f0b9a03929b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/rVYnqnoKih5PE2MxahnH9vDfrr774NSj1Wo0bHIGcTk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6e8e3bb21a44b410683c746b57ca0cebee12e41a", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/rVYnqnoKih5PE2MxahnH9vDfrr774NSj1Wo0bHIGcTk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4eef14d089dd22cf28b3e2ca9b7bc721ff09800b", "width": 320, "height": 320}], "variants": {}, "id": "YKt6yvP9JIs_UpsNoiaJNgAMNIrkc_0x0myDQkj9tRM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7uk48", "is_robot_indexable": true, "report_reasons": null, "author": "mmkale", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7uk48/expecttype_intuitive_compiletime_test_assertions/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/g7uk48/expecttype_intuitive_compiletime_test_assertions/", "subreddit_subscribers": 38432, "created_utc": 1587825619.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_bn4cg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Browser screenshots library written with fp-ts and Fluture", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "hide_score": false, "name": "t3_g7nm1d", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/c4R1gYtWdnCutLn8U-79ETKUMXIFXUzHtzPtK904vms.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1587818481.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/1M7t3P4tBrKBzOyVCDhVAm2c-TWzGowdEOAYjqtvylQ.jpg?auto=webp&amp;s=c4806c1b633c5776e28327cb1fb9dbb7ecacea48", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/1M7t3P4tBrKBzOyVCDhVAm2c-TWzGowdEOAYjqtvylQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8ac31a76922d95a0923fe5dbfc49227fa5f9a3e6", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/1M7t3P4tBrKBzOyVCDhVAm2c-TWzGowdEOAYjqtvylQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e9c7f6d3cf559b9ece6a92e53332371e26e05af0", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/1M7t3P4tBrKBzOyVCDhVAm2c-TWzGowdEOAYjqtvylQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7da2f377af35b29936e173e0ab0aa3f3e0a6b7a0", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/1M7t3P4tBrKBzOyVCDhVAm2c-TWzGowdEOAYjqtvylQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=565604a1a31c9f1311cf6b1400020006f524e2ca", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/1M7t3P4tBrKBzOyVCDhVAm2c-TWzGowdEOAYjqtvylQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6dee3e2e7b72d63bd32b3155fd18e7aae977dd25", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/1M7t3P4tBrKBzOyVCDhVAm2c-TWzGowdEOAYjqtvylQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f0f67871a71a0547bda833d81a254f0ac21773d0", "width": 1080, "height": 540}], "variants": {}, "id": "L2lRZ-CZlJ3hWCdxq_IpKpMHNye15_zihhpS8zfDFoQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7nm1d", "is_robot_indexable": true, "report_reasons": null, "author": "Nikersify", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7nm1d/browser_screenshots_library_written_with_fpts_and/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/gripeless/pico", "subreddit_subscribers": 38432, "created_utc": 1587789681.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_vd0g1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A terminal emulator built with TS &amp; React.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_g7hfvy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 40, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 40, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/INHxRMzdTpUCMFevT0wnfNF1356wsOokll9EHYpMY3Y.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1587793875.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/hogIsenvCUl04TYsef-aDPU7zY9YfxCrtlF_-slUMPU.jpg?auto=webp&amp;s=9262df4e12c586f4818fa365738e64adddad66e6", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/hogIsenvCUl04TYsef-aDPU7zY9YfxCrtlF_-slUMPU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0a5df36bc3539e635c011f0b05b72a0976cc3c8a", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/hogIsenvCUl04TYsef-aDPU7zY9YfxCrtlF_-slUMPU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3ff4223ead7c7277fdb59e5d171c4a4c76ecafc4", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/hogIsenvCUl04TYsef-aDPU7zY9YfxCrtlF_-slUMPU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4a407831fcb5ccb1bc2cf79c0c00c08021e7f510", "width": 320, "height": 320}], "variants": {}, "id": "hu8oF9C4_v5ic-AhNN6gbbCJPx4AoU9CWg7lSXd1un8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7hfvy", "is_robot_indexable": true, "report_reasons": null, "author": "MarsJr", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7hfvy/a_terminal_emulator_built_with_ts_react/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/ctaylo21/termy-the-terminal/", "subreddit_subscribers": 38432, "created_utc": 1587765075.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_3cl7e290", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Angular Components with Extracted Immutable State", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_g7pu6s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/yRmfprFzzSkkphN4odYFT1eE2eq4EPO3izkLCGwg05Y.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1587830334.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/5-e7Rfv74Ky27I55KbtIULgabmN6_ceYwJ2VgYHyPxw.jpg?auto=webp&amp;s=37f010e7d5c1dd0f36f05010b5ff268b8d23820d", "width": 1200, "height": 1265}, "resolutions": [{"url": "https://external-preview.redd.it/5-e7Rfv74Ky27I55KbtIULgabmN6_ceYwJ2VgYHyPxw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=22333405775dc7b60c1532c0c82a6529089804d2", "width": 108, "height": 113}, {"url": "https://external-preview.redd.it/5-e7Rfv74Ky27I55KbtIULgabmN6_ceYwJ2VgYHyPxw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=64804cc82f577868d2c7c027db1ec8bce6cfe968", "width": 216, "height": 227}, {"url": "https://external-preview.redd.it/5-e7Rfv74Ky27I55KbtIULgabmN6_ceYwJ2VgYHyPxw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6f79a648ad11f9ada965c0cb9970484259688e09", "width": 320, "height": 337}, {"url": "https://external-preview.redd.it/5-e7Rfv74Ky27I55KbtIULgabmN6_ceYwJ2VgYHyPxw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=83287b6b2253e5c244f151425e9cd2f45f010286", "width": 640, "height": 674}, {"url": "https://external-preview.redd.it/5-e7Rfv74Ky27I55KbtIULgabmN6_ceYwJ2VgYHyPxw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=811d1943dd15d502cc99add5d8ba94c33c763aa0", "width": 960, "height": 1012}, {"url": "https://external-preview.redd.it/5-e7Rfv74Ky27I55KbtIULgabmN6_ceYwJ2VgYHyPxw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8f12992a41f53d78ac0c7bf24e36afe22cc6a075", "width": 1080, "height": 1138}], "variants": {}, "id": "6ABA3G7a6kD4R67DpUngZgIMEr5lX5wQRziQmyTJQTQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7pu6s", "is_robot_indexable": true, "report_reasons": null, "author": "EvoNext", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7pu6s/angular_components_with_extracted_immutable_state/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@0x1000000/angular-components-with-extracted-immutable-state-86ae1a4c9237?source=friends_link&amp;sk=3d9422a57d8ac49a4b1c8de39d6fc0b3", "subreddit_subscribers": 38432, "created_utc": 1587801534.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I set up a project recently and I'm having issues compiling it and it seems to be because of my tsconfig file and node\\_modules. As of now, my project contains a tsconfig file that looks like this:\n\n    {\n      \"compilerOptions\": {\n        \"target\": \"es5\",\n        \"lib\": [\"es6\", \"dom\"],\n        \"module\": \"commonjs\",\n        \"sourceMap\": true,\n        \"types\": [],\n        \"skipLibCheck\": true\n      },\n      \"exclude\": [\n        \"node_modules\"\n      ]\n    }\n\nas well as a `package.json` and a `package-lock.json` file. Because I installed jest with npm, I have a `node_modules` folder as well as my own `src` folder. In the src folder, I only have one small file that I'm trying to run. When I use the command tsc src/main.ts I get an error: \n\n    node_modules/@types/babel__template/index.d.ts:16:28 - error TS2583: Cannot find name 'Set'. Do you need to change your target library? Try changing the `lib` compiler option to es2015 or later.\n    \n    16     placeholderWhitelist?: Set&lt;string&gt;;\n\nI've searched the entire internet for a solution but none seem to work. Any suggestions would be really appreciated.", "author_fullname": "t2_xvkyj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Compilation error driving me nuts. Any help would be appreciated.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g7o385", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587820786.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I set up a project recently and I&amp;#39;m having issues compiling it and it seems to be because of my tsconfig file and node_modules. As of now, my project contains a tsconfig file that looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n  &amp;quot;compilerOptions&amp;quot;: {\n    &amp;quot;target&amp;quot;: &amp;quot;es5&amp;quot;,\n    &amp;quot;lib&amp;quot;: [&amp;quot;es6&amp;quot;, &amp;quot;dom&amp;quot;],\n    &amp;quot;module&amp;quot;: &amp;quot;commonjs&amp;quot;,\n    &amp;quot;sourceMap&amp;quot;: true,\n    &amp;quot;types&amp;quot;: [],\n    &amp;quot;skipLibCheck&amp;quot;: true\n  },\n  &amp;quot;exclude&amp;quot;: [\n    &amp;quot;node_modules&amp;quot;\n  ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;as well as a &lt;code&gt;package.json&lt;/code&gt; and a &lt;code&gt;package-lock.json&lt;/code&gt; file. Because I installed jest with npm, I have a &lt;code&gt;node_modules&lt;/code&gt; folder as well as my own &lt;code&gt;src&lt;/code&gt; folder. In the src folder, I only have one small file that I&amp;#39;m trying to run. When I use the command tsc src/main.ts I get an error: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;node_modules/@types/babel__template/index.d.ts:16:28 - error TS2583: Cannot find name &amp;#39;Set&amp;#39;. Do you need to change your target library? Try changing the `lib` compiler option to es2015 or later.\n\n16     placeholderWhitelist?: Set&amp;lt;string&amp;gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve searched the entire internet for a solution but none seem to work. Any suggestions would be really appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7o385", "is_robot_indexable": true, "report_reasons": null, "author": "Sweeterman3", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7o385/compilation_error_driving_me_nuts_any_help_would/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/g7o385/compilation_error_driving_me_nuts_any_help_would/", "subreddit_subscribers": 38432, "created_utc": 1587791986.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Has anyone gotten yarn workspaces to work well for a single frontend + backend project? I want to have a structure like:\n\n* package.json\n* yarn.lock\n* client/\n   * package.json\n   * src/\n* server/\n   * package.json\n   * src/\n\n&amp;#x200B;\n\nBut, I don't know how to have the \"static files\" generated by the client/ \"create-react-app\" be included as static files in the server/ \"express\" app. Do I have to do some kind of manual \"cp\" to get them over? I don't really understand how to configure the \"static file\" exports on the \"client/\" project so that the \"server/\" project can somehow include them and serve them.", "author_fullname": "t2_4kaz1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Yarn workspaces, create-react-app and express", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_g7eq4k", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587784877.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Has anyone gotten yarn workspaces to work well for a single frontend + backend project? I want to have a structure like:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;package.json&lt;/li&gt;\n&lt;li&gt;yarn.lock&lt;/li&gt;\n&lt;li&gt;client/\n\n&lt;ul&gt;\n&lt;li&gt;package.json&lt;/li&gt;\n&lt;li&gt;src/&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;server/\n\n&lt;ul&gt;\n&lt;li&gt;package.json&lt;/li&gt;\n&lt;li&gt;src/&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;But, I don&amp;#39;t know how to have the &amp;quot;static files&amp;quot; generated by the client/ &amp;quot;create-react-app&amp;quot; be included as static files in the server/ &amp;quot;express&amp;quot; app. Do I have to do some kind of manual &amp;quot;cp&amp;quot; to get them over? I don&amp;#39;t really understand how to configure the &amp;quot;static file&amp;quot; exports on the &amp;quot;client/&amp;quot; project so that the &amp;quot;server/&amp;quot; project can somehow include them and serve them.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7eq4k", "is_robot_indexable": true, "report_reasons": null, "author": "jvi", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/g7eq4k/yarn_workspaces_createreactapp_and_express/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/g7eq4k/yarn_workspaces_createreactapp_and_express/", "subreddit_subscribers": 38432, "created_utc": 1587756077.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_g7eq4k", "before": null}}