{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - September", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ik9rft", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1598947533.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ik9rft", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 3, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ik9rft/whos_hiring_typescript_developers_september/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/ik9rft/whos_hiring_typescript_developers_september/", "subreddit_subscribers": 49179, "created_utc": 1598918733.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "There is this company I am interested in working for. But they insist on using react in combination with typescript. \n\nI followed some tutorials about the combination of the two but I honestly feel like typescript is bloating the syntaxes more than it should. Some comments could also do the trick in my opinion. That is because react already offers 'a form' of structure to its code. \n\nThis said, I am stil pretty inexperienced when it comes to developing bigger projects. That is why I would like to ask some people woth experience to show me some code examples where typoscript obviously make react code better. And/Or draw me a situation where it would obviously help. \n\nThanks in advance!", "author_fullname": "t2_27siuv76", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Can anyone show me why react-typescript is good?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_izixhl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601067397.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;There is this company I am interested in working for. But they insist on using react in combination with typescript. &lt;/p&gt;\n\n&lt;p&gt;I followed some tutorials about the combination of the two but I honestly feel like typescript is bloating the syntaxes more than it should. Some comments could also do the trick in my opinion. That is because react already offers &amp;#39;a form&amp;#39; of structure to its code. &lt;/p&gt;\n\n&lt;p&gt;This said, I am stil pretty inexperienced when it comes to developing bigger projects. That is why I would like to ask some people woth experience to show me some code examples where typoscript obviously make react code better. And/Or draw me a situation where it would obviously help. &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "izixhl", "is_robot_indexable": true, "report_reasons": null, "author": "The_BeardedHippo", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/izixhl/can_anyone_show_me_why_reacttypescript_is_good/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/izixhl/can_anyone_show_me_why_reacttypescript_is_good/", "subreddit_subscribers": 49179, "created_utc": 1601038597.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_jb2bz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Not quite what I was looking for", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 78, "top_awarded_type": null, "hide_score": false, "name": "t3_iyur8c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 117, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 483}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/FarPixel/status/1309077814117904389", "author_name": "Josh Farrant", "height": 483, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/FarPixel", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/iyur8c", "height": 483}, "link_flair_text": null, "can_mod_post": false, "score": 117, "approved_by": null, "author_premium": false, "thumbnail": "nsfw", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600972364.0, "link_flair_type": "text", "wls": 3, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://twitter.com/FarPixel/status/1309077814117904389", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": true, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?auto=webp&amp;s=19334802e4591d000a95ec1688a000f53cd8fb06", "width": 140, "height": 78}, "resolutions": [{"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=911ba998ebb131878d11922f218a6e70e41b31b7", "width": 108, "height": 60}], "variants": {"obfuscated": {"source": {"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?blur=40&amp;format=pjpg&amp;auto=webp&amp;s=2b04be6b3ff1a1ab4a933bae0d7054010f3f7e51", "width": 140, "height": 78}, "resolutions": [{"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?width=108&amp;crop=smart&amp;blur=10&amp;format=pjpg&amp;auto=webp&amp;s=b337b1ae341fc8a8f76bac2be3745b3216268ca7", "width": 108, "height": 60}]}, "nsfw": {"source": {"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?blur=40&amp;format=pjpg&amp;auto=webp&amp;s=2b04be6b3ff1a1ab4a933bae0d7054010f3f7e51", "width": 140, "height": 78}, "resolutions": [{"url": "https://external-preview.redd.it/DDShcOSD5fLeUHraOtYON4pxlnYtaoIXGELWW3Rb3jQ.jpg?width=108&amp;crop=smart&amp;blur=10&amp;format=pjpg&amp;auto=webp&amp;s=b337b1ae341fc8a8f76bac2be3745b3216268ca7", "width": 108, "height": 60}]}}, "id": "PgXyxdoE48jT1md3vO0kudUXeV9EP4czO2va3kHBkLc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyur8c", "is_robot_indexable": true, "report_reasons": null, "author": "joshfarrant", "discussion_type": null, "num_comments": 33, "send_replies": true, "whitelist_status": "promo_adult_nsfw", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iyur8c/not_quite_what_i_was_looking_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/FarPixel/status/1309077814117904389", "subreddit_subscribers": 49179, "created_utc": 1600943564.0, "num_crossposts": 1, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/FarPixel/status/1309077814117904389", "author_name": "Josh Farrant", "height": 483, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;Not quite what I was after &lt;a href=\"https://twitter.com/DuckDuckGo?ref_src=twsrc%5Etfw\"&gt;@DuckDuckGo&lt;/a&gt;... &lt;a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\"&gt;@Google&lt;/a&gt; give me the actual site I was looking for (&lt;a href=\"https://t.co/YUUmXmKCfU\"&gt;https://t.co/YUUmXmKCfU&lt;/a&gt;, I promise) as the first result \ud83d\ude04 &lt;a href=\"https://twitter.com/typescript?ref_src=twsrc%5Etfw\"&gt;@typescript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#javascript&lt;/a&gt; &lt;a href=\"https://twitter.com/hashtag/typescript?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#typescript&lt;/a&gt; &lt;a href=\"https://t.co/iUt97j2OeG\"&gt;pic.twitter.com/iUt97j2OeG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Josh Farrant (@FarPixel) &lt;a href=\"https://twitter.com/FarPixel/status/1309077814117904389?ref_src=twsrc%5Etfw\"&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/FarPixel", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The following code doesn't type-check unless the third function declaration is uncommented. I feel like I'm missing something here; shouldn't it be rather simple for the compiler to figure out the return type when the union is provided without me having to explicitly define it?\n\n    type Foo = {type: \"foo\"};\n    type Bar = {type: \"bar\"};\n\n    declare function f(x: Foo): 1;\n    declare function f(x: Bar): 2;\n    // declare function f(x: Foo | Bar): 1 | 2;\n\n    declare const input: Foo | Bar;\n    f(input);\n\n[Relevant TypeScript Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYg9nKBeKBvUkBcUBEAzBHAXwG4AoDaAIQEMAnZNS7HAI3uPLIBMIBjADb1oeAK4A7PsACWccVDwAKAB7Z4cAJTYAjOV6DhCiVNnylqqLTpaoAJnIB6B1H1C6I4zLkKVahFAAfS3obbUC7LldDPjkAZ2AoaXEwUWA-RCCrciUklOANEiA)", "author_fullname": "t2_mf80w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Passing a union to an overloaded function", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_izgrsx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601056718.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The following code doesn&amp;#39;t type-check unless the third function declaration is uncommented. I feel like I&amp;#39;m missing something here; shouldn&amp;#39;t it be rather simple for the compiler to figure out the return type when the union is provided without me having to explicitly define it?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Foo = {type: &amp;quot;foo&amp;quot;};\ntype Bar = {type: &amp;quot;bar&amp;quot;};\n\ndeclare function f(x: Foo): 1;\ndeclare function f(x: Bar): 2;\n// declare function f(x: Foo | Bar): 1 | 2;\n\ndeclare const input: Foo | Bar;\nf(input);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play?#code/C4TwDgpgBAYg9nKBeKBvUkBcUBEAzBHAXwG4AoDaAIQEMAnZNS7HAI3uPLIBMIBjADb1oeAK4A7PsACWccVDwAKAB7Z4cAJTYAjOV6DhCiVNnylqqLTpaoAJnIB6B1H1C6I4zLkKVahFAAfS3obbUC7LldDPjkAZ2AoaXEwUWA-RCCrciUklOANEiA\"&gt;Relevant TypeScript Playground&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "izgrsx", "is_robot_indexable": true, "report_reasons": null, "author": "Asha200", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/izgrsx/passing_a_union_to_an_overloaded_function/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/izgrsx/passing_a_union_to_an_overloaded_function/", "subreddit_subscribers": 49179, "created_utc": 1601027918.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_x30x82e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The first thing I do on any Typescript/Angular project", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_izghe1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.57, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1601055045.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@ciesielskico/the-first-thing-i-do-on-any-typescript-angular-project-628d26ffd2a7?source=friends_link&amp;sk=5eed949a2c5e30c48709fbcafad1d00c", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "izghe1", "is_robot_indexable": true, "report_reasons": null, "author": "Happycodeine", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/izghe1/the_first_thing_i_do_on_any_typescriptangular/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@ciesielskico/the-first-thing-i-do-on-any-typescript-angular-project-628d26ffd2a7?source=friends_link&amp;sk=5eed949a2c5e30c48709fbcafad1d00c", "subreddit_subscribers": 49179, "created_utc": 1601026245.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_10va2ih", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "tsPEG: 2.0.0 now available! The TypeScript parser generator", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_iz55ud", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/Z322GM888NY2KAvepnC715Z0GP4ywPcxfgskvohq7N0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1601008291.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "npmjs.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.npmjs.com/package/tspeg", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?auto=webp&amp;s=dc9f3722e4f26a0d394e974bdc658bd002ee6f3d", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29849972d1063666bb20bfca982ed849dbab0739", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c2e78155bcf431bc82859db1b9cc141779445961", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7b8fc1121ee3f0761b7c5ec9e306f65c99c715db", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18cce76337e2ca3f939805374b20a68b0a1671af", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=940123d8c0b4043a88a028062a5a195676254f4d", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=70f261d64e65120035e417a634c19726e4e3576d", "width": 1080, "height": 567}], "variants": {}, "id": "3CAm7f2euOP7diXidheIHavSdc1loh3U46B-FOssKu4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iz55ud", "is_robot_indexable": true, "report_reasons": null, "author": "MilliwaysRestaurant", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iz55ud/tspeg_200_now_available_the_typescript_parser/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.npmjs.com/package/tspeg", "subreddit_subscribers": 49179, "created_utc": 1600979491.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_4j7tc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "types vs. interfaces", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_iylqrr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 69, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "TypeScript TYPES vs INTERFACES", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Basarat Ali", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/IXAT3If0pGI/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/basaratali"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/iylqrr", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 69, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/jqMCJv7ssG-W4lhb6brZGcHnm2_tnmtUrxKo9EIIoXI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600932248.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=IXAT3If0pGI", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?auto=webp&amp;s=555b787394a3bd231192fc3078b2f8222b43b370", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=73e3c8bc85a14b3206455117a5026327d5740d7c", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8c4fb610c29590b37440e91a6d6079884a5d8b03", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/02c6DzbgujCx9QI5nczqHxJyoh9DSl8OD0_Q468p8eA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d334077a2a176b74365ed6b8de56ba6a122c8d60", "width": 320, "height": 240}], "variants": {}, "id": "jd7Bj4MQbYssH-QcbdEnq_-drXKHdHRyFPCR3B4SgIM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iylqrr", "is_robot_indexable": true, "report_reasons": null, "author": "basaratali", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iylqrr/types_vs_interfaces/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=IXAT3If0pGI", "subreddit_subscribers": 49179, "created_utc": 1600903448.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "TypeScript TYPES vs INTERFACES", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/IXAT3If0pGI?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Basarat Ali", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/IXAT3If0pGI/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/basaratali"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Experimenting with the upcoming TypeScript 4.1's\u00a0template literal types, I tried to define a generic type that can check property paths.\n\nUntil TS 4.1, there was no possible way to type an expression such as\u00a0`'foo.bar.baz'`, and you would have to settle for\u00a0`string`. Now, with template literal types, I want to be able to type these property paths, and use them for things such as MongoDB queries and projection objects. For example:\n\n`db.someCollection.find({ 'foo.bar.baz': { $exists: true } });`\n\nThis is the type that I came up with:\n\n```ts\ntype PropsPath&lt;T&gt; =\n    T extends object\n        ? T extends any[]\n            ? number\n            : {\n                [P in keyof T]: P | `${P}.${PropsPath&lt;T[P]&gt;}`\n            }[keyof T]\n        : '';\n```\n\n[Full example in TS Playground](https://www.typescriptlang.org/play?ts=4.1.0-dev.20200921#code/C4TwDgpgBACgTgezAZxgQ2ACwDwBUB8UAvAFBTlS5QQAewEAdgCbJQIBGAVhAMbBkVBAfkrU6jFlDQMQAbQC6AwcqgiGAVwC27CHCUqKALigBvfQeWyYUAJYMoAawggEAM0rzj1gD5QABgAkJjAAvgB0QfBIqBg4uFby+CF+5gYhsk4u7riKFsYA5PkA3CQkdvRwrmg80ADKCJoQuODQZoKuCAjGbQbsaHDGGtq6JYIh+n0AXsbsnQA2ENIl4yQ8CAzIwFBgXogo6FjY9Y3NkIREUPkdCMWlaxtbYIjcfDbrXv3ANmhz2ABKvAQcCY2Ci+1iRwaTRa+AANFAhjo4PhzqZ9FdOmE+nB8sYAIwkEJFIA)\n\nSadly, this type is considered \"excessively deep or possibly infinite\" by TS compiler. Is there any way to redefine it in a way that doesn't throw an error?", "author_fullname": "t2_13t0ma", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TS4.1: Is there a way to define this property path type that isn't excessively deep?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iywewf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1600958950.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600979731.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Experimenting with the upcoming TypeScript 4.1&amp;#39;s\u00a0template literal types, I tried to define a generic type that can check property paths.&lt;/p&gt;\n\n&lt;p&gt;Until TS 4.1, there was no possible way to type an expression such as\u00a0&lt;code&gt;&amp;#39;foo.bar.baz&amp;#39;&lt;/code&gt;, and you would have to settle for\u00a0&lt;code&gt;string&lt;/code&gt;. Now, with template literal types, I want to be able to type these property paths, and use them for things such as MongoDB queries and projection objects. For example:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;db.someCollection.find({ &amp;#39;foo.bar.baz&amp;#39;: { $exists: true } });&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This is the type that I came up with:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ts\ntype PropsPath&amp;lt;T&amp;gt; =\n    T extends object\n        ? T extends any[]\n            ? number\n            : {\n                [P in keyof T]: P | `${P}.${PropsPath&amp;lt;T[P]&amp;gt;}`\n            }[keyof T]\n        : &amp;#39;&amp;#39;;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play?ts=4.1.0-dev.20200921#code/C4TwDgpgBACgTgezAZxgQ2ACwDwBUB8UAvAFBTlS5QQAewEAdgCbJQIBGAVhAMbBkVBAfkrU6jFlDQMQAbQC6AwcqgiGAVwC27CHCUqKALigBvfQeWyYUAJYMoAawggEAM0rzj1gD5QABgAkJjAAvgB0QfBIqBg4uFby+CF+5gYhsk4u7riKFsYA5PkA3CQkdvRwrmg80ADKCJoQuODQZoKuCAjGbQbsaHDGGtq6JYIh+n0AXsbsnQA2ENIl4yQ8CAzIwFBgXogo6FjY9Y3NkIREUPkdCMWlaxtbYIjcfDbrXv3ANmhz2ABKvAQcCY2Ci+1iRwaTRa+AANFAhjo4PhzqZ9FdOmE+nB8sYAIwkEJFIA\"&gt;Full example in TS Playground&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Sadly, this type is considered &amp;quot;excessively deep or possibly infinite&amp;quot; by TS compiler. Is there any way to redefine it in a way that doesn&amp;#39;t throw an error?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iywewf", "is_robot_indexable": true, "report_reasons": null, "author": "AmitPwnz", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iywewf/ts41_is_there_a_way_to_define_this_property_path/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iywewf/ts41_is_there_a_way_to_define_this_property_path/", "subreddit_subscribers": 49179, "created_utc": 1600950931.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_40ofuvyl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What\u2019s Structural Typing And How Typescript Uses It To Its Benefit?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iywrt5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/DHsS84vF9SfDC-qpYfc4OhEXR4GZcyjJ04jRNH8HhXM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600981112.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@mahdighajary/whats-structural-typing-and-how-typescript-use-it-to-its-benefit-6cf491f1564?source=friends_link&amp;sk=e0265b7bf135cc7e5d912d9e74d57afb", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?auto=webp&amp;s=11bfb67ae133ffbfe6b057247a9e2062cdd5bde5", "width": 400, "height": 565}, "resolutions": [{"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3d8fde2173eb38ec2559ae84fba75c610e899faa", "width": 108, "height": 152}, {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8834714211a51c77e99be51f0e5367c83cd8cc63", "width": 216, "height": 305}, {"url": "https://external-preview.redd.it/VZwYr2xM1SVDiidnUAkNWx1v85OOZlCzk32eImZBuBM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=652da248579d77e827d532717e2c7cb38c1ec1b1", "width": 320, "height": 452}], "variants": {}, "id": "WXCOt4iMdszE6zsKi-2rId4fzveZ8iGdhbDbcNxjfwA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iywrt5", "is_robot_indexable": true, "report_reasons": null, "author": "fiveMop", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iywrt5/whats_structural_typing_and_how_typescript_uses/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@mahdighajary/whats-structural-typing-and-how-typescript-use-it-to-its-benefit-6cf491f1564?source=friends_link&amp;sk=e0265b7bf135cc7e5d912d9e74d57afb", "subreddit_subscribers": 49179, "created_utc": 1600952312.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Spent a lot of time trying to find an explanation of the following behavior:\n\n    const stringKey = 'thisKeyDoesNotExist'\n    const hashMap: {\n        [key: string]: {\n          valueNumber: number; \n          valueString: string;\n        };\n      } = {};\n    \n    \n    // TS does not complain\n    hashMap[stringKey] = hashMap[stringKey] || {\n              valueString: stringKey,\n              valueNumber: 'string!!!!!!!!!!!',\n            };\n    // TS does not complain\n    hashMap[stringKey] = hashMap[stringKey] || \"string\";\n    \n    // Only with this syntax TS complains that there is an issue with `valueNumber`\n    hashMap[stringKey] = hashMap[stringKey] ? hashMap[stringKey] : {\n              valueString: stringKey,\n              valueNumber: 'string!!!!!!!!!!!',\n            };\n\nCan somebody explain why the first 2 assignments are passing the TS checks?", "author_fullname": "t2_iobzmc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Need some help with index signature and OR", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iyh08i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1600889155.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600917766.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Spent a lot of time trying to find an explanation of the following behavior:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const stringKey = &amp;#39;thisKeyDoesNotExist&amp;#39;\nconst hashMap: {\n    [key: string]: {\n      valueNumber: number; \n      valueString: string;\n    };\n  } = {};\n\n\n// TS does not complain\nhashMap[stringKey] = hashMap[stringKey] || {\n          valueString: stringKey,\n          valueNumber: &amp;#39;string!!!!!!!!!!!&amp;#39;,\n        };\n// TS does not complain\nhashMap[stringKey] = hashMap[stringKey] || &amp;quot;string&amp;quot;;\n\n// Only with this syntax TS complains that there is an issue with `valueNumber`\nhashMap[stringKey] = hashMap[stringKey] ? hashMap[stringKey] : {\n          valueString: stringKey,\n          valueNumber: &amp;#39;string!!!!!!!!!!!&amp;#39;,\n        };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Can somebody explain why the first 2 assignments are passing the TS checks?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iyh08i", "is_robot_indexable": true, "report_reasons": null, "author": "band1khatake", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iyh08i/need_some_help_with_index_signature_and_or/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iyh08i/need_some_help_with_index_signature_and_or/", "subreddit_subscribers": 49179, "created_utc": 1600888966.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I had to use this inside a fetch request, I consider it hacky but it works:\n\n        mode: 'cors' as const, // allows string to match a string union type\n\nI learned this here but never found an explanation for it. why does asserting the string as a const variable suddenly let it match a string union type (which I saw in the error popup)?", "author_fullname": "t2_3ob6osi0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why does setting 'as const' allow a string to match a string union type?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iy8b7t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600889306.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I had to use this inside a fetch request, I consider it hacky but it works:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    mode: &amp;#39;cors&amp;#39; as const, // allows string to match a string union type\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I learned this here but never found an explanation for it. why does asserting the string as a const variable suddenly let it match a string union type (which I saw in the error popup)?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iy8b7t", "is_robot_indexable": true, "report_reasons": null, "author": "embar5", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/iy8b7t/why_does_setting_as_const_allow_a_string_to_match/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/iy8b7t/why_does_setting_as_const_allow_a_string_to_match/", "subreddit_subscribers": 49179, "created_utc": 1600860506.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_iy8b7t", "before": null}}