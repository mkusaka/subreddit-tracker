{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nThe Rust-related IRC channels on irc.mozilla.org (click the links to open a web-based IRC client):\n\n - [#rust](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust) (general questions)\n - [#rust-beginners](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-beginners) (beginner questions)\n - [#cargo](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23cargo) (the package manager)\n - [#rust-gamedev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-gamedev) (graphics and video games, and see also [/r/rust_gamedev](https://www.reddit.com/r/rust_gamedev))\n - [#rust-osdev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-osdev) (operating systems and embedded systems)\n - [#rust-webdev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-webdev) (web development)\n - [#rust-networking](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-networking) (computer networking, and see also [/r/rust_networking](https://www.reddit.com/r/rust_networking))\n\nAlso check out [last week's thread](https://reddit.com/r/rust/comments/eransa/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (6/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey2wte", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580740798.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The Rust-related IRC channels on irc.mozilla.org (click the links to open a web-based IRC client):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust\"&gt;#rust&lt;/a&gt; (general questions)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-beginners\"&gt;#rust-beginners&lt;/a&gt; (beginner questions)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23cargo\"&gt;#cargo&lt;/a&gt; (the package manager)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-gamedev\"&gt;#rust-gamedev&lt;/a&gt; (graphics and video games, and see also &lt;a href=\"https://www.reddit.com/r/rust_gamedev\"&gt;/r/rust_gamedev&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-osdev\"&gt;#rust-osdev&lt;/a&gt; (operating systems and embedded systems)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-webdev\"&gt;#rust-webdev&lt;/a&gt; (web development)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-networking\"&gt;#rust-networking&lt;/a&gt; (computer networking, and see also &lt;a href=\"https://www.reddit.com/r/rust_networking\"&gt;/r/rust_networking&lt;/a&gt;)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/eransa/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last week&amp;#39;s thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey2wte", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 28, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/ey2wte/hey_rustaceans_got_an_easy_question_ask_here_62020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/ey2wte/hey_rustaceans_got_an_easy_question_ask_here_62020/", "subreddit_subscribers": 88881, "created_utc": 1580711998.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "New week, new Rust! What are you folks up to? Answer here or over at [rust-users](https://users.rust-lang.org/t/whats-everyone-working-on-this-week-6-2020/37776?u=llogiq)!", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's everyone working on this week (6/2020)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey2xrr", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580740949.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New week, new Rust! What are you folks up to? Answer here or over at &lt;a href=\"https://users.rust-lang.org/t/whats-everyone-working-on-this-week-6-2020/37776?u=llogiq\"&gt;rust-users&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey2xrr", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/ey2xrr/whats_everyone_working_on_this_week_62020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/ey2xrr/whats_everyone_working_on_this_week_62020/", "subreddit_subscribers": 88881, "created_utc": 1580712149.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Hi all! About three months ago, **rust-search-extension** got a pretty good first impression in [this reddit post](https://www.reddit.com/r/rust/comments/dp1ru6/i_published_a_handy_chromefirefox_extension_to/). Now, I bring a brand-new version of **rust-search-extension** to all of you!\n\nHere are the major features:\n\n## Supports search std docs\n\nOffline mode is supported.\n\nhttps://preview.redd.it/sl9pzlp8zue41.png?width=1802&amp;format=png&amp;auto=webp&amp;s=e791a5d7fc74f52a3e3bc4a57798f83ddc6b7ba8\n\n## Supports search top 10K crates\n\nWe build top 10K crates (35+k in total on crates.io) index hourly to help you search crates instantly. You can open the popup page to sync the latest crates index automatically.\n\nWhat more, you can prefix an **!** (exclamation mark) before the keyword to search crates exclusively! \n\nhttps://preview.redd.it/ntx23kmazue41.png?width=1800&amp;format=png&amp;auto=webp&amp;s=64c691ceaa09238e2cb71847e40652770e1d3e6a\n\n## Supports search doc with type mode\n\nYou can prefix a type to get the exclusive search result. Those type keywords including:\n\n* mod\n* struct\n* enum\n* fn\n* trait\n* type\n* static\n* macro\n* const For example, `fn:asref` to search function or `trait:iterator` to search trait. \n\nhttps://preview.redd.it/jx6ysliczue41.png?width=1796&amp;format=png&amp;auto=webp&amp;s=e4cdbdf1f1ee72fd4652efbd536acbf6afb49320\n\n## Supports search builtin attributes\n\nSearch builtin attributes (such as `derive`, `non_exhaustive`) are also supported, by default, the result is mixed with other related docs or crates though.\n\nIf you prefer to search attribute exclusively, prefix a **#** (pound sign) before the keyword to narrow the result. \n\nhttps://preview.redd.it/lxtntewdzue41.png?width=1802&amp;format=png&amp;auto=webp&amp;s=21e7c86aa5c134524eb1b3066b47995db7e4eeda\n\n## Supports search error codes\n\nhttps://preview.redd.it/y1ca793fzue41.png?width=1800&amp;format=png&amp;auto=webp&amp;s=8cd08be25f7feb6d103a29bbbde45ae1432844bf\n\n## Brand-new official website\n\n[https://rust-search-extension.now.sh](https://rust-search-extension.now.sh)\n\n## Github\n\n**rust-search-extension** is open-sourced on Github ([https://github.com/Folyd/rust-search-extension](https://github.com/Folyd/rust-search-extension)), welcome to submit issue or PR!\n\n# Installation\n\n\\- [Chrome Web Store](https://chrome.google.com/webstore/detail/rust-search-extension/ennpfpdlaclocpomkiablnmbppdnlhoh)\n\n\\- [Firefox](https://addons.mozilla.org/en-US/firefox/addon/rust-search-extension/)", "author_fullname": "t2_q26wr", "saved": false, "mod_reason_title": null, "gilded": 1, "clicked": false, "title": "Announcing rust-search-extension v0.7! Search std docs, crates, error codes, and attributes in your address bar instantly!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "media_metadata": {"ntx23kmazue41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 74, "x": 108, "u": "https://external-preview.redd.it/ntx23kmazue41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=5b46cdc43c8aa98d0a7738b79ca909e9bd939d9d"}, {"y": 149, "x": 216, "u": "https://external-preview.redd.it/ntx23kmazue41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=75c1cbed3bc00eed6d3b1a56ee1b128609032f86"}, {"y": 221, "x": 320, "u": "https://external-preview.redd.it/ntx23kmazue41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=49400f5e8751aab31cfce216e58c41702c1160df"}, {"y": 442, "x": 640, "u": "https://external-preview.redd.it/ntx23kmazue41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=d5ef86edc13b06a6d544dce9630044292e668d1a"}, {"y": 663, "x": 960, "u": "https://external-preview.redd.it/ntx23kmazue41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=22cc59be29b9ef05125b90b4119546e7e37a49e1"}, {"y": 746, "x": 1080, "u": "https://external-preview.redd.it/ntx23kmazue41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6146c9eb466422783cb6dd80d29d903f98294cf4"}], "s": {"y": 1244, "x": 1800, "u": "https://preview.redd.it/ntx23kmazue41.png?width=1800&amp;format=png&amp;auto=webp&amp;s=64c691ceaa09238e2cb71847e40652770e1d3e6a"}, "id": "ntx23kmazue41"}, "sl9pzlp8zue41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 72, "x": 108, "u": "https://external-preview.redd.it/sl9pzlp8zue41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=380234baba8118bd21af328d2bc4d92756f59531"}, {"y": 144, "x": 216, "u": "https://external-preview.redd.it/sl9pzlp8zue41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=6abacc1c66d41ae7afbe0913fd123351adbea3a4"}, {"y": 213, "x": 320, "u": "https://external-preview.redd.it/sl9pzlp8zue41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=ce2e0ea3cdd8db751591690b3678051d601275ad"}, {"y": 427, "x": 640, "u": "https://external-preview.redd.it/sl9pzlp8zue41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=b7283d4c0b408a87949dac566591bf144c368d6c"}, {"y": 641, "x": 960, "u": "https://external-preview.redd.it/sl9pzlp8zue41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=e1faf554851ca034a3520d612249e80973badc08"}, {"y": 721, "x": 1080, "u": "https://external-preview.redd.it/sl9pzlp8zue41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=722732145fa130a560a34140b3ce60b25a68d321"}], "s": {"y": 1204, "x": 1802, "u": "https://preview.redd.it/sl9pzlp8zue41.png?width=1802&amp;format=png&amp;auto=webp&amp;s=e791a5d7fc74f52a3e3bc4a57798f83ddc6b7ba8"}, "id": "sl9pzlp8zue41"}, "y1ca793fzue41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 75, "x": 108, "u": "https://external-preview.redd.it/y1ca793fzue41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=0e8c97c305c829ace2607b11a27fda44ea4584d8"}, {"y": 151, "x": 216, "u": "https://external-preview.redd.it/y1ca793fzue41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=5ed888a7af969ff7bc59bbb6d3ca471b2b96a650"}, {"y": 224, "x": 320, "u": "https://external-preview.redd.it/y1ca793fzue41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=f1c16182d49a0db7f843477f5ef486e5776dcc51"}, {"y": 448, "x": 640, "u": "https://external-preview.redd.it/y1ca793fzue41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=ab32ab93893d804574469dc241ab49e305425a8c"}, {"y": 672, "x": 960, "u": "https://external-preview.redd.it/y1ca793fzue41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=ec86e4ac1a6e8f87716e49f4d4dfd37624323340"}, {"y": 756, "x": 1080, "u": "https://external-preview.redd.it/y1ca793fzue41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=04c52ca22f96e0cf6bce5c1ac5af9c73ad1d53f2"}], "s": {"y": 1260, "x": 1800, "u": "https://preview.redd.it/y1ca793fzue41.png?width=1800&amp;format=png&amp;auto=webp&amp;s=8cd08be25f7feb6d103a29bbbde45ae1432844bf"}, "id": "y1ca793fzue41"}, "jx6ysliczue41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 75, "x": 108, "u": "https://external-preview.redd.it/jx6ysliczue41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=0f060253adfd3945ebfc4d11f9d1ebe072d88fb4"}, {"y": 151, "x": 216, "u": "https://external-preview.redd.it/jx6ysliczue41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=4ad76395a346c5606f737352ff5e080d7798e1a4"}, {"y": 224, "x": 320, "u": "https://external-preview.redd.it/jx6ysliczue41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=39cb7b7e38249a2e4536530ff79e734ed4489930"}, {"y": 448, "x": 640, "u": "https://external-preview.redd.it/jx6ysliczue41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=787d186ba8c5ad7021f9c04eeaf0358b7dda759c"}, {"y": 673, "x": 960, "u": "https://external-preview.redd.it/jx6ysliczue41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=80a7ead967de2e6641523b824d6606408c0cf22c"}, {"y": 757, "x": 1080, "u": "https://external-preview.redd.it/jx6ysliczue41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d3fc6567cf8c9bb380039bbc7abbb7cb78534a38"}], "s": {"y": 1260, "x": 1796, "u": "https://preview.redd.it/jx6ysliczue41.png?width=1796&amp;format=png&amp;auto=webp&amp;s=e4cdbdf1f1ee72fd4652efbd536acbf6afb49320"}, "id": "jx6ysliczue41"}, "lxtntewdzue41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 77, "x": 108, "u": "https://external-preview.redd.it/lxtntewdzue41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1daa8d67fb7efde041cefd721a05036cbb7b477"}, {"y": 154, "x": 216, "u": "https://external-preview.redd.it/lxtntewdzue41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=971faf00a7a8f7fba5255b6b4d026f408f62c741"}, {"y": 228, "x": 320, "u": "https://external-preview.redd.it/lxtntewdzue41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=22ba09d5ce2ac07a0d3d37e9cb0d87eab650662f"}, {"y": 456, "x": 640, "u": "https://external-preview.redd.it/lxtntewdzue41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=ebb69555372cb16e7d9b54503244177b278888c1"}, {"y": 685, "x": 960, "u": "https://external-preview.redd.it/lxtntewdzue41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=497517abaf1e61bb26c28a7e97caf39b58d6b036"}, {"y": 770, "x": 1080, "u": "https://external-preview.redd.it/lxtntewdzue41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8e10c926e1382449b1d206c6b5c58c7c7864cd0e"}], "s": {"y": 1286, "x": 1802, "u": "https://preview.redd.it/lxtntewdzue41.png?width=1802&amp;format=png&amp;auto=webp&amp;s=21e7c86aa5c134524eb1b3066b47995db7e4eeda"}, "id": "lxtntewdzue41"}}, "name": "t3_eymfxu", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 95, "total_awards_received": 1, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 95, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_2": 1}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580829827.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all! About three months ago, &lt;strong&gt;rust-search-extension&lt;/strong&gt; got a pretty good first impression in &lt;a href=\"https://www.reddit.com/r/rust/comments/dp1ru6/i_published_a_handy_chromefirefox_extension_to/\"&gt;this reddit post&lt;/a&gt;. Now, I bring a brand-new version of &lt;strong&gt;rust-search-extension&lt;/strong&gt; to all of you!&lt;/p&gt;\n\n&lt;p&gt;Here are the major features:&lt;/p&gt;\n\n&lt;h2&gt;Supports search std docs&lt;/h2&gt;\n\n&lt;p&gt;Offline mode is supported.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/sl9pzlp8zue41.png?width=1802&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=e791a5d7fc74f52a3e3bc4a57798f83ddc6b7ba8\"&gt;https://preview.redd.it/sl9pzlp8zue41.png?width=1802&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=e791a5d7fc74f52a3e3bc4a57798f83ddc6b7ba8&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Supports search top 10K crates&lt;/h2&gt;\n\n&lt;p&gt;We build top 10K crates (35+k in total on crates.io) index hourly to help you search crates instantly. You can open the popup page to sync the latest crates index automatically.&lt;/p&gt;\n\n&lt;p&gt;What more, you can prefix an &lt;strong&gt;!&lt;/strong&gt; (exclamation mark) before the keyword to search crates exclusively! &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/ntx23kmazue41.png?width=1800&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=64c691ceaa09238e2cb71847e40652770e1d3e6a\"&gt;https://preview.redd.it/ntx23kmazue41.png?width=1800&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=64c691ceaa09238e2cb71847e40652770e1d3e6a&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Supports search doc with type mode&lt;/h2&gt;\n\n&lt;p&gt;You can prefix a type to get the exclusive search result. Those type keywords including:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;mod&lt;/li&gt;\n&lt;li&gt;struct&lt;/li&gt;\n&lt;li&gt;enum&lt;/li&gt;\n&lt;li&gt;fn&lt;/li&gt;\n&lt;li&gt;trait&lt;/li&gt;\n&lt;li&gt;type&lt;/li&gt;\n&lt;li&gt;static&lt;/li&gt;\n&lt;li&gt;macro&lt;/li&gt;\n&lt;li&gt;const For example, &lt;code&gt;fn:asref&lt;/code&gt; to search function or &lt;code&gt;trait:iterator&lt;/code&gt; to search trait. &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/jx6ysliczue41.png?width=1796&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=e4cdbdf1f1ee72fd4652efbd536acbf6afb49320\"&gt;https://preview.redd.it/jx6ysliczue41.png?width=1796&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=e4cdbdf1f1ee72fd4652efbd536acbf6afb49320&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Supports search builtin attributes&lt;/h2&gt;\n\n&lt;p&gt;Search builtin attributes (such as &lt;code&gt;derive&lt;/code&gt;, &lt;code&gt;non_exhaustive&lt;/code&gt;) are also supported, by default, the result is mixed with other related docs or crates though.&lt;/p&gt;\n\n&lt;p&gt;If you prefer to search attribute exclusively, prefix a &lt;strong&gt;#&lt;/strong&gt; (pound sign) before the keyword to narrow the result. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/lxtntewdzue41.png?width=1802&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=21e7c86aa5c134524eb1b3066b47995db7e4eeda\"&gt;https://preview.redd.it/lxtntewdzue41.png?width=1802&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=21e7c86aa5c134524eb1b3066b47995db7e4eeda&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Supports search error codes&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/y1ca793fzue41.png?width=1800&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=8cd08be25f7feb6d103a29bbbde45ae1432844bf\"&gt;https://preview.redd.it/y1ca793fzue41.png?width=1800&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=8cd08be25f7feb6d103a29bbbde45ae1432844bf&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Brand-new official website&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=\"https://rust-search-extension.now.sh\"&gt;https://rust-search-extension.now.sh&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Github&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;rust-search-extension&lt;/strong&gt; is open-sourced on Github (&lt;a href=\"https://github.com/Folyd/rust-search-extension\"&gt;https://github.com/Folyd/rust-search-extension&lt;/a&gt;), welcome to submit issue or PR!&lt;/p&gt;\n\n&lt;h1&gt;Installation&lt;/h1&gt;\n\n&lt;p&gt;- &lt;a href=\"https://chrome.google.com/webstore/detail/rust-search-extension/ennpfpdlaclocpomkiablnmbppdnlhoh\"&gt;Chrome Web Store&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;- &lt;a href=\"https://addons.mozilla.org/en-US/firefox/addon/rust-search-extension/\"&gt;Firefox&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"count": 1, "is_enabled": true, "subreddit_id": null, "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.", "end_date": null, "award_sub_type": "GLOBAL", "coin_reward": 100, "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png", "days_of_premium": 7, "is_new": false, "id": "gid_2", "icon_height": 512, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png", "width": 128, "height": 128}], "days_of_drip_extension": 0, "award_type": "global", "start_date": null, "coin_price": 500, "icon_width": 512, "subreddit_coin_reward": 0, "name": "Gold"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eymfxu", "is_robot_indexable": true, "report_reasons": null, "author": "Folyd", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eymfxu/announcing_rustsearchextension_v07_search_std/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/eymfxu/announcing_rustsearchextension_v07_search_std/", "subreddit_subscribers": 88881, "created_utc": 1580801027.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_14tzl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ ABI: Now or Never", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eydy51", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 188, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 188, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580792750.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "open-std.org", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eydy51", "is_robot_indexable": true, "report_reasons": null, "author": "JoshTriplett", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eydy51/c_abi_now_or_never/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1863r1.pdf", "subreddit_subscribers": 88881, "created_utc": 1580763950.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_14tzl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "highlight-stderr: Run a command and highlight its stderr, preserving the order of stdout and stderr", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eyj15s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 54, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 54, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580813212.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eyj15s", "is_robot_indexable": true, "report_reasons": null, "author": "JoshTriplett", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eyj15s/highlightstderr_run_a_command_and_highlight_its/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/joshtriplett/highlight-stderr", "subreddit_subscribers": 88881, "created_utc": 1580784412.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "[crates.io](https://crates.io/crates/const-buffer)\n\n[docs.rs](https://docs.rs/const-buffer/0.1.0/const_buffer/)\n\n[GitHub](https://github.com/timvermeulen/const-buffer)\n\n`ConstBuffer&lt;T, N&gt;` is a block of memory `N` times the size of `T` that you can read from and write to arbitrarily. It's essentially a glorified wrapper around `[MaybeUninit&lt;T&gt;; N]`.\n\nMost const generics `Vec`\\-like types that have been going around store either a `MaybeUninit&lt;[T; N]&gt;` or `[MaybeUninit&lt;T&gt;; N]` and use lots of pointer arithmetic in order to do reads and writes. This crate is an attempt to make it easier and less error-prone to write such data structures (it's very appropriate for ring buffers, too). The source code is very simple, but it improves readability significantly. The [docs.rs](https://docs.rs/const-buffer/0.1.0/const_buffer/) page has a very basic example of what using it is like.\n\nI would appreciate any feedback you might have, and please don't hesitate to open issues or submit PRs.", "author_fullname": "t2_2sg0l7pi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My first crate: const-buffer, a fixed-capacity memory buffer allocated on the stack using const generics", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eyjoqk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580816094.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://crates.io/crates/const-buffer\"&gt;crates.io&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://docs.rs/const-buffer/0.1.0/const_buffer/\"&gt;docs.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/timvermeulen/const-buffer\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ConstBuffer&amp;lt;T, N&amp;gt;&lt;/code&gt; is a block of memory &lt;code&gt;N&lt;/code&gt; times the size of &lt;code&gt;T&lt;/code&gt; that you can read from and write to arbitrarily. It&amp;#39;s essentially a glorified wrapper around &lt;code&gt;[MaybeUninit&amp;lt;T&amp;gt;; N]&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Most const generics &lt;code&gt;Vec&lt;/code&gt;-like types that have been going around store either a &lt;code&gt;MaybeUninit&amp;lt;[T; N]&amp;gt;&lt;/code&gt; or &lt;code&gt;[MaybeUninit&amp;lt;T&amp;gt;; N]&lt;/code&gt; and use lots of pointer arithmetic in order to do reads and writes. This crate is an attempt to make it easier and less error-prone to write such data structures (it&amp;#39;s very appropriate for ring buffers, too). The source code is very simple, but it improves readability significantly. The &lt;a href=\"https://docs.rs/const-buffer/0.1.0/const_buffer/\"&gt;docs.rs&lt;/a&gt; page has a very basic example of what using it is like.&lt;/p&gt;\n\n&lt;p&gt;I would appreciate any feedback you might have, and please don&amp;#39;t hesitate to open issues or submit PRs.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eyjoqk", "is_robot_indexable": true, "report_reasons": null, "author": "tim_vermeulen", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eyjoqk/my_first_crate_constbuffer_a_fixedcapacity_memory/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/eyjoqk/my_first_crate_constbuffer_a_fixedcapacity_memory/", "subreddit_subscribers": 88881, "created_utc": 1580787294.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_z32qj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rust Analyzer Changelog #10", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey8twg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 168, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 168, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580772959.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rust-analyzer.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey8twg", "is_robot_indexable": true, "report_reasons": null, "author": "Geob-o-matic", "discussion_type": null, "num_comments": 24, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/ey8twg/rust_analyzer_changelog_10/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rust-analyzer.github.io/thisweek/2020/02/03/changelog-10.html", "subreddit_subscribers": 88881, "created_utc": 1580744159.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_119tt0qn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing async-std v1.5.0", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ey98zw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 122, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 122, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580774694.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "async-std \u00b7 tide \u00b7 surf", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ey98zw", "is_robot_indexable": true, "report_reasons": null, "author": "yoshuawuyts1", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/ey98zw/announcing_asyncstd_v150/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/async-rs/async-std/releases/tag/v1.5.0", "subreddit_subscribers": 88881, "created_utc": 1580745894.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "https://github.com/dsherret/dprint\n\nRecently, [Deno replaced](https://github.com/denoland/deno/pull/3820) the prettier plugin for its built-in formatter with dprint.", "author_fullname": "t2_fbnwb0k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "dprint - JS, Typescript and JSONC formatter written in Rust", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eyncld", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580835765.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/dsherret/dprint\"&gt;https://github.com/dsherret/dprint&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Recently, &lt;a href=\"https://github.com/denoland/deno/pull/3820\"&gt;Deno replaced&lt;/a&gt; the prettier plugin for its built-in formatter with dprint.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eyncld", "is_robot_indexable": true, "report_reasons": null, "author": "vargwin", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eyncld/dprint_js_typescript_and_jsonc_formatter_written/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/eyncld/dprint_js_typescript_and_jsonc_formatter_written/", "subreddit_subscribers": 88881, "created_utc": 1580806965.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "I've been exploring soundness issues in window creation on Windows, and have found a bunch. A particularly common one (it might exist in all existing code) is use-after-free when `DestroyWindow` is called inside a window procedure, causing a drop in the reentrant call.\n\nPartly to document this, and partly to make a good basis for experimentation and partly to explore whether there's appetite for cross-ecosystem low level infrastructure, I've created the [win-win](https://crates.io/crates/win-win) crate.\n\nIn my experience, UI code tends to play especially fast and loose with soundness, with lots of lifetime and thread safety issues. Also, the lower levels were done in a time predating our modern understanding of safety. I believe it's possible to do better, to build stuff on a sound foundation, then use the safety properties of Rust at the higher levels.", "author_fullname": "t2_34za6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "win-win: semi-opinionated for window creation in Windows", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eyco38", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 55, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 55, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580788105.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been exploring soundness issues in window creation on Windows, and have found a bunch. A particularly common one (it might exist in all existing code) is use-after-free when &lt;code&gt;DestroyWindow&lt;/code&gt; is called inside a window procedure, causing a drop in the reentrant call.&lt;/p&gt;\n\n&lt;p&gt;Partly to document this, and partly to make a good basis for experimentation and partly to explore whether there&amp;#39;s appetite for cross-ecosystem low level infrastructure, I&amp;#39;ve created the &lt;a href=\"https://crates.io/crates/win-win\"&gt;win-win&lt;/a&gt; crate.&lt;/p&gt;\n\n&lt;p&gt;In my experience, UI code tends to play especially fast and loose with soundness, with lots of lifetime and thread safety issues. Also, the lower levels were done in a time predating our modern understanding of safety. I believe it&amp;#39;s possible to do better, to build stuff on a sound foundation, then use the safety properties of Rust at the higher levels.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "xi \u00b7 synthesize \u00b7 druid", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eyco38", "is_robot_indexable": true, "report_reasons": null, "author": "raphlinus", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/eyco38/winwin_semiopinionated_for_window_creation_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/eyco38/winwin_semiopinionated_for_window_creation_in/", "subreddit_subscribers": 88881, "created_utc": 1580759305.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "I wrote a blog post last week on importing Rust WebAssembly functions inside a JavaFX project. I have investigated this week how to use the Java Native Interface directly on a Rust dylib and compared the two approaches in convenience and speed.\n\n[http://vegapit.com/article/export-rust-java-jni-webassembly-comparison](http://vegapit.com/article/export-rust-java-jni-webassembly-comparison)", "author_fullname": "t2_3xj3tchm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Export Rust functions to Java using JNI (WebAssembly comparison)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_eyppst", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1580850123.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote a blog post last week on importing Rust WebAssembly functions inside a JavaFX project. I have investigated this week how to use the Java Native Interface directly on a Rust dylib and compared the two approaches in convenience and speed.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://vegapit.com/article/export-rust-java-jni-webassembly-comparison\"&gt;http://vegapit.com/article/export-rust-java-jni-webassembly-comparison&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eyppst", "is_robot_indexable": true, "report_reasons": null, "author": "vegapit", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eyppst/export_rust_functions_to_java_using_jni/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/eyppst/export_rust_functions_to_java_using_jni/", "subreddit_subscribers": 88881, "created_utc": 1580821323.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_3efrh2zn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learning Rust: Memory, Ownership and Borrowing", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_eyepht", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/8M0QfLUDaaA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Learning Rust: Memory, Ownership and Borrowing", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/8M0QfLUDaaA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "YouCodeThings", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/8M0QfLUDaaA/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UC0yCXVwW6FdDQGYA-3OWXxw"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/8M0QfLUDaaA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/eyepht", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1580795512.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "eyepht", "is_robot_indexable": true, "report_reasons": null, "author": "swamso", "discussion_type": null, "num_comments": 3, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/eyepht/learning_rust_memory_ownership_and_borrowing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=8M0QfLUDaaA", "subreddit_subscribers": 88881, "created_utc": 1580766712.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Learning Rust: Memory, Ownership and Borrowing", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/8M0QfLUDaaA?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "YouCodeThings", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/8M0QfLUDaaA/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UC0yCXVwW6FdDQGYA-3OWXxw"}}, "is_video": false}}], "after": "t3_eyepht", "before": null}}