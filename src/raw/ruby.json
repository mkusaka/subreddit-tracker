{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_wjv56", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Scalable Concurrency for Ruby 3", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_jcg8cu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 42, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Y29SSOS4UOc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "[EN] Don't Wait For Me! Scalable Concurrency for Ruby 3! / Samuel Williams @ioquatix", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Y29SSOS4UOc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "RubyKaigi", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/Y29SSOS4UOc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCBSg5zH-VFJ42BGQFk4VH2A"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Y29SSOS4UOc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/jcg8cu", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 42, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/FuUsn8bNaxgEYd7GZ32m14cUI-1CbxibzmF9hf2RH6Y.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1602904444.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=Y29SSOS4UOc", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/hil6r-ZeUM6IqsrtipvIA5pC_8NUtv0bcwKfp74ttqg.jpg?auto=webp&amp;s=1857c84e28bba58af0b732ba6ca6dc0df987c61d", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/hil6r-ZeUM6IqsrtipvIA5pC_8NUtv0bcwKfp74ttqg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=614d4f6ca57ad51b69bbfd701eb14700f1e5a9bc", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/hil6r-ZeUM6IqsrtipvIA5pC_8NUtv0bcwKfp74ttqg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0ae70c2cf202d5146122d4551b4032068a29b7e3", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/hil6r-ZeUM6IqsrtipvIA5pC_8NUtv0bcwKfp74ttqg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=721cc274cd1d02ce03d06500e012993987a9a83f", "width": 320, "height": 240}], "variants": {}, "id": "tQaBkoehGOA-BHdQxbIguyW9nj4g0UT4WnlZT-swe70"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jcg8cu", "is_robot_indexable": true, "report_reasons": null, "author": "ahmad_musaffa", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jcg8cu/scalable_concurrency_for_ruby_3/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=Y29SSOS4UOc", "subreddit_subscribers": 67869, "created_utc": 1602875644.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "[EN] Don't Wait For Me! Scalable Concurrency for Ruby 3! / Samuel Williams @ioquatix", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Y29SSOS4UOc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "RubyKaigi", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/Y29SSOS4UOc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCBSg5zH-VFJ42BGQFk4VH2A"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_5gzsphtu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "\u201cHow I generated incomes as a web developer without working as a freelancer\u201d", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": true, "name": "t3_jcuube", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": true, "thumbnail": "https://b.thumbs.redditmedia.com/eJXIdiDR6cpAAxnF-3SyCqEUuVU3cHLnDL64MkEARRU.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1602968986.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/the-developers-journey/my-3-revenue-streams-as-a-developer-without-freelance-work-c5135dfa515d", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/_axnf0iVgRIbNdXpMmSa4d5XOejyg_O8t6jyiH0Koh0.jpg?auto=webp&amp;s=b45c6dfcbaed14a9ada9dc75af13b38481bbcbe0", "width": 1200, "height": 800}, "resolutions": [{"url": "https://external-preview.redd.it/_axnf0iVgRIbNdXpMmSa4d5XOejyg_O8t6jyiH0Koh0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0dcedf3de83605c3f181eb26de55364193724b80", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/_axnf0iVgRIbNdXpMmSa4d5XOejyg_O8t6jyiH0Koh0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fa006489aa9f23d06e4b396c2092be1e538feb30", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/_axnf0iVgRIbNdXpMmSa4d5XOejyg_O8t6jyiH0Koh0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ceb0a8c2f0497ab3ab43f1050ce7e451295d2df2", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/_axnf0iVgRIbNdXpMmSa4d5XOejyg_O8t6jyiH0Koh0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=af9a9525a6ba1e72d93d5dc16b80f74f7c638c7b", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/_axnf0iVgRIbNdXpMmSa4d5XOejyg_O8t6jyiH0Koh0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=26d665e9c8fe00d173d53f2f01eaf9dd90d33475", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/_axnf0iVgRIbNdXpMmSa4d5XOejyg_O8t6jyiH0Koh0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a5d352fccbc630c473368b55720f350b5fcab9ff", "width": 1080, "height": 720}], "variants": {}, "id": "bQ-_79DQvkCSEz-UqXLQMlJ52pHIIxKPsqfdtS7rgWI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jcuube", "is_robot_indexable": true, "report_reasons": null, "author": "PowerOfLove1985", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jcuube/how_i_generated_incomes_as_a_web_developer/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/the-developers-journey/my-3-revenue-streams-as-a-developer-without-freelance-work-c5135dfa515d", "subreddit_subscribers": 67869, "created_utc": 1602940186.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_bu67h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "football-to-sqlite tool - load / read football.txt match datafiles into a sqlite database", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": true, "name": "t3_jcuhyl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/RFnNDoWewPgTIpzzGz3GmS1TZXgpsaPM8V4gpIhCa5s.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1602967531.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/sportdb/football.db/tree/master/football-to-sqlite", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?auto=webp&amp;s=fcfeb2c7ed5e8865543dc1e8389788c267751203", "width": 256, "height": 256}, "resolutions": [{"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a267236eaf74e37372b928904a5056062f51b220", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/9YvjyBapF-h-aEYXj8w94cMKiNXZG6F9Q1skUMHNkHA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fae722694a3d6d2f6053b6d843ac48e65b9b93f8", "width": 216, "height": 216}], "variants": {}, "id": "8ZTcnSVObHBt8VFL60JctEY-J_urvNxJK1UL_K1j7Ig"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jcuhyl", "is_robot_indexable": true, "report_reasons": null, "author": "geraldbauer", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jcuhyl/footballtosqlite_tool_load_read_footballtxt_match/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/sportdb/football.db/tree/master/football-to-sqlite", "subreddit_subscribers": 67869, "created_utc": 1602938731.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lc0kps6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Error Handling in Ruby: Part I", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 71, "top_awarded_type": null, "hide_score": false, "name": "t3_jcsa2q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/ccCMej0UHIUQ6OqDYBlQ8zKQj1ZyNw6qRwQE3QVX6_g.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1602956448.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/rubycademy/error-handling-in-ruby-part-i-557898185e2f", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/qY2P6hzr04NbklgvT7LXRRveaHVtwlWw17liYiBlQGw.jpg?auto=webp&amp;s=4f646e9f299610d3c7610d9f37f8cf16f8d8d298", "width": 1049, "height": 536}, "resolutions": [{"url": "https://external-preview.redd.it/qY2P6hzr04NbklgvT7LXRRveaHVtwlWw17liYiBlQGw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c8058e793018f2753b3f95827b6407187e333af5", "width": 108, "height": 55}, {"url": "https://external-preview.redd.it/qY2P6hzr04NbklgvT7LXRRveaHVtwlWw17liYiBlQGw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=327616ce06179cd541180f516e631806915b23f4", "width": 216, "height": 110}, {"url": "https://external-preview.redd.it/qY2P6hzr04NbklgvT7LXRRveaHVtwlWw17liYiBlQGw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d93a76646a940ced65cc7bee3e5348c5f3407d65", "width": 320, "height": 163}, {"url": "https://external-preview.redd.it/qY2P6hzr04NbklgvT7LXRRveaHVtwlWw17liYiBlQGw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f06fff3d4973fd7fb67dd538dfd2c08dd9a8d9d7", "width": 640, "height": 327}, {"url": "https://external-preview.redd.it/qY2P6hzr04NbklgvT7LXRRveaHVtwlWw17liYiBlQGw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c63dfb6c6ecd3661e679e32bb40b664e48bb5d52", "width": 960, "height": 490}], "variants": {}, "id": "tVK-yoLMkWsUNpWhNj0u7Dg5s2YDnkvtICyBjza7dIU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jcsa2q", "is_robot_indexable": true, "report_reasons": null, "author": "mehdifarsi", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jcsa2q/error_handling_in_ruby_part_i/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/rubycademy/error-handling-in-ruby-part-i-557898185e2f", "subreddit_subscribers": 67869, "created_utc": 1602927648.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hey so I just found out that C#9 is in the makings and I saw this snippet\n\nhttps://preview.redd.it/gb2bcogj1jt51.png?width=381&amp;format=png&amp;auto=webp&amp;s=c83cd5d43ddbb206eb581e9ca784bbdc1c86d221\n\nIs there any chance I'll get to write ruby like that? (Or is there a way to write code like that that I'm not aware of?)", "author_fullname": "t2_1dvf4ii6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "relational match pattern?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 52, "top_awarded_type": null, "hide_score": false, "media_metadata": {"gb2bcogj1jt51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 40, "x": 108, "u": "https://preview.redd.it/gb2bcogj1jt51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=e5f2227d4f84b57f2487d297953aab07d158ca3d"}, {"y": 80, "x": 216, "u": "https://preview.redd.it/gb2bcogj1jt51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=a5b59c6d2b105f50e2309094d4fbb6ed199cb88f"}, {"y": 119, "x": 320, "u": "https://preview.redd.it/gb2bcogj1jt51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=bc024c8bfc69c11ab240e4a24c1a82e4f89d0996"}], "s": {"y": 142, "x": 381, "u": "https://preview.redd.it/gb2bcogj1jt51.png?width=381&amp;format=png&amp;auto=webp&amp;s=c83cd5d43ddbb206eb581e9ca784bbdc1c86d221"}, "id": "gb2bcogj1jt51"}}, "name": "t3_jciwww", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/riWaqVpZgObSLKyX7Scm4tDA4bGh-8A6iN8IvcWfs_A.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602913519.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey so I just found out that C#9 is in the makings and I saw this snippet&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/gb2bcogj1jt51.png?width=381&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c83cd5d43ddbb206eb581e9ca784bbdc1c86d221\"&gt;https://preview.redd.it/gb2bcogj1jt51.png?width=381&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c83cd5d43ddbb206eb581e9ca784bbdc1c86d221&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Is there any chance I&amp;#39;ll get to write ruby like that? (Or is there a way to write code like that that I&amp;#39;m not aware of?)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jciwww", "is_robot_indexable": true, "report_reasons": null, "author": "jaacko_torus", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jciwww/relational_match_pattern/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jciwww/relational_match_pattern/", "subreddit_subscribers": 67869, "created_utc": 1602884719.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_zmb2u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Guide to Reactive Rails", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jc5k8g", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 30, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 30, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/0_a-u-7ALoCaH5ZvgmmUxULm20wXX1_mAjfB6kJzJ1E.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1602862415.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/obie/guide-to-reactive-rails", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/gnXbdzTWHBMD3-hSQ5w1bGGWD23NJMaEIzgURMFVKxE.jpg?auto=webp&amp;s=ab569bda371fcf24f8d04b54c372e9e85224c52d", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/gnXbdzTWHBMD3-hSQ5w1bGGWD23NJMaEIzgURMFVKxE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a41f9ccd2ddf9f55670f341dd5c4a3ae59c0465e", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/gnXbdzTWHBMD3-hSQ5w1bGGWD23NJMaEIzgURMFVKxE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=201b9feb9c8b6c614728986faff57bf0c25e6240", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/gnXbdzTWHBMD3-hSQ5w1bGGWD23NJMaEIzgURMFVKxE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1f5af7227fb90f344ca313ffe0c6de07ca131da0", "width": 320, "height": 320}], "variants": {}, "id": "6l8K_kDmqli96TViniWMfmvlKRnR4wV-_gGJcqmoCN8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc5k8g", "is_robot_indexable": true, "report_reasons": null, "author": "geospeck", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jc5k8g/guide_to_reactive_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/obie/guide-to-reactive-rails", "subreddit_subscribers": 67869, "created_utc": 1602833615.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I have a library in Rust which I want to use in Ruby via \\`ffi\\` gem. A Rust library has got some functions that operate with pure Rust strings.\n\n&amp;#x200B;\n\nIn C++ a Rust string, if it was exported from Rust library, would be represented as follows:\n\n    \n        typedef struct {\n          const char* content;\n          uint32_t len;\n        } rust_string_t;\n\nIn Ruby I do this:\n\n          class RustString &lt; FFI::Struct\n            layout\n              :content, :string,\n              :len, :uint32\n          end\n\n&amp;#x200B;\n\nBut I also will need to convert normal Ruby strings to \\`RustString\\` back and forth. How would I do it? \n\n&amp;#x200B;\n\n        def send_str_to_rust_func1(s1)\n          rs1 = RustString.new\n          rs1.content = s1\n          rs1.len = s1.length # should I additional 1 to the  length ?\n    \n          # [......]\n        end\n\nand\n\n        # returns string\n        def get_str_from_rust_func2\n          r_str = get_str_data_from_rust()\n          # should I return r_str as is?\n        end\n\n&amp;#x200B;\n\nAlso, do I have to add 1 to the length of a string when converting to, or from, if at all?", "author_fullname": "t2_854qnyc0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to work with strings in Ruby to send to / receive from a Rust library, via FFI?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jcbx8z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602891055.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a library in Rust which I want to use in Ruby via `ffi` gem. A Rust library has got some functions that operate with pure Rust strings.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;In C++ a Rust string, if it was exported from Rust library, would be represented as follows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    typedef struct {\n      const char* content;\n      uint32_t len;\n    } rust_string_t;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In Ruby I do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;      class RustString &amp;lt; FFI::Struct\n        layout\n          :content, :string,\n          :len, :uint32\n      end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;But I also will need to convert normal Ruby strings to `RustString` back and forth. How would I do it? &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    def send_str_to_rust_func1(s1)\n      rs1 = RustString.new\n      rs1.content = s1\n      rs1.len = s1.length # should I additional 1 to the  length ?\n\n      # [......]\n    end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    # returns string\n    def get_str_from_rust_func2\n      r_str = get_str_data_from_rust()\n      # should I return r_str as is?\n    end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Also, do I have to add 1 to the length of a string when converting to, or from, if at all?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jcbx8z", "is_robot_indexable": true, "report_reasons": null, "author": "kordinashiku", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jcbx8z/how_to_work_with_strings_in_ruby_to_send_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jcbx8z/how_to_work_with_strings_in_ruby_to_send_to/", "subreddit_subscribers": 67869, "created_utc": 1602862255.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I made my first gem this week and wanted to share it with you. I made a gem that helps seed image URLs into your database for you can use them in image tags to make your life easier. [seed_pic](https://rubygems.org/gems/seed_pic)", "author_fullname": "t2_wp6s9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Seed_pic the gem to make seeding images easy", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jcaayn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602885589.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I made my first gem this week and wanted to share it with you. I made a gem that helps seed image URLs into your database for you can use them in image tags to make your life easier. &lt;a href=\"https://rubygems.org/gems/seed_pic\"&gt;seed_pic&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jcaayn", "is_robot_indexable": true, "report_reasons": null, "author": "Nurseenigma", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jcaayn/seed_pic_the_gem_to_make_seeding_images_easy/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jcaayn/seed_pic_the_gem_to_make_seeding_images_easy/", "subreddit_subscribers": 67869, "created_utc": 1602856789.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello,  I have split the hubba github analytics gem into two, that is, [hubba](https://github.com/rubycoco/git/tree/master/hubba) and [hubba-reports](https://github.com/rubycoco/git/tree/master/hubba-reports) for easier (re)use and split the data gathering / collecting via github api calls and the report generation. Anyways, I have added a [new language report](https://github.com/rubycoco/git/blob/master/hubba-reports/lib/hubba/reports/reports/languages.rb) that lists all your languages used by char / bytes count and by number of repos. See [LANGUAGES.md](https://github.com/yorobot/backup/blob/master/LANGUAGES.md) as an example. Happy data crunching with ruby. Cheers. Prost. \n\nPS: Know any other alternative github scripts / gems, please tell.", "author_fullname": "t2_bu67h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "github analytics with the hubba-reports gem - What are your most used languages (in char / bytes count)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jc7zvy", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1602875824.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,  I have split the hubba github analytics gem into two, that is, &lt;a href=\"https://github.com/rubycoco/git/tree/master/hubba\"&gt;hubba&lt;/a&gt; and &lt;a href=\"https://github.com/rubycoco/git/tree/master/hubba-reports\"&gt;hubba-reports&lt;/a&gt; for easier (re)use and split the data gathering / collecting via github api calls and the report generation. Anyways, I have added a &lt;a href=\"https://github.com/rubycoco/git/blob/master/hubba-reports/lib/hubba/reports/reports/languages.rb\"&gt;new language report&lt;/a&gt; that lists all your languages used by char / bytes count and by number of repos. See &lt;a href=\"https://github.com/yorobot/backup/blob/master/LANGUAGES.md\"&gt;LANGUAGES.md&lt;/a&gt; as an example. Happy data crunching with ruby. Cheers. Prost. &lt;/p&gt;\n\n&lt;p&gt;PS: Know any other alternative github scripts / gems, please tell.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/NGS6lCTVeozxUkFzDoJpU60rfpBx6ZVsf9Bf5SP4ZUw.jpg?auto=webp&amp;s=953b3678c3e8952f4b564dfa707cfd13dd605be5", "width": 256, "height": 256}, "resolutions": [{"url": "https://external-preview.redd.it/NGS6lCTVeozxUkFzDoJpU60rfpBx6ZVsf9Bf5SP4ZUw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=85a053ea9052d55dbc50a6a8e16943767edae04f", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/NGS6lCTVeozxUkFzDoJpU60rfpBx6ZVsf9Bf5SP4ZUw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=761ab3da112907d6886972777cfa8b49ef8ecd01", "width": 216, "height": 216}], "variants": {}, "id": "37oOMmuQfsRF678Qj5bf0kE0590QT2uVorZ9tjX1tnU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jc7zvy", "is_robot_indexable": true, "report_reasons": null, "author": "geraldbauer", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jc7zvy/github_analytics_with_the_hubbareports_gem_what/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jc7zvy/github_analytics_with_the_hubbareports_gem_what/", "subreddit_subscribers": 67869, "created_utc": 1602847024.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I am looking for feedback on the design of a new \"gem\" that I have been working on called [`active_snapshot`](https://github.com/westonganger/active_snapshot)\n\n**Gem:** [`active_snapshot`](https://github.com/westonganger/active_snapshot)\n\n**Description:** Simplified snapshots and restoration for ActiveRecord models and associations with a transparent white-box implementation.\n\nI appreciate your feedback and help.", "author_fullname": "t2_qp0dl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Looking for feedback on a gem I have been working on: active_snapshot", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jbzqju", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1602837095.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am looking for feedback on the design of a new &amp;quot;gem&amp;quot; that I have been working on called &lt;a href=\"https://github.com/westonganger/active_snapshot\"&gt;&lt;code&gt;active_snapshot&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Gem:&lt;/strong&gt; &lt;a href=\"https://github.com/westonganger/active_snapshot\"&gt;&lt;code&gt;active_snapshot&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Description:&lt;/strong&gt; Simplified snapshots and restoration for ActiveRecord models and associations with a transparent white-box implementation.&lt;/p&gt;\n\n&lt;p&gt;I appreciate your feedback and help.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bryW8EmQNJ_xWLrsVn6sRAm8YYSTZ2fcLng3eGeDcEQ.jpg?auto=webp&amp;s=b9da93c8796b302e893bcdb3abd51950e03db255", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/bryW8EmQNJ_xWLrsVn6sRAm8YYSTZ2fcLng3eGeDcEQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=535920d1d37347d94aea9d068b59650cec77c9df", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/bryW8EmQNJ_xWLrsVn6sRAm8YYSTZ2fcLng3eGeDcEQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6845c395f43842bbbd5a8b4ef8ed807f90ee3137", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/bryW8EmQNJ_xWLrsVn6sRAm8YYSTZ2fcLng3eGeDcEQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=061270fee9f7c254596f188cb604c92f14c775fb", "width": 320, "height": 320}], "variants": {}, "id": "6I2mxbTZ8B1F1jPNftG-MWIf60k1Lw7NcJZ2dr6gEU0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jbzqju", "is_robot_indexable": true, "report_reasons": null, "author": "westonganger", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/jbzqju/looking_for_feedback_on_a_gem_i_have_been_working/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/jbzqju/looking_for_feedback_on_a_gem_i_have_been_working/", "subreddit_subscribers": 67869, "created_utc": 1602808295.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jbzqju", "before": null}}