{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nThe Rust-related IRC channels on irc.mozilla.org (click the links to open a web-based IRC client):\n\n - [#rust](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust) (general questions)\n - [#rust-beginners](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-beginners) (beginner questions)\n - [#cargo](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23cargo) (the package manager)\n - [#rust-gamedev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-gamedev) (graphics and video games, and see also [/r/rust_gamedev](https://www.reddit.com/r/rust_gamedev))\n - [#rust-osdev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-osdev) (operating systems and embedded systems)\n - [#rust-webdev](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-webdev) (web development)\n - [#rust-networking](https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;channel=%23rust-networking) (computer networking, and see also [/r/rust_networking](https://www.reddit.com/r/rust_networking))\n\nAlso check out [last week's thread](https://reddit.com/r/rust/comments/ehk18j/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (2/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ekpqp7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578318849.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The Rust-related IRC channels on irc.mozilla.org (click the links to open a web-based IRC client):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust\"&gt;#rust&lt;/a&gt; (general questions)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-beginners\"&gt;#rust-beginners&lt;/a&gt; (beginner questions)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23cargo\"&gt;#cargo&lt;/a&gt; (the package manager)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-gamedev\"&gt;#rust-gamedev&lt;/a&gt; (graphics and video games, and see also &lt;a href=\"https://www.reddit.com/r/rust_gamedev\"&gt;/r/rust_gamedev&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-osdev\"&gt;#rust-osdev&lt;/a&gt; (operating systems and embedded systems)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-webdev\"&gt;#rust-webdev&lt;/a&gt; (web development)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://chat.mibbit.com/?server=irc.mozilla.org%3A%2B6697&amp;amp;amp;channel=%23rust-networking\"&gt;#rust-networking&lt;/a&gt; (computer networking, and see also &lt;a href=\"https://www.reddit.com/r/rust_networking\"&gt;/r/rust_networking&lt;/a&gt;)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/ehk18j/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last week&amp;#39;s thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ekpqp7", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 133, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/ekpqp7/hey_rustaceans_got_an_easy_question_ask_here_22020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/ekpqp7/hey_rustaceans_got_an_easy_question_ask_here_22020/", "subreddit_subscribers": 86019, "created_utc": 1578290049.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Welcome once again to the official /r/rust Who's Hiring thread!\n\nBefore we begin, job-seekers should also remember to peruse [the prior thread](https://www.reddit.com/r/rust/comments/dvxw6u/official_rrust_whos_hiring_thread_for_jobseekers/).\n\nThis thread will be periodically stickied to the top of /r/rust every week, for improved visibility. The thread will be refreshed and posted anew when the next version of Rust releases in six weeks.\n\nPlease adhere to the following rules when posting (adapted from /r/cpp's jobs thread).\n\n#### Rules for individuals:\n\n* Don't create top-level comments; those are for employers.\n* Feel free to reply to top-level comments with on-topic questions.\n* I will create a stickied top-level comment for individuals looking for work.\n* I will create an additional top-level comment for meta discussion.\n\n#### Rules for employers:\n\n* To find individuals seeking work, see the replies to the stickied top-level comment; you will need to click the \"more comments\" link below that comment in order to see them.\n* To make a top-level comment you must be hiring directly; no third-party recruiters.\n* One top-level comment per employer. If you have multiple job openings, please consolidate their descriptions or mention them in replies to your own top-level comment.\n* Proofread your comment after posting it and edit it if necessary to correct mistakes.\n* Please base your comment on the following template:\n\nCOMPANY: *[Company name; please link to your company's website or careers page.]*\n\nTYPE: *[Full time, part time, internship, contract, etc.]*\n\nDESCRIPTION: *[What does your company do, and what are you using Rust for? How much experience are you seeking and what seniority levels are you hiring for? The more details the better.]*\n\nLOCATION: *[Where are your office or offices located? If your workplace language isn't English, please specify it.]*\n\nREMOTE: *[Do you offer the option of working remotely? If so, do you require employees to live in certain areas or time zones?]*\n\nVISA: *[Does your company sponsor visas?]*\n\nCONTACT: *[How can someone get in touch with you?]*", "author_fullname": "t2_7b7l2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Official /r/rust \"Who's Hiring\" thread for job-seekers and job-offerers [Rust 1.40]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ecxd62", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 60, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 60, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1576781033.0, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1576809568.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Welcome once again to the official &lt;a href=\"/r/rust\"&gt;/r/rust&lt;/a&gt; Who&amp;#39;s Hiring thread!&lt;/p&gt;\n\n&lt;p&gt;Before we begin, job-seekers should also remember to peruse &lt;a href=\"https://www.reddit.com/r/rust/comments/dvxw6u/official_rrust_whos_hiring_thread_for_jobseekers/\"&gt;the prior thread&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;This thread will be periodically stickied to the top of &lt;a href=\"/r/rust\"&gt;/r/rust&lt;/a&gt; every week, for improved visibility. The thread will be refreshed and posted anew when the next version of Rust releases in six weeks.&lt;/p&gt;\n\n&lt;p&gt;Please adhere to the following rules when posting (adapted from &lt;a href=\"/r/cpp\"&gt;/r/cpp&lt;/a&gt;&amp;#39;s jobs thread).&lt;/p&gt;\n\n&lt;h4&gt;Rules for individuals:&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Don&amp;#39;t create top-level comments; those are for employers.&lt;/li&gt;\n&lt;li&gt;Feel free to reply to top-level comments with on-topic questions.&lt;/li&gt;\n&lt;li&gt;I will create a stickied top-level comment for individuals looking for work.&lt;/li&gt;\n&lt;li&gt;I will create an additional top-level comment for meta discussion.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h4&gt;Rules for employers:&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;To find individuals seeking work, see the replies to the stickied top-level comment; you will need to click the &amp;quot;more comments&amp;quot; link below that comment in order to see them.&lt;/li&gt;\n&lt;li&gt;To make a top-level comment you must be hiring directly; no third-party recruiters.&lt;/li&gt;\n&lt;li&gt;One top-level comment per employer. If you have multiple job openings, please consolidate their descriptions or mention them in replies to your own top-level comment.&lt;/li&gt;\n&lt;li&gt;Proofread your comment after posting it and edit it if necessary to correct mistakes.&lt;/li&gt;\n&lt;li&gt;Please base your comment on the following template:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;COMPANY: &lt;em&gt;[Company name; please link to your company&amp;#39;s website or careers page.]&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;TYPE: &lt;em&gt;[Full time, part time, internship, contract, etc.]&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;DESCRIPTION: &lt;em&gt;[What does your company do, and what are you using Rust for? How much experience are you seeking and what seniority levels are you hiring for? The more details the better.]&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;LOCATION: &lt;em&gt;[Where are your office or offices located? If your workplace language isn&amp;#39;t English, please specify it.]&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;REMOTE: &lt;em&gt;[Do you offer the option of working remotely? If so, do you require employees to live in certain areas or time zones?]&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;VISA: &lt;em&gt;[Does your company sponsor visas?]&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;CONTACT: &lt;em&gt;[How can someone get in touch with you?]&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ecxd62", "is_robot_indexable": true, "report_reasons": null, "author": "kibwen", "discussion_type": null, "num_comments": 27, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/ecxd62/official_rrust_whos_hiring_thread_for_jobseekers/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/ecxd62/official_rrust_whos_hiring_thread_for_jobseekers/", "subreddit_subscribers": 86019, "created_utc": 1576780768.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Blog: Why Rust? I have a GC!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emyill", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 155, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 155, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578724911.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "llogiq.github.io", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emyill", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 107, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/emyill/blog_why_rust_i_have_a_gc/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://llogiq.github.io/2020/01/10/rustvsgc.html", "subreddit_subscribers": 86019, "created_utc": 1578696111.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "I know some basic stuff from c,c++, and shell scripting. Where should i start with learning rust, im willing to purchase a book or class if that is a good way to start.", "author_fullname": "t2_4oly3hel", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best way to start learning rust.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_en3wjg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578752456.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I know some basic stuff from c,c++, and shell scripting. Where should i start with learning rust, im willing to purchase a book or class if that is a good way to start.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en3wjg", "is_robot_indexable": true, "report_reasons": null, "author": "Mymainissilver2", "discussion_type": null, "num_comments": 16, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/en3wjg/best_way_to_start_learning_rust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/en3wjg/best_way_to_start_learning_rust/", "subreddit_subscribers": 86019, "created_utc": 1578723656.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_htuog", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Here's a PR showing how easy it is to remove a dependency on proc-macro-hack in Rust 1.40", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emwjs1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 56, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 56, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578716389.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emwjs1", "is_robot_indexable": true, "report_reasons": null, "author": "coolreader18", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/emwjs1/heres_a_pr_showing_how_easy_it_is_to_remove_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/RustPython/RustPython/pull/1669/files", "subreddit_subscribers": 86019, "created_utc": 1578687589.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_9v2cm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Proof of Concept: Rust code in Unreal Engine", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emp0su", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 295, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 295, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578679932.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "ejmahler.github.io", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emp0su", "is_robot_indexable": true, "report_reasons": null, "author": "ihcn", "discussion_type": null, "num_comments": 38, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/emp0su/proof_of_concept_rust_code_in_unreal_engine/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://ejmahler.github.io/rust_in_unreal/", "subreddit_subscribers": 86019, "created_utc": 1578651132.0, "num_crossposts": 2, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Full code is available as (short) gists; some of the cruft is to make sure LLVM doesn't optimize the whole example away. Note the timings really only capture the main loop, not the allocations, etc.:\n\nSerial: [https://gist.github.com/rodya-mirov/bb289d58f850cf42dc96e3b058ef024c](https://gist.github.com/rodya-mirov/bb289d58f850cf42dc96e3b058ef024c)\n\nParallel: [https://gist.github.com/rodya-mirov/2a33917371fc88a57171f5c4113d1da7](https://gist.github.com/rodya-mirov/2a33917371fc88a57171f5c4113d1da7)\n\n&amp;#x200B;\n\nBasically the idea is you make a long vector (100 million f64s) and make a new vector to hold it (zeroed out to eliminate resizing noise) and \\`out\\[i\\] = x\\[i\\] + x\\[i\\]\\`.\n\nThe serial version is just a simple loop, and the timing is 180 ms (not including allocation time).\n\nThe parallel version uses a raw mut pointer; it divides it into chunks that aren't too small (65,536 elements), shared between rayon threads (wrapped in an unsafe Sync/Send struct), (unsafe) recast into a mut slice, and then just loop through the chunk and do \\`out\\[i\\] = x\\[i\\] + x\\[i\\]\\` in there.\n\nWith one thread the parallel version also runs in 180ms, so the pointer / casting isn't costing anything relevant. With two threads, it runs in about 130 ms, and with three or more threads it takes about 115 ms.\n\nHowever since this is clear CPU bound I would expect the speedup to be completely linear in the number of threads, at least until we get to the number of cores (I have 4). In particular I would expect 2 threads to get 90 ms, 3 threads to get 60 ms, and 4+ to cap out around 45 ms.\n\n&amp;#x200B;\n\nObviously I'm not getting it, and I'm pretty disappointed. What gives? Is it too much data and I'm maxing out the bus traffic or something? Is there a way to \"unlock\" my multiple cores?", "author_fullname": "t2_yijdt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why does adding more threads only give about a 36% speedup?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_en1slw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578740405.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Full code is available as (short) gists; some of the cruft is to make sure LLVM doesn&amp;#39;t optimize the whole example away. Note the timings really only capture the main loop, not the allocations, etc.:&lt;/p&gt;\n\n&lt;p&gt;Serial: &lt;a href=\"https://gist.github.com/rodya-mirov/bb289d58f850cf42dc96e3b058ef024c\"&gt;https://gist.github.com/rodya-mirov/bb289d58f850cf42dc96e3b058ef024c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Parallel: &lt;a href=\"https://gist.github.com/rodya-mirov/2a33917371fc88a57171f5c4113d1da7\"&gt;https://gist.github.com/rodya-mirov/2a33917371fc88a57171f5c4113d1da7&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Basically the idea is you make a long vector (100 million f64s) and make a new vector to hold it (zeroed out to eliminate resizing noise) and `out[i] = x[i] + x[i]`.&lt;/p&gt;\n\n&lt;p&gt;The serial version is just a simple loop, and the timing is 180 ms (not including allocation time).&lt;/p&gt;\n\n&lt;p&gt;The parallel version uses a raw mut pointer; it divides it into chunks that aren&amp;#39;t too small (65,536 elements), shared between rayon threads (wrapped in an unsafe Sync/Send struct), (unsafe) recast into a mut slice, and then just loop through the chunk and do `out[i] = x[i] + x[i]` in there.&lt;/p&gt;\n\n&lt;p&gt;With one thread the parallel version also runs in 180ms, so the pointer / casting isn&amp;#39;t costing anything relevant. With two threads, it runs in about 130 ms, and with three or more threads it takes about 115 ms.&lt;/p&gt;\n\n&lt;p&gt;However since this is clear CPU bound I would expect the speedup to be completely linear in the number of threads, at least until we get to the number of cores (I have 4). In particular I would expect 2 threads to get 90 ms, 3 threads to get 60 ms, and 4+ to cap out around 45 ms.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Obviously I&amp;#39;m not getting it, and I&amp;#39;m pretty disappointed. What gives? Is it too much data and I&amp;#39;m maxing out the bus traffic or something? Is there a way to &amp;quot;unlock&amp;quot; my multiple cores?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en1slw", "is_robot_indexable": true, "report_reasons": null, "author": "rodyamirov", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/en1slw/why_does_adding_more_threads_only_give_about_a_36/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/en1slw/why_does_adding_more_threads_only_give_about_a_36/", "subreddit_subscribers": 86019, "created_utc": 1578711605.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_gqweh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "withoutboats doing a stream about Pin next Weds the 15th, 16:00 UTC", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emrf7h", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 109, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I\u2019ll be doing a stream about Pin next Wednesday the 15th at 16:00 UTC (17:00 CET, 11:00 EST, 8:00 PST). Thanks &lt;a href=\"https://twitter.com/FerrousSystems?ref_src=twsrc%5Etfw\"&gt;@FerrousSystems&lt;/a&gt; for hosting! &lt;a href=\"https://t.co/86nHNEkkBx\"&gt;https://t.co/86nHNEkkBx&lt;/a&gt;&lt;/p&gt;&amp;mdash; Saoirse Shipwreckt (@withoutboats) &lt;a href=\"https://twitter.com/withoutboats/status/1215626280919621635?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 287}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/withoutboats/status/1215626280919621635", "author_name": "Saoirse Shipwreckt", "height": 287, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I\u2019ll be doing a stream about Pin next Wednesday the 15th at 16:00 UTC (17:00 CET, 11:00 EST, 8:00 PST). Thanks &lt;a href=\"https://twitter.com/FerrousSystems?ref_src=twsrc%5Etfw\"&gt;@FerrousSystems&lt;/a&gt; for hosting! &lt;a href=\"https://t.co/86nHNEkkBx\"&gt;https://t.co/86nHNEkkBx&lt;/a&gt;&lt;/p&gt;&amp;mdash; Saoirse Shipwreckt (@withoutboats) &lt;a href=\"https://twitter.com/withoutboats/status/1215626280919621635?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/withoutboats", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I\u2019ll be doing a stream about Pin next Wednesday the 15th at 16:00 UTC (17:00 CET, 11:00 EST, 8:00 PST). Thanks &lt;a href=\"https://twitter.com/FerrousSystems?ref_src=twsrc%5Etfw\"&gt;@FerrousSystems&lt;/a&gt; for hosting! &lt;a href=\"https://t.co/86nHNEkkBx\"&gt;https://t.co/86nHNEkkBx&lt;/a&gt;&lt;/p&gt;&amp;mdash; Saoirse Shipwreckt (@withoutboats) &lt;a href=\"https://twitter.com/withoutboats/status/1215626280919621635?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/emrf7h", "height": 287}, "link_flair_text": null, "can_mod_post": false, "score": 109, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578694295.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emrf7h", "is_robot_indexable": true, "report_reasons": null, "author": "desiringmachines", "discussion_type": null, "num_comments": 18, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/emrf7h/withoutboats_doing_a_stream_about_pin_next_weds/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/withoutboats/status/1215626280919621635", "subreddit_subscribers": 86019, "created_utc": 1578665495.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/withoutboats/status/1215626280919621635", "author_name": "Saoirse Shipwreckt", "height": 287, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;I\u2019ll be doing a stream about Pin next Wednesday the 15th at 16:00 UTC (17:00 CET, 11:00 EST, 8:00 PST). Thanks &lt;a href=\"https://twitter.com/FerrousSystems?ref_src=twsrc%5Etfw\"&gt;@FerrousSystems&lt;/a&gt; for hosting! &lt;a href=\"https://t.co/86nHNEkkBx\"&gt;https://t.co/86nHNEkkBx&lt;/a&gt;&lt;/p&gt;&amp;mdash; Saoirse Shipwreckt (@withoutboats) &lt;a href=\"https://twitter.com/withoutboats/status/1215626280919621635?ref_src=twsrc%5Etfw\"&gt;January 10, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/withoutboats", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "I am working on a Rust function that will hash a given string, send it using a UdpSocket to a python server. The server should create a file with the hash as a name.\n\nThis is my hashing part:\n\n    let mut hasher: Sha256 = Digest::new();\t\t\n    hasher.input([&amp;counter.to_ne_bytes()[..], filename.as_bytes()].concat());\t\t\n    let output = hasher.result();\t\t\n    println!(\"Output: {:?}\", &amp;output[..]);\n\nThe printed value is:\n\n`Output: [19, 5, 75, 127, 209, 185, 93, 164, 135, 194, 21, 31, 22, 219, 44, 203, 197, 102, 137, 151, 198, 183, 249, 8, 177, 27, 141, 229, 10, 107, 226, 62]`\n\nFrom my understaning the output value is a hexadecimal array. Since the value the server gets is:\n\n`b'\\x13\\x05K\\x7f\\xd1\\xb9]\\xa4\\x87\\xc2\\x15\\x1f\\x16\\xdb,\\xcb\\xc5f\\x89\\x97\\xc6\\xb7\\xf9\\x08\\xb1\\x1b\\x8d\\xe5\\nk\\xe2&gt;'`\n\nwhich posses some non-valid hexadecimal values.\n\nNow if I try to print the hash as a string using\n\n    let mut hash = Vec::new();\t\t\n    for value in &amp;output[..] {\t\t\t\n    hash.push(value.to_owned());}\t\t\n    println!(\"{:?}\", String::from_utf8(hash).unwrap());\n\nThe print line will output an error:\n\n`thread '&lt;unnamed&gt;' panicked at 'called \\`Result::unwrap()\\` on an \\`Err\\` value: FromUtf8Error { bytes: \\[19, 5, 75, 127, 209, 185, 93, 164, 135, 194, 21, 31, 22, 219, 44, 203, 197, 102, 137, 151, 198, 183, 249, 8, 177, 27, 141, 229, 10, 107, 226, 62\\], error: Utf8Error { valid\\_up\\_to: 7, error\\_len: Some(1) } }', src\\\\libcore\\\\result.rs:1192:5note: run with \\`RUST\\_BACKTRACE=1\\` environment variable to display a backtrace.\\`\n\nNow I am not sure I am not correctly hashing the values or if the actual sha2::sha256 function is broken.\n\nIs anyone able to please help me out?", "author_fullname": "t2_lv2beia", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "sha2::sha256 output variable seems to be a not valid decimal value", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_en7fd3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578778250.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am working on a Rust function that will hash a given string, send it using a UdpSocket to a python server. The server should create a file with the hash as a name.&lt;/p&gt;\n\n&lt;p&gt;This is my hashing part:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let mut hasher: Sha256 = Digest::new();     \nhasher.input([&amp;amp;counter.to_ne_bytes()[..], filename.as_bytes()].concat());       \nlet output = hasher.result();       \nprintln!(&amp;quot;Output: {:?}&amp;quot;, &amp;amp;output[..]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The printed value is:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Output: [19, 5, 75, 127, 209, 185, 93, 164, 135, 194, 21, 31, 22, 219, 44, 203, 197, 102, 137, 151, 198, 183, 249, 8, 177, 27, 141, 229, 10, 107, 226, 62]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;From my understaning the output value is a hexadecimal array. Since the value the server gets is:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;b&amp;#39;\\x13\\x05K\\x7f\\xd1\\xb9]\\xa4\\x87\\xc2\\x15\\x1f\\x16\\xdb,\\xcb\\xc5f\\x89\\x97\\xc6\\xb7\\xf9\\x08\\xb1\\x1b\\x8d\\xe5\\nk\\xe2&amp;gt;&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;which posses some non-valid hexadecimal values.&lt;/p&gt;\n\n&lt;p&gt;Now if I try to print the hash as a string using&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let mut hash = Vec::new();      \nfor value in &amp;amp;output[..] {          \nhash.push(value.to_owned());}       \nprintln!(&amp;quot;{:?}&amp;quot;, String::from_utf8(hash).unwrap());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The print line will output an error:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;thread &amp;#39;&amp;lt;unnamed&amp;gt;&amp;#39; panicked at &amp;#39;called \\&lt;/code&gt;Result::unwrap()` on an `Err` value: FromUtf8Error { bytes: [19, 5, 75, 127, 209, 185, 93, 164, 135, 194, 21, 31, 22, 219, 44, 203, 197, 102, 137, 151, 198, 183, 249, 8, 177, 27, 141, 229, 10, 107, 226, 62], error: Utf8Error { valid_up_to: 7, error_len: Some(1) } }&amp;#39;, src\\libcore\\result.rs:1192:5note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.`&lt;/p&gt;\n\n&lt;p&gt;Now I am not sure I am not correctly hashing the values or if the actual sha2::sha256 function is broken.&lt;/p&gt;\n\n&lt;p&gt;Is anyone able to please help me out?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en7fd3", "is_robot_indexable": true, "report_reasons": null, "author": "_TheBatzOne_", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/en7fd3/sha2sha256_output_variable_seems_to_be_a_not/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/en7fd3/sha2sha256_output_variable_seems_to_be_a_not/", "subreddit_subscribers": 86019, "created_utc": 1578749450.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Since the [previous announcement](https://www.reddit.com/r/rust/comments/ej3thz/announcing_postgresquery_write_and_execute_sql/?utm_source=share&amp;utm_medium=web2x) last week I have been studying for exams on and off while working on the next version of [postgres-query](https://github.com/nolanderc/rust-postgres-query). I am very thankful of the feedback in the last post, some of which inspired the two major features in this release: dynamic queries and multi-mapping (see the README and documentation for details).\n\nFor someone who has not previously done any extensive library development, I had some trouble nailing down an API for both of these features. The main issue regarded dynamic queries and parameter bindings. I experimented with having a very basic DSL built around small fragments of queries. This turned out to be a pain to achieve with low run-time overhead (a goal of this crate) due to an explosion in memory allocations.\n\nIn the end, simply using strings was the way to go.  There already exists tools for working with strings efficiently, which reduces the scope of this crate, and it turned out to be much faster, at the expense of some compile-time verification of parameter bindings.\n\nAs always, all and any feedback is welcome!", "author_fullname": "t2_13es4y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing postgres-query 0.3.1: dynamic SQL queries and multi-mapping!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_en7evt", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578778168.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Since the &lt;a href=\"https://www.reddit.com/r/rust/comments/ej3thz/announcing_postgresquery_write_and_execute_sql/?utm_source=share&amp;amp;utm_medium=web2x\"&gt;previous announcement&lt;/a&gt; last week I have been studying for exams on and off while working on the next version of &lt;a href=\"https://github.com/nolanderc/rust-postgres-query\"&gt;postgres-query&lt;/a&gt;. I am very thankful of the feedback in the last post, some of which inspired the two major features in this release: dynamic queries and multi-mapping (see the README and documentation for details).&lt;/p&gt;\n\n&lt;p&gt;For someone who has not previously done any extensive library development, I had some trouble nailing down an API for both of these features. The main issue regarded dynamic queries and parameter bindings. I experimented with having a very basic DSL built around small fragments of queries. This turned out to be a pain to achieve with low run-time overhead (a goal of this crate) due to an explosion in memory allocations.&lt;/p&gt;\n\n&lt;p&gt;In the end, simply using strings was the way to go.  There already exists tools for working with strings efficiently, which reduces the scope of this crate, and it turned out to be much faster, at the expense of some compile-time verification of parameter bindings.&lt;/p&gt;\n\n&lt;p&gt;As always, all and any feedback is welcome!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "en7evt", "is_robot_indexable": true, "report_reasons": null, "author": "Qwe500", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/en7evt/announcing_postgresquery_031_dynamic_sql_queries/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/en7evt/announcing_postgresquery_031_dynamic_sql_queries/", "subreddit_subscribers": 86019, "created_utc": 1578749368.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_oklqu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rust mail client lightning talk with cliffhanger", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emx6j0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/-Om6NHyqAeU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Email GUI with RUST", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/-Om6NHyqAeU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Linux App Summit", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/-Om6NHyqAeU/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCjSsbz2TDxIxBEarbDzNQ4w"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/-Om6NHyqAeU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/emx6j0", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1578719149.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emx6j0", "is_robot_indexable": true, "report_reasons": null, "author": "vandenoever", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/emx6j0/rust_mail_client_lightning_talk_with_cliffhanger/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=-Om6NHyqAeU", "subreddit_subscribers": 86019, "created_utc": 1578690349.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Email GUI with RUST", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/-Om6NHyqAeU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Linux App Summit", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/-Om6NHyqAeU/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCjSsbz2TDxIxBEarbDzNQ4w"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "**TL;DR.** Requesting comments on the idea of creating a\nfull-fledged wrapper to [CGAL](//www.cgal.org/).\n\n## Motivation\n\nI've been toying with the idea of creating a CGAL wrapper\nin Rust. Just seeking thoughts from the larger community\nhere on possible road-blocks in creating and maintaining\nsuch a wrapper.\n\n- **Why bindings?** [CGAL](//www.cgal.org/) is a fairly\n  comprehensive collection of comp. geom. algos exposed as a\n  C++ library.  To quote their webpage:\n\n  &gt; The library offers data structures and algorithms like\n  &gt; triangulations, Voronoi diagrams, Boolean operations on\n  &gt; polygons and polyhedra, point set processing,\n  &gt; arrangements of curves, surface and volume mesh\n  &gt; generation, geometry processing, alpha shapes, convex\n  &gt; hull algorithms, shape reconstruction, AABB and KD\n  &gt; trees...\n\n  Further, it is actively developed, and has accrued a lot\n  of insights in the course of its development.\n  Re-implementing such a collection definitely seems\n  wasteful, if not impossible.\n\n- **Why Rust?** Rust's powerful type-system allows us to\n  modularize naturally, and focus on a specific task a hand.\n  IMHO, it is one of the best languages to create algo.\n  applications in.\n\nAccess to all of CGAL's packages seems quite empowering to\nanyone trying to create comp. geom. application. My own\ninterests are in a small subset of CGAL, but the thought of\na full-fledged bindings library seems to be worthy of a\ndiscussion, to say the least.\n\n## State of Rust Ecosystem\n\nI'm unaware of a comprehensive CGAL like alternative in\nRust. Listing what I have found in the rust eco-system;\nneedless to say, this list is by no means exhaustive.\n\n1. [cgal-sys](//github.com/nyorem/cgal-sys). This is in the\n   spirit of this discussion, but does not seem to be in\n   active development. Also, only a very few features of\n   CGAL are exported. I hope the author of the crate also\n   chimes in to this discussion, and shares their opinions.\n\n2. [spade](//github.com/Stoeoef/spade). This is an\n   independent implementation of the (2-D and 3-D?) delauney\n   triangulation, and related algos such as interpolation\n   (Sibson, etc.) Again, and I hope the author agrees, not\n   as comprehensive as all of CGAL.\n\n3. [GDAL](//github.com/georust/gdal). Not very related, but\n   an example of another reasonably large bindings library.\n   We've made some (fairly minor) contributions, and\n   maintain a [fork](//github.com/AspecScire/gdal) that is\n   slightly more recent than above.\n\n4. [AeroRust](//www.reddit.com/r/rust/comments/ejdv7w/announcing_aerorust_the_unofficial_working_group/).\n   This library probably has a lot of application in\n   Aerospace, but I'm not too familiar with the field, and\n   hence am not sure. Hope, members from the WG have some\n   insights on this. Writing this here, but also happy to\n   cross-post there if it makes sense.\n\n## Goals\n\nTo set a tone for discussion: the end goal I imagine is a\nfull-fledged wrapper to access (almost) all the features of\nCGAL. In particular, it should be reasonably simple to\nkeep-up with updates to CGAL, assuming CGAL itself doesn't\ndiverge too much from how it is at present.\n\n### Possible issues\n\n1. _CGAL is a C++ library_. To my understanding, the\n   [bindgen](//rust-lang.github.io/rust-bindgen/cpp.html) is\n   not ideal to handle many features of C++.\n\n1. _CGAL is header-only_. I'm not entirely sure if this is\n   good or bad. This probably means we should design\n   cargo-features to allow the user to selectively compile\n   only a subset they wish to use as otherwise the compiles\n   times might be prohibitive.\n\n1. _Keeping updated with mainstream_. CGAL is reasonably\n   actively developed. The SWIG bindings of CGAL seems to be\n   up-to-date with CGAL, but unfortunately (SWIG) does not\n   support Rust yet. I do not know if it is easier to\n   develop Rust support for SWIG or the goal here. Would\n   like to understand the feasibility of keeping the wrapper\n   in sync with the main repo.\n\nOverall, I hope to get insights on developing a wrapper as\nenvisioned. Would be happy to implement / contribute if it\nis a reasonable effort.\n\nWhile not the best outcome, I'd still be happy to learn\nabout unfortunate hard road-blocks to building such a\nwrapper in Rust. May be the Rust core team finds it\ninsightful in that case.\n\nThanks in advance, and please do share your thoughts on\nthis.", "author_fullname": "t2_soekp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "CGAL wrapper in Rust?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_emzvb4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "steward_reports": [], "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1578731108.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;TL;DR.&lt;/strong&gt; Requesting comments on the idea of creating a\nfull-fledged wrapper to &lt;a href=\"//www.cgal.org/\"&gt;CGAL&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h2&gt;Motivation&lt;/h2&gt;\n\n&lt;p&gt;I&amp;#39;ve been toying with the idea of creating a CGAL wrapper\nin Rust. Just seeking thoughts from the larger community\nhere on possible road-blocks in creating and maintaining\nsuch a wrapper.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Why bindings?&lt;/strong&gt; &lt;a href=\"//www.cgal.org/\"&gt;CGAL&lt;/a&gt; is a fairly\ncomprehensive collection of comp. geom. algos exposed as a\nC++ library.  To quote their webpage:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The library offers data structures and algorithms like\ntriangulations, Voronoi diagrams, Boolean operations on\npolygons and polyhedra, point set processing,\narrangements of curves, surface and volume mesh\ngeneration, geometry processing, alpha shapes, convex\nhull algorithms, shape reconstruction, AABB and KD\ntrees...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Further, it is actively developed, and has accrued a lot\nof insights in the course of its development.\nRe-implementing such a collection definitely seems\nwasteful, if not impossible.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Why Rust?&lt;/strong&gt; Rust&amp;#39;s powerful type-system allows us to\nmodularize naturally, and focus on a specific task a hand.\nIMHO, it is one of the best languages to create algo.\napplications in.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Access to all of CGAL&amp;#39;s packages seems quite empowering to\nanyone trying to create comp. geom. application. My own\ninterests are in a small subset of CGAL, but the thought of\na full-fledged bindings library seems to be worthy of a\ndiscussion, to say the least.&lt;/p&gt;\n\n&lt;h2&gt;State of Rust Ecosystem&lt;/h2&gt;\n\n&lt;p&gt;I&amp;#39;m unaware of a comprehensive CGAL like alternative in\nRust. Listing what I have found in the rust eco-system;\nneedless to say, this list is by no means exhaustive.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"//github.com/nyorem/cgal-sys\"&gt;cgal-sys&lt;/a&gt;. This is in the\nspirit of this discussion, but does not seem to be in\nactive development. Also, only a very few features of\nCGAL are exported. I hope the author of the crate also\nchimes in to this discussion, and shares their opinions.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"//github.com/Stoeoef/spade\"&gt;spade&lt;/a&gt;. This is an\nindependent implementation of the (2-D and 3-D?) delauney\ntriangulation, and related algos such as interpolation\n(Sibson, etc.) Again, and I hope the author agrees, not\nas comprehensive as all of CGAL.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"//github.com/georust/gdal\"&gt;GDAL&lt;/a&gt;. Not very related, but\nan example of another reasonably large bindings library.\nWe&amp;#39;ve made some (fairly minor) contributions, and\nmaintain a &lt;a href=\"//github.com/AspecScire/gdal\"&gt;fork&lt;/a&gt; that is\nslightly more recent than above.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"//www.reddit.com/r/rust/comments/ejdv7w/announcing_aerorust_the_unofficial_working_group/\"&gt;AeroRust&lt;/a&gt;.\nThis library probably has a lot of application in\nAerospace, but I&amp;#39;m not too familiar with the field, and\nhence am not sure. Hope, members from the WG have some\ninsights on this. Writing this here, but also happy to\ncross-post there if it makes sense.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Goals&lt;/h2&gt;\n\n&lt;p&gt;To set a tone for discussion: the end goal I imagine is a\nfull-fledged wrapper to access (almost) all the features of\nCGAL. In particular, it should be reasonably simple to\nkeep-up with updates to CGAL, assuming CGAL itself doesn&amp;#39;t\ndiverge too much from how it is at present.&lt;/p&gt;\n\n&lt;h3&gt;Possible issues&lt;/h3&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;em&gt;CGAL is a C++ library&lt;/em&gt;. To my understanding, the\n&lt;a href=\"//rust-lang.github.io/rust-bindgen/cpp.html\"&gt;bindgen&lt;/a&gt; is\nnot ideal to handle many features of C++.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;em&gt;CGAL is header-only&lt;/em&gt;. I&amp;#39;m not entirely sure if this is\ngood or bad. This probably means we should design\ncargo-features to allow the user to selectively compile\nonly a subset they wish to use as otherwise the compiles\ntimes might be prohibitive.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;em&gt;Keeping updated with mainstream&lt;/em&gt;. CGAL is reasonably\nactively developed. The SWIG bindings of CGAL seems to be\nup-to-date with CGAL, but unfortunately (SWIG) does not\nsupport Rust yet. I do not know if it is easier to\ndevelop Rust support for SWIG or the goal here. Would\nlike to understand the feasibility of keeping the wrapper\nin sync with the main repo.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Overall, I hope to get insights on developing a wrapper as\nenvisioned. Would be happy to implement / contribute if it\nis a reasonable effort.&lt;/p&gt;\n\n&lt;p&gt;While not the best outcome, I&amp;#39;d still be happy to learn\nabout unfortunate hard road-blocks to building such a\nwrapper in Rust. May be the Rust core team finds it\ninsightful in that case.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance, and please do share your thoughts on\nthis.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "emzvb4", "is_robot_indexable": true, "report_reasons": null, "author": "rama_nokia", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/emzvb4/cgal_wrapper_in_rust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/emzvb4/cgal_wrapper_in_rust/", "subreddit_subscribers": 86019, "created_utc": 1578702308.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_emzvb4", "before": null}}