{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_757lyqvn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rails 6.1 deprecates rails db:structure:dump and rails db:structure:load | The Official BigBinary Blog | BigBinary", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "name": "t3_ixjs28", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/mgLT31iLCGvgF5JnCxb-8l3KPHD3CyUsPIcSeiBfrGs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600793918.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.bigbinary.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.bigbinary.com/2020/09/22/rails-6-1-deprecates-rails-db-structure-dump.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?auto=webp&amp;s=8503cddbb4afa6e7607bb9bd69e37b60c8277de5", "width": 1200, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5b9233ede74a4b70d3fc1bb02f8868dc0ac244b", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f9ab25c6613259424aa727e0c7ec14ac17690caa", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=256692068e925b15f9d1dd1de698cf9df7c106ae", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c42a5ce0c0eacb1c7fa5e0269698b389b15deabc", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0a98a64e4087be88191a2d856ec69b079e60f251", "width": 960, "height": 501}, {"url": "https://external-preview.redd.it/uhdZW5llbaAdj1BIZbOYTr2H--DBSksVXFKH7UCqH2E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a8cc0c6c354a48809d03ee1f01d4641a253e5d2e", "width": 1080, "height": 564}], "variants": {}, "id": "LuCVRyBbE00ARi7DYri8NjRvSe2GL2B8baeyQdYI0rw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixjs28", "is_robot_indexable": true, "report_reasons": null, "author": "chetansgawai", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixjs28/rails_61_deprecates_rails_dbstructuredump_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.bigbinary.com/2020/09/22/rails-6-1-deprecates-rails-db-structure-dump.html", "subreddit_subscribers": 67490, "created_utc": 1600765118.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "It seems like biggest ruby resources are screencasts, blogs and books. And yes, they offer tons of value. \n\nBut I\u2019m wondering if you folks know of effective courses to learn advanced ruby/rails concepts?\n\nAlso, has anyone tried this one \u201cAdvanced Ruby: Behind the Magic\u201d\n\nhttps://courses.gorails.com/advanced-ruby-for-rails-devs\n\n(To me, 300 bucks seems to be on the higher end for 30 screencasts..)", "author_fullname": "t2_6wefzl0n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby Courses - Advanced Ruby: Behind the Magic", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ix35gf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 34, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1600732699.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It seems like biggest ruby resources are screencasts, blogs and books. And yes, they offer tons of value. &lt;/p&gt;\n\n&lt;p&gt;But I\u2019m wondering if you folks know of effective courses to learn advanced ruby/rails concepts?&lt;/p&gt;\n\n&lt;p&gt;Also, has anyone tried this one \u201cAdvanced Ruby: Behind the Magic\u201d&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://courses.gorails.com/advanced-ruby-for-rails-devs\"&gt;https://courses.gorails.com/advanced-ruby-for-rails-devs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(To me, 300 bucks seems to be on the higher end for 30 screencasts..)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?auto=webp&amp;s=f8869df45bc8f9c0408d2b6c8e87ab9d54f617ed", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ea04e4bc27f6f79423a22ac907f8bc4e36ea6f39", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7f45c6c1c8b2ec82dfea9104908dd9ff4e8d23de", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8c7c6f8b3aa1b6d0854da5808575d379bea042b7", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0adb0527feb463f249cad25d107cc405370225f4", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=eee6f346b76bfe7bed1fcd698585926d70f3489f", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/F3PikVti4K57XVfcRlpFvMMpsNyx9Mn_CsiGAGi_dp8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a7fa47c6b2c351a2c1d9358819a1bb3f429c4583", "width": 1080, "height": 567}], "variants": {}, "id": "PKcDfDKZm_j9SJsVX6cjk-s-pZCC19W0yfW2qijkQGw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ix35gf", "is_robot_indexable": true, "report_reasons": null, "author": "FullStack_coach", "discussion_type": null, "num_comments": 20, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ix35gf/ruby_courses_advanced_ruby_behind_the_magic/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ix35gf/ruby_courses_advanced_ruby_behind_the_magic/", "subreddit_subscribers": 67490, "created_utc": 1600703899.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I have this code\n\nYAML.load(File.open(env\\_file))\\[ENV\\[\"RACK\\_ENV\"\\]\\].each { |key, value| ENV\\[key.to\\_s\\] = value } if File.exists?(env\\_file)\n\nThis file loads all the secret variables, client API secrets, db secrets and everything into ENV.\n\n&amp;#x200B;\n\nThen, different gems just call ENV\\['aa\\_secret\\_key'\\] to get the secret and boot up the app\n\nsecret\\_env\\_file.yml is not uploaded on source control. So, everything stays safe.\n\n&amp;#x200B;\n\nAre there any downsides of using ENV to store all those information while the app boots up? I think ENV\\['anything\\_password'\\] is still accessible later on as long as the app is still up and running. Like for sinatra/rails etc.", "author_fullname": "t2_5o5tutm8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any downsides storing database host/username/password in ruby ENV?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ixazdi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600756359.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have this code&lt;/p&gt;\n\n&lt;p&gt;YAML.load(File.open(env_file))[ENV[&amp;quot;RACK_ENV&amp;quot;]].each { |key, value| ENV[key.to_s] = value } if File.exists?(env_file)&lt;/p&gt;\n\n&lt;p&gt;This file loads all the secret variables, client API secrets, db secrets and everything into ENV.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Then, different gems just call ENV[&amp;#39;aa_secret_key&amp;#39;] to get the secret and boot up the app&lt;/p&gt;\n\n&lt;p&gt;secret_env_file.yml is not uploaded on source control. So, everything stays safe.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Are there any downsides of using ENV to store all those information while the app boots up? I think ENV[&amp;#39;anything_password&amp;#39;] is still accessible later on as long as the app is still up and running. Like for sinatra/rails etc.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ixazdi", "is_robot_indexable": true, "report_reasons": null, "author": "unkn0wn_programmer", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ixazdi/any_downsides_storing_database/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ixazdi/any_downsides_storing_database/", "subreddit_subscribers": 67490, "created_utc": 1600727559.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hello fellow ruby developers,\n\nI'm currently maintaining [Gatling load test](https://gatling.io/) scenario for a quite decent Rails app (\\~250k rpm).\n\nIt's working well but it is very hard to maintain and implement new features on the scenario because everything's written in Scala which my team and I are not quite familiar with.\n\nThe scenario we are writing are RPM-based meaning that we are trying our best to get as close as possible from production in terms of rpm for most endpoints.\n\nDoes anyone know if there is a Ruby implementation somewhere that we could try?\n\nI heard that Ruby wasn't made for this kind of task and languages/frameworks such as Gatling, NodeJs, ... and they were way better at it. Could someone explain me why?\n\nCheers from France!", "author_fullname": "t2_g6rwt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any good Ruby library to load test a Rails application?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ix6ltq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1600742987.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello fellow ruby developers,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m currently maintaining &lt;a href=\"https://gatling.io/\"&gt;Gatling load test&lt;/a&gt; scenario for a quite decent Rails app (~250k rpm).&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s working well but it is very hard to maintain and implement new features on the scenario because everything&amp;#39;s written in Scala which my team and I are not quite familiar with.&lt;/p&gt;\n\n&lt;p&gt;The scenario we are writing are RPM-based meaning that we are trying our best to get as close as possible from production in terms of rpm for most endpoints.&lt;/p&gt;\n\n&lt;p&gt;Does anyone know if there is a Ruby implementation somewhere that we could try?&lt;/p&gt;\n\n&lt;p&gt;I heard that Ruby wasn&amp;#39;t made for this kind of task and languages/frameworks such as Gatling, NodeJs, ... and they were way better at it. Could someone explain me why?&lt;/p&gt;\n\n&lt;p&gt;Cheers from France!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/f_iXXBGViOoZ2x3Q4-tKsTSWsdjNtPpdR0obnlqOEG8.jpg?auto=webp&amp;s=20fa36e5343017b128e6dc68b3b1bdd56207a705", "width": 800, "height": 500}, "resolutions": [{"url": "https://external-preview.redd.it/f_iXXBGViOoZ2x3Q4-tKsTSWsdjNtPpdR0obnlqOEG8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=85879b6102946f2ca1fbee0408747addfd7e702d", "width": 108, "height": 67}, {"url": "https://external-preview.redd.it/f_iXXBGViOoZ2x3Q4-tKsTSWsdjNtPpdR0obnlqOEG8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=718c04de9944070e2724aed608503f6c2b251227", "width": 216, "height": 135}, {"url": "https://external-preview.redd.it/f_iXXBGViOoZ2x3Q4-tKsTSWsdjNtPpdR0obnlqOEG8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=169c09473c181c814690ed4d45fdf5e3255efead", "width": 320, "height": 200}, {"url": "https://external-preview.redd.it/f_iXXBGViOoZ2x3Q4-tKsTSWsdjNtPpdR0obnlqOEG8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3d15d844f2f31dcd999aa2be10ad484f7e53f181", "width": 640, "height": 400}], "variants": {}, "id": "pGhsw4DR8T5u8rzUiUD_wdF4okY5mUII4n5BXG2hHRI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ix6ltq", "is_robot_indexable": true, "report_reasons": null, "author": "tojuharper", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ix6ltq/any_good_ruby_library_to_load_test_a_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ix6ltq/any_good_ruby_library_to_load_test_a_rails/", "subreddit_subscribers": 67490, "created_utc": 1600714187.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Is there a way to get pattern matching to work on an array of hashes? My use case is a JSON document ([here](https://www.dph.illinois.gov/sitefiles/COVIDHospitalRegions.json?nocache=1)) that has a few arrays of hashes. I don't know if this is a potential use for pattern matching, but I would *like* to use it to match against particular items, acting sort of like a `where` clause:\n\n    require 'net/http'\n    require 'json'\n\n    HOSPITAL_DATA_URI = URI(\"https://www.dph.illinois.gov/sitefiles/COVIDHospitalRegions.json?nocache=1\").freeze\n\n    hospital_data = JSON.parse(Net::HTTP.get(HOSPITAL_DATA_URI), symbolize_names: true)\n    region_values = hospital_data[:regionValues]\n\n    case region_values\n      in [{id: 10, **unimportant_attributes} =&gt; region_10]\n        puts 'We found region 10!'\n    else\n      puts 'aw shucks'\n    end\n\n    binding.irb\n\nDoes anyone know if this is possible?\n\nEDIT - wrote a StackOverflow question for it as well: https://stackoverflow.com/questions/63998870/how-can-i-pattern-match-on-an-array-of-hashes-in-ruby-2-7", "author_fullname": "t2_36z97", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Issues with pattern matching on JSON / array of hashes", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ix7a1h", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1600717061.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600744967.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is there a way to get pattern matching to work on an array of hashes? My use case is a JSON document (&lt;a href=\"https://www.dph.illinois.gov/sitefiles/COVIDHospitalRegions.json?nocache=1\"&gt;here&lt;/a&gt;) that has a few arrays of hashes. I don&amp;#39;t know if this is a potential use for pattern matching, but I would &lt;em&gt;like&lt;/em&gt; to use it to match against particular items, acting sort of like a &lt;code&gt;where&lt;/code&gt; clause:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require &amp;#39;net/http&amp;#39;\nrequire &amp;#39;json&amp;#39;\n\nHOSPITAL_DATA_URI = URI(&amp;quot;https://www.dph.illinois.gov/sitefiles/COVIDHospitalRegions.json?nocache=1&amp;quot;).freeze\n\nhospital_data = JSON.parse(Net::HTTP.get(HOSPITAL_DATA_URI), symbolize_names: true)\nregion_values = hospital_data[:regionValues]\n\ncase region_values\n  in [{id: 10, **unimportant_attributes} =&amp;gt; region_10]\n    puts &amp;#39;We found region 10!&amp;#39;\nelse\n  puts &amp;#39;aw shucks&amp;#39;\nend\n\nbinding.irb\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Does anyone know if this is possible?&lt;/p&gt;\n\n&lt;p&gt;EDIT - wrote a StackOverflow question for it as well: &lt;a href=\"https://stackoverflow.com/questions/63998870/how-can-i-pattern-match-on-an-array-of-hashes-in-ruby-2-7\"&gt;https://stackoverflow.com/questions/63998870/how-can-i-pattern-match-on-an-array-of-hashes-in-ruby-2-7&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ix7a1h", "is_robot_indexable": true, "report_reasons": null, "author": "faitswulff", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ix7a1h/issues_with_pattern_matching_on_json_array_of/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ix7a1h/issues_with_pattern_matching_on_json_array_of/", "subreddit_subscribers": 67490, "created_utc": 1600716167.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "For me currently it's:\n\n    puts`dd`\n\n8 character identity algorithm (outputs any input without any alteration). :) Keen to see other examples.", "author_fullname": "t2_yhut8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's a snippet of code that makes you happiest that you learnt Ruby?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iwy3c4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 29, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 29, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600714177.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For me currently it&amp;#39;s:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;puts`dd`\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;8 character identity algorithm (outputs any input without any alteration). :) Keen to see other examples.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iwy3c4", "is_robot_indexable": true, "report_reasons": null, "author": "Aspie_Astrologer", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iwy3c4/whats_a_snippet_of_code_that_makes_you_happiest/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/iwy3c4/whats_a_snippet_of_code_that_makes_you_happiest/", "subreddit_subscribers": 67490, "created_utc": 1600685377.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3lozp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Secure way of doing OAuth for SPA &amp; Native Apps", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iwztni", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/w_TYSLngRwanbgd-YNdobYvXgVe4p6ojk5tj21pK8Xs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "programming", "selftext": "", "author_fullname": "t2_3lozp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Secure way of doing OAuth for SPA &amp; Native Apps", "link_flair_richtext": [], "subreddit_name_prefixed": "r/programming", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iwztey", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.62, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600721526.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.joshsoftware.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.joshsoftware.com/2020/05/18/secure-way-of-doing-oauth-for-spa-native-apps/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?auto=webp&amp;s=189f0f35d983cd09d187c73f00348fd7b05be237", "width": 719, "height": 782}, "resolutions": [{"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4db1d5b7dcf562f35adabdf1908e32e429e1d8ad", "width": 108, "height": 117}, {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3bf7e52f266e80789bd4d93e0a4eba412c86a516", "width": 216, "height": 234}, {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=edebd665214a000599b35e94999b1bd8e7b4e3fb", "width": 320, "height": 348}, {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bb5f4b63a162e9625cdd6dde859f568296b309c5", "width": 640, "height": 696}], "variants": {}, "id": "qgkLorcl1jmSPL_d3sCyibsvc63d7wenQxKOhetlU1g"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2fwo", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iwztey", "is_robot_indexable": true, "report_reasons": null, "author": "aspleenic", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/programming/comments/iwztey/secure_way_of_doing_oauth_for_spa_native_apps/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.joshsoftware.com/2020/05/18/secure-way-of-doing-oauth-for-spa-native-apps/", "subreddit_subscribers": 2884695, "created_utc": 1600692726.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1600721552.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.joshsoftware.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.joshsoftware.com/2020/05/18/secure-way-of-doing-oauth-for-spa-native-apps/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?auto=webp&amp;s=189f0f35d983cd09d187c73f00348fd7b05be237", "width": 719, "height": 782}, "resolutions": [{"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4db1d5b7dcf562f35adabdf1908e32e429e1d8ad", "width": 108, "height": 117}, {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3bf7e52f266e80789bd4d93e0a4eba412c86a516", "width": 216, "height": 234}, {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=edebd665214a000599b35e94999b1bd8e7b4e3fb", "width": 320, "height": 348}, {"url": "https://external-preview.redd.it/YOx1YPEvZKDDYJmGRKJCIb3UJdchVxAurS7S-ipo4jE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bb5f4b63a162e9625cdd6dde859f568296b309c5", "width": 640, "height": 696}], "variants": {}, "id": "qgkLorcl1jmSPL_d3sCyibsvc63d7wenQxKOhetlU1g"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iwztni", "is_robot_indexable": true, "report_reasons": null, "author": "aspleenic", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_iwztey", "author_flair_text_color": null, "permalink": "/r/ruby/comments/iwztni/secure_way_of_doing_oauth_for_spa_native_apps/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.joshsoftware.com/2020/05/18/secure-way-of-doing-oauth-for-spa-native-apps/", "subreddit_subscribers": 67490, "created_utc": 1600692752.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_hld61", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Compile Ruby to C", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iwr3pn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 60, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 60, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Ydjwz-ASB_rxWdT1Hui8CCdxqFwfUVeinbZ3eyQ9Ixc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600681473.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/agrafix/rubyspeed", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/CdgtxzZsGLD8CzFxas8p_ZxRMUu8UrXysUkHbTULmO4.jpg?auto=webp&amp;s=7237652c22922c3ef80161527d846487af4bbc07", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/CdgtxzZsGLD8CzFxas8p_ZxRMUu8UrXysUkHbTULmO4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=284ab228710b1b6efee7a9101dc626a1d25ea5f9", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/CdgtxzZsGLD8CzFxas8p_ZxRMUu8UrXysUkHbTULmO4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=19f659cfff604a6ea68a3d133aa19ecbf10c16e9", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/CdgtxzZsGLD8CzFxas8p_ZxRMUu8UrXysUkHbTULmO4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=38b2aa2438584b5d72e348fdf34c28a107f5d780", "width": 320, "height": 320}], "variants": {}, "id": "jLeBnSqRcAd0iR63a0If-4cHpABCpXS44sFI6xk-kxc"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iwr3pn", "is_robot_indexable": true, "report_reasons": null, "author": "agrafix", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iwr3pn/compile_ruby_to_c/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/agrafix/rubyspeed", "subreddit_subscribers": 67490, "created_utc": 1600652673.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_301j4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "An SMS Reminder Service With Ruby &amp; A Raspberry Pi", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 83, "top_awarded_type": null, "hide_score": false, "name": "t3_iwoh4f", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/KVAICVbMupuqBWfc53lIPUn_XR4EzleUekDe0Whp0GA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600671982.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "emmanuelhayford.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://emmanuelhayford.com/building-an-sms-reminder-with-ruby-raspberry-pi/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/TvCzH9IMVbyDTn4On2nMkYibe-hZAMLQX1Yb_9cTHdM.jpg?auto=webp&amp;s=b9f843a0b5bbdda20350b8c7b7b0988a1112c131", "width": 1546, "height": 924}, "resolutions": [{"url": "https://external-preview.redd.it/TvCzH9IMVbyDTn4On2nMkYibe-hZAMLQX1Yb_9cTHdM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8908d37acd10d51d76b3e699342c8014a54f1c59", "width": 108, "height": 64}, {"url": "https://external-preview.redd.it/TvCzH9IMVbyDTn4On2nMkYibe-hZAMLQX1Yb_9cTHdM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=07c16b36ce3e3e249437687e091fbf4cc00dee77", "width": 216, "height": 129}, {"url": "https://external-preview.redd.it/TvCzH9IMVbyDTn4On2nMkYibe-hZAMLQX1Yb_9cTHdM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2f08ccc08dc9310edebc4621e090c7a349640425", "width": 320, "height": 191}, {"url": "https://external-preview.redd.it/TvCzH9IMVbyDTn4On2nMkYibe-hZAMLQX1Yb_9cTHdM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=41ebb058656823e42e61afe7ae702e4b1cf64f96", "width": 640, "height": 382}, {"url": "https://external-preview.redd.it/TvCzH9IMVbyDTn4On2nMkYibe-hZAMLQX1Yb_9cTHdM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=8529ca5fbb176f9e7507a38edd4669012bcef625", "width": 960, "height": 573}, {"url": "https://external-preview.redd.it/TvCzH9IMVbyDTn4On2nMkYibe-hZAMLQX1Yb_9cTHdM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8cce7e9de0f2c0721a85d646a7ad1b674d04e6db", "width": 1080, "height": 645}], "variants": {}, "id": "VIj9fWjcKL0J6rHFt-Om6KL_L8U-X--xYfOy44-4pTg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iwoh4f", "is_robot_indexable": true, "report_reasons": null, "author": "philnash", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iwoh4f/an_sms_reminder_service_with_ruby_a_raspberry_pi/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://emmanuelhayford.com/building-an-sms-reminder-with-ruby-raspberry-pi/", "subreddit_subscribers": 67490, "created_utc": 1600643182.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lg8ij8g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "An RSpec custom matcher to test application code that logs information into log files", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iwl1fq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/ruby", "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/rzhRAUqh25FbDxsAygWmlRrYGhUQMJ2LeqA0cL6vKxs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1600660888.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/juanmanuelramallo/rspec-log_matcher", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/J_dQCT8Z5Jkk6Si6UaVtQw_rfBsAd0D-q6S-kGyXmas.jpg?auto=webp&amp;s=a045d3d2cd0f7a134eb2135685b186d5b27632c3", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/J_dQCT8Z5Jkk6Si6UaVtQw_rfBsAd0D-q6S-kGyXmas.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fee82782b870fc0f6b6c7b5c42948d042fb41ad3", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/J_dQCT8Z5Jkk6Si6UaVtQw_rfBsAd0D-q6S-kGyXmas.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=26aeccbc9c7e81c961e51cb1aa84be32680fd0a4", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/J_dQCT8Z5Jkk6Si6UaVtQw_rfBsAd0D-q6S-kGyXmas.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1a5b5765c80636e063161f87339317982162facd", "width": 320, "height": 320}], "variants": {}, "id": "y132BKiMikCySIvD0W4iKuQHkMcnlIKoI8T_EJ8VCG8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d57de81a-873c-11e9-9a25-0e18d14df676", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iwl1fq", "is_robot_indexable": true, "report_reasons": null, "author": "juanmanuelramallo", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iwl1fq/an_rspec_custom_matcher_to_test_application_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/juanmanuelramallo/rspec-log_matcher", "subreddit_subscribers": 67490, "created_utc": 1600632088.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_iwl1fq", "before": null}}