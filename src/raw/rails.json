{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "In this thread you can showcase your personal pet project to other redditors.\n\nNeed help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!\n\nA suggested format to get you started:\n\n1. **Name of your project**\n2. **A short description**\n3. **Application stack**\n4. **Link to Live app**\n5. **Link to GitHub**\n6. **You experience level**\n7. **Other information or areas that you would like advice on**\n\n\u00a0\n\n^(Many thanks to Kritnc for getting the ball rolling.)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Personal Projects - Show off your own project and/or ask for advice", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gek2rk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588800767.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this thread you can showcase your personal pet project to other redditors.&lt;/p&gt;\n\n&lt;p&gt;Need help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!&lt;/p&gt;\n\n&lt;p&gt;A suggested format to get you started:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Name of your project&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;A short description&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Application stack&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to Live app&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to GitHub&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;You experience level&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Other information or areas that you would like advice on&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Many thanks to Kritnc for getting the ball rolling.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gek2rk", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 18, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gek2rk/personal_projects_show_off_your_own_project_andor/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/gek2rk/personal_projects_show_off_your_own_project_andor/", "subreddit_subscribers": 44132, "created_utc": 1588771967.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "In this thread you can showcase your personal pet project to other redditors.\n\nNeed help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!\n\nA suggested format to get you started:\n\n1. **Name of your project**\n2. **A short description**\n3. **Application stack**\n4. **Link to Live app**\n5. **Link to GitHub**\n6. **You experience level**\n7. **Other information or areas that you would like advice on**\n\n\u00a0\n\n^(Many thanks to Kritnc for getting the ball rolling.)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Personal Projects - Show off your own project and/or ask for advice", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnbebg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590010359.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this thread you can showcase your personal pet project to other redditors.&lt;/p&gt;\n\n&lt;p&gt;Need help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!&lt;/p&gt;\n\n&lt;p&gt;A suggested format to get you started:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Name of your project&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;A short description&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Application stack&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to Live app&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to GitHub&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;You experience level&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Other information or areas that you would like advice on&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Many thanks to Kritnc for getting the ball rolling.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnbebg", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnbebg/personal_projects_show_off_your_own_project_andor/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/gnbebg/personal_projects_show_off_your_own_project_andor/", "subreddit_subscribers": 44132, "created_utc": 1589981559.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I simply cannot get Postgres to play ball on Windows 10, and I need a free hosting option for pitching/testing purposes. I know it's far from ideal, but are there any free hosting services that will accept Rails with Sqlite?", "author_fullname": "t2_5oxotf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any free Rails hosting options that don't use Postgres?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gnwlmf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590095532.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I simply cannot get Postgres to play ball on Windows 10, and I need a free hosting option for pitching/testing purposes. I know it&amp;#39;s far from ideal, but are there any free hosting services that will accept Rails with Sqlite?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnwlmf", "is_robot_indexable": true, "report_reasons": null, "author": "literarylizbeth", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnwlmf/any_free_rails_hosting_options_that_dont_use/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnwlmf/any_free_rails_hosting_options_that_dont_use/", "subreddit_subscribers": 44132, "created_utc": 1590066732.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "i am trying to do background job for uploading pics ,\n\nthe job something like this:\n\n```\n  def perform(model, new_image, file)\n    model.meta_gallery.attach(\n          io: new_image, \n          filename: file.original_filename, \n          content_type:   file.content_type\n     )\n  end\n```\n\nwhat I got is `ActiveJob::SerializationError (Unsupported argument type: Tempfile):`\n\nI called that job in my controller like this:\n```\n params[:gallery][:files].each do |file|\n      new_image = helpers.upload_resized_image(file.tempfile, 400, 400)\n      UploadJob(@model, new_image, file)\n end\n\n```\nI tried to change: file.tempfile.path as well but doesn't work\ndoes anyone has same issue before like this?", "author_fullname": "t2_2po8egxm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ActiveJob::SerializationError on create model for uploading", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gnwl80", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590095496.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;i am trying to do background job for uploading pics ,&lt;/p&gt;\n\n&lt;p&gt;the job something like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n  def perform(model, new_image, file)\n    model.meta_gallery.attach(\n          io: new_image, \n          filename: file.original_filename, \n          content_type:   file.content_type\n     )\n  end\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;what I got is &lt;code&gt;ActiveJob::SerializationError (Unsupported argument type: Tempfile):&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I called that job in my controller like this:\n```\n params[:gallery][:files].each do |file|\n      new_image = helpers.upload_resized_image(file.tempfile, 400, 400)\n      UploadJob(@model, new_image, file)\n end&lt;/p&gt;\n\n&lt;p&gt;```\nI tried to change: file.tempfile.path as well but doesn&amp;#39;t work\ndoes anyone has same issue before like this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnwl80", "is_robot_indexable": true, "report_reasons": null, "author": "lnxosx", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnwl80/activejobserializationerror_on_create_model_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnwl80/activejobserializationerror_on_create_model_for/", "subreddit_subscribers": 44132, "created_utc": 1590066696.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I have a Rails API and I'm currently building a wordpress site.  When users sign in on the wordpress site, I'd like to authenticate their credentials using Devise and my Rails API.  Are there any solutions for this type of authentication?  Wordpress offers plugins that utilize [OAuth single sign on](https://wordpress.org/plugins/miniorange-login-with-eve-online-google-facebook/) but I'm not sure how to integrate that with Devise.  \n\nAny ideas on how to solve this?", "author_fullname": "t2_166i66", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Authenticate wordpress users using Devise", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gnvfiu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590090648.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a Rails API and I&amp;#39;m currently building a wordpress site.  When users sign in on the wordpress site, I&amp;#39;d like to authenticate their credentials using Devise and my Rails API.  Are there any solutions for this type of authentication?  Wordpress offers plugins that utilize &lt;a href=\"https://wordpress.org/plugins/miniorange-login-with-eve-online-google-facebook/\"&gt;OAuth single sign on&lt;/a&gt; but I&amp;#39;m not sure how to integrate that with Devise.  &lt;/p&gt;\n\n&lt;p&gt;Any ideas on how to solve this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnvfiu", "is_robot_indexable": true, "report_reasons": null, "author": "jeremy_lopez7", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnvfiu/authenticate_wordpress_users_using_devise/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnvfiu/authenticate_wordpress_users_using_devise/", "subreddit_subscribers": 44132, "created_utc": 1590061848.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I run a popular Rails App (on App Engine) it gets significant traffic (movnorth.com). Recently I started introducing React into the frontend and also decided to start using GraphQL in the backend for queries. This started me down a rabbit hole and here is the result.\n\nI built Super Graph an automatic GraphQL to SQL translator (in GO). Just run it along side your Rails app it will learn your database schema, relationships and allow you to query your database using just simple GraphQL.\n\nSuper Graph understands Rails cookies and works with session stores to get the current authenticated users ID. \n\nGithub:\nhttps://github.com/dosco/super-graph\n\nDocumentation:\nhttps://supergraph.dev/docs/home", "author_fullname": "t2_116htl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Give your Rails app a fast GraphQL API without writing any code.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gni988", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 35, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 35, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1590008702.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590032312.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I run a popular Rails App (on App Engine) it gets significant traffic (movnorth.com). Recently I started introducing React into the frontend and also decided to start using GraphQL in the backend for queries. This started me down a rabbit hole and here is the result.&lt;/p&gt;\n\n&lt;p&gt;I built Super Graph an automatic GraphQL to SQL translator (in GO). Just run it along side your Rails app it will learn your database schema, relationships and allow you to query your database using just simple GraphQL.&lt;/p&gt;\n\n&lt;p&gt;Super Graph understands Rails cookies and works with session stores to get the current authenticated users ID. &lt;/p&gt;\n\n&lt;p&gt;Github:\n&lt;a href=\"https://github.com/dosco/super-graph\"&gt;https://github.com/dosco/super-graph&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Documentation:\n&lt;a href=\"https://supergraph.dev/docs/home\"&gt;https://supergraph.dev/docs/home&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gni988", "is_robot_indexable": true, "report_reasons": null, "author": "gsvclass", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gni988/give_your_rails_app_a_fast_graphql_api_without/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gni988/give_your_rails_app_a_fast_graphql_api_without/", "subreddit_subscribers": 44132, "created_utc": 1590003512.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I am trying to deploy an application on Linux Debian 9 and I am getting an error  \n`You must use Bundler 2 or greater with this lockfile`  \n`Ruby -v returns ruby 2.6.3p62`  \n`rails -v returns Rails` [`6.0.3.1`](https://6.0.3.1)  \n`which bundle returns /usr/local/rvm/gems/ruby-2.6.3/bin/bundle`  \n`bundle version returns Bundler version 2.1.4 (2020-01-05 commit 32a4159325)`\n\nSo, I have tried various things such as\n\n1. Updating the bundler gem(gem install bundler -v 2.1.4)\n2. Updating the rubygems Package manager( gem update --system)\n3. Reinstalling bundler gem\n\nbut they dont seem to work and\u00a0 everytime I try to work it throws the same error.  \nAnyone who has been facing the same error and could help?", "author_fullname": "t2_13rp0b", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "You must use Bundler 2 or greater with this lockfile", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnr5nk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590068726.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to deploy an application on Linux Debian 9 and I am getting an error&lt;br/&gt;\n&lt;code&gt;You must use Bundler 2 or greater with this lockfile&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Ruby -v returns ruby 2.6.3p62&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;rails -v returns Rails&lt;/code&gt; &lt;a href=\"https://6.0.3.1\"&gt;&lt;code&gt;6.0.3.1&lt;/code&gt;&lt;/a&gt;&lt;br/&gt;\n&lt;code&gt;which bundle returns /usr/local/rvm/gems/ruby-2.6.3/bin/bundle&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;bundle version returns Bundler version 2.1.4 (2020-01-05 commit 32a4159325)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;So, I have tried various things such as&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Updating the bundler gem(gem install bundler -v 2.1.4)&lt;/li&gt;\n&lt;li&gt;Updating the rubygems Package manager( gem update --system)&lt;/li&gt;\n&lt;li&gt;Reinstalling bundler gem&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;but they dont seem to work and\u00a0 everytime I try to work it throws the same error.&lt;br/&gt;\nAnyone who has been facing the same error and could help?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnr5nk", "is_robot_indexable": true, "report_reasons": null, "author": "noobfreeaker1", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnr5nk/you_must_use_bundler_2_or_greater_with_this/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnr5nk/you_must_use_bundler_2_or_greater_with_this/", "subreddit_subscribers": 44132, "created_utc": 1590039926.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hit a block here. I've handled image uploading before via action text, but not as an element in a db that I can call back. Wondering, would I just add the params/permit and migration into the post table? If so, what would be the syntax for the migration? And as far as views go, it's pretty straight forward via simple\\_for &amp; a framework right?\n\nIt's for a post/index page which will have a title/description linking to a full post. Hoping I can get a db-driven image since I don't want them all to have a static image. Will be 1 square image per post for the card.", "author_fullname": "t2_6iyxev6q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Image upload.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnkn0e", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590042389.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hit a block here. I&amp;#39;ve handled image uploading before via action text, but not as an element in a db that I can call back. Wondering, would I just add the params/permit and migration into the post table? If so, what would be the syntax for the migration? And as far as views go, it&amp;#39;s pretty straight forward via simple_for &amp;amp; a framework right?&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s for a post/index page which will have a title/description linking to a full post. Hoping I can get a db-driven image since I don&amp;#39;t want them all to have a static image. Will be 1 square image per post for the card.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnkn0e", "is_robot_indexable": true, "report_reasons": null, "author": "CodaDev", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnkn0e/image_upload/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnkn0e/image_upload/", "subreddit_subscribers": 44132, "created_utc": 1590013589.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Let's say I'm building an app that models court cases. I have a `Case` model and a `User` model for authentication. I then use Rolify to assign different roles to `Users`, `Plaintiff`, `Defendant`, `Judge`, `Counsel` , and so on. These roles determine what CRUD actions users can take on `Cases`.\n\nWhat is the best way to get all `Cases` for a `Judge`? I don't think I can use Rolify to set up those many-to-many relationships.\n\nThanks in advance!", "author_fullname": "t2_4cstr", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rolify and many-to-many relationships", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnov33", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1590032130.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590058440.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s say I&amp;#39;m building an app that models court cases. I have a &lt;code&gt;Case&lt;/code&gt; model and a &lt;code&gt;User&lt;/code&gt; model for authentication. I then use Rolify to assign different roles to &lt;code&gt;Users&lt;/code&gt;, &lt;code&gt;Plaintiff&lt;/code&gt;, &lt;code&gt;Defendant&lt;/code&gt;, &lt;code&gt;Judge&lt;/code&gt;, &lt;code&gt;Counsel&lt;/code&gt; , and so on. These roles determine what CRUD actions users can take on &lt;code&gt;Cases&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;What is the best way to get all &lt;code&gt;Cases&lt;/code&gt; for a &lt;code&gt;Judge&lt;/code&gt;? I don&amp;#39;t think I can use Rolify to set up those many-to-many relationships.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnov33", "is_robot_indexable": true, "report_reasons": null, "author": "PutMeInTheGameCoach", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnov33/rolify_and_manytomany_relationships/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnov33/rolify_and_manytomany_relationships/", "subreddit_subscribers": 44132, "created_utc": 1590029640.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "One thing I constantly stuggle is the problem where my code should live and how the thing that holds it should be named. Rails out of the box doesn't help you much with that so patterns emerge that help to organize things. \n\nHere's some obvious patterns that most Rails apps have:\n\n**Service Objects** You initialize service object and it has a single public method like `run` or `execute`. So you send it some input and it just does things. It may change the state of the database, send emails, etc. Generally returns true/false. Example:\n\n    class FooService\n      def initialize(foo:)\n        @foo = foo\n      end\n  \n      def run\n        do_things_to(@foo)\n      end\n    end\n\n**Presenters** Like a view helper, but used specifically to present objects in the views. Example:\n\n    class FooPresenter\n      def initialize(object)\n        @foo = object\n      end\n  \n      def avatar\n        image_tag(@foo.avatar)\n      end\n    end\n\n**Decorators** I think the idea is that methods from this class are mixed into object that is passed in. Honestly, I've been treating decorators like pseudo presenters that are not used in the views. For example: `FooDecorator.new(foo).some_method_inside_decorator_class`. It's clearly not a decorator pattern but it's not really a presenter in a sense that it will provide outputs to be rendered on the screen. What should it be really called?\n\n**Form Objects** To deal with complicated logic about handling certain forms. 99% of the time you'd just handle record validation and saving from the controller, but sometimes things get hairy so you'd do something like this:\n\n    class FooForm\n      include ActiveModel::Model\n      attr_accessor :bar\n  \n      def save\n        if valid?\n          save_something\n        else\n          add_some_errors\n          false\n        end\n      end\n    end\n\nand in the controller you'd have\n\n    @foo_form = FooForm.new(account_claim_form_params)\n    if @foo_form.save\n      flash[:success] = \"Yey\"\n      redirect_to path\n    else\n      flash[:error] = \"Boo!\"\n      render :new\n    end\n\nI also have things like `pdf_generators`, `csv_exporters`. Just organizing code based on what it does. \n\nNow, there are some things I have no idea how to classify. For example:\n\n- There's a class that digs through yaml file. It initializes with some inputs and then has a pile of public methods you can call. It's not a service and not really a model since it has absolutely nothing to do with database.\n- There's a class that figures out \"next work day\". You feed it a date and with `increment_by(n)` if will give you next work date. What is this thing? I lives in our services right now, but it's clearly doesn't belong there. How would you classify this?\n- I have a ton of view helpers that have methods like `project_category_options_for_select`. It doesn't feel right to have them in global view helpers. Is this a presenter/decorator... or something else?\n  \nI'm working with Rails apps for ages now, but organizing code is literally the hardest thing that I ahve to deal with.", "author_fullname": "t2_4ron7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Question: How do you organize code in your Rails app?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnbukt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590012044.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;One thing I constantly stuggle is the problem where my code should live and how the thing that holds it should be named. Rails out of the box doesn&amp;#39;t help you much with that so patterns emerge that help to organize things. &lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s some obvious patterns that most Rails apps have:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Service Objects&lt;/strong&gt; You initialize service object and it has a single public method like &lt;code&gt;run&lt;/code&gt; or &lt;code&gt;execute&lt;/code&gt;. So you send it some input and it just does things. It may change the state of the database, send emails, etc. Generally returns true/false. Example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class FooService\n  def initialize(foo:)\n    @foo = foo\n  end\n\n  def run\n    do_things_to(@foo)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Presenters&lt;/strong&gt; Like a view helper, but used specifically to present objects in the views. Example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class FooPresenter\n  def initialize(object)\n    @foo = object\n  end\n\n  def avatar\n    image_tag(@foo.avatar)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Decorators&lt;/strong&gt; I think the idea is that methods from this class are mixed into object that is passed in. Honestly, I&amp;#39;ve been treating decorators like pseudo presenters that are not used in the views. For example: &lt;code&gt;FooDecorator.new(foo).some_method_inside_decorator_class&lt;/code&gt;. It&amp;#39;s clearly not a decorator pattern but it&amp;#39;s not really a presenter in a sense that it will provide outputs to be rendered on the screen. What should it be really called?&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Form Objects&lt;/strong&gt; To deal with complicated logic about handling certain forms. 99% of the time you&amp;#39;d just handle record validation and saving from the controller, but sometimes things get hairy so you&amp;#39;d do something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class FooForm\n  include ActiveModel::Model\n  attr_accessor :bar\n\n  def save\n    if valid?\n      save_something\n    else\n      add_some_errors\n      false\n    end\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and in the controller you&amp;#39;d have&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@foo_form = FooForm.new(account_claim_form_params)\nif @foo_form.save\n  flash[:success] = &amp;quot;Yey&amp;quot;\n  redirect_to path\nelse\n  flash[:error] = &amp;quot;Boo!&amp;quot;\n  render :new\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I also have things like &lt;code&gt;pdf_generators&lt;/code&gt;, &lt;code&gt;csv_exporters&lt;/code&gt;. Just organizing code based on what it does. &lt;/p&gt;\n\n&lt;p&gt;Now, there are some things I have no idea how to classify. For example:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;There&amp;#39;s a class that digs through yaml file. It initializes with some inputs and then has a pile of public methods you can call. It&amp;#39;s not a service and not really a model since it has absolutely nothing to do with database.&lt;/li&gt;\n&lt;li&gt;There&amp;#39;s a class that figures out &amp;quot;next work day&amp;quot;. You feed it a date and with &lt;code&gt;increment_by(n)&lt;/code&gt; if will give you next work date. What is this thing? I lives in our services right now, but it&amp;#39;s clearly doesn&amp;#39;t belong there. How would you classify this?&lt;/li&gt;\n&lt;li&gt;I have a ton of view helpers that have methods like &lt;code&gt;project_category_options_for_select&lt;/code&gt;. It doesn&amp;#39;t feel right to have them in global view helpers. Is this a presenter/decorator... or something else?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&amp;#39;m working with Rails apps for ages now, but organizing code is literally the hardest thing that I ahve to deal with.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnbukt", "is_robot_indexable": true, "report_reasons": null, "author": "GroceryBagHead", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnbukt/question_how_do_you_organize_code_in_your_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnbukt/question_how_do_you_organize_code_in_your_rails/", "subreddit_subscribers": 44132, "created_utc": 1589983244.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hi all, I have a db table that stores records of my form when the status changes.  I am currently getting data like this in a service\n\n\\[    {form\\_id: 1, status: 0, created\\_at: date form was created},   {form\\_id: 1, status: 4, created\\_at: first submitted date}, //record i want   {form\\_id: 1, status: 2, created\\_at: date form was returned},   {form\\_id: 1, status: 4, created\\_at: date form was resubmitted},   {form\\_id: 2, status: 0, created\\_at: date form was created},   {form\\_id: 2, status: 4, created\\_at: first submitted date}, //record i want   {form\\_id: 2, status: 2, created\\_at: date form was returned},   {form\\_id: 2, status: 4, created\\_at: date form was resubmitted},   {form\\_id: 3, status: 0, created\\_at: date form was created},   {form\\_id: 3, status: 4, created\\_at: first submitted date}, //record i want   {form\\_id: 3, status: 2, created\\_at: date form was returned},   {form\\_id: 3, status: 4, created\\_at: date form was resubmitted},   \\]\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nI've commented the records I want to grab, the first submitted record where status = 0 and the oldest date\n\n&amp;#x200B;\n\nedit:\n\nFormHistoryRecord.where(status: 4).order(:form\\_id, :created\\_at).uniq{|a| a.form\\_id }  seems to work", "author_fullname": "t2_67rj1500", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Find the first submitted form record", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "hide_score": false, "name": "t3_gng8sg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1589998460.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590026179.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all, I have a db table that stores records of my form when the status changes.  I am currently getting data like this in a service&lt;/p&gt;\n\n&lt;p&gt;[    {form_id: 1, status: 0, created_at: date form was created},   {form_id: 1, status: 4, created_at: first submitted date}, //record i want   {form_id: 1, status: 2, created_at: date form was returned},   {form_id: 1, status: 4, created_at: date form was resubmitted},   {form_id: 2, status: 0, created_at: date form was created},   {form_id: 2, status: 4, created_at: first submitted date}, //record i want   {form_id: 2, status: 2, created_at: date form was returned},   {form_id: 2, status: 4, created_at: date form was resubmitted},   {form_id: 3, status: 0, created_at: date form was created},   {form_id: 3, status: 4, created_at: first submitted date}, //record i want   {form_id: 3, status: 2, created_at: date form was returned},   {form_id: 3, status: 4, created_at: date form was resubmitted},   ]&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve commented the records I want to grab, the first submitted record where status = 0 and the oldest date&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;edit:&lt;/p&gt;\n\n&lt;p&gt;FormHistoryRecord.where(status: 4).order(:form_id, :created_at).uniq{|a| a.form_id }  seems to work&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gng8sg", "is_robot_indexable": true, "report_reasons": null, "author": "iloveuandsupportu", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gng8sg/find_the_first_submitted_form_record/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gng8sg/find_the_first_submitted_form_record/", "subreddit_subscribers": 44132, "created_utc": 1589997379.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Can anyone help me out getting Ckeditor setup so that each user that uploads photos will only see their photos and not every photo uploaded by everyone?\n\nI am using this gem  [https://github.com/galetahub/ckeditor](https://github.com/galetahub/ckeditor)", "author_fullname": "t2_3jjbizow", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Integrating Ckeditor per user", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnhz9y", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590031466.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Can anyone help me out getting Ckeditor setup so that each user that uploads photos will only see their photos and not every photo uploaded by everyone?&lt;/p&gt;\n\n&lt;p&gt;I am using this gem  &lt;a href=\"https://github.com/galetahub/ckeditor\"&gt;https://github.com/galetahub/ckeditor&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnhz9y", "is_robot_indexable": true, "report_reasons": null, "author": "EmergencyCategory0", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/gnhz9y/integrating_ckeditor_per_user/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/gnhz9y/integrating_ckeditor_per_user/", "subreddit_subscribers": 44132, "created_utc": 1590002666.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gnhz9y", "before": null}}