{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - June", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gua247", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590998803.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gua247", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "subreddit_subscribers": 41804, "created_utc": 1590970003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The mysql package allows you to make an SQL query with an arbitrary amount of statements. In my case, I've got a stored procedure with an OUT parameter:\n\n    db.query('call getSalaries(1, 2, @average); select @average)'); // two statements\n\nThis would return an array where the first element is a Salary[] and the second element is an array of numbers (the average - though in this particular case, that array would contain a single number). In general, depending on the statements in the query and how many there are, I'm going to have an array of elements of different types, with corresponding length.\n\nI would like to be able to call query in different ways. In general, if I call db.query&lt;A, B, C, ...etc&gt;(myQuery), then I know I'm going to get an array where the first element is A[], the second B[], the third C[], and so on. How would I go about modeling that?\n\nI hope the question is clear. Thanks!", "author_fullname": "t2_35rka0na", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Arbitrary amount of generics in function call?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h7ivji", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591989599.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The mysql package allows you to make an SQL query with an arbitrary amount of statements. In my case, I&amp;#39;ve got a stored procedure with an OUT parameter:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;db.query(&amp;#39;call getSalaries(1, 2, @average); select @average)&amp;#39;); // two statements\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This would return an array where the first element is a Salary[] and the second element is an array of numbers (the average - though in this particular case, that array would contain a single number). In general, depending on the statements in the query and how many there are, I&amp;#39;m going to have an array of elements of different types, with corresponding length.&lt;/p&gt;\n\n&lt;p&gt;I would like to be able to call query in different ways. In general, if I call db.query&amp;lt;A, B, C, ...etc&amp;gt;(myQuery), then I know I&amp;#39;m going to get an array where the first element is A[], the second B[], the third C[], and so on. How would I go about modeling that?&lt;/p&gt;\n\n&lt;p&gt;I hope the question is clear. Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7ivji", "is_robot_indexable": true, "report_reasons": null, "author": "Talaaj", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h7ivji/arbitrary_amount_of_generics_in_function_call/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h7ivji/arbitrary_amount_of_generics_in_function_call/", "subreddit_subscribers": 41804, "created_utc": 1591960799.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_4dlv7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Node.js, Dependency Injection, Layered Architecture, and TDD: A Practical Example Part 1", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_h13hr7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 64, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 64, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/oDtDYiOv2rCg59yKtC6abKFHdRqZ_yag0LvEdfmTnww.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591924469.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "carlosgonzalez.dev", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/viYcWN1WKisPNHGEfRbHn2O6qi-saR01UXkcZhCMyAk.jpg?auto=webp&amp;s=597e706a8b0843260804040b5fa45bb023a7dbb7", "width": 498, "height": 848}, "resolutions": [{"url": "https://external-preview.redd.it/viYcWN1WKisPNHGEfRbHn2O6qi-saR01UXkcZhCMyAk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1b69942c50098799a9723eeb8320825106c5321b", "width": 108, "height": 183}, {"url": "https://external-preview.redd.it/viYcWN1WKisPNHGEfRbHn2O6qi-saR01UXkcZhCMyAk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=41fea64f3baa949353eb9a98b4a0562cc7adaa6b", "width": 216, "height": 367}, {"url": "https://external-preview.redd.it/viYcWN1WKisPNHGEfRbHn2O6qi-saR01UXkcZhCMyAk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4d98f320dd15578de1f4ae52e7d7e2aaaf4d1d2c", "width": 320, "height": 544}], "variants": {}, "id": "54_jmK7FD6Sf3HTw2C41dPgkC6zhnucgXuoRVqaHaF8"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 300, "id": "award_68ba1ee3-9baf-4252-be52-b808c1e8bdc4", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png", "days_of_premium": 0, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16&amp;height=16&amp;auto=webp&amp;s=9c0a85437357b987e50ba727b67fcc53b0950c95", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32&amp;height=32&amp;auto=webp&amp;s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48&amp;height=48&amp;auto=webp&amp;s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64&amp;height=64&amp;auto=webp&amp;s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128&amp;height=128&amp;auto=webp&amp;s=28657eedaaa67c90c4b4a97d134fe607bb92c975", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "description": "Me approved", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "This", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16&amp;height=16&amp;auto=webp&amp;s=9c0a85437357b987e50ba727b67fcc53b0950c95", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32&amp;height=32&amp;auto=webp&amp;s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48&amp;height=48&amp;auto=webp&amp;s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64&amp;height=64&amp;auto=webp&amp;s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128&amp;height=128&amp;auto=webp&amp;s=28657eedaaa67c90c4b4a97d134fe607bb92c975", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h13hr7", "is_robot_indexable": true, "report_reasons": null, "author": "Rhyek", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h13hr7/nodejs_dependency_injection_layered_architecture/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://carlosgonzalez.dev/posts/node-js-di-layered-architecture-and-tdd-a-practical-example-part-1/", "subreddit_subscribers": 41804, "created_utc": 1591895669.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I could not quite come up with a valid use case to justify why typescript supports interface with indexers. plain javascript provides you with indexing objects then why one would need to define an indexer in an interface.?", "author_fullname": "t2_50e6umh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is a valid use case for Interfaces with indexers in typescript?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_h7k8y7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591995607.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I could not quite come up with a valid use case to justify why typescript supports interface with indexers. plain javascript provides you with indexing objects then why one would need to define an indexer in an interface.?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7k8y7", "is_robot_indexable": true, "report_reasons": null, "author": "blogs4t", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h7k8y7/what_is_a_valid_use_case_for_interfaces_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h7k8y7/what_is_a_valid_use_case_for_interfaces_with/", "subreddit_subscribers": 41804, "created_utc": 1591966807.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "So I've got a data structure (`SingleValue`) that I want to be able to handle in 2 different ways. The first is when only one or no instances of it is needed, in which case the variable holding the value should be of type `SingleValue | null`. The other case is when many are needed, in which case the variable holding the value should be of type `SingleValue[]`.\n\nHow can I set up a single variable and a typeguard function for a type that is conditionally one of those two types based on a generic type argument.\n\nThis is what I have at the moment but it's not quite right:\n\n```ts\ntype SingleValue = { /* ... */ };\n\ntype Value&lt;Multiple extends boolean&gt; = Multiple extends true\n  ? SingleValue[]\n  : SingleValue | null;\n\nfunction isMultipleValue&lt;Multiple extends boolean&gt;(\n value: Value&lt;Multiple&gt;\n): value is Value&lt;true&gt; {\n return Array.isArray(value);\n}\n```\n\nThe error I get is:\n\n```\nA type predicate's type must be assignable to its parameter's type.\n  Type 'readonly SingleValue[]' is not assignable to type 'Value&lt;Multiple&gt;'.\n```\n\n(this error happens on the 3rd to last line)\n\nNote: I cannot switch to just using an array for the one/none case due to how other parts of my project are set up and the implementation of 3rd party libraries. For the same reason `Multiple` but be a generic type argument.", "author_fullname": "t2_15uusv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to create a Conditional Type/Typeguard for this?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h7dob0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591963652.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I&amp;#39;ve got a data structure (&lt;code&gt;SingleValue&lt;/code&gt;) that I want to be able to handle in 2 different ways. The first is when only one or no instances of it is needed, in which case the variable holding the value should be of type &lt;code&gt;SingleValue | null&lt;/code&gt;. The other case is when many are needed, in which case the variable holding the value should be of type &lt;code&gt;SingleValue[]&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;How can I set up a single variable and a typeguard function for a type that is conditionally one of those two types based on a generic type argument.&lt;/p&gt;\n\n&lt;p&gt;This is what I have at the moment but it&amp;#39;s not quite right:&lt;/p&gt;\n\n&lt;p&gt;```ts\ntype SingleValue = { /* ... */ };&lt;/p&gt;\n\n&lt;p&gt;type Value&amp;lt;Multiple extends boolean&amp;gt; = Multiple extends true\n  ? SingleValue[]\n  : SingleValue | null;&lt;/p&gt;\n\n&lt;p&gt;function isMultipleValue&amp;lt;Multiple extends boolean&amp;gt;(\n value: Value&amp;lt;Multiple&amp;gt;\n): value is Value&amp;lt;true&amp;gt; {\n return Array.isArray(value);\n}\n```&lt;/p&gt;\n\n&lt;p&gt;The error I get is:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nA type predicate&amp;#39;s type must be assignable to its parameter&amp;#39;s type.\n  Type &amp;#39;readonly SingleValue[]&amp;#39; is not assignable to type &amp;#39;Value&amp;lt;Multiple&amp;gt;&amp;#39;.\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;(this error happens on the 3rd to last line)&lt;/p&gt;\n\n&lt;p&gt;Note: I cannot switch to just using an array for the one/none case due to how other parts of my project are set up and the implementation of 3rd party libraries. For the same reason &lt;code&gt;Multiple&lt;/code&gt; but be a generic type argument.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7dob0", "is_robot_indexable": true, "report_reasons": null, "author": "SlayMaster3000", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h7dob0/how_to_create_a_conditional_typetypeguard_for_this/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h7dob0/how_to_create_a_conditional_typetypeguard_for_this/", "subreddit_subscribers": 41804, "created_utc": 1591934852.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi, I was wondering if it's possible to get Typescript to warn whenever a possible number is coerced into a boolean. For example:\n\n```\nconst x: number | null = 5;\n\nif(x) {} // warn\n\nconst y = !x //warn\n```\n\nThe reason for this is that I would like to avoid numbers potentially becoming falsey due to 0.", "author_fullname": "t2_6ek082oy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to warn on number to boolean coercion?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h7aw3i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591952772.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I was wondering if it&amp;#39;s possible to get Typescript to warn whenever a possible number is coerced into a boolean. For example:&lt;/p&gt;\n\n&lt;p&gt;```\nconst x: number | null = 5;&lt;/p&gt;\n\n&lt;p&gt;if(x) {} // warn&lt;/p&gt;\n\n&lt;p&gt;const y = !x //warn\n```&lt;/p&gt;\n\n&lt;p&gt;The reason for this is that I would like to avoid numbers potentially becoming falsey due to 0.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h7aw3i", "is_robot_indexable": true, "report_reasons": null, "author": "TheNextEpisodeOut", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h7aw3i/how_to_warn_on_number_to_boolean_coercion/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h7aw3i/how_to_warn_on_number_to_boolean_coercion/", "subreddit_subscribers": 41804, "created_utc": 1591923972.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "First of all, I am a newcomer to Typescript, and my previous projects involved C# and WPF.\n\nOn the C# side of things, I have always used Entity Framework as ORM, which was a mighty powerful ORM. It handled code-first as well as db-first approaches quite easily.\n\nAs far as I can tell, there is nothing in Typescript that handles db-first approach. But the bigger problem for me is duplication of code when using ORMs. Entity Framework could easily infer the database schema from the classes only. In Typescript, if I want to define a schema, I will have to do it twice, once as a plain old TS class, and secondly for the ORM. An example of such a code is [here](https://sequelize.org/master/manual/typescript.html).\n\nI have found typegoose to do something akin to Entity Framework when it comes to ORM. TS-Mongoose looked promising until I ran into the issue [here](https://www.reddit.com/r/typescript/comments/h0e3ff/help_with_tsmongoose/).\n\nHas anyone found a less tedious solution for Postgresql too?\n\n&amp;#x200B;\n\nEDIT: Found it. It's TypeORM.", "author_fullname": "t2_z3bdd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Duplication of code for ORMs", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h15lwb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1591908273.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591930899.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;First of all, I am a newcomer to Typescript, and my previous projects involved C# and WPF.&lt;/p&gt;\n\n&lt;p&gt;On the C# side of things, I have always used Entity Framework as ORM, which was a mighty powerful ORM. It handled code-first as well as db-first approaches quite easily.&lt;/p&gt;\n\n&lt;p&gt;As far as I can tell, there is nothing in Typescript that handles db-first approach. But the bigger problem for me is duplication of code when using ORMs. Entity Framework could easily infer the database schema from the classes only. In Typescript, if I want to define a schema, I will have to do it twice, once as a plain old TS class, and secondly for the ORM. An example of such a code is &lt;a href=\"https://sequelize.org/master/manual/typescript.html\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I have found typegoose to do something akin to Entity Framework when it comes to ORM. TS-Mongoose looked promising until I ran into the issue &lt;a href=\"https://www.reddit.com/r/typescript/comments/h0e3ff/help_with_tsmongoose/\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Has anyone found a less tedious solution for Postgresql too?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;EDIT: Found it. It&amp;#39;s TypeORM.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h15lwb", "is_robot_indexable": true, "report_reasons": null, "author": "Mycroft2046", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h15lwb/duplication_of_code_for_orms/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h15lwb/duplication_of_code_for_orms/", "subreddit_subscribers": 41804, "created_utc": 1591902099.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "We're trying to build a command line app to find orphan code in a larger typescript project.\n\nParsing the imports is an issue as they could be multiline.\n\nIs there a parse that can take a .ts or .tsx file and parse out the imports reliably into an AST?", "author_fullname": "t2_pc7lu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Reliable typescript language parser.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h11s6h", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591919152.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We&amp;#39;re trying to build a command line app to find orphan code in a larger typescript project.&lt;/p&gt;\n\n&lt;p&gt;Parsing the imports is an issue as they could be multiline.&lt;/p&gt;\n\n&lt;p&gt;Is there a parse that can take a .ts or .tsx file and parse out the imports reliably into an AST?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h11s6h", "is_robot_indexable": true, "report_reasons": null, "author": "brainhack3r", "discussion_type": null, "num_comments": 16, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h11s6h/reliable_typescript_language_parser/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h11s6h/reliable_typescript_language_parser/", "subreddit_subscribers": 41804, "created_utc": 1591890352.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_1qkgaw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A lightweight yet powerful dependency injection framework using modern TypeScript and decorators", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_h0ogq0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.77, "author_flair_background_color": null, "subreddit_type": "public", "ups": 35, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 35, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/5vaMHE4wyxJ7Wi_DPkzM1e-tO7jAZgj_cKEKYzqTFsE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591864917.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?auto=webp&amp;s=374468de6b4c4ada2cd1225d9360c98a6d603c05", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4aa40ff955edca75f3b5511a1e50120b919b3962", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e5435f35877c832e6742175196fef4e08cbbc695", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3f00eac514a6bf6b164734f3dcc9726816a5976a", "width": 320, "height": 320}], "variants": {}, "id": "3Z528e4up8IuRIC5XNE-iRzVMsPQvkdNsglDp2osACc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0ogq0", "is_robot_indexable": true, "report_reasons": null, "author": "The_Droide", "discussion_type": null, "num_comments": 35, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0ogq0/a_lightweight_yet_powerful_dependency_injection/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/H1ghBre4k3r/dependory", "subreddit_subscribers": 41804, "created_utc": 1591836117.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey guys,\n\nMy team had to turn off all of the following rules on TSLinter, but to improve standards over time I want to turn them on. Which of these rules are most important for code quality?\n\n&amp;#x200B;\n\n1. \"jsx-wrap-multiline\": false,\n2. \"jsx-no-lambda\": false,\n3. \"jsx-self-close\": false,\n4. \"jsx-no-string-ref\": false,\n5. \"prefer-const\": false,\n6. \"array-type\": false,\n7. \"no-object-literal-type-assertion\": false,\n8. \"one-variable-per-declaration\": false,\n9. \"object-literal-shorthand\": false,\n10. \"no-string-literal\": false,\n11. \"no-implicit-dependencies\": false,\n12. \"triple-equals\": false,\n13. \"no-submodule-imports\": false,\n14. \"no-console\": false,\n15. \"no-empty\": false,\n16. \"no-shadowed-variable\": false,\n17. \"prefer-conditional-expression\": false,\n18. \"forin\": false,\n19. \"radix\": false,\n20. \"space-within-parens\": false,\n21. \"no-trailing-whitespace\": false,\n22. \"whitespace\":false,\n23. \"ban-types\": false,\n24. \"comment-format\": false,\n25. \"jsx-boolean-value\": false,\n26. \"class-name\": false,\n27. \"prefer-object-spread\": false,\n28. \"variable-name\": false,\n29. \"no-unused-expression\": false,\n30. \"no-var-keyword\": false,\n31. \"no-duplicate-imports\": false,\n32. \"only-arrow-functions\": false,\n33. \"no-this-assignment\": false,\n34. \"max-classes-per-file\": false,\n35. \"align\": false", "author_fullname": "t2_4dsi3jm7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Which of these TSLinter tools are most important for my offshore team to follow?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h14yuh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591928978.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys,&lt;/p&gt;\n\n&lt;p&gt;My team had to turn off all of the following rules on TSLinter, but to improve standards over time I want to turn them on. Which of these rules are most important for code quality?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&amp;quot;jsx-wrap-multiline&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;jsx-no-lambda&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;jsx-self-close&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;jsx-no-string-ref&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;prefer-const&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;array-type&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-object-literal-type-assertion&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;one-variable-per-declaration&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;object-literal-shorthand&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-string-literal&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-implicit-dependencies&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;triple-equals&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-submodule-imports&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-console&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-empty&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-shadowed-variable&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;prefer-conditional-expression&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;forin&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;radix&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;space-within-parens&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-trailing-whitespace&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;whitespace&amp;quot;:false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;ban-types&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;comment-format&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;jsx-boolean-value&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;class-name&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;prefer-object-spread&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;variable-name&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-unused-expression&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-var-keyword&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-duplicate-imports&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;only-arrow-functions&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;no-this-assignment&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;max-classes-per-file&amp;quot;: false,&lt;/li&gt;\n&lt;li&gt;&amp;quot;align&amp;quot;: false&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h14yuh", "is_robot_indexable": true, "report_reasons": null, "author": "ExternalBiscotti", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h14yuh/which_of_these_tslinter_tools_are_most_important/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h14yuh/which_of_these_tslinter_tools_are_most_important/", "subreddit_subscribers": 41804, "created_utc": 1591900178.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Foal TS framework version 1.9 is officially released!\n\n[Foal TS - June release \\(version 1.9\\)](https://preview.redd.it/cbw3ao9078451.png?width=1250&amp;format=png&amp;auto=webp&amp;s=f1281bba1a03e446043f4cc901173ea9cf6a4016)\n\nThis version brings many improvements and fixes bugs.\n\n1. **MongoDB can now be fully used with TypeORM**. The new `fetchMongoDBUser` allows you to retrieve the MongoDB user whether you use sessions or stateless JWTs.\n\n[Authentication with JWT\\/MongoDB\\/TypeORM](https://preview.redd.it/st1vyyzi88451.png?width=363&amp;format=png&amp;auto=webp&amp;s=43047d0979f8707e848186f8142ea81109080ee4)\n\nDocs: [https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start](https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start)\n\n2. **\\[Shortcut\\] The request params and body** are passed as **second** and **third arguments** of the controllers.\n\n[Quick access to the request body and params](https://preview.redd.it/y12146c998451.png?width=525&amp;format=png&amp;auto=webp&amp;s=1bd65f3567295334f29622b0346c1a3fe6f585d6)\n\nDocs: [https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments](https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments)\n\n3. \\[CLI\\] The CLI `generate` command has been extended to support subdirectories. You can now fully generate your controller (or service) architecture from the command line\n\n[CLI commands](https://preview.redd.it/rbctunjr98451.png?width=649&amp;format=png&amp;auto=webp&amp;s=4f98058b17d5efce6efd22fbd12e0b4d87aeab26)\n\n[Architecture generated](https://preview.redd.it/5vfxegbt98451.png?width=651&amp;format=png&amp;auto=webp&amp;s=3173ecd8a3925847c0f2f38cc572045345192821)\n\n[app.controller.ts updated](https://preview.redd.it/hnjls0vq98451.png?width=645&amp;format=png&amp;auto=webp&amp;s=71cd1772b42804a0981cbdb8aa7ceae981d0fa30)\n\n[api.controller.ts generated](https://preview.redd.it/gbiqvaos98451.png?width=644&amp;format=png&amp;auto=webp&amp;s=4ab3e7f480a60c528236976fce39170725c2e743)\n\nDocs: [https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller](https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller)\n\nFoal, in a few words, it's a **Node.js framework**:\n\n* written in **TypeScript**\n* provided **with batteries included** (Auth, OpenAPI, GraphQL, ORM, CLI, scripts, Cloud file storage, etc)\n* and with a **simple and intuitive architecture** (no magic, no over-engineering).\n\nAnd the must: it has more than 11,000 lines of documentation.\n\n[https://foalts.org](https://foalts.org/)\n\n[https://github.com/FoalTS/foal](https://github.com/FoalTS/foal)\n\n[https://foalts.gitbook.io/docs/](https://foalts.gitbook.io/docs/)\n\n\\#TypeScript #JavaScript #NodeJS #FoalTS #CLI #Auth #Authentification #JWT", "author_fullname": "t2_2bvst1jn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Foal TS - June release (version 1.9) - Auth with MongoDB/TypeORM, auth with REST APIs, handy shortcuts, CLI improvements", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "media_metadata": {"hnjls0vq98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 21, "x": 108, "u": "https://preview.redd.it/hnjls0vq98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=45aeef65bbae103c2b93a55d6c5eff75365f19f6"}, {"y": 43, "x": 216, "u": "https://preview.redd.it/hnjls0vq98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=4d92e397352cfe1522ca4ab09645b7a85f233367"}, {"y": 64, "x": 320, "u": "https://preview.redd.it/hnjls0vq98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=fc8328909649ac1230b94b44ac5b463aa9f82039"}, {"y": 129, "x": 640, "u": "https://preview.redd.it/hnjls0vq98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=0099a648235b58a75818c19ea92217bf76fba9b7"}], "s": {"y": 131, "x": 645, "u": "https://preview.redd.it/hnjls0vq98451.png?width=645&amp;format=png&amp;auto=webp&amp;s=71cd1772b42804a0981cbdb8aa7ceae981d0fa30"}, "id": "hnjls0vq98451"}, "5vfxegbt98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 35, "x": 108, "u": "https://preview.redd.it/5vfxegbt98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=195d2a66b5a87880863ef53c35f0ad47acc38b71"}, {"y": 71, "x": 216, "u": "https://preview.redd.it/5vfxegbt98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=b59600c398ff4872dfce0b111827d534c0e00518"}, {"y": 106, "x": 320, "u": "https://preview.redd.it/5vfxegbt98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=61f7df281e5a3ac6434d9e0327aaf8b2e629e059"}, {"y": 212, "x": 640, "u": "https://preview.redd.it/5vfxegbt98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=1e95f027dd64aaf3ace55606ac3f858a6eed530a"}], "s": {"y": 216, "x": 651, "u": "https://preview.redd.it/5vfxegbt98451.png?width=651&amp;format=png&amp;auto=webp&amp;s=3173ecd8a3925847c0f2f38cc572045345192821"}, "id": "5vfxegbt98451"}, "y12146c998451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 37, "x": 108, "u": "https://preview.redd.it/y12146c998451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=c56817b08526dc68ff42a68290ce2d48595f6cfb"}, {"y": 75, "x": 216, "u": "https://preview.redd.it/y12146c998451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=01523a0a2882fc066eb393fe52b5628f628d5928"}, {"y": 111, "x": 320, "u": "https://preview.redd.it/y12146c998451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=6e5d3eddd152f9f0702bf4c989a07b0b146d1e01"}], "s": {"y": 183, "x": 525, "u": "https://preview.redd.it/y12146c998451.png?width=525&amp;format=png&amp;auto=webp&amp;s=1bd65f3567295334f29622b0346c1a3fe6f585d6"}, "id": "y12146c998451"}, "rbctunjr98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 12, "x": 108, "u": "https://preview.redd.it/rbctunjr98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=21c12777a590204270e4c6ee1351be42df5f18c7"}, {"y": 24, "x": 216, "u": "https://preview.redd.it/rbctunjr98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=556c2305b7f64bc0039836a2f3184578a66ca6e6"}, {"y": 36, "x": 320, "u": "https://preview.redd.it/rbctunjr98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=56caa78fd50b311b98f4169bfcdec4c70ace8dbf"}, {"y": 73, "x": 640, "u": "https://preview.redd.it/rbctunjr98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=4f670b64fc4d19a3440000ff764076c21720acb8"}], "s": {"y": 75, "x": 649, "u": "https://preview.redd.it/rbctunjr98451.png?width=649&amp;format=png&amp;auto=webp&amp;s=4f98058b17d5efce6efd22fbd12e0b4d87aeab26"}, "id": "rbctunjr98451"}, "cbw3ao9078451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 60, "x": 108, "u": "https://preview.redd.it/cbw3ao9078451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=84f7561792c438712efc596f1b04d216ac2f7227"}, {"y": 121, "x": 216, "u": "https://preview.redd.it/cbw3ao9078451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=ac5e827b861719d2f6388ca99a31483562a0ac42"}, {"y": 180, "x": 320, "u": "https://preview.redd.it/cbw3ao9078451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=74209823e233e34db4c2f2fca016d450ccf02d44"}, {"y": 360, "x": 640, "u": "https://preview.redd.it/cbw3ao9078451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=9309c950ebeeab2a1b1f7513ba2ead80892deab4"}, {"y": 540, "x": 960, "u": "https://preview.redd.it/cbw3ao9078451.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=3a9829541fa2b1a23dd9bb3eea76cd14eda42f36"}, {"y": 608, "x": 1080, "u": "https://preview.redd.it/cbw3ao9078451.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2059cee0aae551967eaa6459769126ac2a23df85"}], "s": {"y": 704, "x": 1250, "u": "https://preview.redd.it/cbw3ao9078451.png?width=1250&amp;format=png&amp;auto=webp&amp;s=f1281bba1a03e446043f4cc901173ea9cf6a4016"}, "id": "cbw3ao9078451"}, "st1vyyzi88451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 35, "x": 108, "u": "https://preview.redd.it/st1vyyzi88451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=5788d7f87ff9ed420f3ab2de4ec961cb2cf3cecf"}, {"y": 70, "x": 216, "u": "https://preview.redd.it/st1vyyzi88451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=2e943146d1691ce919db2c9f41927b16ad933fbe"}, {"y": 104, "x": 320, "u": "https://preview.redd.it/st1vyyzi88451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=468b759b78730ce27f1e4592a2909f1f7d377443"}], "s": {"y": 118, "x": 363, "u": "https://preview.redd.it/st1vyyzi88451.png?width=363&amp;format=png&amp;auto=webp&amp;s=43047d0979f8707e848186f8142ea81109080ee4"}, "id": "st1vyyzi88451"}, "gbiqvaos98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 21, "x": 108, "u": "https://preview.redd.it/gbiqvaos98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=6f747a71f6347115f5837b3625950d46821fcf5a"}, {"y": 43, "x": 216, "u": "https://preview.redd.it/gbiqvaos98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=dbf56398360366ee5c8509e8cb82a14a42f91c05"}, {"y": 64, "x": 320, "u": "https://preview.redd.it/gbiqvaos98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=db4ffc6a6fb2030196f0d39952d306059cc5c052"}, {"y": 129, "x": 640, "u": "https://preview.redd.it/gbiqvaos98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=ee6a45ac936082a6045180904d187cbd330cf40a"}], "s": {"y": 130, "x": 644, "u": "https://preview.redd.it/gbiqvaos98451.png?width=644&amp;format=png&amp;auto=webp&amp;s=4ab3e7f480a60c528236976fce39170725c2e743"}, "id": "gbiqvaos98451"}}, "name": "t3_h0tzhe", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/YEbJl_XlpFlD_-dBjskJ-HsvEnL9fs1NCseekRZeO3g.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591887114.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Foal TS framework version 1.9 is officially released!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/cbw3ao9078451.png?width=1250&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f1281bba1a03e446043f4cc901173ea9cf6a4016\"&gt;Foal TS - June release (version 1.9)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This version brings many improvements and fixes bugs.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;MongoDB can now be fully used with TypeORM&lt;/strong&gt;. The new &lt;code&gt;fetchMongoDBUser&lt;/code&gt; allows you to retrieve the MongoDB user whether you use sessions or stateless JWTs.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/st1vyyzi88451.png?width=363&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=43047d0979f8707e848186f8142ea81109080ee4\"&gt;Authentication with JWT/MongoDB/TypeORM&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start\"&gt;https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start&lt;/a&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;[Shortcut] The request params and body&lt;/strong&gt; are passed as &lt;strong&gt;second&lt;/strong&gt; and &lt;strong&gt;third arguments&lt;/strong&gt; of the controllers.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/y12146c998451.png?width=525&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=1bd65f3567295334f29622b0346c1a3fe6f585d6\"&gt;Quick access to the request body and params&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments\"&gt;https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments&lt;/a&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;[CLI] The CLI &lt;code&gt;generate&lt;/code&gt; command has been extended to support subdirectories. You can now fully generate your controller (or service) architecture from the command line&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/rbctunjr98451.png?width=649&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4f98058b17d5efce6efd22fbd12e0b4d87aeab26\"&gt;CLI commands&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/5vfxegbt98451.png?width=651&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3173ecd8a3925847c0f2f38cc572045345192821\"&gt;Architecture generated&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/hnjls0vq98451.png?width=645&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=71cd1772b42804a0981cbdb8aa7ceae981d0fa30\"&gt;app.controller.ts updated&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/gbiqvaos98451.png?width=644&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4ab3e7f480a60c528236976fce39170725c2e743\"&gt;api.controller.ts generated&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller\"&gt;https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Foal, in a few words, it&amp;#39;s a &lt;strong&gt;Node.js framework&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;written in &lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;provided &lt;strong&gt;with batteries included&lt;/strong&gt; (Auth, OpenAPI, GraphQL, ORM, CLI, scripts, Cloud file storage, etc)&lt;/li&gt;\n&lt;li&gt;and with a &lt;strong&gt;simple and intuitive architecture&lt;/strong&gt; (no magic, no over-engineering).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And the must: it has more than 11,000 lines of documentation.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://foalts.org/\"&gt;https://foalts.org&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/FoalTS/foal\"&gt;https://github.com/FoalTS/foal&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://foalts.gitbook.io/docs/\"&gt;https://foalts.gitbook.io/docs/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;#TypeScript #JavaScript #NodeJS #FoalTS #CLI #Auth #Authentification #JWT&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?auto=webp&amp;s=f8c1f999cc0e0e955f40a01b6e01473b5faa64cc", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d9712ade15f0e4c54aeff09da396c851b70265a7", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d9d704f94a1e1c9c50c9241009df0bd3b7fc0ae8", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=309e5708c93bdbbe28e56ff1e7e0c24ac01e1e04", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d2199c5e3c4b83fa47e45702b2be6408472c0efe", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=22335d0d8c66d19f6401b28ee65de40338ffd8bf", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=be5b22f5a12ee20adf1796d2a3bf7fa27785dd92", "width": 1080, "height": 567}], "variants": {}, "id": "KesvDeCiMQROF3n5xSH4CkvRvd3gXI_WE0qSKWlCYak"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0tzhe", "is_robot_indexable": true, "report_reasons": null, "author": "Loic_Poullain", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0tzhe/foal_ts_june_release_version_19_auth_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h0tzhe/foal_ts_june_release_version_19_auth_with/", "subreddit_subscribers": 41804, "created_utc": 1591858314.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_h0tzhe", "before": null}}