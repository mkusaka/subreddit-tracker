{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I'm having trouble with the new typescript definition export from Kotlin in 1.4-M1 \ud83d\ude13\n\n1. Adding @ JsExport outside jsMain source directory in multiplatform Gradle project does not work\\*? So this means that one cannot export type definitions for types that are shared between platform targets?\n2. When creating a regular kotlin/js project in IntelliJ, I cannot find a way to activate the new  IR back-end compiler and the definition export - I assume this is not supported?\n\nTypescript definition export would simplify my current project dramatically, so I keep hoping it would be possible to get at least one of these options working? \ud83e\udd1e\n\n*\\* this image illustrates the problem - is this the expected behavior?*\n\n&amp;#x200B;\n\nhttps://preview.redd.it/n7trf6uo64z41.png?width=1812&amp;format=png&amp;auto=webp&amp;s=9f8ac3bc3434290cc7ec870949d0bed29edaf397", "author_fullname": "t2_b12hx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Problem exporting Typescript definitions in 1.4-M1 (from commonMain)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "media_metadata": {"n7trf6uo64z41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 45, "x": 108, "u": "https://preview.redd.it/n7trf6uo64z41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=d93f4ab8ec8317ee5527ccf0846d140c6ce7299e"}, {"y": 91, "x": 216, "u": "https://preview.redd.it/n7trf6uo64z41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=b16122491fb422d6b661a855d87e702efc148114"}, {"y": 135, "x": 320, "u": "https://preview.redd.it/n7trf6uo64z41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=e667dc2423f731f2d3f965181c7fac05df946285"}, {"y": 270, "x": 640, "u": "https://preview.redd.it/n7trf6uo64z41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=ab64ecb5fbfa75c9ddf0c12a1cc0f26ab7fbe9ea"}, {"y": 406, "x": 960, "u": "https://preview.redd.it/n7trf6uo64z41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=70049d660e18fc517b765f5cefebc75c88f37582"}, {"y": 457, "x": 1080, "u": "https://preview.redd.it/n7trf6uo64z41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1cca05ae2b03f0ecc0256459ebedaed4988bae8d"}], "s": {"y": 767, "x": 1812, "u": "https://preview.redd.it/n7trf6uo64z41.png?width=1812&amp;format=png&amp;auto=webp&amp;s=9f8ac3bc3434290cc7ec870949d0bed29edaf397"}, "id": "n7trf6uo64z41"}}, "name": "t3_gkq2uc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1589629354.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589639779.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m having trouble with the new typescript definition export from Kotlin in 1.4-M1 \ud83d\ude13&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Adding @ JsExport outside jsMain source directory in multiplatform Gradle project does not work*? So this means that one cannot export type definitions for types that are shared between platform targets?&lt;/li&gt;\n&lt;li&gt;When creating a regular kotlin/js project in IntelliJ, I cannot find a way to activate the new  IR back-end compiler and the definition export - I assume this is not supported?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Typescript definition export would simplify my current project dramatically, so I keep hoping it would be possible to get at least one of these options working? \ud83e\udd1e&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;\\&lt;/em&gt; this image illustrates the problem - is this the expected behavior?*&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/n7trf6uo64z41.png?width=1812&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=9f8ac3bc3434290cc7ec870949d0bed29edaf397\"&gt;https://preview.redd.it/n7trf6uo64z41.png?width=1812&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=9f8ac3bc3434290cc7ec870949d0bed29edaf397&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkq2uc", "is_robot_indexable": true, "report_reasons": null, "author": "knutsi", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gkq2uc/problem_exporting_typescript_definitions_in_14m1/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gkq2uc/problem_exporting_typescript_definitions_in_14m1/", "subreddit_subscribers": 31705, "created_utc": 1589610979.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Calculating the length of a track in a GPX file:\n\n    override fun startElement(uri: String, lName: String, qName: String, att: Attributes) {\n        if (qName != \"trkpt\")\n            return\n        att.getValue(\"lat\")?.toDouble().let { lat -&gt;\n            att.getValue(\"lon\")?.toDouble().let { long -&gt;\n                if (lastLat != null &amp;&amp; lastLong != null)\n                    _dist += haversine(lat, long)\n                lastLat = lat\n                lastLong = long\n            }\n        }\n    }\n\n    private fun haversine(lat: Double, long: Double): Double {\n        /* omitted for brevity */\n    }\n\nKotlinc complains about a \"type mismatch: inferred type is Double? but Double was expected\" in the call to `haversine`. I can fix it easily enough by changing the `let` calls to be like:\n\n        att.getValue(\"lat\")?.toDouble()?.let { lat -&gt;\n            att.getValue(\"lon\")?.toDouble()?.let { long -&gt;\n\nBut why is it giving me a Double? and not a Double in the first place? If I look at the documentation for `String.toDouble()` it's clearly listed as returning type Double (not nullable). Makes no sense I should have to type the extra question mark.", "author_fullname": "t2_bmfpa", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why this type mismatch", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gkqmob", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589642787.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Calculating the length of a track in a GPX file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;override fun startElement(uri: String, lName: String, qName: String, att: Attributes) {\n    if (qName != &amp;quot;trkpt&amp;quot;)\n        return\n    att.getValue(&amp;quot;lat&amp;quot;)?.toDouble().let { lat -&amp;gt;\n        att.getValue(&amp;quot;lon&amp;quot;)?.toDouble().let { long -&amp;gt;\n            if (lastLat != null &amp;amp;&amp;amp; lastLong != null)\n                _dist += haversine(lat, long)\n            lastLat = lat\n            lastLong = long\n        }\n    }\n}\n\nprivate fun haversine(lat: Double, long: Double): Double {\n    /* omitted for brevity */\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Kotlinc complains about a &amp;quot;type mismatch: inferred type is Double? but Double was expected&amp;quot; in the call to &lt;code&gt;haversine&lt;/code&gt;. I can fix it easily enough by changing the &lt;code&gt;let&lt;/code&gt; calls to be like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    att.getValue(&amp;quot;lat&amp;quot;)?.toDouble()?.let { lat -&amp;gt;\n        att.getValue(&amp;quot;lon&amp;quot;)?.toDouble()?.let { long -&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But why is it giving me a Double? and not a Double in the first place? If I look at the documentation for &lt;code&gt;String.toDouble()&lt;/code&gt; it&amp;#39;s clearly listed as returning type Double (not nullable). Makes no sense I should have to type the extra question mark.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkqmob", "is_robot_indexable": true, "report_reasons": null, "author": "Rubus_Leucodermis", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gkqmob/why_this_type_mismatch/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gkqmob/why_this_type_mismatch/", "subreddit_subscribers": 31705, "created_utc": 1589613987.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_10t6zo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Universal JVM GC Log Analyzer free tool", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gkp4v0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589634883.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "gceasy.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkp4v0", "is_robot_indexable": true, "report_reasons": null, "author": "mike_jack", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gkp4v0/universal_jvm_gc_log_analyzer_free_tool/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://gceasy.io/", "subreddit_subscribers": 31705, "created_utc": 1589606083.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I have an API service:\n\n    private const val BASE_URL = \"https://www.random.org/integers/?num=1&amp;min=1&amp;max=6&amp;col=1&amp;base=10&amp;format=plain&amp;rnd=new\"\n    interface FooApiService {\n      @GET\n      suspend fun getInt():\n        Call&lt;Int&gt;\n    }\n    object FooApi {\n        val retrofitService : FooApiService by lazy {\n            retrofit.create(FooApiService::class.java)\n        }\n    }\n\nThe server returns a normal HTTP200 text/html body response in the browser (I'm using a dummy API here). However I can't get it using the retrofit2 service (the function never returns):\n\n    private var job = Job()\n    private val fooScope = CoroutineScope(job + Dispatchers.IO)\n    private fun doStuff() {\n      fooScope.async {\n        FooApi.retrofitService.getInt().execute().body()\n        Log.i(TAG, \"We never reach here! Why?\")\n      }\n    }\n\nWhy?", "author_fullname": "t2_2xkczjvy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Retrofit2 API request never returns. Why?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gkrea4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589647303.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have an API service:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private const val BASE_URL = &amp;quot;https://www.random.org/integers/?num=1&amp;amp;min=1&amp;amp;max=6&amp;amp;col=1&amp;amp;base=10&amp;amp;format=plain&amp;amp;rnd=new&amp;quot;\ninterface FooApiService {\n  @GET\n  suspend fun getInt():\n    Call&amp;lt;Int&amp;gt;\n}\nobject FooApi {\n    val retrofitService : FooApiService by lazy {\n        retrofit.create(FooApiService::class.java)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The server returns a normal HTTP200 text/html body response in the browser (I&amp;#39;m using a dummy API here). However I can&amp;#39;t get it using the retrofit2 service (the function never returns):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private var job = Job()\nprivate val fooScope = CoroutineScope(job + Dispatchers.IO)\nprivate fun doStuff() {\n  fooScope.async {\n    FooApi.retrofitService.getInt().execute().body()\n    Log.i(TAG, &amp;quot;We never reach here! Why?&amp;quot;)\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Why?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkrea4", "is_robot_indexable": true, "report_reasons": null, "author": "tofuwat", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gkrea4/retrofit2_api_request_never_returns_why/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gkrea4/retrofit2_api_request_never_returns_why/", "subreddit_subscribers": 31705, "created_utc": 1589618503.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Just wander what was the reason for adding such feature to the language. Why were they needed, what problem do they solve?", "author_fullname": "t2_4djq8f1r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is the point of companion objects?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gkbswd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589587211.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Just wander what was the reason for adding such feature to the language. Why were they needed, what problem do they solve?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkbswd", "is_robot_indexable": true, "report_reasons": null, "author": "lowercase1024", "discussion_type": null, "num_comments": 25, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gkbswd/what_is_the_point_of_companion_objects/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gkbswd/what_is_the_point_of_companion_objects/", "subreddit_subscribers": 31705, "created_utc": 1589558411.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_jxff6u5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A pragmatic Koin crash course", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gkfxh7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589600285.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rockandnull.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkfxh7", "is_robot_indexable": true, "report_reasons": null, "author": "palebt", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gkfxh7/a_pragmatic_koin_crash_course/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.rockandnull.com/koin-android-example/", "subreddit_subscribers": 31705, "created_utc": 1589571485.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hello, so i was thinking of getting into Android development and chose Kotlin as my preferred language. I don't know Kotlin or Java (just know about Python) and was wondering what resources you guys recommend. I'm currently looking at two books i want to bug. Android Apprentice and Kotlin Apprentice ([these ones](https://imgur.com/a/5PpVZwk)). Which one would be the best or which other books should i go with? I find that books are more systematic and streamlined compared to YouTube videos that's why i leaning towards books instead of tutorials on YouTube.\n\nAny advice on what resources for someone who doesn't know Java or Kotlin would be appreciated. Thanks", "author_fullname": "t2_zdv7tnj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help with starting out in Kotlin", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gkdkyl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.73, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589592847.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, so i was thinking of getting into Android development and chose Kotlin as my preferred language. I don&amp;#39;t know Kotlin or Java (just know about Python) and was wondering what resources you guys recommend. I&amp;#39;m currently looking at two books i want to bug. Android Apprentice and Kotlin Apprentice (&lt;a href=\"https://imgur.com/a/5PpVZwk\"&gt;these ones&lt;/a&gt;). Which one would be the best or which other books should i go with? I find that books are more systematic and streamlined compared to YouTube videos that&amp;#39;s why i leaning towards books instead of tutorials on YouTube.&lt;/p&gt;\n\n&lt;p&gt;Any advice on what resources for someone who doesn&amp;#39;t know Java or Kotlin would be appreciated. Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkdkyl", "is_robot_indexable": true, "report_reasons": null, "author": "racka98", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gkdkyl/help_with_starting_out_in_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gkdkyl/help_with_starting_out_in_kotlin/", "subreddit_subscribers": 31705, "created_utc": 1589564047.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_11855w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Judge0 IDE adds Kotlin support", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gk03pm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589536202.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "ide.judge0.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gk03pm", "is_robot_indexable": true, "report_reasons": null, "author": "hermanzdosilovic", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gk03pm/judge0_ide_adds_kotlin_support/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://ide.judge0.com/?YZyR", "subreddit_subscribers": 31705, "created_utc": 1589507402.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I work with a decent amount of byte data, and I'm writing some example byte arrays for unit tests. The default way of doing this in Kotlin is pretty cumbersome:\n\n    val array = byteArrayOf(\n        0xDE.toByte(), 0xAD.toByte(), 0xBE.toByte(), 0xEF.toByte()\n    )\n\nIs there any more elegant way of doing this? In general I love Kotlin, but this byte declaration syntax and the use of infix functions instead of bitshift operators have been something of a downgrade from Java. Or am I missing something? I've thought of trying to make some kind of convenience function, though I'm not sure if it's any better:\n\n    fun b(value: Int): Byte {\n        return value.toByte()\n    }\n\nWhich then lets me do:\n\n    val array = byteArrayOf(\n        b(0xDE), b(0xAD), b(0xBE), b(0xEF)\n    )\n\nAm I missing something here or are byte literals just kinda clunky in Kotlin?", "author_fullname": "t2_6uqbg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Less clunky way of declaring byte literals?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gjt5iv", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589513214.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I work with a decent amount of byte data, and I&amp;#39;m writing some example byte arrays for unit tests. The default way of doing this in Kotlin is pretty cumbersome:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val array = byteArrayOf(\n    0xDE.toByte(), 0xAD.toByte(), 0xBE.toByte(), 0xEF.toByte()\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is there any more elegant way of doing this? In general I love Kotlin, but this byte declaration syntax and the use of infix functions instead of bitshift operators have been something of a downgrade from Java. Or am I missing something? I&amp;#39;ve thought of trying to make some kind of convenience function, though I&amp;#39;m not sure if it&amp;#39;s any better:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun b(value: Int): Byte {\n    return value.toByte()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which then lets me do:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val array = byteArrayOf(\n    b(0xDE), b(0xAD), b(0xBE), b(0xEF)\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Am I missing something here or are byte literals just kinda clunky in Kotlin?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjt5iv", "is_robot_indexable": true, "report_reasons": null, "author": "CrossRelations", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gjt5iv/less_clunky_way_of_declaring_byte_literals/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/gjt5iv/less_clunky_way_of_declaring_byte_literals/", "subreddit_subscribers": 31705, "created_utc": 1589484414.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_z2xl9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Code a (mini) Twitter clone in Kotlin using the Hexagon Toolkit", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gjq174", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;You can learn how to do a (mini) Twitter clone in &lt;a href=\"https://twitter.com/hashtag/Kotlin?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#Kotlin&lt;/a&gt; using Hexagon with a great example project coded by &lt;a href=\"https://twitter.com/bikramjtsingh?ref_src=twsrc%5Etfw\"&gt;@bikramjtsingh&lt;/a&gt; Check it out here: &lt;a href=\"https://t.co/Q0LKdgZBOP\"&gt;https://t.co/Q0LKdgZBOP&lt;/a&gt;&lt;/p&gt;&amp;mdash; HexagonKt (@hexagon_kt) &lt;a href=\"https://twitter.com/hexagon_kt/status/1260973355362107392?ref_src=twsrc%5Etfw\"&gt;May 14, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "height": 292}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/hexagon_kt/status/1260973355362107392", "author_name": "HexagonKt", "height": 292, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;You can learn how to do a (mini) Twitter clone in &lt;a href=\"https://twitter.com/hashtag/Kotlin?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#Kotlin&lt;/a&gt; using Hexagon with a great example project coded by &lt;a href=\"https://twitter.com/bikramjtsingh?ref_src=twsrc%5Etfw\"&gt;@bikramjtsingh&lt;/a&gt; Check it out here: &lt;a href=\"https://t.co/Q0LKdgZBOP\"&gt;https://t.co/Q0LKdgZBOP&lt;/a&gt;&lt;/p&gt;&amp;mdash; HexagonKt (@hexagon_kt) &lt;a href=\"https://twitter.com/hexagon_kt/status/1260973355362107392?ref_src=twsrc%5Etfw\"&gt;May 14, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/hexagon_kt", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;You can learn how to do a (mini) Twitter clone in &lt;a href=\"https://twitter.com/hashtag/Kotlin?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#Kotlin&lt;/a&gt; using Hexagon with a great example project coded by &lt;a href=\"https://twitter.com/bikramjtsingh?ref_src=twsrc%5Etfw\"&gt;@bikramjtsingh&lt;/a&gt; Check it out here: &lt;a href=\"https://t.co/Q0LKdgZBOP\"&gt;https://t.co/Q0LKdgZBOP&lt;/a&gt;&lt;/p&gt;&amp;mdash; HexagonKt (@hexagon_kt) &lt;a href=\"https://twitter.com/hexagon_kt/status/1260973355362107392?ref_src=twsrc%5Etfw\"&gt;May 14, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "width": 350, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/gjq174", "height": 292}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589503680.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjq174", "is_robot_indexable": true, "report_reasons": null, "author": "jaguililla", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/gjq174/code_a_mini_twitter_clone_in_kotlin_using_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/hexagon_kt/status/1260973355362107392", "subreddit_subscribers": 31705, "created_utc": 1589474880.0, "num_crossposts": 0, "media": {"type": "twitter.com", "oembed": {"provider_url": "https://twitter.com", "version": "1.0", "url": "https://twitter.com/hexagon_kt/status/1260973355362107392", "author_name": "HexagonKt", "height": 292, "width": 350, "html": "&lt;blockquote class=\"twitter-video\"&gt;&lt;p lang=\"en\" dir=\"ltr\"&gt;You can learn how to do a (mini) Twitter clone in &lt;a href=\"https://twitter.com/hashtag/Kotlin?src=hash&amp;amp;ref_src=twsrc%5Etfw\"&gt;#Kotlin&lt;/a&gt; using Hexagon with a great example project coded by &lt;a href=\"https://twitter.com/bikramjtsingh?ref_src=twsrc%5Etfw\"&gt;@bikramjtsingh&lt;/a&gt; Check it out here: &lt;a href=\"https://t.co/Q0LKdgZBOP\"&gt;https://t.co/Q0LKdgZBOP&lt;/a&gt;&lt;/p&gt;&amp;mdash; HexagonKt (@hexagon_kt) &lt;a href=\"https://twitter.com/hexagon_kt/status/1260973355362107392?ref_src=twsrc%5Etfw\"&gt;May 14, 2020&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n", "author_url": "https://twitter.com/hexagon_kt", "provider_name": "Twitter", "cache_age": 3153600000, "type": "rich"}}, "is_video": false}}], "after": "t3_gjq174", "before": null}}