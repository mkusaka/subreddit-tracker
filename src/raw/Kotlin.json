{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi folks,\n\nIn these days of quarantine, I started an open source project. I'd like to share it with you and gently ask, to everyone interested, feedback or critiques.\n\nThe project is hosted here: [https://github.com/besil/kobot](https://github.com/besil/kobot).\n\nIt is a framework to create conversational bots, using a simple configuration file.\n\nThe goal is to help non technical users to create conversational channels in an easy way. I know some proprietary software already do this, but I didn't find any open source project about it.\n\nMain feature include:\n\n* multiple conversational channels: telegram, http, cli, ...\n* Database interaction through sql language, in order to send dynamic messages or to store information\n* External HTTP API integration, in order to interact with web services\n* Published as docker image to simplify devops\n\nFramework is implemented 100% in Kotlin, with Spring Boot integration.\n\nAny critique or feedback is welcome!\n\nThank you!", "author_fullname": "t2_10yftk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kobot - configurable conversational bot framework, open source", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g77jye", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587760327.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi folks,&lt;/p&gt;\n\n&lt;p&gt;In these days of quarantine, I started an open source project. I&amp;#39;d like to share it with you and gently ask, to everyone interested, feedback or critiques.&lt;/p&gt;\n\n&lt;p&gt;The project is hosted here: &lt;a href=\"https://github.com/besil/kobot\"&gt;https://github.com/besil/kobot&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;It is a framework to create conversational bots, using a simple configuration file.&lt;/p&gt;\n\n&lt;p&gt;The goal is to help non technical users to create conversational channels in an easy way. I know some proprietary software already do this, but I didn&amp;#39;t find any open source project about it.&lt;/p&gt;\n\n&lt;p&gt;Main feature include:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;multiple conversational channels: telegram, http, cli, ...&lt;/li&gt;\n&lt;li&gt;Database interaction through sql language, in order to send dynamic messages or to store information&lt;/li&gt;\n&lt;li&gt;External HTTP API integration, in order to interact with web services&lt;/li&gt;\n&lt;li&gt;Published as docker image to simplify devops&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Framework is implemented 100% in Kotlin, with Spring Boot integration.&lt;/p&gt;\n\n&lt;p&gt;Any critique or feedback is welcome!&lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g77jye", "is_robot_indexable": true, "report_reasons": null, "author": "besil", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g77jye/kobot_configurable_conversational_bot_framework/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g77jye/kobot_configurable_conversational_bot_framework/", "subreddit_subscribers": 30556, "created_utc": 1587731527.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_noyby", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin Primary &amp; Secondary Constructors with Examples", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_g77bfr", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587759249.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "kotlin-android.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g77bfr", "is_robot_indexable": true, "report_reasons": null, "author": "waheed388", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g77bfr/kotlin_primary_secondary_constructors_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kotlin-android.com/kotlin-primary-and-secondary-constructors/", "subreddit_subscribers": 30556, "created_utc": 1587730449.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_10t6zo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to diagnose OutOfMemoryError in Android?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g75wh6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587752081.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.heaphero.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g75wh6", "is_robot_indexable": true, "report_reasons": null, "author": "mike_jack", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g75wh6/how_to_diagnose_outofmemoryerror_in_android/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.heaphero.io/2018/06/18/how-to-diagnose-outofmemoryerror-in-android/", "subreddit_subscribers": 30556, "created_utc": 1587723281.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I have a Ktor application with fun main() inside Application.kt with the uk.astro at the top of the file. What should my mainClassName be inside Gradle? I've tried 'uk.astro.MainKt' but the resulting jar produces a classpath error.", "author_fullname": "t2_za4t2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help with Ktor mainClassName", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g72lf2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587734627.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a Ktor application with fun main() inside Application.kt with the uk.astro at the top of the file. What should my mainClassName be inside Gradle? I&amp;#39;ve tried &amp;#39;uk.astro.MainKt&amp;#39; but the resulting jar produces a classpath error.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g72lf2", "is_robot_indexable": true, "report_reasons": null, "author": "lordmyd", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g72lf2/help_with_ktor_mainclassname/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g72lf2/help_with_ktor_mainclassname/", "subreddit_subscribers": 30556, "created_utc": 1587705827.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_4zy7pmxi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin Microservices With Spring Boot And Spring Cloud: Part 3 - Inter-service communication", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g6n7sd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 24, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/EJUtU_VGpuk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Microservices With Spring Boot And Spring Cloud: Part 3 - Inter-service communication", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/EJUtU_VGpuk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Piotr Mi\u0144kowski", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/EJUtU_VGpuk/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAieNgran7umupT_D50KaGw"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/EJUtU_VGpuk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/g6n7sd", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 24, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587679478.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g6n7sd", "is_robot_indexable": true, "report_reasons": null, "author": "piotr_minkowski", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g6n7sd/kotlin_microservices_with_spring_boot_and_spring/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/EJUtU_VGpuk", "subreddit_subscribers": 30556, "created_utc": 1587650678.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Microservices With Spring Boot And Spring Cloud: Part 3 - Inter-service communication", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/EJUtU_VGpuk?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Piotr Mi\u0144kowski", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/EJUtU_VGpuk/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCAieNgran7umupT_D50KaGw"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "For a new project of mine, I've been working on a command system that uses a registry.\n\n[Registry](https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/com/deflatedpickle/ducknroll/common/common/registry/Registry.kt), [Command Example](https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/com/deflatedpickle/ducknroll/common/common/command/HelpCommand.kt), Commands are registered like [this](https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/example/main.kt#L19). When you want to parse user input for a command, you use [this](https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/example/main.kt#L34), which is then called like [this](https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/com/deflatedpickle/ducknroll/common/common/parser/CommandParser.kt).\n\n&amp;#x200B;\n\nYou'll probably notice the fatal flaw, I didn't think about it before committing. It's hardcoded to use `HelpCommand`.\n\nSo, I went back to the Scrabble board the next morning. I made [these changes](https://github.com/DeflatedPickle/ducknroll/commit/7b04fa5e8741c64856fa193a1846998f62af8fac). The most notable is that commands are now registered with the constructor reference (`Registries.command.register(\"help\", ::HelpCommand)`) as I decided it would be easiest to construct a zero-argument object, then change the arguments of the command after construction.\n\nIt runs, great. It constructs the command, it registers it fine, it even executes it fine. But here's the issue: I have no access to that constructed instance to change the arguments.\n\nIn the context of `command.get(split[0])?.run { }`, `this` is a `KFunction&lt;IHasRegistry&gt;`. I have access to the type the function returns, the argument types it takes, but I have no access to the actual instance.\n\n&amp;#x200B;\n\nAm I doing something blatantly wrong ~~as usual~~? Is this yet to be implemented? Are there any hacky ways I can get that *darn* instance?", "author_fullname": "t2_chvvk0s", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin/Native usage of an object created by invoking the constructor", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g6pfl5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587686950.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For a new project of mine, I&amp;#39;ve been working on a command system that uses a registry.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/com/deflatedpickle/ducknroll/common/common/registry/Registry.kt\"&gt;Registry&lt;/a&gt;, &lt;a href=\"https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/com/deflatedpickle/ducknroll/common/common/command/HelpCommand.kt\"&gt;Command Example&lt;/a&gt;, Commands are registered like &lt;a href=\"https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/example/main.kt#L19\"&gt;this&lt;/a&gt;. When you want to parse user input for a command, you use &lt;a href=\"https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/example/main.kt#L34\"&gt;this&lt;/a&gt;, which is then called like &lt;a href=\"https://github.com/DeflatedPickle/ducknroll/blob/master/src/mingwMain/kotlin/com/deflatedpickle/ducknroll/common/common/parser/CommandParser.kt\"&gt;this&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;You&amp;#39;ll probably notice the fatal flaw, I didn&amp;#39;t think about it before committing. It&amp;#39;s hardcoded to use &lt;code&gt;HelpCommand&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;So, I went back to the Scrabble board the next morning. I made &lt;a href=\"https://github.com/DeflatedPickle/ducknroll/commit/7b04fa5e8741c64856fa193a1846998f62af8fac\"&gt;these changes&lt;/a&gt;. The most notable is that commands are now registered with the constructor reference (&lt;code&gt;Registries.command.register(&amp;quot;help&amp;quot;, ::HelpCommand)&lt;/code&gt;) as I decided it would be easiest to construct a zero-argument object, then change the arguments of the command after construction.&lt;/p&gt;\n\n&lt;p&gt;It runs, great. It constructs the command, it registers it fine, it even executes it fine. But here&amp;#39;s the issue: I have no access to that constructed instance to change the arguments.&lt;/p&gt;\n\n&lt;p&gt;In the context of &lt;code&gt;command.get(split[0])?.run { }&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt; is a &lt;code&gt;KFunction&amp;lt;IHasRegistry&amp;gt;&lt;/code&gt;. I have access to the type the function returns, the argument types it takes, but I have no access to the actual instance.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Am I doing something blatantly wrong &lt;del&gt;as usual&lt;/del&gt;? Is this yet to be implemented? Are there any hacky ways I can get that &lt;em&gt;darn&lt;/em&gt; instance?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g6pfl5", "is_robot_indexable": true, "report_reasons": null, "author": "DeflatedPickle", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g6pfl5/kotlinnative_usage_of_an_object_created_by/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g6pfl5/kotlinnative_usage_of_an_object_created_by/", "subreddit_subscribers": 30556, "created_utc": 1587658150.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I'm asking myself what the real intention behind the `also` scope function is. In the [documentation](https://kotlinlang.org/docs/reference/scope-functions.html#also) they are saying \n\n&gt;also is good for performing some actions that take the context object as an argument. Use also for additional actions that don't alter the object, such as logging or  printing debug information. Usually, you can remove the calls of also from the call chain without breaking the program logic.\n\nSo far, I haven't seen any usage of `also` where you can remove the scope function without breaking the program logic. What is your opinion about it? How are you using it?\n\nI've also created a post on stack overflow about it: [https://stackoverflow.com/questions/61367281/whats-the-real-intention-behind-kotlins-also-scope-function](https://stackoverflow.com/questions/61367281/whats-the-real-intention-behind-kotlins-also-scope-function)", "author_fullname": "t2_143qwk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Correct usage of also scope function", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g6oq6c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587684624.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m asking myself what the real intention behind the &lt;code&gt;also&lt;/code&gt; scope function is. In the &lt;a href=\"https://kotlinlang.org/docs/reference/scope-functions.html#also\"&gt;documentation&lt;/a&gt; they are saying &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;also is good for performing some actions that take the context object as an argument. Use also for additional actions that don&amp;#39;t alter the object, such as logging or  printing debug information. Usually, you can remove the calls of also from the call chain without breaking the program logic.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So far, I haven&amp;#39;t seen any usage of &lt;code&gt;also&lt;/code&gt; where you can remove the scope function without breaking the program logic. What is your opinion about it? How are you using it?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve also created a post on stack overflow about it: &lt;a href=\"https://stackoverflow.com/questions/61367281/whats-the-real-intention-behind-kotlins-also-scope-function\"&gt;https://stackoverflow.com/questions/61367281/whats-the-real-intention-behind-kotlins-also-scope-function&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g6oq6c", "is_robot_indexable": true, "report_reasons": null, "author": "tonymt00", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g6oq6c/correct_usage_of_also_scope_function/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g6oq6c/correct_usage_of_also_scope_function/", "subreddit_subscribers": 30556, "created_utc": 1587655824.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_qyus3xe", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin Koin Scope Illustrated", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g6n0w0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587678792.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g6n0w0", "is_robot_indexable": true, "report_reasons": null, "author": "ElyeProj", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g6n0w0/kotlin_koin_scope_illustrated/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@elye.project/kotlin-koin-scope-illustrated-3bfa6c7ae98?source=friends_link&amp;sk=f771bc0469b042d155b6a2af5ace065c", "subreddit_subscribers": 30556, "created_utc": 1587649992.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_qt3fk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Do you know which one is the best for developing cross-platform application: Flutter Vs Kotlin?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g7297y", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1587732976.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "bacancytechnology.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g7297y", "is_robot_indexable": true, "report_reasons": null, "author": "freelancerkatie", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g7297y/do_you_know_which_one_is_the_best_for_developing/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.bacancytechnology.com/blog/flutter-vs-kotlin", "subreddit_subscribers": 30556, "created_utc": 1587704176.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Languages like Rust, Go or Swift decided to have mandatory curly braces and do away with parentheses for the condition:\n\nKotlin:\n```kotlin\nval result = if (x &lt; 5) true else false\n```\n\nRust:\n```rust\nlet result = if x &lt; 5 { true } else { false };\n```\n\nThis is, in my opinion, better. There are many mistakes that are made by forgetting braces for `if`, for example [Apple's goto fail](https://nakedsecurity.sophos.com/2014/02/24/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch/).\n```Kotlin:\nif (x &lt; 5)\n    do_something_1()\n    do_something_2()\n```\nIn the example above, `do_something_2()` will be always executed, even though someone might think it's part of the `if` because of the indentation.\n\nNow, I don't want to make a breaking change the core of the language, of course. However, I think that an addition of a braces-mandatory `if` (which would be used by not adding parentheses around the `if` condition) could be a nice addition to the language.\n\nWhat do you think?", "author_fullname": "t2_158v65", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Opinions on if without parentheses", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_g6cw4c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1587630586.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Languages like Rust, Go or Swift decided to have mandatory curly braces and do away with parentheses for the condition:&lt;/p&gt;\n\n&lt;p&gt;Kotlin:\n&lt;code&gt;kotlin\nval result = if (x &amp;lt; 5) true else false\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Rust:\n&lt;code&gt;rust\nlet result = if x &amp;lt; 5 { true } else { false };\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This is, in my opinion, better. There are many mistakes that are made by forgetting braces for &lt;code&gt;if&lt;/code&gt;, for example &lt;a href=\"https://nakedsecurity.sophos.com/2014/02/24/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch/\"&gt;Apple&amp;#39;s goto fail&lt;/a&gt;.\n&lt;code&gt;Kotlin:\nif (x &amp;lt; 5)\n    do_something_1()\n    do_something_2()\n&lt;/code&gt;\nIn the example above, &lt;code&gt;do_something_2()&lt;/code&gt; will be always executed, even though someone might think it&amp;#39;s part of the &lt;code&gt;if&lt;/code&gt; because of the indentation.&lt;/p&gt;\n\n&lt;p&gt;Now, I don&amp;#39;t want to make a breaking change the core of the language, of course. However, I think that an addition of a braces-mandatory &lt;code&gt;if&lt;/code&gt; (which would be used by not adding parentheses around the &lt;code&gt;if&lt;/code&gt; condition) could be a nice addition to the language.&lt;/p&gt;\n\n&lt;p&gt;What do you think?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "g6cw4c", "is_robot_indexable": true, "report_reasons": null, "author": "kbruen", "discussion_type": null, "num_comments": 33, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/g6cw4c/opinions_on_if_without_parentheses/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/g6cw4c/opinions_on_if_without_parentheses/", "subreddit_subscribers": 30556, "created_utc": 1587601786.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_g6cw4c", "before": null}}