{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - July", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hizg5z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 36, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1593590733.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hizg5z", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 6, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/hizg5z/whos_hiring_typescript_developers_july/", "subreddit_subscribers": 43748, "created_utc": 1593561933.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_2stz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Moving from TypeScript to Rust / WebAssembly", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hnw5v6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1594295565.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "nicolodavis.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://nicolodavis.com/blog/typescript-to-rust/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hnw5v6", "is_robot_indexable": true, "report_reasons": null, "author": "koavf", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hnw5v6/moving_from_typescript_to_rust_webassembly/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://nicolodavis.com/blog/typescript-to-rust/", "subreddit_subscribers": 43748, "created_utc": 1594266765.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_6bq779u6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Extracting and Hashing Lazy-Loaded CSS in Angular", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_hnz6r0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/SB4mvfwISad8GgSDAMBbRN71fmbpD7sp7xRwUIn2niw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1594310503.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "volosoft.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://volosoft.com/blog/Extracting-and-Hashing-Lazy-Loaded-CSS-in-Angular", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/3so8bb2Nji2CsCwudA42cyfbw3BKlmi7P7UfRT9p6FU.jpg?auto=webp&amp;s=9bb106b3e2d31ebad7cb7a4ad0214e83b7f81157", "width": 1066, "height": 1066}, "resolutions": [{"url": "https://external-preview.redd.it/3so8bb2Nji2CsCwudA42cyfbw3BKlmi7P7UfRT9p6FU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d24f2c86281ca814783abf1b6b573227becd7c78", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/3so8bb2Nji2CsCwudA42cyfbw3BKlmi7P7UfRT9p6FU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=cf505837e0a9828826223c68256591fbb25ea723", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/3so8bb2Nji2CsCwudA42cyfbw3BKlmi7P7UfRT9p6FU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=afecd661fb2cbe5117cf3bb426607e3211b7e1b0", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/3so8bb2Nji2CsCwudA42cyfbw3BKlmi7P7UfRT9p6FU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bc4edbac133b578e3dcbff2f748a2ff74b66a988", "width": 640, "height": 640}, {"url": "https://external-preview.redd.it/3so8bb2Nji2CsCwudA42cyfbw3BKlmi7P7UfRT9p6FU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ff1ec25ff3334c53c903f8cdf4785cc4729d4489", "width": 960, "height": 960}], "variants": {}, "id": "KKOasHjB0FTs-ov5JJTt3xJiixzs1Xel1NgysYjBUGA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hnz6r0", "is_robot_indexable": true, "report_reasons": null, "author": "Volosoft", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hnz6r0/extracting_and_hashing_lazyloaded_css_in_angular/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://volosoft.com/blog/Extracting-and-Hashing-Lazy-Loaded-CSS-in-Angular", "subreddit_subscribers": 43748, "created_utc": 1594281703.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The TypeScript documentation includes lots of examples of typing arrow functions, but is it possible to use type when using the `function` keyword?\n\n```js\ntype T = (n: string) =&gt; string\n\nconst arrowGreet: T = (name) =&gt; `Hello ${name}`\n\n// How can I type fnGreet as T?\nfunction fnGreet(name) {\n    return `Hello ${name}`\n}\n```", "author_fullname": "t2_r7rt7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is it possible to type a function that has been declared with the function keyword?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hnodve", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594267470.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The TypeScript documentation includes lots of examples of typing arrow functions, but is it possible to use type when using the &lt;code&gt;function&lt;/code&gt; keyword?&lt;/p&gt;\n\n&lt;p&gt;```js\ntype T = (n: string) =&amp;gt; string&lt;/p&gt;\n\n&lt;p&gt;const arrowGreet: T = (name) =&amp;gt; &lt;code&gt;Hello ${name}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;// How can I type fnGreet as T?\nfunction fnGreet(name) {\n    return &lt;code&gt;Hello ${name}&lt;/code&gt;\n}\n```&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hnodve", "is_robot_indexable": true, "report_reasons": null, "author": "sean_mcp", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hnodve/is_it_possible_to_type_a_function_that_has_been/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hnodve/is_it_possible_to_type_a_function_that_has_been/", "subreddit_subscribers": 43748, "created_utc": 1594238670.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "For example, let's say my app allow users to do CRUD operation on country resources.\nMy GET response would be an array of Countries, typed like this:\n        \n    interface Country {\n      states: State[];\n      name: string;\n      id: number;\n      abbreviation: string;\n    }\n    \n    interface State {\n      name: string;\n      id: number;\n      abbreviation: string;\n      cities: City[];\n    }\n    \n    interface City {\n      name: string;\n      id: number;\n      abbreviation: string;\n    }\n\n\nLet's assume that creating a Country involves the user sending States and Cities in the same payload.\n\nSince we're creating resources, they wouldn't have an id assigned to them yet, it doesn't make sense for the POST payload to contain ids. To adequately type my POST payload, I'd have to duplicate Country, State, City, and remove Id or make it an optional field.\n\n    interface PostCountry {\n      states: State[];\n      name: string;\n      abbreviation: string;\n    }\n    \n    interface PostState {\n      name: string;\n      abbreviation: string;\n      cities: City[];\n    }\n    \n    interface PostCity {\n      name: string;\n      abbreviation: string;\n    }\n\n\nI'm new to Typescript and is currently converting an app to Typescript. How do you guys manage something like this? Is it inevitable to have multiple type definitions for each REST operation?", "author_fullname": "t2_ac6xo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How should I manage type definition for REST calls?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hnbrrf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594217414.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For example, let&amp;#39;s say my app allow users to do CRUD operation on country resources.\nMy GET response would be an array of Countries, typed like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;interface Country {\n  states: State[];\n  name: string;\n  id: number;\n  abbreviation: string;\n}\n\ninterface State {\n  name: string;\n  id: number;\n  abbreviation: string;\n  cities: City[];\n}\n\ninterface City {\n  name: string;\n  id: number;\n  abbreviation: string;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Let&amp;#39;s assume that creating a Country involves the user sending States and Cities in the same payload.&lt;/p&gt;\n\n&lt;p&gt;Since we&amp;#39;re creating resources, they wouldn&amp;#39;t have an id assigned to them yet, it doesn&amp;#39;t make sense for the POST payload to contain ids. To adequately type my POST payload, I&amp;#39;d have to duplicate Country, State, City, and remove Id or make it an optional field.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;interface PostCountry {\n  states: State[];\n  name: string;\n  abbreviation: string;\n}\n\ninterface PostState {\n  name: string;\n  abbreviation: string;\n  cities: City[];\n}\n\ninterface PostCity {\n  name: string;\n  abbreviation: string;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m new to Typescript and is currently converting an app to Typescript. How do you guys manage something like this? Is it inevitable to have multiple type definitions for each REST operation?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hnbrrf", "is_robot_indexable": true, "report_reasons": null, "author": "-odin", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hnbrrf/how_should_i_manage_type_definition_for_rest_calls/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hnbrrf/how_should_i_manage_type_definition_for_rest_calls/", "subreddit_subscribers": 43748, "created_utc": 1594188614.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm sure part of the answer is that there may be no match, hence blank array, which I guess counts as an empty object. Is that right?\n\nIf so, does the null type equaling an object bug in JS not apply to TS?\n\n       public fileName: string;\n    \n       constructor(\n          contentType: contentTypes\n          , fileName: string\n          , folderPath: string\n       ) {\n          this.contentType = this.getContentType();\n          this.fileName = fileName;\n          this.folderPath = folderPath;\n    \n          this.fullFilePath = this.setFullFolderPath();\n       }\n    \n       // --------------- Internal methods\n    \n       private getContentType() {\n          // grab the first number\n          const firstNumberPattern: RegExp = /^\\d+/;\n          const firstNumber: number | null = \n        Number(this!.fileName!.match(firstNumberPattern)[0]);\n        /*\n          this: this\n          Object is possibly 'null'.ts(2531)\n        */\n\nHow should the error be cleared? Seems wierd that the error is on `this`. And `!` is not asserting not null, as expected. And adding a union of null onto `firstNumber` also didn't help.", "author_fullname": "t2_3dgvi4uq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why is this object possibly null?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hnnavt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594264189.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m sure part of the answer is that there may be no match, hence blank array, which I guess counts as an empty object. Is that right?&lt;/p&gt;\n\n&lt;p&gt;If so, does the null type equaling an object bug in JS not apply to TS?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   public fileName: string;\n\n   constructor(\n      contentType: contentTypes\n      , fileName: string\n      , folderPath: string\n   ) {\n      this.contentType = this.getContentType();\n      this.fileName = fileName;\n      this.folderPath = folderPath;\n\n      this.fullFilePath = this.setFullFolderPath();\n   }\n\n   // --------------- Internal methods\n\n   private getContentType() {\n      // grab the first number\n      const firstNumberPattern: RegExp = /^\\d+/;\n      const firstNumber: number | null = \n    Number(this!.fileName!.match(firstNumberPattern)[0]);\n    /*\n      this: this\n      Object is possibly &amp;#39;null&amp;#39;.ts(2531)\n    */\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How should the error be cleared? Seems wierd that the error is on &lt;code&gt;this&lt;/code&gt;. And &lt;code&gt;!&lt;/code&gt; is not asserting not null, as expected. And adding a union of null onto &lt;code&gt;firstNumber&lt;/code&gt; also didn&amp;#39;t help.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hnnavt", "is_robot_indexable": true, "report_reasons": null, "author": "javascript_dev", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hnnavt/why_is_this_object_possibly_null/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hnnavt/why_is_this_object_possibly_null/", "subreddit_subscribers": 43748, "created_utc": 1594235389.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've got a type\n    type bin = 0|1;\nI'd like to make a type that would be\n    type key = bin + '_' + bin;\nThis is to access properties of an object that has keys like 0_1\nIs this possible", "author_fullname": "t2_3fiyykou", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Dynamic string types", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hnh2up", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594243789.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve got a type\n    type bin = 0|1;\nI&amp;#39;d like to make a type that would be\n    type key = bin + &amp;#39;_&amp;#39; + bin;\nThis is to access properties of an object that has keys like 0_1\nIs this possible&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hnh2up", "is_robot_indexable": true, "report_reasons": null, "author": "CloudsOfMagellan", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hnh2up/dynamic_string_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hnh2up/dynamic_string_types/", "subreddit_subscribers": 43748, "created_utc": 1594214989.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi everyone, I'm searching a GUI editor for complex objects. I tried dat.GUI but it's not working well with arrays and optional (undefined) properties. Anyone can suggest me an alternative or at least knows a package like this? I'm starting to create one on my own but it's a lot of work and I have other priorities. If you want to see what I need to edit checkout this: https://github.com/matteobruni/tsparticles/wiki/tsParticles-Options", "author_fullname": "t2_j36a1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GUI live editor for complex Object", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hngywz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1594243370.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone, I&amp;#39;m searching a GUI editor for complex objects. I tried dat.GUI but it&amp;#39;s not working well with arrays and optional (undefined) properties. Anyone can suggest me an alternative or at least knows a package like this? I&amp;#39;m starting to create one on my own but it&amp;#39;s a lot of work and I have other priorities. If you want to see what I need to edit checkout this: &lt;a href=\"https://github.com/matteobruni/tsparticles/wiki/tsParticles-Options\"&gt;https://github.com/matteobruni/tsparticles/wiki/tsParticles-Options&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/vxl_ww_hlPlLSWG1L587SSKkQnQRpzgNkXpr7mvBhmM.jpg?auto=webp&amp;s=583b9b78a5ebb4059c85f0169f4305e30c841f05", "width": 1919, "height": 1014}, "resolutions": [{"url": "https://external-preview.redd.it/vxl_ww_hlPlLSWG1L587SSKkQnQRpzgNkXpr7mvBhmM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=dfafa95fecf9306cc696c63a94f059d92483f7a7", "width": 108, "height": 57}, {"url": "https://external-preview.redd.it/vxl_ww_hlPlLSWG1L587SSKkQnQRpzgNkXpr7mvBhmM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fef91a10cc08bdeb9a8d9017d8fb1de4e7a2302d", "width": 216, "height": 114}, {"url": "https://external-preview.redd.it/vxl_ww_hlPlLSWG1L587SSKkQnQRpzgNkXpr7mvBhmM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8454ca843da449b089fc5e5a60c1e35231192ace", "width": 320, "height": 169}, {"url": "https://external-preview.redd.it/vxl_ww_hlPlLSWG1L587SSKkQnQRpzgNkXpr7mvBhmM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5cf0f360344b93ea40f55167f8a06ac28bdf2a8b", "width": 640, "height": 338}, {"url": "https://external-preview.redd.it/vxl_ww_hlPlLSWG1L587SSKkQnQRpzgNkXpr7mvBhmM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=1f85a49767d315005e192f618028b7c4fa53c292", "width": 960, "height": 507}, {"url": "https://external-preview.redd.it/vxl_ww_hlPlLSWG1L587SSKkQnQRpzgNkXpr7mvBhmM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8aeab8e7baae7de6988750cce551fd1713083787", "width": 1080, "height": 570}], "variants": {}, "id": "GFzVwXWF8jIAnewVrsFmza1cr8tihLrGfuGG3F9aFpw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hngywz", "is_robot_indexable": true, "report_reasons": null, "author": "CaelanIt", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hngywz/gui_live_editor_for_complex_object/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hngywz/gui_live_editor_for_complex_object/", "subreddit_subscribers": 43748, "created_utc": 1594214570.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "When typing import or require statements my editor offers autocompletion for the file path\nIs there a way to achieve this elsewhere for the fs module for example.\nIn case it's relevant I use emacs with tide", "author_fullname": "t2_3fiyykou", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to get auto completion for file paths", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hnd28j", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594224237.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;When typing import or require statements my editor offers autocompletion for the file path\nIs there a way to achieve this elsewhere for the fs module for example.\nIn case it&amp;#39;s relevant I use emacs with tide&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hnd28j", "is_robot_indexable": true, "report_reasons": null, "author": "CloudsOfMagellan", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hnd28j/how_to_get_auto_completion_for_file_paths/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hnd28j/how_to_get_auto_completion_for_file_paths/", "subreddit_subscribers": 43748, "created_utc": 1594195437.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi,\nIs it possible to add only the properties which is defined in the interface?\n\nEg: \n\n\nInterface Car {\n\n\nmodel:string \n\n\nyear:number\n\n\n }\n\n\n// req={model:\"gla\",year:2020,brand:\"Tesla\"}\n\nfunction abc(req){\n\n\nlet car:Car\n\n\n\n}\n\n\n\nI need to assign only the properties which are defined in the interface. The method I'm currently using is car.model =req.model. Now the object is really long so the code is getting bigger and bigger.", "author_fullname": "t2_13dzlt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Assigning only the properties which is defined in interface", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hn0xu8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1594149356.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594177827.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,\nIs it possible to add only the properties which is defined in the interface?&lt;/p&gt;\n\n&lt;p&gt;Eg: &lt;/p&gt;\n\n&lt;p&gt;Interface Car {&lt;/p&gt;\n\n&lt;p&gt;model:string &lt;/p&gt;\n\n&lt;p&gt;year:number&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// req={model:&amp;quot;gla&amp;quot;,year:2020,brand:&amp;quot;Tesla&amp;quot;}&lt;/p&gt;\n\n&lt;p&gt;function abc(req){&lt;/p&gt;\n\n&lt;p&gt;let car:Car&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;I need to assign only the properties which are defined in the interface. The method I&amp;#39;m currently using is car.model =req.model. Now the object is really long so the code is getting bigger and bigger.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hn0xu8", "is_robot_indexable": true, "report_reasons": null, "author": "danishjoseph", "discussion_type": null, "num_comments": 18, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hn0xu8/assigning_only_the_properties_which_is_defined_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hn0xu8/assigning_only_the_properties_which_is_defined_in/", "subreddit_subscribers": 43748, "created_utc": 1594149027.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": " Queues and stacks are used in programming to process a collection of items in a certain order. Those data structures work either with a *first-in-first-out* or *last-in-first-out* system in which the order of processing is always directly coupled to the order of insertion. However, sometimes you need to have more control over the processing order then offered by the insertion order. \n\n[https://medium.com/@wim\\_jongeneel/priority-queue-in-typescript-6ef23116901?source=friends\\_link&amp;sk=a35b45b2a26f4cd5daafb84feafb6c88](https://medium.com/@wim_jongeneel/priority-queue-in-typescript-6ef23116901?source=friends_link&amp;sk=a35b45b2a26f4cd5daafb84feafb6c88)", "author_fullname": "t2_3cl7e290", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Priority Queue in TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_hmsedt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1594148215.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Queues and stacks are used in programming to process a collection of items in a certain order. Those data structures work either with a &lt;em&gt;first-in-first-out&lt;/em&gt; or &lt;em&gt;last-in-first-out&lt;/em&gt; system in which the order of processing is always directly coupled to the order of insertion. However, sometimes you need to have more control over the processing order then offered by the insertion order. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://medium.com/@wim_jongeneel/priority-queue-in-typescript-6ef23116901?source=friends_link&amp;amp;sk=a35b45b2a26f4cd5daafb84feafb6c88\"&gt;https://medium.com/@wim_jongeneel/priority-queue-in-typescript-6ef23116901?source=friends_link&amp;amp;sk=a35b45b2a26f4cd5daafb84feafb6c88&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hmsedt", "is_robot_indexable": true, "report_reasons": null, "author": "EvoNext", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/hmsedt/priority_queue_in_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/hmsedt/priority_queue_in_typescript/", "subreddit_subscribers": 43748, "created_utc": 1594119415.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_hmsedt", "before": null}}