{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_hyfeeop", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Red - Type-safe, composable, boilerplateless reducers ; https://github.com/betafcc/red", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gq1rj9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"reddit_video": {"fallback_url": "https://v.redd.it/t0wnti4hdt051/DASH_360?source=fallback", "height": 304, "width": 640, "scrubber_media_url": "https://v.redd.it/t0wnti4hdt051/DASH_96", "dash_url": "https://v.redd.it/t0wnti4hdt051/DASHPlaylist.mpd?a=1593005631%2CMGYxMmI3YjU3YWRmMWFhOWJkNzgyZjg3Zjc0MGFjMmZjZTIwZjZlM2M5YjE5MDBiNzcwZDU5NmU3ZTg4YTY3Ng%3D%3D&amp;v=v1&amp;f=sd", "duration": 139, "hls_url": "https://v.redd.it/t0wnti4hdt051/HLSPlaylist.m3u8?a=1593005631%2CMGYxMmI3YjU3YWRmMWFhOWJkNzgyZjg3Zjc0MGFjMmZjZTIwZjZlM2M5YjE5MDBiNzcwZDU5NmU3ZTg4YTY3Ng%3D%3D&amp;v=v1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590398978.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "v.redd.it", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gq1rj9", "is_robot_indexable": true, "report_reasons": null, "author": "betanii", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gq1rj9/red_typesafe_composable_boilerplateless_reducers/", "parent_whitelist_status": null, "stickied": false, "url": "https://v.redd.it/t0wnti4hdt051", "subreddit_subscribers": 3457, "created_utc": 1590370178.0, "num_crossposts": 1, "media": {"reddit_video": {"fallback_url": "https://v.redd.it/t0wnti4hdt051/DASH_360?source=fallback", "height": 304, "width": 640, "scrubber_media_url": "https://v.redd.it/t0wnti4hdt051/DASH_96", "dash_url": "https://v.redd.it/t0wnti4hdt051/DASHPlaylist.mpd?a=1593005631%2CMGYxMmI3YjU3YWRmMWFhOWJkNzgyZjg3Zjc0MGFjMmZjZTIwZjZlM2M5YjE5MDBiNzcwZDU5NmU3ZTg4YTY3Ng%3D%3D&amp;v=v1&amp;f=sd", "duration": 139, "hls_url": "https://v.redd.it/t0wnti4hdt051/HLSPlaylist.m3u8?a=1593005631%2CMGYxMmI3YjU3YWRmMWFhOWJkNzgyZjg3Zjc0MGFjMmZjZTIwZjZlM2M5YjE5MDBiNzcwZDU5NmU3ZTg4YTY3Ng%3D%3D&amp;v=v1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_video": true}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "I haven\u2019t yet had any reason to use it since I place all the props I need in mapStateToProps which goes into the connect function. I was pretty good at passing props around in React but now that I have added Redux I\u2019m not too sure how props are passed around. \n\nI\u2019m making an application with Redux because I want to expand my web development \u201ctoolkit\u201d. So even though my application doesn\u2019t really need Redux I\u2019m just curious about how to use it. I feel like I\u2019ve been taught Redux badly or maybe I\u2019m just not getting it but if you know of any good resources for me to learn that would be great too.", "author_fullname": "t2_o53gv55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is the constructor even needed when using Redux?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gp5xfa", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590273298.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I haven\u2019t yet had any reason to use it since I place all the props I need in mapStateToProps which goes into the connect function. I was pretty good at passing props around in React but now that I have added Redux I\u2019m not too sure how props are passed around. &lt;/p&gt;\n\n&lt;p&gt;I\u2019m making an application with Redux because I want to expand my web development \u201ctoolkit\u201d. So even though my application doesn\u2019t really need Redux I\u2019m just curious about how to use it. I feel like I\u2019ve been taught Redux badly or maybe I\u2019m just not getting it but if you know of any good resources for me to learn that would be great too.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp5xfa", "is_robot_indexable": true, "report_reasons": null, "author": "Hazza_1", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gp5xfa/is_the_constructor_even_needed_when_using_redux/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/gp5xfa/is_the_constructor_even_needed_when_using_redux/", "subreddit_subscribers": 3457, "created_utc": 1590244498.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_3le5rj8y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I worked with Redux for two years and I wrote a blog post about tips and tricks.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_goqbi3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590205417.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "cyprientaque.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "goqbi3", "is_robot_indexable": true, "report_reasons": null, "author": "ctaque", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/goqbi3/i_worked_with_redux_for_two_years_and_i_wrote_a/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.cyprientaque.com/blog/redux-tips", "subreddit_subscribers": 3457, "created_utc": 1590176617.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "I am trying to pass an array from a container to a component inside of the container. the issue im having is that i dispatch my  actions in componentDidMount of the container. then i try passing the array that is acquired to the comp but it passes the initial state, an empty array, instead of the third and final state", "author_fullname": "t2_5anr0ug4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "need some help passing an array to a component after actions dispatch", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnw73c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590093926.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to pass an array from a container to a component inside of the container. the issue im having is that i dispatch my  actions in componentDidMount of the container. then i try passing the array that is acquired to the comp but it passes the initial state, an empty array, instead of the third and final state&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnw73c", "is_robot_indexable": true, "report_reasons": null, "author": "super-toasted", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gnw73c/need_some_help_passing_an_array_to_a_component/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/gnw73c/need_some_help_passing_an_array_to_a_component/", "subreddit_subscribers": 3457, "created_utc": 1590065126.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_6nq28", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What to put on the Redux state", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gnir1f", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.7, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590033867.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "x8lucas8x.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gnir1f", "is_robot_indexable": true, "report_reasons": null, "author": "x8lucas8x", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gnir1f/what_to_put_on_the_redux_state/", "parent_whitelist_status": null, "stickied": false, "url": "https://x8lucas8x.com/what-to-put-on-the-redux-state/", "subreddit_subscribers": 3457, "created_utc": 1590005067.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "", "author_fullname": "t2_2a9xoaxu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Experimental state management lib for React from Facebook", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gkahrf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589582998.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.graphqleditor.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gkahrf", "is_robot_indexable": true, "report_reasons": null, "author": "oczekkk", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gkahrf/experimental_state_management_lib_for_react_from/", "parent_whitelist_status": null, "stickied": false, "url": "https://blog.graphqleditor.com/recoil-react-state-management-library/", "subreddit_subscribers": 3457, "created_utc": 1589554198.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "I want to know useful patterns/arquitecture for big enterprise projects used in nextjs(react) with redux. \ni've seen some recomendations like [this](https://laniewski.me/javascript/react/redux/2019/02/28/enterprise-scale-react-redux-project-architecture.html) or [this](https://www.pluralsight.com/guides/how-to-organize-your-react-+-redux-codebase)  where application is split in `modules` that encapsulates all related things with it, Redux(actions, reducers, sagas), utils, ts-types, and jsx|tsx components and have one folder for shared things. I like this concept because it is easy to identify the related elements between the store and the ui layer inside modules, but I don't know if it's really scalable for big enterprise projects. I would like to hear recommendations and/or suggested articles.", "author_fullname": "t2_64xn5tht", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Recomendations for Enterprise-scale Nextjs(React)/Redux/Typescript arquitecture", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gjrykm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.71, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1589522239.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589509563.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to know useful patterns/arquitecture for big enterprise projects used in nextjs(react) with redux. \ni&amp;#39;ve seen some recomendations like &lt;a href=\"https://laniewski.me/javascript/react/redux/2019/02/28/enterprise-scale-react-redux-project-architecture.html\"&gt;this&lt;/a&gt; or &lt;a href=\"https://www.pluralsight.com/guides/how-to-organize-your-react-+-redux-codebase\"&gt;this&lt;/a&gt;  where application is split in &lt;code&gt;modules&lt;/code&gt; that encapsulates all related things with it, Redux(actions, reducers, sagas), utils, ts-types, and jsx|tsx components and have one folder for shared things. I like this concept because it is easy to identify the related elements between the store and the ui layer inside modules, but I don&amp;#39;t know if it&amp;#39;s really scalable for big enterprise projects. I would like to hear recommendations and/or suggested articles.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gjrykm", "is_robot_indexable": true, "report_reasons": null, "author": "crisf_design", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gjrykm/recomendations_for_enterprisescale/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/gjrykm/recomendations_for_enterprisescale/", "subreddit_subscribers": 3457, "created_utc": 1589480763.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "So I have this component in React.  The {props.size} and {props.algorithm} only show up after I have submitted them. Upon init, my component's props are `options`, and `dispatch`, as opposed to `size` and `algorithm` as specified in `mapStateToProps`. \n\nmapDispatchToProp is given by default. It appears to work normally as the size and algorithm of the value does render on the page. But if I want to access size and algorithms before hitting submit, I have to do `{props.options.size}` and `{props.options.algorithm}`. After submitting `props.options` become undefined\n\nHere's my component:\n\n    const Options_Component = (props) =&gt; {\n        const {register, handleSubmit, errors, reset} = useForm({\n            validateCriteriaMode: 'all',\n            mode: 'onSubmit',\n            reValidateMode: 'onSubmit',\n            defaultValues: {\n                size: INITIAL_SIZE,\n                algorithm: INITIAL_ALGORITHM\n            }\n        });\n        \n        const onSubmit = values =&gt; {\n            const inputs = changeOptions({size: 50})\n            props.dispatch(inputs);\n        }\n    \n        return (\n            &lt;header&gt;\n                &lt;form onSubmit={handleSubmit(onSubmit)}&gt;\n                    &lt;div&gt;{props.size}&lt;/div&gt;\n                    &lt;div&gt;{props.algorithm}&lt;/div&gt;\n                    &lt;input type=\"submit\"/&gt;\n                    &lt;input type=\"button\" value=\"Reset to default\" onClick={()=&gt; reset()}/&gt;\n                &lt;/form&gt;\n            &lt;/header&gt;\n        );\n    }\n    \n    const mapStateToProps = (state, ownProps) =&gt; ({\n        size: state.options.size,\n        algorithm: state.options.algorithm\n    })\n    \n    export default connect(mapStateToProps)(Options_Component)\n\nMy App - Option component is a child of SortVisualizer\n\n    function App() {\n      return (&lt;Provider store={OptionStore}&gt;\n        &lt;SortVisualizer/&gt;\n      &lt;/Provider&gt;)\n    }\n    \n    export default App;\n    \n\nReducer and createStore:\n\n    export default function (state = initialState, {type, payload}) {\n        console.log({type, payload})\n        switch (type) {\n            case CHANGE_OPTIONS:\n                console.log(type, payload)\n                const {size = initialValue.INITIAL_SIZE, algorithm = initialValue.INITIAL_ALGORITHM} = payload\n                return {size: size, algorithm: algorithm}\n            default: return {...state}\n        }\n    }\n    \n    export const changeOptions = options =&gt; ({\n        type: CHANGE_OPTIONS,\n        payload: options\n    })\n    \n    export default combineReducers({options}); &lt;--- Root Reducer\n    \n    export default createStore(rootReducer);", "author_fullname": "t2_o2w5r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[HELP] Redux store/mapping not available on init", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gitfgq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589379770.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I have this component in React.  The {props.size} and {props.algorithm} only show up after I have submitted them. Upon init, my component&amp;#39;s props are &lt;code&gt;options&lt;/code&gt;, and &lt;code&gt;dispatch&lt;/code&gt;, as opposed to &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;algorithm&lt;/code&gt; as specified in &lt;code&gt;mapStateToProps&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;mapDispatchToProp is given by default. It appears to work normally as the size and algorithm of the value does render on the page. But if I want to access size and algorithms before hitting submit, I have to do &lt;code&gt;{props.options.size}&lt;/code&gt; and &lt;code&gt;{props.options.algorithm}&lt;/code&gt;. After submitting &lt;code&gt;props.options&lt;/code&gt; become undefined&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s my component:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const Options_Component = (props) =&amp;gt; {\n    const {register, handleSubmit, errors, reset} = useForm({\n        validateCriteriaMode: &amp;#39;all&amp;#39;,\n        mode: &amp;#39;onSubmit&amp;#39;,\n        reValidateMode: &amp;#39;onSubmit&amp;#39;,\n        defaultValues: {\n            size: INITIAL_SIZE,\n            algorithm: INITIAL_ALGORITHM\n        }\n    });\n\n    const onSubmit = values =&amp;gt; {\n        const inputs = changeOptions({size: 50})\n        props.dispatch(inputs);\n    }\n\n    return (\n        &amp;lt;header&amp;gt;\n            &amp;lt;form onSubmit={handleSubmit(onSubmit)}&amp;gt;\n                &amp;lt;div&amp;gt;{props.size}&amp;lt;/div&amp;gt;\n                &amp;lt;div&amp;gt;{props.algorithm}&amp;lt;/div&amp;gt;\n                &amp;lt;input type=&amp;quot;submit&amp;quot;/&amp;gt;\n                &amp;lt;input type=&amp;quot;button&amp;quot; value=&amp;quot;Reset to default&amp;quot; onClick={()=&amp;gt; reset()}/&amp;gt;\n            &amp;lt;/form&amp;gt;\n        &amp;lt;/header&amp;gt;\n    );\n}\n\nconst mapStateToProps = (state, ownProps) =&amp;gt; ({\n    size: state.options.size,\n    algorithm: state.options.algorithm\n})\n\nexport default connect(mapStateToProps)(Options_Component)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My App - Option component is a child of SortVisualizer&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function App() {\n  return (&amp;lt;Provider store={OptionStore}&amp;gt;\n    &amp;lt;SortVisualizer/&amp;gt;\n  &amp;lt;/Provider&amp;gt;)\n}\n\nexport default App;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Reducer and createStore:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export default function (state = initialState, {type, payload}) {\n    console.log({type, payload})\n    switch (type) {\n        case CHANGE_OPTIONS:\n            console.log(type, payload)\n            const {size = initialValue.INITIAL_SIZE, algorithm = initialValue.INITIAL_ALGORITHM} = payload\n            return {size: size, algorithm: algorithm}\n        default: return {...state}\n    }\n}\n\nexport const changeOptions = options =&amp;gt; ({\n    type: CHANGE_OPTIONS,\n    payload: options\n})\n\nexport default combineReducers({options}); &amp;lt;--- Root Reducer\n\nexport default createStore(rootReducer);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gitfgq", "is_robot_indexable": true, "report_reasons": null, "author": "TriLamSr", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gitfgq/help_redux_storemapping_not_available_on_init/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/gitfgq/help_redux_storemapping_not_available_on_init/", "subreddit_subscribers": 3457, "created_utc": 1589350970.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "Just refactoring a small app to use Redux and hooks and noticing something strange. In index.js I have:   \n\n\n    ...\n    \n    import { createStore } from 'redux';\n    import { Provider } from 'react-redux';\n    import { rootReducer } from './reducers/rootReducer.js';\n    const store = createStore(rootReducer);\n    \n    ReactDOM.render(\n      &lt;Provider store={store}&gt;\n        &lt;React.StrictMode&gt;\n          &lt;App /&gt;\n        &lt;/React.StrictMode&gt;\n      &lt;/Provider&gt;,\n      document.getElementById('root')\n    );\n\nMy root reducer is defined in another file I am importing and I have confirmed that is firing in the console. Yet for some reason when I inspect the redux dev tools I see a bunch of data related to my reddit user acccount oddly enough and not the initial state I defined in rootReducer which is passed to createStore  \n\n\nAt this point should I not be able to see my store in redux dev tools?", "author_fullname": "t2_n3fb7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "At this point should my state (store) be viewable in the Redux dev tools? I am seeing Reddit's store there which is strange", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gi1cxi", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589276289.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Just refactoring a small app to use Redux and hooks and noticing something strange. In index.js I have:   &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;...\n\nimport { createStore } from &amp;#39;redux&amp;#39;;\nimport { Provider } from &amp;#39;react-redux&amp;#39;;\nimport { rootReducer } from &amp;#39;./reducers/rootReducer.js&amp;#39;;\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  &amp;lt;Provider store={store}&amp;gt;\n    &amp;lt;React.StrictMode&amp;gt;\n      &amp;lt;App /&amp;gt;\n    &amp;lt;/React.StrictMode&amp;gt;\n  &amp;lt;/Provider&amp;gt;,\n  document.getElementById(&amp;#39;root&amp;#39;)\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My root reducer is defined in another file I am importing and I have confirmed that is firing in the console. Yet for some reason when I inspect the redux dev tools I see a bunch of data related to my reddit user acccount oddly enough and not the initial state I defined in rootReducer which is passed to createStore  &lt;/p&gt;\n\n&lt;p&gt;At this point should I not be able to see my store in redux dev tools?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gi1cxi", "is_robot_indexable": true, "report_reasons": null, "author": "mayaswelltrythis", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/gi1cxi/at_this_point_should_my_state_store_be_viewable/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/gi1cxi/at_this_point_should_my_state_store_be_viewable/", "subreddit_subscribers": 3457, "created_utc": 1589247489.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reduxjs", "selftext": "I have an application with two reducers, both with tons of action creators, and 99% of the actions creators have to use data from another reducer to do some logic. I feel comfortable doing it, but I don't know if it is a bad or good pattern.\n\n(Sorry guys, my English is bad)", "author_fullname": "t2_4tknb3xl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is it ok to make actions creators to depend of other reducers?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reduxjs", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ghu3wx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1589224247.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589252764.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reduxjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have an application with two reducers, both with tons of action creators, and 99% of the actions creators have to use data from another reducer to do some logic. I feel comfortable doing it, but I don&amp;#39;t know if it is a bad or good pattern.&lt;/p&gt;\n\n&lt;p&gt;(Sorry guys, my English is bad)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_39l3a", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ghu3wx", "is_robot_indexable": true, "report_reasons": null, "author": "MuriloRibas", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reduxjs/comments/ghu3wx/is_it_ok_to_make_actions_creators_to_depend_of/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/reduxjs/comments/ghu3wx/is_it_ok_to_make_actions_creators_to_depend_of/", "subreddit_subscribers": 3457, "created_utc": 1589223964.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ghu3wx", "before": null}}