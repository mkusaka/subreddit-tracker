{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_57uz3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing the 2020 Go Developer Survey", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jeuosg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 189, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 189, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603245041.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.golang.org", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.golang.org/survey2020", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jeuosg", "is_robot_indexable": true, "report_reasons": null, "author": "spf13", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jeuosg/announcing_the_2020_go_developer_survey/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://blog.golang.org/survey2020", "subreddit_subscribers": 128521, "created_utc": 1603216241.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Is there any \"official\" style guide for Go code? I mean something like PEP8 in python.\nI read a lot of go code to learn, I'm interesting in more official guideline.", "author_fullname": "t2_7s3xej94", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Style guide for Go code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jh3syk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603547617.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is there any &amp;quot;official&amp;quot; style guide for Go code? I mean something like PEP8 in python.\nI read a lot of go code to learn, I&amp;#39;m interesting in more official guideline.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jh3syk", "is_robot_indexable": true, "report_reasons": null, "author": "m477h13U", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jh3syk/style_guide_for_go_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jh3syk/style_guide_for_go_code/", "subreddit_subscribers": 128521, "created_utc": 1603518817.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_81yj9s9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "encoding structs into URL query parameters", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jh4tr9", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603553132.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/sonh/qs", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jh4tr9", "is_robot_indexable": true, "report_reasons": null, "author": "donutloop", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jh4tr9/encoding_structs_into_url_query_parameters/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/sonh/qs", "subreddit_subscribers": 128521, "created_utc": 1603524332.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I want to use ANSI codes to change the colour of the text I print to the terminal and clear the terminal as well. \n\nI've got a script that prints out a bunch of data, how can I use ANSI codes (or similar) to change the colour of the text and clear it from the screen so it can be updated?\n\nDo I just use `fmt.Println` or is there some special way of doing it, and what codes would I use (I have no idea what I'm doing)?\n\nI'm on windows if that's relevant", "author_fullname": "t2_nloj51k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ANSI escape codes to change text colour and clear the terminal", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jh460q", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603549518.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to use ANSI codes to change the colour of the text I print to the terminal and clear the terminal as well. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve got a script that prints out a bunch of data, how can I use ANSI codes (or similar) to change the colour of the text and clear it from the screen so it can be updated?&lt;/p&gt;\n\n&lt;p&gt;Do I just use &lt;code&gt;fmt.Println&lt;/code&gt; or is there some special way of doing it, and what codes would I use (I have no idea what I&amp;#39;m doing)?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m on windows if that&amp;#39;s relevant&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jh460q", "is_robot_indexable": true, "report_reasons": null, "author": "Jeff-with-a-ph", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jh460q/ansi_escape_codes_to_change_text_colour_and_clear/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jh460q/ansi_escape_codes_to_change_text_colour_and_clear/", "subreddit_subscribers": 128521, "created_utc": 1603520718.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_fn0xp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Would generics give a boost to scientific Go?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jgrwsk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 54, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 54, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603503742.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jgrwsk", "is_robot_indexable": true, "report_reasons": null, "author": "puffybunion", "discussion_type": null, "num_comments": 54, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jgrwsk/would_generics_give_a_boost_to_scientific_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jgrwsk/would_generics_give_a_boost_to_scientific_go/", "subreddit_subscribers": 128521, "created_utc": 1603474942.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "One user can have many friends and can be friends with many. That's why I have a many to many relationship.\n\n&amp;#x200B;\n\nThis is my model:\n\n&amp;#x200B;\n\n\\`\\`\\`go\n\ntype User struct {\n\n    gorm.Model\n    \n    Email    string\n    \n    Password string\n    \n    Name     string\n    \n    Status   string  \\`gorm:\"default:happy\"\\`\n    \n    Friends  \\[\\]\\*User \\`gorm:\"many2many:user\\_friends\"\\`\n\n}\n\n\\`\\`\\`\n\n&amp;#x200B;\n\nWhat I want to do is simply add a User object to the Friends field via GORM. Therefore I got the following method:\n\n&amp;#x200B;\n\nfunc (userservice Userservice) AddToFriendList(idReceiver uint, idRequestor uint) error {\n\n    db, err := [gorm.Open](https://gorm.Open)([sqlite.Open](https://sqlite.Open)(\"test.db\"), &amp;gorm.Config{})\n    \n    if err != nil {\n    \n    \tpanic(\"failed to connect database\")\n    \n    }\n\n&amp;#x200B;\n\n    db.AutoMigrate(&amp;entity.User{})\n\n&amp;#x200B;\n\n    receiver, errReceiver := userservice.FindByID(idReceiver)\n    \n    requestor, errRequestor := userservice.FindByID(idRequestor)\n\n&amp;#x200B;\n\n    if errReceiver != nil {\n    \n    \tfmt.Println(errReceiver)\n    \n    }\n\n&amp;#x200B;\n\n    if errRequestor != nil {\n    \n    \tfmt.Println(errRequestor)\n    \n    }\n\n&amp;#x200B;\n\n    resOne := db.Model(&amp;receiver).Association(\"Friends\").Append(&amp;requestor)\n\n&amp;#x200B;\n\n    return resOne\n\n}\n\n\\`\\`\\`\n\n&amp;#x200B;\n\nBoth receiver and requester can be fetched by GORM succesfully. My idea was then to append via Association Mode of GORM. How ever I'm retrieving the following error:\n\n&amp;#x200B;\n\n\\`runtime error: invalid memory address or nil pointer dereference\\`\n\n&amp;#x200B;\n\nApparently my \\`Friends\\` is nil. If I check the association with:\n\n&amp;#x200B;\n\n\\`fmt.Println(db.Model(&amp;receiver).Association(\"Friends\"))\\`\n\n&amp;#x200B;\n\nit says:\n\n&amp;#x200B;\n\n\\`&amp;{0xc00002ab10 0xc00032c2d0 &lt;nil&gt;}\\`\n\n&amp;#x200B;\n\nWhy is that? I tried to enable \\`preloading\\` with GORM but that did not change anything. Could anyone point me out to my error? Thanks! This my first post I hope its fine!\n\nSee also [https://stackoverflow.com/questions/64498818/gorm-cant-find-association-and-returns-nil](https://stackoverflow.com/questions/64498818/gorm-cant-find-association-and-returns-nil)", "author_fullname": "t2_8ltpfb7r", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GORM cant find association and returns nil", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jh75sp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1603538073.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603566564.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;One user can have many friends and can be friends with many. That&amp;#39;s why I have a many to many relationship.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;This is my model:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;```go&lt;/p&gt;\n\n&lt;p&gt;type User struct {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;gorm.Model\n\nEmail    string\n\nPassword string\n\nName     string\n\nStatus   string  \\`gorm:&amp;quot;default:happy&amp;quot;\\`\n\nFriends  \\[\\]\\*User \\`gorm:&amp;quot;many2many:user\\_friends&amp;quot;\\`\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;What I want to do is simply add a User object to the Friends field via GORM. Therefore I got the following method:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;func (userservice Userservice) AddToFriendList(idReceiver uint, idRequestor uint) error {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;db, err := [gorm.Open](https://gorm.Open)([sqlite.Open](https://sqlite.Open)(&amp;quot;test.db&amp;quot;), &amp;amp;gorm.Config{})\n\nif err != nil {\n\n    panic(&amp;quot;failed to connect database&amp;quot;)\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;db.AutoMigrate(&amp;amp;entity.User{})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;receiver, errReceiver := userservice.FindByID(idReceiver)\n\nrequestor, errRequestor := userservice.FindByID(idRequestor)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if errReceiver != nil {\n\n    fmt.Println(errReceiver)\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if errRequestor != nil {\n\n    fmt.Println(errRequestor)\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;resOne := db.Model(&amp;amp;receiver).Association(&amp;quot;Friends&amp;quot;).Append(&amp;amp;requestor)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return resOne\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Both receiver and requester can be fetched by GORM succesfully. My idea was then to append via Association Mode of GORM. How ever I&amp;#39;m retrieving the following error:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;`runtime error: invalid memory address or nil pointer dereference`&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Apparently my `Friends` is nil. If I check the association with:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;`fmt.Println(db.Model(&amp;amp;receiver).Association(&amp;quot;Friends&amp;quot;))`&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;it says:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;`&amp;amp;{0xc00002ab10 0xc00032c2d0 &amp;lt;nil&amp;gt;}`&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Why is that? I tried to enable `preloading` with GORM but that did not change anything. Could anyone point me out to my error? Thanks! This my first post I hope its fine!&lt;/p&gt;\n\n&lt;p&gt;See also &lt;a href=\"https://stackoverflow.com/questions/64498818/gorm-cant-find-association-and-returns-nil\"&gt;https://stackoverflow.com/questions/64498818/gorm-cant-find-association-and-returns-nil&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jh75sp", "is_robot_indexable": true, "report_reasons": null, "author": "Puzzleheaded-Bus-164", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jh75sp/gorm_cant_find_association_and_returns_nil/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jh75sp/gorm_cant_find_association_and_returns_nil/", "subreddit_subscribers": 128521, "created_utc": 1603537764.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi  Gophers, \n\nSharing my workshop project which I used for colleagues and friends. Quite nice to hang out after work with beer \\\\o/ and code a bit and byte. It's under MIT so you folks, use it how you wanna :) Cheers!\n\nHere link to github: [https://github.com/LinMAD/TheMazeRunner](https://github.com/LinMAD/TheMazeRunner)\n\n&amp;#x200B;\n\n[Example of how it was solved last time, with the game client](https://preview.redd.it/o2an8ztd31v51.png?width=1988&amp;format=png&amp;auto=webp&amp;s=b87ba756e84bd35ca56de3d9abdbe69e6177a02d)", "author_fullname": "t2_2mqawfje", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Give away workshop idea with implementation", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"o2an8ztd31v51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 62, "x": 108, "u": "https://preview.redd.it/o2an8ztd31v51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=e77416bd233b1291f6fc535c86f51abccf1b135b"}, {"y": 124, "x": 216, "u": "https://preview.redd.it/o2an8ztd31v51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=35b06af114a255d3926b236f349a5f069cc84963"}, {"y": 184, "x": 320, "u": "https://preview.redd.it/o2an8ztd31v51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=63311dad38c4563b974263300135a45389edf2b2"}, {"y": 369, "x": 640, "u": "https://preview.redd.it/o2an8ztd31v51.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=4964e7763234e9e4d47634623f94267889ad8e02"}, {"y": 554, "x": 960, "u": "https://preview.redd.it/o2an8ztd31v51.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=0b76bf16cbd3dad8f2d301c4f817568c16cc7537"}, {"y": 624, "x": 1080, "u": "https://preview.redd.it/o2an8ztd31v51.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=44285309a0d6ff7cf3832f381896acce09b34d6f"}], "s": {"y": 1149, "x": 1988, "u": "https://preview.redd.it/o2an8ztd31v51.png?width=1988&amp;format=png&amp;auto=webp&amp;s=b87ba756e84bd35ca56de3d9abdbe69e6177a02d"}, "id": "o2an8ztd31v51"}}, "name": "t3_jh7fl0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603568034.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi  Gophers, &lt;/p&gt;\n\n&lt;p&gt;Sharing my workshop project which I used for colleagues and friends. Quite nice to hang out after work with beer \\o/ and code a bit and byte. It&amp;#39;s under MIT so you folks, use it how you wanna :) Cheers!&lt;/p&gt;\n\n&lt;p&gt;Here link to github: &lt;a href=\"https://github.com/LinMAD/TheMazeRunner\"&gt;https://github.com/LinMAD/TheMazeRunner&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/o2an8ztd31v51.png?width=1988&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b87ba756e84bd35ca56de3d9abdbe69e6177a02d\"&gt;Example of how it was solved last time, with the game client&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jh7fl0", "is_robot_indexable": true, "report_reasons": null, "author": "LinMAD", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jh7fl0/give_away_workshop_idea_with_implementation/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jh7fl0/give_away_workshop_idea_with_implementation/", "subreddit_subscribers": 128521, "created_utc": 1603539234.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Been wanting to test the speed of splice tcp prox by benchmarking it on a few aws shared servers and on dedicated servers. I read that dedicated would be best for it but i want to see how much more. I found [https://golang.org/src/net/splice\\_test.go](https://golang.org/src/net/splice_test.go) but I don't understand how to run it.", "author_fullname": "t2_qa0l4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Splice BenchMark", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jh79g6", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603567114.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Been wanting to test the speed of splice tcp prox by benchmarking it on a few aws shared servers and on dedicated servers. I read that dedicated would be best for it but i want to see how much more. I found &lt;a href=\"https://golang.org/src/net/splice_test.go\"&gt;https://golang.org/src/net/splice_test.go&lt;/a&gt; but I don&amp;#39;t understand how to run it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jh79g6", "is_robot_indexable": true, "report_reasons": null, "author": "ramkiller1", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jh79g6/splice_benchmark/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jh79g6/splice_benchmark/", "subreddit_subscribers": 128521, "created_utc": 1603538314.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello,\n\nI have been working on a little project recently and I would love to have feedback about the concepts.\n\n&amp;#x200B;\n\n[https://github.com/negrel/debuggo](https://github.com/negrel/debuggo)", "author_fullname": "t2_470u6yvm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Debuggo - Debugging package that leverage the power of conditional compilation.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jh6nan", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.4, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1603538917.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603563738.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,&lt;/p&gt;\n\n&lt;p&gt;I have been working on a little project recently and I would love to have feedback about the concepts.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/negrel/debuggo\"&gt;https://github.com/negrel/debuggo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jh6nan", "is_robot_indexable": true, "report_reasons": null, "author": "negrel3", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jh6nan/debuggo_debugging_package_that_leverage_the_power/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/jh6nan/debuggo_debugging_package_that_leverage_the_power/", "subreddit_subscribers": 128521, "created_utc": 1603534938.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_7ogw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Nuances of Constants in Go; Go Isn't JavaScript - Qvault", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jgk659", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.85, "author_flair_background_color": null, "subreddit_type": "public", "ups": 67, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 67, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603475643.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "qvault.io", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://qvault.io/2020/10/22/constants-in-go-vs-javascript-and-when-to-use-them/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jgk659", "is_robot_indexable": true, "report_reasons": null, "author": "pmz", "discussion_type": null, "num_comments": 31, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jgk659/the_nuances_of_constants_in_go_go_isnt_javascript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://qvault.io/2020/10/22/constants-in-go-vs-javascript-and-when-to-use-them/", "subreddit_subscribers": 128521, "created_utc": 1603446843.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_dtivp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "xid: Parse unicode identifiers", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jgxqyu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603522425.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/smasher164/xid", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jgxqyu", "is_robot_indexable": true, "report_reasons": null, "author": "smasher164", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/jgxqyu/xid_parse_unicode_identifiers/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/smasher164/xid", "subreddit_subscribers": 128521, "created_utc": 1603493625.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jgxqyu", "before": null}}