{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - October", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j2xtzq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1601539524.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2xtzq", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 5, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j2xtzq/whos_hiring_typescript_developers_october/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/j2xtzq/whos_hiring_typescript_developers_october/", "subreddit_subscribers": 50294, "created_utc": 1601510724.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have a file like this:\n\n&amp;#x200B;\n\nFoo.tsx:\n\n`export default function Foo() {`\n\n`return 'hi';`\n\n`}`\n\nGroupItem.tsx:\n\n`import Foo from 'Foo.tsx';`\n\n`export const useGroupIds = () =&gt; [];`\n\n`export default function GroupItem() {`\n\n`const groupIds = useGroupIds();`\n\n`return &lt;Foo /&gt;`\n\n`}`\n\nWe see in \\`GroupItem\\` I reference \\`useGroupIds\\`. This is captured by reference. Is it possible to make TypeScript refer to it as \\`module.useGroupIds\\`?\n\nI ask this because I am trying to write a test and put a spy on \\`useGroupIds\\` but when I do that \\`spy(module, 'useGroupIds')\\` the \\`GroupItem\\` is not using this spied one as it caught it by reference.\n\nMy hope is to get ts to compile the above like this:\n\n`import Foo from 'Foo.tsx';`\n\n`export const useGroupIds = () =&gt; [];`\n\n`export default function GroupItem() {`\n\n`const groupIds = GroupItemModule.useGroupIds();`\n\n`return &lt;`[`FooModule.Foo`](https://FooModule.Foo) `/&gt;`\n\n`}`\n\n&amp;#x200B;\n\nSo now when I mock like this:\n\n`import * as FooModule from './Foo';`\n\n`import * as GroupItemModule from './GroupItem';`\n\n`jest.spyOn(FooModule, 'default')`\n\n`jest.spyOn(GroupItemModule, 'useGroupIds')`\n\nThen the spied functions will be properly called.", "author_fullname": "t2_o356x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Make tsconfig reference all exported variables (for testing mock/spy/stub)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ja4zqn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602585655.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a file like this:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Foo.tsx:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export default function Foo() {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return &amp;#39;hi&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;GroupItem.tsx:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import Foo from &amp;#39;Foo.tsx&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export const useGroupIds = () =&amp;gt; [];&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export default function GroupItem() {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const groupIds = useGroupIds();&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return &amp;lt;Foo /&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;We see in `GroupItem` I reference `useGroupIds`. This is captured by reference. Is it possible to make TypeScript refer to it as `module.useGroupIds`?&lt;/p&gt;\n\n&lt;p&gt;I ask this because I am trying to write a test and put a spy on `useGroupIds` but when I do that `spy(module, &amp;#39;useGroupIds&amp;#39;)` the `GroupItem` is not using this spied one as it caught it by reference.&lt;/p&gt;\n\n&lt;p&gt;My hope is to get ts to compile the above like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import Foo from &amp;#39;Foo.tsx&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export const useGroupIds = () =&amp;gt; [];&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export default function GroupItem() {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const groupIds = GroupItemModule.useGroupIds();&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return &amp;lt;&lt;/code&gt;&lt;a href=\"https://FooModule.Foo\"&gt;&lt;code&gt;FooModule.Foo&lt;/code&gt;&lt;/a&gt; &lt;code&gt;/&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;So now when I mock like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import * as FooModule from &amp;#39;./Foo&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import * as GroupItemModule from &amp;#39;./GroupItem&amp;#39;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;jest.spyOn(FooModule, &amp;#39;default&amp;#39;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;jest.spyOn(GroupItemModule, &amp;#39;useGroupIds&amp;#39;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Then the spied functions will be properly called.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ja4zqn", "is_robot_indexable": true, "report_reasons": null, "author": "Noitidart2", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ja4zqn/make_tsconfig_reference_all_exported_variables/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ja4zqn/make_tsconfig_reference_all_exported_variables/", "subreddit_subscribers": 50294, "created_utc": 1602556855.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have a type prop:\n\n`type prop = { width?: number; height?: number; id?: number /* etc... */ [key: string]: any }`\n\nI use `prop` (as shown above) for several components. However, I want to require `id: number` for other components. So these components will have the `prop` from above looking more like this: `type prop = { width?: number; height?: number; id: number; /* etc... */ [key: string]: any }`\n\nIs it possible to require an `id` for certain components, but not others, using the same `type prop = {}`?", "author_fullname": "t2_t7b4e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Require a type for certain components and not others", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ja7gwc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602596415.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a type prop:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;type prop = { width?: number; height?: number; id?: number /* etc... */ [key: string]: any }&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I use &lt;code&gt;prop&lt;/code&gt; (as shown above) for several components. However, I want to require &lt;code&gt;id: number&lt;/code&gt; for other components. So these components will have the &lt;code&gt;prop&lt;/code&gt; from above looking more like this: &lt;code&gt;type prop = { width?: number; height?: number; id: number; /* etc... */ [key: string]: any }&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Is it possible to require an &lt;code&gt;id&lt;/code&gt; for certain components, but not others, using the same &lt;code&gt;type prop = {}&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ja7gwc", "is_robot_indexable": true, "report_reasons": null, "author": "Akidus", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ja7gwc/require_a_type_for_certain_components_and_not/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ja7gwc/require_a_type_for_certain_components_and_not/", "subreddit_subscribers": 50294, "created_utc": 1602567615.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_enkqkx6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A Complete Guide To TypeScript Decorator", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_j9sbaj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 24, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 24, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/OjQopLfH3_bAcsjdtYbfYuSEnptN-n2DUn6p8-2q5A0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1602543245.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "saul-mirone.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://saul-mirone.github.io/a-complete-guide-to-typescript-decorator/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/hcVVSd5gOL56Q5iCqqttYWrybfetM463TchkUqkG6iM.jpg?auto=webp&amp;s=f786317904cfc3519da2145cb6e4ba0512bd2c3a", "width": 1080, "height": 1080}, "resolutions": [{"url": "https://external-preview.redd.it/hcVVSd5gOL56Q5iCqqttYWrybfetM463TchkUqkG6iM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ce7515a238cf033b4843c4d341008d5fcf1dcf91", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/hcVVSd5gOL56Q5iCqqttYWrybfetM463TchkUqkG6iM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b73907773448ad64efd8c396c7dc72c4d639236f", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/hcVVSd5gOL56Q5iCqqttYWrybfetM463TchkUqkG6iM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b4e3e695e1fa3cc2663c2b4a17f85c2718990b15", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/hcVVSd5gOL56Q5iCqqttYWrybfetM463TchkUqkG6iM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=01328cc29a5bf3dd0ff65def9686bff02f784e23", "width": 640, "height": 640}, {"url": "https://external-preview.redd.it/hcVVSd5gOL56Q5iCqqttYWrybfetM463TchkUqkG6iM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=1bfe19711d6f31c9d4bd2e4f4f806f696d9c97ff", "width": 960, "height": 960}, {"url": "https://external-preview.redd.it/hcVVSd5gOL56Q5iCqqttYWrybfetM463TchkUqkG6iM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=afad7c636e2315f945d9d3b65dc8a656297df797", "width": 1080, "height": 1080}], "variants": {}, "id": "y0war0ytIuy3HxTOSlqQKeBhNAbJajZ7GnKG_QD3wrM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j9sbaj", "is_robot_indexable": true, "report_reasons": null, "author": "Saul-Mirone", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j9sbaj/a_complete_guide_to_typescript_decorator/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://saul-mirone.github.io/a-complete-guide-to-typescript-decorator/", "subreddit_subscribers": 50294, "created_utc": 1602514445.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_mf80w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a tool that makes writing Minecraft datapack recipes easier", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_j9r7uk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/h8xpbxnjxR2w_jQnlrk582gF0B1tVRPGbw6uOUzXZJc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1602539385.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/Asha20/simple-recipe", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/_jgGX85T-6FRvzQLR2NWRuF3Kirsp_JyRag-MIciSN8.jpg?auto=webp&amp;s=4278bba278ba0eeaa815d3c16e47860114952c44", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/_jgGX85T-6FRvzQLR2NWRuF3Kirsp_JyRag-MIciSN8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9ff1f129b885052f891893a0cca2d982541b8946", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/_jgGX85T-6FRvzQLR2NWRuF3Kirsp_JyRag-MIciSN8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d145fdd95df3366403bf237621f9fe78ce6b8220", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/_jgGX85T-6FRvzQLR2NWRuF3Kirsp_JyRag-MIciSN8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=deacde8b386d8060255da484962d646e24279eaa", "width": 320, "height": 320}], "variants": {}, "id": "lAxg1MzzRP-qsM8G6qcw0fizgHOkLnSu5S_kRCdrGTg"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=85b1aa61933f163dd2b77b1e78f4d82d9c947ec1", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=67935636337b07ca5b98d945f4bcdae26e5f567e", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=e17bc331183e7ba194314a34e43b35460a835fff", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=1b4e617f18af8d4e2c47c2f154d4422be43c809f", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j9r7uk", "is_robot_indexable": true, "report_reasons": null, "author": "Asha200", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j9r7uk/i_made_a_tool_that_makes_writing_minecraft/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/Asha20/simple-recipe", "subreddit_subscribers": 50294, "created_utc": 1602510585.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm sorry to cross post but having working at this for several days and cannot find an answer.\n\nhttps://preview.redd.it/kw1i46ci9rs51.png?width=1554&amp;format=png&amp;auto=webp&amp;s=3ba46d4d44e5f96d0b963f61b60ad7030e548182", "author_fullname": "t2_5ikfy94e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I couldn't seem to find help for the following question.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 79, "top_awarded_type": null, "hide_score": false, "media_metadata": {"kw1i46ci9rs51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 61, "x": 108, "u": "https://preview.redd.it/kw1i46ci9rs51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=468eccc42aa94c8e057bb81cf1d8c37584c832f5"}, {"y": 122, "x": 216, "u": "https://preview.redd.it/kw1i46ci9rs51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=6dfa041d54262e5c0957a99645e5fcb8aa5a4c1f"}, {"y": 181, "x": 320, "u": "https://preview.redd.it/kw1i46ci9rs51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=9944dab84db041598aa2dae88cc030b7701e691c"}, {"y": 362, "x": 640, "u": "https://preview.redd.it/kw1i46ci9rs51.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=22ad0a3960fbe1fda456cf7b61c2a098c9a6d903"}, {"y": 543, "x": 960, "u": "https://preview.redd.it/kw1i46ci9rs51.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=80f74747373de754a3ab0ae5a0c181086589554f"}, {"y": 611, "x": 1080, "u": "https://preview.redd.it/kw1i46ci9rs51.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ce96aeaccd529ca47e155aa60dfe604562386ca6"}], "s": {"y": 880, "x": 1554, "u": "https://preview.redd.it/kw1i46ci9rs51.png?width=1554&amp;format=png&amp;auto=webp&amp;s=3ba46d4d44e5f96d0b963f61b60ad7030e548182"}, "id": "kw1i46ci9rs51"}}, "name": "t3_ja2uz7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/KE9M4pkB2MA-wueNpWWwNhX5PTtm3ZEMDQqdeB53GJQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602577158.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m sorry to cross post but having working at this for several days and cannot find an answer.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/kw1i46ci9rs51.png?width=1554&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3ba46d4d44e5f96d0b963f61b60ad7030e548182\"&gt;https://preview.redd.it/kw1i46ci9rs51.png?width=1554&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3ba46d4d44e5f96d0b963f61b60ad7030e548182&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ja2uz7", "is_robot_indexable": true, "report_reasons": null, "author": "tiotol", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ja2uz7/i_couldnt_seem_to_find_help_for_the_following/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ja2uz7/i_couldnt_seem_to_find_help_for_the_following/", "subreddit_subscribers": 50294, "created_utc": 1602548358.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm working on a CLI that uses index.ts files to slice the code base into unidirectional layers:\n\n    - core   \n      /index.ts \n    - util   \n      /index.ts \n    - etc \n\nI'm really happy with the architecture, but recently I noticed a huge performance boost when not using barrel imports from index.ts files. When instead importing from individual files, the CLI ran multitudes faster.\n\nIt seems that when a CLI-feature imports from the core-barrel, the import would include all internal and external modules in that barrel, even though it only uses a fraction of them. Take this as an example:\n\n    - core   \n      /expensive.ts   \n      /quick.ts   \n      /index.ts \n\nIf the said CLI-feature uses only quick.ts, it would still import everything associated to expensive.ts through the barrel-import.\n\nIs there any way to get around this? I'd guess that 99.9% of developers using index.ts files do so to improve readability and architecture. The almost accidental import of everything inside a barrel just seems like an unwanted side-effect.\n\nRight now I'm thinking of rewiring all barrel-imports in a prebuild step, but that feels so ugly!", "author_fullname": "t2_war27", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The performance of index.ts files", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j9si8i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602543875.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m working on a CLI that uses index.ts files to slice the code base into unidirectional layers:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;- core   \n  /index.ts \n- util   \n  /index.ts \n- etc \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m really happy with the architecture, but recently I noticed a huge performance boost when not using barrel imports from index.ts files. When instead importing from individual files, the CLI ran multitudes faster.&lt;/p&gt;\n\n&lt;p&gt;It seems that when a CLI-feature imports from the core-barrel, the import would include all internal and external modules in that barrel, even though it only uses a fraction of them. Take this as an example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;- core   \n  /expensive.ts   \n  /quick.ts   \n  /index.ts \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If the said CLI-feature uses only quick.ts, it would still import everything associated to expensive.ts through the barrel-import.&lt;/p&gt;\n\n&lt;p&gt;Is there any way to get around this? I&amp;#39;d guess that 99.9% of developers using index.ts files do so to improve readability and architecture. The almost accidental import of everything inside a barrel just seems like an unwanted side-effect.&lt;/p&gt;\n\n&lt;p&gt;Right now I&amp;#39;m thinking of rewiring all barrel-imports in a prebuild step, but that feels so ugly!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j9si8i", "is_robot_indexable": true, "report_reasons": null, "author": "blidblid", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j9si8i/the_performance_of_indexts_files/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/j9si8i/the_performance_of_indexts_files/", "subreddit_subscribers": 50294, "created_utc": 1602515075.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm not clear on how to handle async callbacks with TS. In the following method TS can't infer the return paths from the async callback:\n\n        async send(): Promise&lt;object&gt; {\n          &lt;config removed&gt;\n    \n          mailgun.messages().send(messageDetails, (error, message) =&gt; {\n            if (error) return { error };\n            return { message };\n          });\n        }\n    \n    // A function whose declared type is neither 'void' nor 'any' \n    // must return a value.ts(2355)\n\nWhat is the proper way to assert that the callback will handle the returns here?", "author_fullname": "t2_3ob6osi0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TS can't infer the returns from a callback function", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j9zknb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602565533.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not clear on how to handle async callbacks with TS. In the following method TS can&amp;#39;t infer the return paths from the async callback:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    async send(): Promise&amp;lt;object&amp;gt; {\n      &amp;lt;config removed&amp;gt;\n\n      mailgun.messages().send(messageDetails, (error, message) =&amp;gt; {\n        if (error) return { error };\n        return { message };\n      });\n    }\n\n// A function whose declared type is neither &amp;#39;void&amp;#39; nor &amp;#39;any&amp;#39; \n// must return a value.ts(2355)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What is the proper way to assert that the callback will handle the returns here?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j9zknb", "is_robot_indexable": true, "report_reasons": null, "author": "embar5", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j9zknb/ts_cant_infer_the_returns_from_a_callback_function/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/j9zknb/ts_cant_infer_the_returns_from_a_callback_function/", "subreddit_subscribers": 50294, "created_utc": 1602536733.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've developed this open source library which allows safely exposing PostgreSQL APIs with minimal amount of code. Features:\n\n\\- CRUD operations\n\n\\- Subscriptions\n\n\\- Optimistic Client-Server data replication\n\n\\- Security Rules\n\n\\- Generated TS Types for database schema\n\nWIP: Auth + Android library\n\n&amp;#x200B;\n\nI've recently rewritten it in TypeScript and I am now open to any feedback or comments you might have.\n\nThanks for reading!\n\nhttps://prostgles.com/", "author_fullname": "t2_4n58e3jo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Isomorphic TypeScript client for PostgreSQL", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j9nlal", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1602503572.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602522742.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve developed this open source library which allows safely exposing PostgreSQL APIs with minimal amount of code. Features:&lt;/p&gt;\n\n&lt;p&gt;- CRUD operations&lt;/p&gt;\n\n&lt;p&gt;- Subscriptions&lt;/p&gt;\n\n&lt;p&gt;- Optimistic Client-Server data replication&lt;/p&gt;\n\n&lt;p&gt;- Security Rules&lt;/p&gt;\n\n&lt;p&gt;- Generated TS Types for database schema&lt;/p&gt;\n\n&lt;p&gt;WIP: Auth + Android library&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve recently rewritten it in TypeScript and I am now open to any feedback or comments you might have.&lt;/p&gt;\n\n&lt;p&gt;Thanks for reading!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://prostgles.com/\"&gt;https://prostgles.com/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j9nlal", "is_robot_indexable": true, "report_reasons": null, "author": "stoptimewaste", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j9nlal/isomorphic_typescript_client_for_postgresql/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/j9nlal/isomorphic_typescript_client_for_postgresql/", "subreddit_subscribers": 50294, "created_utc": 1602493942.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "So I have a ts file from which I export a class and an object . The class has JSDoc comments on its methods. There are no JSDoc comments somewhere else in the file . Is there any way to convert the JSDoc comments for the exported class to single markdown file?", "author_fullname": "t2_1ihbqq55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "JSDoc comments from typescript file to markdown .", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j9u7bh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602549194.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I have a ts file from which I export a class and an object . The class has JSDoc comments on its methods. There are no JSDoc comments somewhere else in the file . Is there any way to convert the JSDoc comments for the exported class to single markdown file?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j9u7bh", "is_robot_indexable": true, "report_reasons": null, "author": "liaguris", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j9u7bh/jsdoc_comments_from_typescript_file_to_markdown/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/j9u7bh/jsdoc_comments_from_typescript_file_to_markdown/", "subreddit_subscribers": 50294, "created_utc": 1602520394.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Time and time again I encounter this problem:\nSay I have a generic object T.\nIn typescript I can easily describe a string key of T:\nkey: keyof T &amp; string.\n\nWhat I dont understand how to do is type the value of that lookup using key. For example, how do I express that a key leads to a Date value? As far as I can understand, indexers dont solve this problem as they index the whole object, not a specific key.\n\nI keep trying to create functions that recieve an object and a key of said object, and return the value from that lookup - again while asserting a specific return type, without a general indexer.", "author_fullname": "t2_3gbvmbm4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Asserting type of value of keyof some object", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j9sl7u", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602544144.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Time and time again I encounter this problem:\nSay I have a generic object T.\nIn typescript I can easily describe a string key of T:\nkey: keyof T &amp;amp; string.&lt;/p&gt;\n\n&lt;p&gt;What I dont understand how to do is type the value of that lookup using key. For example, how do I express that a key leads to a Date value? As far as I can understand, indexers dont solve this problem as they index the whole object, not a specific key.&lt;/p&gt;\n\n&lt;p&gt;I keep trying to create functions that recieve an object and a key of said object, and return the value from that lookup - again while asserting a specific return type, without a general indexer.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j9sl7u", "is_robot_indexable": true, "report_reasons": null, "author": "peekyblindas", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j9sl7u/asserting_type_of_value_of_keyof_some_object/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/j9sl7u/asserting_type_of_value_of_keyof_some_object/", "subreddit_subscribers": 50294, "created_utc": 1602515344.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_j9sl7u", "before": null}}