{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - February", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_ewxjh2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1580544318.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ewxjh2", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 7, "send_replies": false, "whitelist_status": null, "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ewxjh2/whos_hiring_typescript_developers_february/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/ewxjh2/whos_hiring_typescript_developers_february/", "subreddit_subscribers": 32795, "created_utc": 1580515518.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_1gbt8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "swc is a typescript / javascript compiler. It's 20x faster than babel.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 78, "hide_score": false, "name": "t3_f53z29", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": true, "thumbnail": "https://b.thumbs.redditmedia.com/IuqPlySDuwY4WmZ5wdjhl7Qm1AO-LaydpDT4bVA6SvU.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581946656.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "swc-project.github.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/tNBArnwzyFrdsSchhPWFrjmUGy1iNGueLfrYgm7b4r8.jpg?auto=webp&amp;s=1774631ab3fc242e7b24dfbd2a08da4771dbc657", "width": 1890, "height": 1063}, "resolutions": [{"url": "https://external-preview.redd.it/tNBArnwzyFrdsSchhPWFrjmUGy1iNGueLfrYgm7b4r8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4d8bf237ad565334d2789e563eb298419e31523f", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/tNBArnwzyFrdsSchhPWFrjmUGy1iNGueLfrYgm7b4r8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=479d194fce148b6459e2d95a0d7cee935b47dbbd", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/tNBArnwzyFrdsSchhPWFrjmUGy1iNGueLfrYgm7b4r8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3a98d0b2d0648f016a05e9a9300a38d0ff656fa6", "width": 320, "height": 179}, {"url": "https://external-preview.redd.it/tNBArnwzyFrdsSchhPWFrjmUGy1iNGueLfrYgm7b4r8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=925336e6778e26cb7e453e2a8694a0466e1eb9c0", "width": 640, "height": 359}, {"url": "https://external-preview.redd.it/tNBArnwzyFrdsSchhPWFrjmUGy1iNGueLfrYgm7b4r8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=db62b95edfb64537f09e3355f856baf1ecd3d235", "width": 960, "height": 539}, {"url": "https://external-preview.redd.it/tNBArnwzyFrdsSchhPWFrjmUGy1iNGueLfrYgm7b4r8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7c89ac76ba0405855302ca46fa33fdfd8190d5f4", "width": 1080, "height": 607}], "variants": {}, "id": "5DTSEMRv_hCf7Ze0Rd_GGdb7gG9YxV80xBRgKhAmUiE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f53z29", "is_robot_indexable": true, "report_reasons": null, "author": "moltar", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f53z29/swc_is_a_typescript_javascript_compiler_its_20x/", "parent_whitelist_status": null, "stickied": false, "url": "https://swc-project.github.io/", "subreddit_subscribers": 32795, "created_utc": 1581917856.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_119295", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TypeScript Generics. Discussing naming conventions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_f58ox4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1581974682.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "wanago.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f58ox4", "is_robot_indexable": true, "report_reasons": null, "author": "_gnx", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f58ox4/typescript_generics_discussing_naming_conventions/", "parent_whitelist_status": null, "stickied": false, "url": "https://wanago.io/2020/02/17/typescript-generics-discussing-naming-conventions/", "subreddit_subscribers": 32795, "created_utc": 1581945882.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm working on a Firefox extension with TypeScript, and I have `webpack` set up with `ts-loader` to produce several `.js` files, each corresponding to its own entry point within the FF extension.\n\nI'm using `webpack` in watch mode (with `yarn webpack-cli`), so the files get recompiled whenever there's a change.\n\nThe `webpack` config for each file has this part:\n\n    module: {rules: [{use: 'ts-loader', exclude: /node_modules/,},],},\n    resolve: {extensions: ['.tsx', '.ts'],},\n\nMy question is, am I doing something standard or am I over-complicating things? My suspicion that I'm over-complicating things is due to the fact that I had to install three different things (`webpack`, `ts-loader`, `webpack-cli`) to do just one thing. I know TypeScript itself can also produce a single transpiled `.js` file. Is that preferred? Or do both work? Thanks.", "author_fullname": "t2_ns5i393", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Am I doing it right?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f560e3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581958586.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m working on a Firefox extension with TypeScript, and I have &lt;code&gt;webpack&lt;/code&gt; set up with &lt;code&gt;ts-loader&lt;/code&gt; to produce several &lt;code&gt;.js&lt;/code&gt; files, each corresponding to its own entry point within the FF extension.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m using &lt;code&gt;webpack&lt;/code&gt; in watch mode (with &lt;code&gt;yarn webpack-cli&lt;/code&gt;), so the files get recompiled whenever there&amp;#39;s a change.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;webpack&lt;/code&gt; config for each file has this part:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module: {rules: [{use: &amp;#39;ts-loader&amp;#39;, exclude: /node_modules/,},],},\nresolve: {extensions: [&amp;#39;.tsx&amp;#39;, &amp;#39;.ts&amp;#39;],},\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My question is, am I doing something standard or am I over-complicating things? My suspicion that I&amp;#39;m over-complicating things is due to the fact that I had to install three different things (&lt;code&gt;webpack&lt;/code&gt;, &lt;code&gt;ts-loader&lt;/code&gt;, &lt;code&gt;webpack-cli&lt;/code&gt;) to do just one thing. I know TypeScript itself can also produce a single transpiled &lt;code&gt;.js&lt;/code&gt; file. Is that preferred? Or do both work? Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f560e3", "is_robot_indexable": true, "report_reasons": null, "author": "tehnologie", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f560e3/am_i_doing_it_right/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f560e3/am_i_doing_it_right/", "subreddit_subscribers": 32795, "created_utc": 1581929786.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm playing around with typescript just on the command line and am confused as to why the following compiles without any type errors.  If I deliberately type my mapper to use the same generic for input and output but then make use of it with an input and output of *different* types, shouldn't it fail to compile? (Note: formatting with backticks got messed up, assume the makeString function is valid syntax)\n\n`function map&lt;T&gt;(array: T[], f: (item: T) =&gt; T): T[] {`\n\n  `let result = []`  \n  `for (let i = 0; i &lt; array.length; i++) {`  \n`result[i] = f(array[i])`  \n`}`   \n  `return result`\n\n`}`\n\n`const arrayOfInts = [1,2,3]`\n\n`function makeString(item) {return \\`${item}\\`}\\`\n\n`let mapped = map(arrayOfInts, makeString);`\n\n`console.log(mapped)`\n\nIt's only when I add typing to \\`makeString\\` indicating that it will accept one type T and return a string that this will fail to compile.", "author_fullname": "t2_4sqpk4en", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Typescript Generics - why doesn't this throw an error?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f4v69j", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1581880135.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581908206.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m playing around with typescript just on the command line and am confused as to why the following compiles without any type errors.  If I deliberately type my mapper to use the same generic for input and output but then make use of it with an input and output of &lt;em&gt;different&lt;/em&gt; types, shouldn&amp;#39;t it fail to compile? (Note: formatting with backticks got messed up, assume the makeString function is valid syntax)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;function map&amp;lt;T&amp;gt;(array: T[], f: (item: T) =&amp;gt; T): T[] {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;let result = []&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;for (let i = 0; i &amp;lt; array.length; i++) {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;result[i] = f(array[i])&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;return result&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const arrayOfInts = [1,2,3]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;function makeString(item) {return \\&lt;/code&gt;${item}`}`&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;let mapped = map(arrayOfInts, makeString);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;console.log(mapped)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s only when I add typing to `makeString` indicating that it will accept one type T and return a string that this will fail to compile.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f4v69j", "is_robot_indexable": true, "report_reasons": null, "author": "queenofdiscs", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f4v69j/typescript_generics_why_doesnt_this_throw_an_error/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f4v69j/typescript_generics_why_doesnt_this_throw_an_error/", "subreddit_subscribers": 32795, "created_utc": 1581879406.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hello! So figured i was going to try and learn typescript by doing a frontend project in react and typescript. As i was setting up dev dependencies it hit me that, as far as i understand, the typescript compiler both transpiles and bundles your code. My question is: what role does tools like Babel and Webpack play when you are developing frontend with typescript?", "author_fullname": "t2_c4bhn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Frontend build tools and typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f4rc5f", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581892151.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello! So figured i was going to try and learn typescript by doing a frontend project in react and typescript. As i was setting up dev dependencies it hit me that, as far as i understand, the typescript compiler both transpiles and bundles your code. My question is: what role does tools like Babel and Webpack play when you are developing frontend with typescript?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f4rc5f", "is_robot_indexable": true, "report_reasons": null, "author": "sebbosh", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f4rc5f/frontend_build_tools_and_typescript/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f4rc5f/frontend_build_tools_and_typescript/", "subreddit_subscribers": 32795, "created_utc": 1581863351.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "When asked what features he regretted integrating into the language Anders Hejlsberg mentioned ``namespace`` invoking the fact that it was made deprecated by the ECMAScript module system.\n\nThis came as a shock to me as I am making extensive use of ``namespace``.\nI do not see how ECMAScript module can replace namespace, using module imply splitting the code into different files.\n\n\nConsider this example:\n```typescript\nexport type Person = Person.Student | Person.Teacher;\n\nexport namespace Person {\n\n    export type Common_ = {\n        name: string;\n        age: number;\n    };\n\n    export type Student = Common_ &amp; {\n        type: \"STUDENT\";\n        grades: {\n            maths: number;\n            compSci: number;\n        };\n    };\n\n    export namespace Student {\n\n        export const match = (person: Person): person is Student =&gt;\n            person.type === \"STUDENT\";\n\n        export const getAverageScore = (student: Student) =&gt;\n            (student.grades.compSci + student.grades.maths) / 2;\n\n    }\n\n    export type Teacher = Common_ &amp; {\n        type: \"TEACHER\";\n        subject: \"MATH\" | \"COMP-SCI\";\n    };\n\n    export namespace Teacher {\n\n        export const match = (person: Person): person is Teacher =&gt;\n            person.type === \"TEACHER\";\n\n    }\n\n}\n\n{\n\n    const logPerson = (person: Person) =&gt;\n        console.log([\n            person.name,\n            Person.Student.match(person) ?\n            `is a student, averageScore is: ${Person.Student.getAverageScore(person)}` :\n            `is a ${person.subject} teacher`\n       ].join(\" \"))\n       ;\n\n\n    const teacher: Person.Teacher = {\n        \"type\": \"TEACHER\",\n        \"age\": 53,\n        \"name\": \"Bob\",\n        \"subject\": \"MATH\"\n    };\n\n    //Prints: \"Bob is a MATH teacher\"\n    logPerson(teacher);\n\n}\n```\n\nI see many advantages to structuring the code types definition this way.  \nFirst I can just import { Person } and get all the type hierarchy.  \n\nIf I do not put ``Student`` and ``Teacher`` in the ``Person``'s namespace nothing tells me that they are a subset of ``Person``.  \n\nWhen I need a function that I know to be tightly coupled with a type I can easily find it and it doesn't matter if I don't remember exactly its name, IntelliSense will guide me to ``Person.Student.getAverageScrore(student)`` but if I define ``getStudentAverageScore(student)`` I will have to remember in which file I have defined it and Intellisense won't be of any help to find it.  \n\nAt last, when I am browsing to my code if I don't care about the type ``Person`` and everything that is related to it I can simply fold its namespace.  \n\n\nMaybe my approach is not sound there is an obviously better design pattern?\nWhat do you guys think about namespaces?", "author_fullname": "t2_131798", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why are namespaces regarded as deprecated?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f4x6co", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581915693.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;When asked what features he regretted integrating into the language Anders Hejlsberg mentioned &lt;code&gt;namespace&lt;/code&gt; invoking the fact that it was made deprecated by the ECMAScript module system.&lt;/p&gt;\n\n&lt;p&gt;This came as a shock to me as I am making extensive use of &lt;code&gt;namespace&lt;/code&gt;.\nI do not see how ECMAScript module can replace namespace, using module imply splitting the code into different files.&lt;/p&gt;\n\n&lt;p&gt;Consider this example:\n```typescript\nexport type Person = Person.Student | Person.Teacher;&lt;/p&gt;\n\n&lt;p&gt;export namespace Person {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export type Common_ = {\n    name: string;\n    age: number;\n};\n\nexport type Student = Common_ &amp;amp; {\n    type: &amp;quot;STUDENT&amp;quot;;\n    grades: {\n        maths: number;\n        compSci: number;\n    };\n};\n\nexport namespace Student {\n\n    export const match = (person: Person): person is Student =&amp;gt;\n        person.type === &amp;quot;STUDENT&amp;quot;;\n\n    export const getAverageScore = (student: Student) =&amp;gt;\n        (student.grades.compSci + student.grades.maths) / 2;\n\n}\n\nexport type Teacher = Common_ &amp;amp; {\n    type: &amp;quot;TEACHER&amp;quot;;\n    subject: &amp;quot;MATH&amp;quot; | &amp;quot;COMP-SCI&amp;quot;;\n};\n\nexport namespace Teacher {\n\n    export const match = (person: Person): person is Teacher =&amp;gt;\n        person.type === &amp;quot;TEACHER&amp;quot;;\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const logPerson = (person: Person) =&amp;gt;\n    console.log([\n        person.name,\n        Person.Student.match(person) ?\n        `is a student, averageScore is: ${Person.Student.getAverageScore(person)}` :\n        `is a ${person.subject} teacher`\n   ].join(&amp;quot; &amp;quot;))\n   ;\n\n\nconst teacher: Person.Teacher = {\n    &amp;quot;type&amp;quot;: &amp;quot;TEACHER&amp;quot;,\n    &amp;quot;age&amp;quot;: 53,\n    &amp;quot;name&amp;quot;: &amp;quot;Bob&amp;quot;,\n    &amp;quot;subject&amp;quot;: &amp;quot;MATH&amp;quot;\n};\n\n//Prints: &amp;quot;Bob is a MATH teacher&amp;quot;\nlogPerson(teacher);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;p&gt;I see many advantages to structuring the code types definition this way.&lt;br/&gt;\nFirst I can just import { Person } and get all the type hierarchy.  &lt;/p&gt;\n\n&lt;p&gt;If I do not put &lt;code&gt;Student&lt;/code&gt; and &lt;code&gt;Teacher&lt;/code&gt; in the &lt;code&gt;Person&lt;/code&gt;&amp;#39;s namespace nothing tells me that they are a subset of &lt;code&gt;Person&lt;/code&gt;.  &lt;/p&gt;\n\n&lt;p&gt;When I need a function that I know to be tightly coupled with a type I can easily find it and it doesn&amp;#39;t matter if I don&amp;#39;t remember exactly its name, IntelliSense will guide me to &lt;code&gt;Person.Student.getAverageScrore(student)&lt;/code&gt; but if I define &lt;code&gt;getStudentAverageScore(student)&lt;/code&gt; I will have to remember in which file I have defined it and Intellisense won&amp;#39;t be of any help to find it.  &lt;/p&gt;\n\n&lt;p&gt;At last, when I am browsing to my code if I don&amp;#39;t care about the type &lt;code&gt;Person&lt;/code&gt; and everything that is related to it I can simply fold its namespace.  &lt;/p&gt;\n\n&lt;p&gt;Maybe my approach is not sound there is an obviously better design pattern?\nWhat do you guys think about namespaces?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f4x6co", "is_robot_indexable": true, "report_reasons": null, "author": "garronej", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f4x6co/why_are_namespaces_regarded_as_deprecated/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f4x6co/why_are_namespaces_regarded_as_deprecated/", "subreddit_subscribers": 32795, "created_utc": 1581886893.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_1goirws5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I just made my first NodeJS oriented package. Nodehawk - A development watcher for your Node servers.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "hide_score": false, "name": "t3_f4rkrx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/bpgvYJRKf1yt_T26kO3fa950WFg3rqPGaZwGOvtmliQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581893344.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/hbWgRiW5K9NT7NtKpkCCODs1uFFfA29-3yLdMBuZSy8.jpg?auto=webp&amp;s=947e640a96cff06e9cee9dad363ab6a77c325477", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/hbWgRiW5K9NT7NtKpkCCODs1uFFfA29-3yLdMBuZSy8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=baa8529a8b597ff25e3b66eb55472776e53d055c", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/hbWgRiW5K9NT7NtKpkCCODs1uFFfA29-3yLdMBuZSy8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=20d8047dd5718a06d7a195baa45d8ef08f733384", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/hbWgRiW5K9NT7NtKpkCCODs1uFFfA29-3yLdMBuZSy8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8bdd82077cc8b51dbf44c07839c0b285c201bf52", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/hbWgRiW5K9NT7NtKpkCCODs1uFFfA29-3yLdMBuZSy8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=747d9a037e4ab749c71a34853848d834060fc85c", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/hbWgRiW5K9NT7NtKpkCCODs1uFFfA29-3yLdMBuZSy8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c05da62e244fe35d02cbec3455053fee0dfbaced", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/hbWgRiW5K9NT7NtKpkCCODs1uFFfA29-3yLdMBuZSy8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a16fea2003b5a75dadb21f20e9c90b92bd7346bd", "width": 1080, "height": 540}], "variants": {}, "id": "5CIa9U1YPlL6LhhziJaCZhX5GtjN94UB6WfupKMht1Q"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f4rkrx", "is_robot_indexable": true, "report_reasons": null, "author": "tueieo", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f4rkrx/i_just_made_my_first_nodejs_oriented_package/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/samrith-s/nodehawk", "subreddit_subscribers": 32795, "created_utc": 1581864544.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_epiyb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "debog - A simple drop-in decorator to track timing of class methods", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_f4j7i2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/kGhGCLlXCWskwuzgphoSZM2Bz27YVfBbbm6ukR19NBE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581844811.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/BEfCWF719fD9ZDR33piFvUUI4d-1Z0Lz1QXgY5V7TgA.jpg?auto=webp&amp;s=fe48be60b228b942ba5e1fdc6bbaa048c272d9fa", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/BEfCWF719fD9ZDR33piFvUUI4d-1Z0Lz1QXgY5V7TgA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=cbfff73df6b6263bfc8415fc4ec2d5e5dcf84f9c", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/BEfCWF719fD9ZDR33piFvUUI4d-1Z0Lz1QXgY5V7TgA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4cc9895acd995f3d6999b084ae780bbd835c2936", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/BEfCWF719fD9ZDR33piFvUUI4d-1Z0Lz1QXgY5V7TgA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b79745b471d53ec96477ab6b065e9818aa07225", "width": 320, "height": 320}], "variants": {}, "id": "2FS05Iw9kqO-UFCdIPtOA4nAehyiB3EijaRXEBAP6qs"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f4j7i2", "is_robot_indexable": true, "report_reasons": null, "author": "NightClubSub", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f4j7i2/debog_a_simple_dropin_decorator_to_track_timing/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/UnicornHeartClub/debog", "subreddit_subscribers": 32795, "created_utc": 1581816011.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_tohngqm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Quick Yet NOT dirty \u2014 lazy form of the Observer Pattern", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 100, "hide_score": false, "name": "t3_f4he51", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/XnURIMLTL_l2-3SWDyfTcT8Mu7LFSd0-HySezFmlMDg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1581836658.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Y1OFg14Vu2iETRGRfx8-3Odc3lS3DJVA7mSfNp6ITu4.jpg?auto=webp&amp;s=984f9b67c7d956eef202f0a4dd37a19cfdcbc400", "width": 705, "height": 505}, "resolutions": [{"url": "https://external-preview.redd.it/Y1OFg14Vu2iETRGRfx8-3Odc3lS3DJVA7mSfNp6ITu4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c0201483237d1abc377ce0e8ea24f4d0b681aa20", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/Y1OFg14Vu2iETRGRfx8-3Odc3lS3DJVA7mSfNp6ITu4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=cc829ae2da8332ec0e080176572a00aff544c36b", "width": 216, "height": 154}, {"url": "https://external-preview.redd.it/Y1OFg14Vu2iETRGRfx8-3Odc3lS3DJVA7mSfNp6ITu4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1546c0a619e2b8a7d09fc54c6473941e47829438", "width": 320, "height": 229}, {"url": "https://external-preview.redd.it/Y1OFg14Vu2iETRGRfx8-3Odc3lS3DJVA7mSfNp6ITu4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e3ffdaa92a4244b40255860c7fdf84933d59eac2", "width": 640, "height": 458}], "variants": {}, "id": "nBnZV55_s6AmxlQKl1kJPeaXvxH4f7p0G5rJWhEJnT4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f4he51", "is_robot_indexable": true, "report_reasons": null, "author": "kiarash-irandoust", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f4he51/quick_yet_not_dirty_lazy_form_of_the_observer/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@lironhazan/quick-yet-not-dirty-lazy-form-of-the-observer-pattern-6d2672ead884?source=friends_link&amp;sk=b6c300d0f210375c201c5828c538bdbc", "subreddit_subscribers": 32795, "created_utc": 1581807858.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "`res.data.items ? res.data.items[0].id : undefined`\n\nI've tried this but didn't work\n\n`res.data.items[0]?.id`\n\n`res.data.items?[0].id`", "author_fullname": "t2_3haps1o1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to refactor this code using Optional Chaining?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_f48m23", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 22, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 22, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1581797391.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;res.data.items ? res.data.items[0].id : undefined&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve tried this but didn&amp;#39;t work&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;res.data.items[0]?.id&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;res.data.items?[0].id&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "f48m23", "is_robot_indexable": true, "report_reasons": null, "author": "moun3_im", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/f48m23/how_to_refactor_this_code_using_optional_chaining/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/f48m23/how_to_refactor_this_code_using_optional_chaining/", "subreddit_subscribers": 32795, "created_utc": 1581768591.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_f48m23", "before": null}}