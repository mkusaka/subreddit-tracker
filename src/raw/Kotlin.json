{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi, we have some java business logic that we want to migrate to Kotlin and use as library on multiplatform. Spring is used in the java code, can we reuse it directly in the new library that will be also integrated in iOS/Andoird solutions?\n\nIf we have to use Kotlin DI solution in the library, can it be mixed back with Spring-based java apps that would consume this new library?\n\nthanks!", "author_fullname": "t2_2npdsxpz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "can we use Spring with Kotlin/Native?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fkn5ko", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584554496.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, we have some java business logic that we want to migrate to Kotlin and use as library on multiplatform. Spring is used in the java code, can we reuse it directly in the new library that will be also integrated in iOS/Andoird solutions?&lt;/p&gt;\n\n&lt;p&gt;If we have to use Kotlin DI solution in the library, can it be mixed back with Spring-based java apps that would consume this new library?&lt;/p&gt;\n\n&lt;p&gt;thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fkn5ko", "is_robot_indexable": true, "report_reasons": null, "author": "cicinema", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fkn5ko/can_we_use_spring_with_kotlinnative/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fkn5ko/can_we_use_spring_with_kotlinnative/", "subreddit_subscribers": 28407, "created_utc": 1584525696.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "My web framework [Kweb](https://docs.kweb.io/) incorporates quite a sophisticated DSL involving a large number of quite short functions (often corresponding to HTML tags).\n\nMy instinct was to break these small functions up into different packages according to purpose, but this had the effect of relying much more heavily on IntelliJ to auto-import symbols when necessary.\n\nIs there a better pattern?  Should I just say \"screw it\" and put them all in `kweb.*` for ease of importing?", "author_fullname": "t2_75zx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Good API design patterns to help imports be more seamless?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk1r38", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584462764.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My web framework &lt;a href=\"https://docs.kweb.io/\"&gt;Kweb&lt;/a&gt; incorporates quite a sophisticated DSL involving a large number of quite short functions (often corresponding to HTML tags).&lt;/p&gt;\n\n&lt;p&gt;My instinct was to break these small functions up into different packages according to purpose, but this had the effect of relying much more heavily on IntelliJ to auto-import symbols when necessary.&lt;/p&gt;\n\n&lt;p&gt;Is there a better pattern?  Should I just say &amp;quot;screw it&amp;quot; and put them all in &lt;code&gt;kweb.*&lt;/code&gt; for ease of importing?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk1r38", "is_robot_indexable": true, "report_reasons": null, "author": "sanity", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fk1r38/good_api_design_patterns_to_help_imports_be_more/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fk1r38/good_api_design_patterns_to_help_imports_be_more/", "subreddit_subscribers": 28407, "created_utc": 1584433964.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "    \n    import android.graphics.Color\n    import androidx.appcompat.app.AppCompatActivity\n    import android.os.Bundle\n    import android.view.View\n    import android.widget.Button\n    import android.widget.Toast\n    import kotlinx.android.synthetic.main.activity_main.*\n    import kotlin.random.Random\n    \n    \n    class MainActivity : AppCompatActivity() {\n    \n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_main)\n        }\n         fun buClick(view:View){\n       val buSelected:Button = view as Button\n            var cellID=0\n            when(buSelected.id){\n                R.id.bu1-&gt; cellID=1\n                R.id.bu2-&gt; cellID=2\n                R.id.bu3-&gt; cellID=3\n                R.id.bu4-&gt; cellID=4\n                R.id.bu5-&gt; cellID=5\n                R.id.bu6-&gt; cellID=6\n                R.id.bu7-&gt; cellID=7\n                R.id.bu8-&gt; cellID=8\n                R.id.bu9-&gt; cellID=9\n            }\n    \n             //Log.d(\"buClick:\",buSelected.id.toString())\n             //Log.d(\"buClick:cellID:\",cellID.toString())\n           PlayGame(cellID,buSelected)\n        }\n        var Player1=ArrayList&lt;Int&gt;()\n        var Player2=ArrayList&lt;Int&gt;()\n        var ActivePlayer=1\n        fun PlayGame(cellID:Int,buSelected:Button){\n            if (ActivePlayer==1){\n                buSelected.text=\"X\"\n                buSelected.setBackgroundColor(Color.BLUE)\n                Player1.add(cellID)\n                ActivePlayer=2\n                AutoPlay()\n            }else{\n                buSelected.text=\"O\"\n                buSelected.setBackgroundColor(Color.RED)\n                Player2.add(cellID)\n                ActivePlayer=1\n            }\n            buSelected.isEnabled=false\n            CheckWinner()\n        }\n        fun CheckWinner() {\n            var Winner = -1\n            //Row1\n            if (Player1.contains(1) &amp;&amp; Player1.contains(2) &amp;&amp; Player1.contains(3)) {\n                Winner = 1\n            }\n            if (Player2.contains(1) &amp;&amp; Player1.contains(2) &amp;&amp; Player2.contains(3)) {\n                Winner = 2\n            }\n    \n            //Row2\n            if (Player1.contains(4) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(6)) {\n                Winner = 1\n            }\n            if (Player2.contains(4) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(6)) {\n                Winner = 2\n            }\n    \n            //Row3\n            if (Player1.contains(7) &amp;&amp; Player1.contains(8) &amp;&amp; Player1.contains(9)) {\n                Winner = 1\n            }\n            if (Player2.contains(7) &amp;&amp; Player2.contains(8) &amp;&amp; Player2.contains(9)) {\n                Winner = 2\n            }\n    \n    \n            //Column1\n            if (Player1.contains(1) &amp;&amp; Player1.contains(4) &amp;&amp; Player1.contains(7)) {\n                Winner = 1\n            }\n            if (Player2.contains(1) &amp;&amp; Player2.contains(4) &amp;&amp; Player2.contains(7)) {\n                Winner = 1\n            }\n    \n            //Column 2\n            if (Player1.contains(2) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(8)) {\n                Winner = 1\n            }\n            if (Player2.contains(2) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(8)) {\n                Winner = 2\n            }\n    \n            //Column 3\n            if (Player1.contains(3) &amp;&amp; Player1.contains(6) &amp;&amp; Player1.contains(9)) {\n                Winner = 1\n            }\n            if (Player2.contains(3) &amp;&amp; Player2.contains(6) &amp;&amp; Player2.contains(9)) {\n                Winner = 2\n            }\n    \n    \n            //Cross from Left\n            if (Player1.contains(1) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(9)) {\n                Winner = 1\n            }\n    \n            if (Player2.contains(1) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(9)) {\n                Winner = 2\n            }\n    \n            //Cross from Left\n            if (Player1.contains(3) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(7)) {\n                Winner = 1\n            }\n            if (Player2.contains(3) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(7)) {\n                Winner = 2\n            }\n    \n    \n            if (Winner != -1) {\n                if (Winner == 1) {\n                    Toast.makeText(this, \"X is the WINNER\", Toast.LENGTH_LONG).show()\n                } else {\n                    Toast.makeText(this, \"O is the WINNER\", Toast.LENGTH_LONG).show()\n                }\n    \n            }\n    \n    \n        }\n    private fun AutoPlay(){\n        //SCAN EMPTY CELLS\n        var EmptyCell=ArrayList&lt;Int&gt;()\n    for (CellID in 1..9){\n        if (!Player1.contains(CellID)||!Player2.contains(CellID)){\n            EmptyCell.add(CellID)\n        }\n        //SELECT RANDOM INDEX\n        val r = Random\n        val randIndex=r.nextInt(EmptyCell.size-0)+0\n        val CellID=EmptyCell[randIndex]\n        //CONVERT INDEX INTO BUTTON\n        var buSelect:Button?\n        when(CellID){\n            1-&gt;buSelect=bu1\n            2-&gt;buSelect=bu2\n            3-&gt;buSelect=bu3\n            4-&gt;buSelect=bu4\n            5-&gt;buSelect=bu5\n            6-&gt;buSelect=bu6\n            7-&gt;buSelect=bu7\n            8-&gt;buSelect=bu8\n            9-&gt;buSelect=bu9\n            else-&gt;{\n                buSelect=bu1\n            }\n        }\n        PlayGame(CellID,buSelect)\n    }\n    }\n    \n    \n    }", "author_fullname": "t2_14e1w1ei", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I'm beginner I'm trying to make Tic Tac Toe game but when I press any button the app crashes and the device don't choose any button", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk22et", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584464654.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;import android.graphics.Color\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.view.View\nimport android.widget.Button\nimport android.widget.Toast\nimport kotlinx.android.synthetic.main.activity_main.*\nimport kotlin.random.Random\n\n\nclass MainActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n    }\n     fun buClick(view:View){\n   val buSelected:Button = view as Button\n        var cellID=0\n        when(buSelected.id){\n            R.id.bu1-&amp;gt; cellID=1\n            R.id.bu2-&amp;gt; cellID=2\n            R.id.bu3-&amp;gt; cellID=3\n            R.id.bu4-&amp;gt; cellID=4\n            R.id.bu5-&amp;gt; cellID=5\n            R.id.bu6-&amp;gt; cellID=6\n            R.id.bu7-&amp;gt; cellID=7\n            R.id.bu8-&amp;gt; cellID=8\n            R.id.bu9-&amp;gt; cellID=9\n        }\n\n         //Log.d(&amp;quot;buClick:&amp;quot;,buSelected.id.toString())\n         //Log.d(&amp;quot;buClick:cellID:&amp;quot;,cellID.toString())\n       PlayGame(cellID,buSelected)\n    }\n    var Player1=ArrayList&amp;lt;Int&amp;gt;()\n    var Player2=ArrayList&amp;lt;Int&amp;gt;()\n    var ActivePlayer=1\n    fun PlayGame(cellID:Int,buSelected:Button){\n        if (ActivePlayer==1){\n            buSelected.text=&amp;quot;X&amp;quot;\n            buSelected.setBackgroundColor(Color.BLUE)\n            Player1.add(cellID)\n            ActivePlayer=2\n            AutoPlay()\n        }else{\n            buSelected.text=&amp;quot;O&amp;quot;\n            buSelected.setBackgroundColor(Color.RED)\n            Player2.add(cellID)\n            ActivePlayer=1\n        }\n        buSelected.isEnabled=false\n        CheckWinner()\n    }\n    fun CheckWinner() {\n        var Winner = -1\n        //Row1\n        if (Player1.contains(1) &amp;amp;&amp;amp; Player1.contains(2) &amp;amp;&amp;amp; Player1.contains(3)) {\n            Winner = 1\n        }\n        if (Player2.contains(1) &amp;amp;&amp;amp; Player1.contains(2) &amp;amp;&amp;amp; Player2.contains(3)) {\n            Winner = 2\n        }\n\n        //Row2\n        if (Player1.contains(4) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(6)) {\n            Winner = 1\n        }\n        if (Player2.contains(4) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(6)) {\n            Winner = 2\n        }\n\n        //Row3\n        if (Player1.contains(7) &amp;amp;&amp;amp; Player1.contains(8) &amp;amp;&amp;amp; Player1.contains(9)) {\n            Winner = 1\n        }\n        if (Player2.contains(7) &amp;amp;&amp;amp; Player2.contains(8) &amp;amp;&amp;amp; Player2.contains(9)) {\n            Winner = 2\n        }\n\n\n        //Column1\n        if (Player1.contains(1) &amp;amp;&amp;amp; Player1.contains(4) &amp;amp;&amp;amp; Player1.contains(7)) {\n            Winner = 1\n        }\n        if (Player2.contains(1) &amp;amp;&amp;amp; Player2.contains(4) &amp;amp;&amp;amp; Player2.contains(7)) {\n            Winner = 1\n        }\n\n        //Column 2\n        if (Player1.contains(2) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(8)) {\n            Winner = 1\n        }\n        if (Player2.contains(2) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(8)) {\n            Winner = 2\n        }\n\n        //Column 3\n        if (Player1.contains(3) &amp;amp;&amp;amp; Player1.contains(6) &amp;amp;&amp;amp; Player1.contains(9)) {\n            Winner = 1\n        }\n        if (Player2.contains(3) &amp;amp;&amp;amp; Player2.contains(6) &amp;amp;&amp;amp; Player2.contains(9)) {\n            Winner = 2\n        }\n\n\n        //Cross from Left\n        if (Player1.contains(1) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(9)) {\n            Winner = 1\n        }\n\n        if (Player2.contains(1) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(9)) {\n            Winner = 2\n        }\n\n        //Cross from Left\n        if (Player1.contains(3) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(7)) {\n            Winner = 1\n        }\n        if (Player2.contains(3) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(7)) {\n            Winner = 2\n        }\n\n\n        if (Winner != -1) {\n            if (Winner == 1) {\n                Toast.makeText(this, &amp;quot;X is the WINNER&amp;quot;, Toast.LENGTH_LONG).show()\n            } else {\n                Toast.makeText(this, &amp;quot;O is the WINNER&amp;quot;, Toast.LENGTH_LONG).show()\n            }\n\n        }\n\n\n    }\nprivate fun AutoPlay(){\n    //SCAN EMPTY CELLS\n    var EmptyCell=ArrayList&amp;lt;Int&amp;gt;()\nfor (CellID in 1..9){\n    if (!Player1.contains(CellID)||!Player2.contains(CellID)){\n        EmptyCell.add(CellID)\n    }\n    //SELECT RANDOM INDEX\n    val r = Random\n    val randIndex=r.nextInt(EmptyCell.size-0)+0\n    val CellID=EmptyCell[randIndex]\n    //CONVERT INDEX INTO BUTTON\n    var buSelect:Button?\n    when(CellID){\n        1-&amp;gt;buSelect=bu1\n        2-&amp;gt;buSelect=bu2\n        3-&amp;gt;buSelect=bu3\n        4-&amp;gt;buSelect=bu4\n        5-&amp;gt;buSelect=bu5\n        6-&amp;gt;buSelect=bu6\n        7-&amp;gt;buSelect=bu7\n        8-&amp;gt;buSelect=bu8\n        9-&amp;gt;buSelect=bu9\n        else-&amp;gt;{\n            buSelect=bu1\n        }\n    }\n    PlayGame(CellID,buSelect)\n}\n}\n\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk22et", "is_robot_indexable": true, "report_reasons": null, "author": "Huzaifaomar", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fk22et/im_beginner_im_trying_to_make_tic_tac_toe_game/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fk22et/im_beginner_im_trying_to_make_tic_tac_toe_game/", "subreddit_subscribers": 28407, "created_utc": 1584435854.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Checkout it here: [https://github.com/arkivanov/MVIKotlin](https://github.com/arkivanov/MVIKotlin)\n\nFeatures:\n\n* Multiplatform: Android, JVM, JavaScript, iosX64, iosArm64, linuxX64\n* Does not depend on any reactive library or coroutines\n* Extensions for [Reaktive](https://github.com/badoo/Reaktive) library\n* Extensions for [Coroutines](https://github.com/Kotlin/kotlinx.coroutines)\n* Multithreading friendly (freezable in Kotlin Native if needed)\n* Logging functionality with adjustable verboseness and ability to provide custom logger\n* Time travel feature:\n   * Multiplatform for all supported targets\n   * Plug-and-play UI for Android and iOS\n   * Export/import events for JVM and Android", "author_fullname": "t2_3p49xt6a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "MVIKotlin - new Kotlin Multiplatform framework for MVI", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fjjupo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 30, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 30, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584388944.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Checkout it here: &lt;a href=\"https://github.com/arkivanov/MVIKotlin\"&gt;https://github.com/arkivanov/MVIKotlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Multiplatform: Android, JVM, JavaScript, iosX64, iosArm64, linuxX64&lt;/li&gt;\n&lt;li&gt;Does not depend on any reactive library or coroutines&lt;/li&gt;\n&lt;li&gt;Extensions for &lt;a href=\"https://github.com/badoo/Reaktive\"&gt;Reaktive&lt;/a&gt; library&lt;/li&gt;\n&lt;li&gt;Extensions for &lt;a href=\"https://github.com/Kotlin/kotlinx.coroutines\"&gt;Coroutines&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Multithreading friendly (freezable in Kotlin Native if needed)&lt;/li&gt;\n&lt;li&gt;Logging functionality with adjustable verboseness and ability to provide custom logger&lt;/li&gt;\n&lt;li&gt;Time travel feature:\n\n&lt;ul&gt;\n&lt;li&gt;Multiplatform for all supported targets&lt;/li&gt;\n&lt;li&gt;Plug-and-play UI for Android and iOS&lt;/li&gt;\n&lt;li&gt;Export/import events for JVM and Android&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjjupo", "is_robot_indexable": true, "report_reasons": null, "author": "ArkadiiIvanov", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fjjupo/mvikotlin_new_kotlin_multiplatform_framework_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fjjupo/mvikotlin_new_kotlin_multiplatform_framework_for/", "subreddit_subscribers": 28407, "created_utc": 1584360144.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_13maxu9i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How brevity in Kotlin increases developers' product as compare to Java with example", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk1k4s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584461522.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "vtnetzwelt.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk1k4s", "is_robot_indexable": true, "report_reasons": null, "author": "petergalle", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fk1k4s/how_brevity_in_kotlin_increases_developers/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.vtnetzwelt.com/mobile/java-vs-kotlin/", "subreddit_subscribers": 28407, "created_utc": 1584432722.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_4xy4m8f8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Which programming languages and libraries should I learn to become a complete kotlin android developer?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fj35j3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584315573.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fj35j3", "is_robot_indexable": true, "report_reasons": null, "author": "parth_eng1210", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fj35j3/which_programming_languages_and_libraries_should/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fj35j3/which_programming_languages_and_libraries_should/", "subreddit_subscribers": 28407, "created_utc": 1584286773.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_4w8j8hdv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any of you guys switched to Kotlin and then back to Java?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fj6a2c", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "java", "selftext": "Lessons learned? What happened? I'm seriously thinking of doing a 100% switch to Kotlin for all of my backend apps.", "author_fullname": "t2_4w8j8hdv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Any of you guys switched to Kotlin and then back to Java?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/java", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fj24n8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 132, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 132, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584311432.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.java", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Lessons learned? What happened? I&amp;#39;m seriously thinking of doing a 100% switch to Kotlin for all of my backend apps.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhd7", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fj24n8", "is_robot_indexable": true, "report_reasons": null, "author": "LogicalHurricane", "discussion_type": null, "num_comments": 234, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/java/comments/fj24n8/any_of_you_guys_switched_to_kotlin_and_then_back/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/java/comments/fj24n8/any_of_you_guys_switched_to_kotlin_and_then_back/", "subreddit_subscribers": 176582, "created_utc": 1584282632.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1584327013.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.java", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fj6a2c", "is_robot_indexable": true, "report_reasons": null, "author": "LogicalHurricane", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_fj24n8", "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fj6a2c/any_of_you_guys_switched_to_kotlin_and_then_back/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/java/comments/fj24n8/any_of_you_guys_switched_to_kotlin_and_then_back/", "subreddit_subscribers": 28407, "created_utc": 1584298213.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi, I'm about to start a project that involves managing files on devices such as my Android phone and my computer. I know I need to use something on the JVM and I'm trying to decide between just Java, Scala and kotlin, but if a different language would definitely be better than those feel free to suggest it. I know this is a Kotlin page but if possible please try to be unbiased. \n\nThanks in advance.", "author_fullname": "t2_2l07hcir", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Starting a project, quick question on language", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fjciq0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584350439.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m about to start a project that involves managing files on devices such as my Android phone and my computer. I know I need to use something on the JVM and I&amp;#39;m trying to decide between just Java, Scala and kotlin, but if a different language would definitely be better than those feel free to suggest it. I know this is a Kotlin page but if possible please try to be unbiased. &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjciq0", "is_robot_indexable": true, "report_reasons": null, "author": "JoshkHarris", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fjciq0/starting_a_project_quick_question_on_language/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fjciq0/starting_a_project_quick_question_on_language/", "subreddit_subscribers": 28407, "created_utc": 1584321639.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_8bw3y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "From Apache Cordova to Kotlin Multiplatform", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fj4fuo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584320389.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "whereisdarran.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fj4fuo", "is_robot_indexable": true, "report_reasons": null, "author": "Dazza5000", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fj4fuo/from_apache_cordova_to_kotlin_multiplatform/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://whereisdarran.com/2020/03/from-apache-cordova-to-kotlin-multiplatform/", "subreddit_subscribers": 28407, "created_utc": 1584291589.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_jxff6u5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin data class builders", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fja3v4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584341029.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rockandnull.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fja3v4", "is_robot_indexable": true, "report_reasons": null, "author": "palebt", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fja3v4/kotlin_data_class_builders/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.rockandnull.com/kotlin-data-class-builders/", "subreddit_subscribers": 28407, "created_utc": 1584312229.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fja3v4", "before": null}}