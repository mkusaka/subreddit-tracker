{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - August", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i1ikj5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596269158.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i1ikj5", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i1ikj5/whos_hiring_typescript_developers_august/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/i1ikj5/whos_hiring_typescript_developers_august/", "subreddit_subscribers": 45793, "created_utc": 1596240358.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Curiously I had to do this for a university homework in Angular Ionic, without any JS experience it was quite difficult at the time, but since we were learning Java I liked the \"types\" aspect, now I'm learning more JS when I have time and I want to dedicate more time to TS again later.", "author_fullname": "t2_73be7jf4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Did you use typescript first and then JavaScript?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i5pp1l", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596875824.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Curiously I had to do this for a university homework in Angular Ionic, without any JS experience it was quite difficult at the time, but since we were learning Java I liked the &amp;quot;types&amp;quot; aspect, now I&amp;#39;m learning more JS when I have time and I want to dedicate more time to TS again later.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5pp1l", "is_robot_indexable": true, "report_reasons": null, "author": "iwearmymask", "discussion_type": null, "num_comments": 36, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5pp1l/did_you_use_typescript_first_and_then_javascript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5pp1l/did_you_use_typescript_first_and_then_javascript/", "subreddit_subscribers": 45793, "created_utc": 1596847024.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I\u2019ve been using TS for a while now after only writing JS in the past. I\u2019m currently working polymorphic data clients that have conditionally typed response types that would not be possible without conditional/mapped types.\n\nThis made me wonder, are there any other languages that use (structural) conditonal/mapped types? And if not, does anyone know why?\n\n(I\u2019ve glanced at C#, Swift, and Rust, and searched the web so perhaps I\u2019ve glossed over some things)\n\nEdit: I\u2019ve added a more detailed example in the comments to explain what I\u2019m after. Perhaps polymorphic is the wrong term here.", "author_fullname": "t2_sx42i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Other languages with mapped/conditional types?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i5vmni", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1596885526.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596903375.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019ve been using TS for a while now after only writing JS in the past. I\u2019m currently working polymorphic data clients that have conditionally typed response types that would not be possible without conditional/mapped types.&lt;/p&gt;\n\n&lt;p&gt;This made me wonder, are there any other languages that use (structural) conditonal/mapped types? And if not, does anyone know why?&lt;/p&gt;\n\n&lt;p&gt;(I\u2019ve glanced at C#, Swift, and Rust, and searched the web so perhaps I\u2019ve glossed over some things)&lt;/p&gt;\n\n&lt;p&gt;Edit: I\u2019ve added a more detailed example in the comments to explain what I\u2019m after. Perhaps polymorphic is the wrong term here.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5vmni", "is_robot_indexable": true, "report_reasons": null, "author": "Graftak9000", "discussion_type": null, "num_comments": 22, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5vmni/other_languages_with_mappedconditional_types/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5vmni/other_languages_with_mappedconditional_types/", "subreddit_subscribers": 45793, "created_utc": 1596874575.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "How to define that type ?", "author_fullname": "t2_1ihbqq55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Array type of unknown length with first element type1 and the rest of the elements type2 .", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i5wgu2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596908278.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;How to define that type ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5wgu2", "is_robot_indexable": true, "report_reasons": null, "author": "liaguris", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5wgu2/array_type_of_unknown_length_with_first_element/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5wgu2/array_type_of_unknown_length_with_first_element/", "subreddit_subscribers": 45793, "created_utc": 1596879478.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    import { useForm } from \"react-hook-form\";\n    \n    interface IFormInput {\n      firstName: String;\n      gender: GenderEnum;\n    }\n    \n    export default function App() {\n      const { register, handleSubmit } = useForm&lt;IFormInput&gt;();\n\nI'm uncomfortable with this syntax. From the object destructure I can tell `useForm` returns an object that has keys for `register` and `handleSubmit`. So it is unclear what `IFormInput`  is doing here, if anything.\n\nAny clarification is appreciated, thanks.\n\nPS: Also, I vaguely recall reading that standard data typings (other than maybe `Function`)  should not be capitalized. Is the capitalized `String` above probably a minor mistake? [https://react-hook-form.com/get-started#Registerfields](https://react-hook-form.com/get-started#Registerfields)", "author_fullname": "t2_3dgvi4uq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Type parameter within a function call?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i5vvwq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1596904849.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;import { useForm } from &amp;quot;react-hook-form&amp;quot;;\n\ninterface IFormInput {\n  firstName: String;\n  gender: GenderEnum;\n}\n\nexport default function App() {\n  const { register, handleSubmit } = useForm&amp;lt;IFormInput&amp;gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m uncomfortable with this syntax. From the object destructure I can tell &lt;code&gt;useForm&lt;/code&gt; returns an object that has keys for &lt;code&gt;register&lt;/code&gt; and &lt;code&gt;handleSubmit&lt;/code&gt;. So it is unclear what &lt;code&gt;IFormInput&lt;/code&gt;  is doing here, if anything.&lt;/p&gt;\n\n&lt;p&gt;Any clarification is appreciated, thanks.&lt;/p&gt;\n\n&lt;p&gt;PS: Also, I vaguely recall reading that standard data typings (other than maybe &lt;code&gt;Function&lt;/code&gt;)  should not be capitalized. Is the capitalized &lt;code&gt;String&lt;/code&gt; above probably a minor mistake? &lt;a href=\"https://react-hook-form.com/get-started#Registerfields\"&gt;https://react-hook-form.com/get-started#Registerfields&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/rmLMlluTKb8aba-TriTJ1g9RQq8Yx1kis2d2sgkiiFQ.jpg?auto=webp&amp;s=adbf5c36a7bc515b6fb65f7877be7a1859dc4670", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/rmLMlluTKb8aba-TriTJ1g9RQq8Yx1kis2d2sgkiiFQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a5df45fb5eb95db2541adcd1c25fad15c05b911c", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/rmLMlluTKb8aba-TriTJ1g9RQq8Yx1kis2d2sgkiiFQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7a82bde3a839edb5ffbfc0ec8ec457c85e390d02", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/rmLMlluTKb8aba-TriTJ1g9RQq8Yx1kis2d2sgkiiFQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9ab824e83dfb736cea3fd64a4ac795e4ca02a310", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/rmLMlluTKb8aba-TriTJ1g9RQq8Yx1kis2d2sgkiiFQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ff97669dd9843f184612b7105745c6b70517ca9c", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/rmLMlluTKb8aba-TriTJ1g9RQq8Yx1kis2d2sgkiiFQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=118e2af682ffb534a20b791aa8c6abcd479ba475", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/rmLMlluTKb8aba-TriTJ1g9RQq8Yx1kis2d2sgkiiFQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=752e3696b1d151f66d0c2da117c99a0e89d0565a", "width": 1080, "height": 540}], "variants": {}, "id": "cVolnTTVVFWhVlDNeIuhcYgQoP0EMn4pbgVjHNvmHBc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5vvwq", "is_robot_indexable": true, "report_reasons": null, "author": "javascript_dev", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5vvwq/type_parameter_within_a_function_call/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5vvwq/type_parameter_within_a_function_call/", "subreddit_subscribers": 45793, "created_utc": 1596876049.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I need to know if something like this is possible:\n\n`class\u00a0Database\u00a0{`  \n `static newInstance():\u00a0Database\u00a0{`  \n `return new\u00a0Database();`  \n`}`  \n`}`  \n`function create&lt;T\u00a0extends\u00a0Database&gt;():\u00a0T\u00a0{`  \n `return\u00a0T.newInstance();`  \n`}`", "author_fullname": "t2_3ryvxf9b", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is it possible to access static methods on generic types?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_i5ytvz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1596892342.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596920873.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I need to know if something like this is possible:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;class\u00a0Database\u00a0{&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;static newInstance():\u00a0Database\u00a0{&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return new\u00a0Database();&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;function create&amp;lt;T\u00a0extends\u00a0Database&amp;gt;():\u00a0T\u00a0{&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;return\u00a0T.newInstance();&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5ytvz", "is_robot_indexable": true, "report_reasons": null, "author": "itays123", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5ytvz/is_it_possible_to_access_static_methods_on/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5ytvz/is_it_possible_to_access_static_methods_on/", "subreddit_subscribers": 45793, "created_utc": 1596892073.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    foo = &lt;string&gt;foo\n    bar = bar as string\n\ncompiles to:\n\n    foo = foo;\n    bar = bar;\n\nisn't the compiler supposed to discard these? am I missing something?", "author_fullname": "t2_138jbp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "typecasting clutter", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i5x5s7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596912441.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;foo = &amp;lt;string&amp;gt;foo\nbar = bar as string\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;compiles to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foo = foo;\nbar = bar;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;isn&amp;#39;t the compiler supposed to discard these? am I missing something?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5x5s7", "is_robot_indexable": true, "report_reasons": null, "author": "__romkin", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5x5s7/typecasting_clutter/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5x5s7/typecasting_clutter/", "subreddit_subscribers": 45793, "created_utc": 1596883641.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey all,\n\nI\u2019m curious if anyone has any good suggestions on ways to manage types across multiple frontends and services that have overlapping uses of types or use similar types. I\u2019m trying to slowly move our org to typescript and would like a good way to manage types that won\u2019t get super unruly.", "author_fullname": "t2_5984v", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Managing Types across multiple front-ends and services", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i5rutg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596884832.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey all,&lt;/p&gt;\n\n&lt;p&gt;I\u2019m curious if anyone has any good suggestions on ways to manage types across multiple frontends and services that have overlapping uses of types or use similar types. I\u2019m trying to slowly move our org to typescript and would like a good way to manage types that won\u2019t get super unruly.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5rutg", "is_robot_indexable": true, "report_reasons": null, "author": "MonsoonHD", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5rutg/managing_types_across_multiple_frontends_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5rutg/managing_types_across_multiple_frontends_and/", "subreddit_subscribers": 45793, "created_utc": 1596856032.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_432e5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Announcing TypeScript 4.0 RC", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 64, "top_awarded_type": null, "hide_score": false, "name": "t3_i51era", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 95, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 95, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/3daiO2pEOs5lF6MkyJ0u0prI-s4rwm-Yoj3gHo6OXXY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1596780547.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "devblogs.microsoft.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://devblogs.microsoft.com/typescript/announcing-typescript-4-0-rc/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/jlpHTNqfQqWriePE-7Z17xRSHAx9P78d44uUOwzngqk.jpg?auto=webp&amp;s=7db056121bc43931eb59bbe1004cc2c5606ce523", "width": 1084, "height": 498}, "resolutions": [{"url": "https://external-preview.redd.it/jlpHTNqfQqWriePE-7Z17xRSHAx9P78d44uUOwzngqk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e9193f10fed61acdc4d9c1417552e250237519d7", "width": 108, "height": 49}, {"url": "https://external-preview.redd.it/jlpHTNqfQqWriePE-7Z17xRSHAx9P78d44uUOwzngqk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0e339258be172883f204d36a5817e05c6d3d86c8", "width": 216, "height": 99}, {"url": "https://external-preview.redd.it/jlpHTNqfQqWriePE-7Z17xRSHAx9P78d44uUOwzngqk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2daa7b44b127384a9024b165d8948dfdc712eaef", "width": 320, "height": 147}, {"url": "https://external-preview.redd.it/jlpHTNqfQqWriePE-7Z17xRSHAx9P78d44uUOwzngqk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=37cbf8153461ee9959d679d611c4c500add5e564", "width": 640, "height": 294}, {"url": "https://external-preview.redd.it/jlpHTNqfQqWriePE-7Z17xRSHAx9P78d44uUOwzngqk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2a3d9b7706c9c9a2997c41db5ab729b88f4bb126", "width": 960, "height": 441}, {"url": "https://external-preview.redd.it/jlpHTNqfQqWriePE-7Z17xRSHAx9P78d44uUOwzngqk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ce7b0185170714c75184bac47b7146a461386aba", "width": 1080, "height": 496}], "variants": {}, "id": "ex4llFcoOX3xhgeuVSqBZrOA2bDLETsUOJ1tgSnLkbs"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i51era", "is_robot_indexable": true, "report_reasons": null, "author": "DanielRosenwasser", "discussion_type": null, "num_comments": 24, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i51era/announcing_typescript_40_rc/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://devblogs.microsoft.com/typescript/announcing-typescript-4-0-rc/", "subreddit_subscribers": 45793, "created_utc": 1596751747.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Suppose you have this :\n```\nfunction classFactory&lt;T1,T2,T3&gt;() {\n\treturn class treeNode {\n\t\tprop1 : T1;\n\t\tprop2 : T2;\n\t\tprop3 : T3;\n\t\t/*some other prop that are not type functions*/\n\t};\n}\n```\nHow can I extract from that function this :\n```\ninterface treeNode&lt;T1,T2,T3&gt; {\n\tprop1 : T1;\n\tprop2 : T2;\n\tprop3 : T3;\n}\n```", "author_fullname": "t2_1ihbqq55", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Extracting interface with type parameters from classFactory that also has type parameters .", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i5eirf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596838329.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Suppose you have this :\n&lt;code&gt;\nfunction classFactory&amp;lt;T1,T2,T3&amp;gt;() {\n    return class treeNode {\n        prop1 : T1;\n        prop2 : T2;\n        prop3 : T3;\n        /*some other prop that are not type functions*/\n    };\n}\n&lt;/code&gt;\nHow can I extract from that function this :\n&lt;code&gt;\ninterface treeNode&amp;lt;T1,T2,T3&amp;gt; {\n    prop1 : T1;\n    prop2 : T2;\n    prop3 : T3;\n}\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i5eirf", "is_robot_indexable": true, "report_reasons": null, "author": "liaguris", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i5eirf/extracting_interface_with_type_parameters_from/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i5eirf/extracting_interface_with_type_parameters_from/", "subreddit_subscribers": 45793, "created_utc": 1596809529.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I've been messing around with the new variadic tuples in typescript 4.0 and was able to write a higher order function that converts the popular (err, result) \"callback\" format fn's into a type-safe promise.\n\nThought this was a really cool use-case of what's now possible, so wanted to share:\n\n[Typescript Playground Link](https://www.typescriptlang.org/play?ts=4.0.0-beta#code/FAFwngDgpgBAwgQwDZIEYIMYGsCiAnPGAXhnzwHtCAfGAZxDwEsA7AcxhuYFcUBuUSLEQp02ADwAlAHzEYACigEAXPGRpMuAgBoYeKLR4gVEgJTEZCZmGADoMAGJdmGEI3LMA6oxAALYevEAFRgoAA8QKGYAE1oYSzAAbQBdHWlZOQA6LIQ8VloVBKyMwJ1VEQ1JKSSzIgsrfmAMd3oYCAoAW0ZaRgAzMH9RLFkxAEkQ8MiYuKtk1Kk5HqcMFUdnV3cvXwGKkbmamUzs3PyYEZMVAAUOrqhK8xgAb2AYXSgQLjxmGGYoAHcYK7kTq0KByOR6WjkJAANygOj0ACsoC59o9ni8YItnIcMjk8joFMoygFNHh4fpDMZUU8MRi9O9PiECDAAPyvJEuQl4MxKCFQ2HgilIEAmfi0gC+JnRkv44pswCxLjcXx8UBQ5E2fjUgzk6OYCHaUBU9CYbC06IQrCN3y47VQinNLwwqBUXJUZEoHBtKHJBmFxoYLFYqOh5EYUWAZhpMGdcm4PpgAAMRgBydowAAkD31hvFOktsCzBfFidFwDlwCQbxgqvVAEFaIDgbASG0gV1ev1tRo5LWkBrvFrytgy8A5AhaGBnPJqeiqyAYKw9G8g7IEL8EN4a2r+w2mzc5AAiPvkQ86ADMAEYyy9kIoQHIl1AV2wy5K5GWgA)\n\nAlso release it as an NPM package if anyone wants to help improve it (or fix my mistakes)!\n\n[https://github.com/ChuckJonas/ts-promisify-callback](https://github.com/ChuckJonas/ts-promisify-callback)", "author_fullname": "t2_3rkcc7qb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using the new variadic tuple types to convert callback functions to promises", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_i58b83", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596807955.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been messing around with the new variadic tuples in typescript 4.0 and was able to write a higher order function that converts the popular (err, result) &amp;quot;callback&amp;quot; format fn&amp;#39;s into a type-safe promise.&lt;/p&gt;\n\n&lt;p&gt;Thought this was a really cool use-case of what&amp;#39;s now possible, so wanted to share:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play?ts=4.0.0-beta#code/FAFwngDgpgBAwgQwDZIEYIMYGsCiAnPGAXhnzwHtCAfGAZxDwEsA7AcxhuYFcUBuUSLEQp02ADwAlAHzEYACigEAXPGRpMuAgBoYeKLR4gVEgJTEZCZmGADoMAGJdmGEI3LMA6oxAALYevEAFRgoAA8QKGYAE1oYSzAAbQBdHWlZOQA6LIQ8VloVBKyMwJ1VEQ1JKSSzIgsrfmAMd3oYCAoAW0ZaRgAzMH9RLFkxAEkQ8MiYuKtk1Kk5HqcMFUdnV3cvXwGKkbmamUzs3PyYEZMVAAUOrqhK8xgAb2AYXSgQLjxmGGYoAHcYK7kTq0KByOR6WjkJAANygOj0ACsoC59o9ni8YItnIcMjk8joFMoygFNHh4fpDMZUU8MRi9O9PiECDAAPyvJEuQl4MxKCFQ2HgilIEAmfi0gC+JnRkv44pswCxLjcXx8UBQ5E2fjUgzk6OYCHaUBU9CYbC06IQrCN3y47VQinNLwwqBUXJUZEoHBtKHJBmFxoYLFYqOh5EYUWAZhpMGdcm4PpgAAMRgBydowAAkD31hvFOktsCzBfFidFwDlwCQbxgqvVAEFaIDgbASG0gV1ev1tRo5LWkBrvFrytgy8A5AhaGBnPJqeiqyAYKw9G8g7IEL8EN4a2r+w2mzc5AAiPvkQ86ADMAEYyy9kIoQHIl1AV2wy5K5GWgA\"&gt;Typescript Playground Link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also release it as an NPM package if anyone wants to help improve it (or fix my mistakes)!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ChuckJonas/ts-promisify-callback\"&gt;https://github.com/ChuckJonas/ts-promisify-callback&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i58b83", "is_robot_indexable": true, "report_reasons": null, "author": "Active_Ice2826", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/i58b83/using_the_new_variadic_tuple_types_to_convert/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/i58b83/using_the_new_variadic_tuple_types_to_convert/", "subreddit_subscribers": 45793, "created_utc": 1596779155.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_i58b83", "before": null}}