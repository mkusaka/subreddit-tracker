{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "    val kotlinVersion = \"1.3.72\"\n    plugins {\n        // Error: 'val kotlinVersion: String' can't be called in this context by implicit receiver. Use the explicit one if necessary\n        kotlin(\"jvm\").version(kotlinVersion)]\n    }\n\n I use Kotlin\u2019s standard library as a dependency too and I only want to have to specify the version in one place but when I try something like I did above in my build.gradle.kts I get that error you see in the comment. How do I resolve this?", "author_fullname": "t2_t4u30ab", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why can\u2019t I use val inside Plugins {}?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i15dfs", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596220907.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;val kotlinVersion = &amp;quot;1.3.72&amp;quot;\nplugins {\n    // Error: &amp;#39;val kotlinVersion: String&amp;#39; can&amp;#39;t be called in this context by implicit receiver. Use the explicit one if necessary\n    kotlin(&amp;quot;jvm&amp;quot;).version(kotlinVersion)]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I use Kotlin\u2019s standard library as a dependency too and I only want to have to specify the version in one place but when I try something like I did above in my build.gradle.kts I get that error you see in the comment. How do I resolve this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i15dfs", "is_robot_indexable": true, "report_reasons": null, "author": "SmushyTaco", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i15dfs/why_cant_i_use_val_inside_plugins/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i15dfs/why_cant_i_use_val_inside_plugins/", "subreddit_subscribers": 35971, "created_utc": 1596192107.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "So I was working on converting my build.gradle (Which uses Groovy) to a build.gradle.kts (Which uses Kotlin) and this is what I got so far:\n\nGroovy Original:\n\n    plugins {\n        id 'java'\n        id 'org.jetbrains.kotlin.jvm' version '1.3.72'\n        id 'com.github.johnrengelman.shadow' version '5.2.0'\n    }\n    group 'com.smushytaco'\n    version '1.0-SNAPSHOT'\n    repositories {\n        mavenCentral()\n        maven {\n            url 'https://papermc.io/repo/repository/maven-public/'\n        }\n    }\n    dependencies {\n        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.72'\n        //https://papermc.io/javadocs/paper/1.16/overview-summary.html\n        compileOnly group: 'com.destroystokyo.paper', name: 'paper-api', version: '1.16.1-R0.1-SNAPSHOT'\n    }\n    shadowJar {\n        getArchiveClassifier().set('')\n        project.configurations.implementation.canBeResolved = true\n        configurations = [project.configurations.implementation]\n        relocate 'kotlin', 'com.smushytaco.src.main.kotlin.com.smushytaco.plugin'\n    }\n    build.dependsOn shadowJar\n\nKotlin Conversion:\n\n    plugins {\n        java\n        kotlin(\"jvm\") version(\"1.3.72\")\n        id(\"com.github.johnrengelman.shadow\") version(\"5.2.0\")\n    }\n    group = \"com.smushytaco\"\n    version = \"1.0-SNAPSHOT\"\n    repositories {\n        mavenCentral()\n        maven(\"https://papermc.io/repo/repository/maven-public/\")\n    }\n    dependencies {\n        implementation(\"org.jetbrains.kotlin\", \"kotlin-stdlib\", \"1.3.72\")\n        //https://papermc.io/javadocs/paper/1.16/overview-summary.html\n        compileOnly(\"com.destroystokyo.paper\", \"paper-api\", \"1.16.1-R0.1-SNAPSHOT\")\n    }\n    tasks {\n        shadowJar {\n            archiveClassifier.set(\"\")\n            project.configurations.implementation.get().isCanBeResolved = true\n            // Type Mismatch:\n            // Required: (Mutable)List&lt;Configuration!&gt;!\n            //Found: Array&lt;NamedDomainObjectProvider&lt;Configuration&gt;&gt;\n            configurations = [project.configurations.implementation]\n            relocate(\"kotlin\", \"com.smushytaco.src.main.kotlin.com.smushytaco.plugin\")\n        }\n        build {\n            dependsOn(shadowJar)\n        }\n    }\n\n I commented the error I'm getting with the Kotlin rewrite, why does it work with the original Groovy one and not with this one? How do I fix this error?", "author_fullname": "t2_t4u30ab", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How Do I Resolve This Type Mismatch?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i10xri", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596197457.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I was working on converting my build.gradle (Which uses Groovy) to a build.gradle.kts (Which uses Kotlin) and this is what I got so far:&lt;/p&gt;\n\n&lt;p&gt;Groovy Original:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;plugins {\n    id &amp;#39;java&amp;#39;\n    id &amp;#39;org.jetbrains.kotlin.jvm&amp;#39; version &amp;#39;1.3.72&amp;#39;\n    id &amp;#39;com.github.johnrengelman.shadow&amp;#39; version &amp;#39;5.2.0&amp;#39;\n}\ngroup &amp;#39;com.smushytaco&amp;#39;\nversion &amp;#39;1.0-SNAPSHOT&amp;#39;\nrepositories {\n    mavenCentral()\n    maven {\n        url &amp;#39;https://papermc.io/repo/repository/maven-public/&amp;#39;\n    }\n}\ndependencies {\n    implementation group: &amp;#39;org.jetbrains.kotlin&amp;#39;, name: &amp;#39;kotlin-stdlib&amp;#39;, version: &amp;#39;1.3.72&amp;#39;\n    //https://papermc.io/javadocs/paper/1.16/overview-summary.html\n    compileOnly group: &amp;#39;com.destroystokyo.paper&amp;#39;, name: &amp;#39;paper-api&amp;#39;, version: &amp;#39;1.16.1-R0.1-SNAPSHOT&amp;#39;\n}\nshadowJar {\n    getArchiveClassifier().set(&amp;#39;&amp;#39;)\n    project.configurations.implementation.canBeResolved = true\n    configurations = [project.configurations.implementation]\n    relocate &amp;#39;kotlin&amp;#39;, &amp;#39;com.smushytaco.src.main.kotlin.com.smushytaco.plugin&amp;#39;\n}\nbuild.dependsOn shadowJar\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Kotlin Conversion:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;plugins {\n    java\n    kotlin(&amp;quot;jvm&amp;quot;) version(&amp;quot;1.3.72&amp;quot;)\n    id(&amp;quot;com.github.johnrengelman.shadow&amp;quot;) version(&amp;quot;5.2.0&amp;quot;)\n}\ngroup = &amp;quot;com.smushytaco&amp;quot;\nversion = &amp;quot;1.0-SNAPSHOT&amp;quot;\nrepositories {\n    mavenCentral()\n    maven(&amp;quot;https://papermc.io/repo/repository/maven-public/&amp;quot;)\n}\ndependencies {\n    implementation(&amp;quot;org.jetbrains.kotlin&amp;quot;, &amp;quot;kotlin-stdlib&amp;quot;, &amp;quot;1.3.72&amp;quot;)\n    //https://papermc.io/javadocs/paper/1.16/overview-summary.html\n    compileOnly(&amp;quot;com.destroystokyo.paper&amp;quot;, &amp;quot;paper-api&amp;quot;, &amp;quot;1.16.1-R0.1-SNAPSHOT&amp;quot;)\n}\ntasks {\n    shadowJar {\n        archiveClassifier.set(&amp;quot;&amp;quot;)\n        project.configurations.implementation.get().isCanBeResolved = true\n        // Type Mismatch:\n        // Required: (Mutable)List&amp;lt;Configuration!&amp;gt;!\n        //Found: Array&amp;lt;NamedDomainObjectProvider&amp;lt;Configuration&amp;gt;&amp;gt;\n        configurations = [project.configurations.implementation]\n        relocate(&amp;quot;kotlin&amp;quot;, &amp;quot;com.smushytaco.src.main.kotlin.com.smushytaco.plugin&amp;quot;)\n    }\n    build {\n        dependsOn(shadowJar)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I commented the error I&amp;#39;m getting with the Kotlin rewrite, why does it work with the original Groovy one and not with this one? How do I fix this error?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i10xri", "is_robot_indexable": true, "report_reasons": null, "author": "SmushyTaco", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i10xri/how_do_i_resolve_this_type_mismatch/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i10xri/how_do_i_resolve_this_type_mismatch/", "subreddit_subscribers": 35971, "created_utc": 1596168657.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_783seopc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Androibites | Destructuring Params with safety | Overcoming limitation of Positional Destructuring", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i11b5x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.83, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1596199090.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "chetangupta.net", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://chetangupta.net/destructuring-safely/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i11b5x", "is_robot_indexable": true, "report_reasons": null, "author": "dev-ch8n", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i11b5x/androibites_destructuring_params_with_safety/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://chetangupta.net/destructuring-safely/", "subreddit_subscribers": 35971, "created_utc": 1596170290.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I have this function:\n\n    fun getFeed(token: String): Result&lt;Array&lt;Post?&gt;, Exception&gt; {\n            if (token != \"\") {\n                val (request, response, result) = \"https://alles.cx/api/feed\"\n                    .httpGet()\n                    .header(\"Authorization\", token.toString())\n                    .response()\n    \n                when (result) {\n                    is Result.Success -&gt; {\n                        println(\"Result success\")\n                        try {\n                            val responseJSON = JSONObject(String(response.data))\n                            if (!responseJSON.has(\"err\")) {\n                                println(\"Has no error\")\n                                var feedArray = arrayOfNulls&lt;Post&gt;(0)\n                                println(\"HERE?\")\n                                var feed = JSONArray(responseJSON[\"feed\"])   // &lt;-----ERROR HERE \n                                println(\"not here\")\n                                println(\"Made to the for\")\n                                for (i in 0 until feed.length()) {\n                                    println(\"For $i\")\n                                    val jsonObject = feed.getJSONObject(i)\n    \n                                    var imageURL: URL? = null\n                                    if (jsonObject.has(\"image\")) {\n                                        imageURL = URL(jsonObject[\"image\"].toString())\n                                    }\n                                    feedArray[i] = Post(\n                                        jsonObject.getString(\"id\"),\n                                        User(jsonObject.getJSONObject(\"author\").getString(\"id\"), jsonObject.getJSONObject(\"author\").getString(\"username\"), jsonObject.getJSONObject(\"author\").getString(\"name\")),\n                                        jsonObject.getString(\"createdAt\"),\n                                        jsonObject.getInt(\"replyCount\"),\n                                        jsonObject.getInt(\"score\"),\n                                        jsonObject.getString(\"content\"),\n                                        null,\n                                        imageURL,\n                                        jsonObject.getInt(\"vote\")\n    \n                                    )\n                                    println(\"Added post $i\")\n                                }\n                                println(feedArray)\n                                return Result.Success(feedArray)\n                            }\n                            else {\n                                println(\"yes error\")\n                                return Result.Failure(Exception(responseJSON[\"err\"].toString()))\n                            }\n                        }\n                        catch(e: Exception) {\n                            return Result.Failure(e)\n                        }\n                    }\n                    is Result.Failure -&gt; {\n                        return Result.Failure(Exception(result.component2()?.localizedMessage))\n                    }\n                }\n            }\n            else {\n                return Result.Failure(Exception(\"badAuth\"))\n            }\n        }\n\nAn error is occurring on this line. I know this because of the print statements that are in the code:\n\n    var feed = JSONArray(responseJSON[\"feed\"])   // &lt;-----ERROR HERE \n\nThis is what the error that is occurring is.\n\n    [Failure: org.json.JSONException: Not a primitive array: class org.json.JSONArray]\n\nThis is what the feed object from the get request will look like, just so you have an idea of what it is:\n\n    {\n        \"feed\": [\n            {\n                \"type\": \"post\",\n                \"slug\": \"equ2ZfaX2UThtkS8DzkXdc\",\n                \"author\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"name\": \"Archie\",\n                    \"username\": \"archie\",\n                    \"plus\": true\n                },\n                \"content\": \"I know it's quite inactive here atm. But I'm doing tons of stuff behind the scenes - basically rewriting the entire platform from scratch. Micro will be done by the end of the summer.\",\n                \"image\": null,\n                \"createdAt\": \"2020-07-30T20:39:23.000Z\",\n                \"score\": 5,\n                \"vote\": 0,\n                \"replyCount\": 0,\n                \"hasParent\": false\n            }\n        ]\n    }\n\nWhat could possibly be going wrong here. I am using Fuel for the request, but I don't think that is the problem", "author_fullname": "t2_4zio5g15", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why am I getting org.json.JSONException: Not a primitive array?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i103nz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596193889.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have this function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun getFeed(token: String): Result&amp;lt;Array&amp;lt;Post?&amp;gt;, Exception&amp;gt; {\n        if (token != &amp;quot;&amp;quot;) {\n            val (request, response, result) = &amp;quot;https://alles.cx/api/feed&amp;quot;\n                .httpGet()\n                .header(&amp;quot;Authorization&amp;quot;, token.toString())\n                .response()\n\n            when (result) {\n                is Result.Success -&amp;gt; {\n                    println(&amp;quot;Result success&amp;quot;)\n                    try {\n                        val responseJSON = JSONObject(String(response.data))\n                        if (!responseJSON.has(&amp;quot;err&amp;quot;)) {\n                            println(&amp;quot;Has no error&amp;quot;)\n                            var feedArray = arrayOfNulls&amp;lt;Post&amp;gt;(0)\n                            println(&amp;quot;HERE?&amp;quot;)\n                            var feed = JSONArray(responseJSON[&amp;quot;feed&amp;quot;])   // &amp;lt;-----ERROR HERE \n                            println(&amp;quot;not here&amp;quot;)\n                            println(&amp;quot;Made to the for&amp;quot;)\n                            for (i in 0 until feed.length()) {\n                                println(&amp;quot;For $i&amp;quot;)\n                                val jsonObject = feed.getJSONObject(i)\n\n                                var imageURL: URL? = null\n                                if (jsonObject.has(&amp;quot;image&amp;quot;)) {\n                                    imageURL = URL(jsonObject[&amp;quot;image&amp;quot;].toString())\n                                }\n                                feedArray[i] = Post(\n                                    jsonObject.getString(&amp;quot;id&amp;quot;),\n                                    User(jsonObject.getJSONObject(&amp;quot;author&amp;quot;).getString(&amp;quot;id&amp;quot;), jsonObject.getJSONObject(&amp;quot;author&amp;quot;).getString(&amp;quot;username&amp;quot;), jsonObject.getJSONObject(&amp;quot;author&amp;quot;).getString(&amp;quot;name&amp;quot;)),\n                                    jsonObject.getString(&amp;quot;createdAt&amp;quot;),\n                                    jsonObject.getInt(&amp;quot;replyCount&amp;quot;),\n                                    jsonObject.getInt(&amp;quot;score&amp;quot;),\n                                    jsonObject.getString(&amp;quot;content&amp;quot;),\n                                    null,\n                                    imageURL,\n                                    jsonObject.getInt(&amp;quot;vote&amp;quot;)\n\n                                )\n                                println(&amp;quot;Added post $i&amp;quot;)\n                            }\n                            println(feedArray)\n                            return Result.Success(feedArray)\n                        }\n                        else {\n                            println(&amp;quot;yes error&amp;quot;)\n                            return Result.Failure(Exception(responseJSON[&amp;quot;err&amp;quot;].toString()))\n                        }\n                    }\n                    catch(e: Exception) {\n                        return Result.Failure(e)\n                    }\n                }\n                is Result.Failure -&amp;gt; {\n                    return Result.Failure(Exception(result.component2()?.localizedMessage))\n                }\n            }\n        }\n        else {\n            return Result.Failure(Exception(&amp;quot;badAuth&amp;quot;))\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;An error is occurring on this line. I know this because of the print statements that are in the code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var feed = JSONArray(responseJSON[&amp;quot;feed&amp;quot;])   // &amp;lt;-----ERROR HERE \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is what the error that is occurring is.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[Failure: org.json.JSONException: Not a primitive array: class org.json.JSONArray]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is what the feed object from the get request will look like, just so you have an idea of what it is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n    &amp;quot;feed&amp;quot;: [\n        {\n            &amp;quot;type&amp;quot;: &amp;quot;post&amp;quot;,\n            &amp;quot;slug&amp;quot;: &amp;quot;equ2ZfaX2UThtkS8DzkXdc&amp;quot;,\n            &amp;quot;author&amp;quot;: {\n                &amp;quot;id&amp;quot;: &amp;quot;00000000-0000-0000-0000-000000000000&amp;quot;,\n                &amp;quot;name&amp;quot;: &amp;quot;Archie&amp;quot;,\n                &amp;quot;username&amp;quot;: &amp;quot;archie&amp;quot;,\n                &amp;quot;plus&amp;quot;: true\n            },\n            &amp;quot;content&amp;quot;: &amp;quot;I know it&amp;#39;s quite inactive here atm. But I&amp;#39;m doing tons of stuff behind the scenes - basically rewriting the entire platform from scratch. Micro will be done by the end of the summer.&amp;quot;,\n            &amp;quot;image&amp;quot;: null,\n            &amp;quot;createdAt&amp;quot;: &amp;quot;2020-07-30T20:39:23.000Z&amp;quot;,\n            &amp;quot;score&amp;quot;: 5,\n            &amp;quot;vote&amp;quot;: 0,\n            &amp;quot;replyCount&amp;quot;: 0,\n            &amp;quot;hasParent&amp;quot;: false\n        }\n    ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What could possibly be going wrong here. I am using Fuel for the request, but I don&amp;#39;t think that is the problem&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i103nz", "is_robot_indexable": true, "report_reasons": null, "author": "randomtempaccount123", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i103nz/why_am_i_getting_orgjsonjsonexception_not_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i103nz/why_am_i_getting_orgjsonjsonexception_not_a/", "subreddit_subscribers": 35971, "created_utc": 1596165089.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "VKUG - Apollo-Android: a Journey to Kotlin Multiplatform", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i0psls", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1596157534.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=u_CtCWFH8jA", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i0psls", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i0psls/vkug_apolloandroid_a_journey_to_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=u_CtCWFH8jA", "subreddit_subscribers": 35971, "created_utc": 1596128734.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi there! I spent the last couple days working on this project, and I wanted to share it.\n\nHere it is: https://github.com/amtejani/Number-Game\n\nI hope some of you will have the patience to take a look at the game and maybe give me feedback on my code. I (obviously) didn't put much work into the UI since my goal here was to write an algorithm to solve the puzzle. I also didn't handle exceptions/unexpected states very gracefully.\n\nI do have a couple questions for those who can answer. \n\nI don't have much experience with Gradle other than just adding dependencies in Android Gradle scripts. How do I add 3rd party libraries with  this project? The build.gradle file was generated with the Korge intellij plugin. \n\nAlso, does anyone have suggestions for another algorithms project I could pick up next?\n\nThanks for reading!", "author_fullname": "t2_ct4i4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a puzzle game and an automatic solver", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i0cgta", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1596075359.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596098868.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi there! I spent the last couple days working on this project, and I wanted to share it.&lt;/p&gt;\n\n&lt;p&gt;Here it is: &lt;a href=\"https://github.com/amtejani/Number-Game\"&gt;https://github.com/amtejani/Number-Game&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I hope some of you will have the patience to take a look at the game and maybe give me feedback on my code. I (obviously) didn&amp;#39;t put much work into the UI since my goal here was to write an algorithm to solve the puzzle. I also didn&amp;#39;t handle exceptions/unexpected states very gracefully.&lt;/p&gt;\n\n&lt;p&gt;I do have a couple questions for those who can answer. &lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t have much experience with Gradle other than just adding dependencies in Android Gradle scripts. How do I add 3rd party libraries with  this project? The build.gradle file was generated with the Korge intellij plugin. &lt;/p&gt;\n\n&lt;p&gt;Also, does anyone have suggestions for another algorithms project I could pick up next?&lt;/p&gt;\n\n&lt;p&gt;Thanks for reading!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i0cgta", "is_robot_indexable": true, "report_reasons": null, "author": "AwakenedAres", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i0cgta/i_made_a_puzzle_game_and_an_automatic_solver/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i0cgta/i_made_a_puzzle_game_and_an_automatic_solver/", "subreddit_subscribers": 35971, "created_utc": 1596070068.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_obpis", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin 1.4.0-RC: Debugging coroutines \u2013 Kotlin Blog", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i01l6p", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 54, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 54, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1596061531.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.jetbrains.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-rc-debugging-coroutines/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i01l6p", "is_robot_indexable": true, "report_reasons": null, "author": "dayanruben", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i01l6p/kotlin_140rc_debugging_coroutines_kotlin_blog/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-rc-debugging-coroutines/", "subreddit_subscribers": 35971, "created_utc": 1596032731.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_783seopc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "AndroidBites | 6 things that you need to know before destructuring Parameters", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i0fcjz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.69, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1596110727.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "chetangupta.net", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://chetangupta.net/destructuring-limitations/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i0fcjz", "is_robot_indexable": true, "report_reasons": null, "author": "dev-ch8n", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i0fcjz/androidbites_6_things_that_you_need_to_know/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://chetangupta.net/destructuring-limitations/", "subreddit_subscribers": 35971, "created_utc": 1596081927.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "[We Haven't Invented Zero Yet](https://www.bruceeckel.com/2020/07/30/we-havent-invented-zero-yet/)", "author_fullname": "t2_5n8lqzsi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Computer Science Needs the Equivalent of Zero", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_i0rzam", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.43, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1596164614.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.bruceeckel.com/2020/07/30/we-havent-invented-zero-yet/\"&gt;We Haven&amp;#39;t Invented Zero Yet&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "i0rzam", "is_robot_indexable": true, "report_reasons": null, "author": "BruceEckel", "discussion_type": null, "num_comments": 25, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/i0rzam/computer_science_needs_the_equivalent_of_zero/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/i0rzam/computer_science_needs_the_equivalent_of_zero/", "subreddit_subscribers": 35971, "created_utc": 1596135814.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_91r791y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Bootiful GraphQL with Kotlin", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_hzzleu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/1siPT1pTXFU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "GOTO 2020 \u2022 Bootiful GraphQL with Kotlin \u2022 Dariusz Kuc", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/1siPT1pTXFU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "GOTO Conferences", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/1siPT1pTXFU/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/GotoConferences"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/1siPT1pTXFU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/hzzleu", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1596053390.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://youtu.be/1siPT1pTXFU?list=PLEx5khR4g7PL-JwckuOkkc5cR6X5hn6ug", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "hzzleu", "is_robot_indexable": true, "report_reasons": null, "author": "mto96", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/hzzleu/bootiful_graphql_with_kotlin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/1siPT1pTXFU?list=PLEx5khR4g7PL-JwckuOkkc5cR6X5hn6ug", "subreddit_subscribers": 35971, "created_utc": 1596024590.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "GOTO 2020 \u2022 Bootiful GraphQL with Kotlin \u2022 Dariusz Kuc", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/1siPT1pTXFU?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "GOTO Conferences", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/1siPT1pTXFU/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/GotoConferences"}}, "is_video": false}}], "after": "t3_hzzleu", "before": null}}