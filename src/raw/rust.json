{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nAlso check out [last week's thread](https://reddit.com/r/rust/comments/fc7h20/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (11/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fg0p1v", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583812548.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/fc7h20/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last week&amp;#39;s thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fg0p1v", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 26, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fg0p1v/hey_rustaceans_got_an_easy_question_ask_here/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/fg0p1v/hey_rustaceans_got_an_easy_question_ask_here/", "subreddit_subscribers": 93176, "created_utc": 1583783748.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "New week, new Rust! What are you folks up to? Answer here or over at [rust-users](https://users.rust-lang.org/t/whats-everyone-working-on-this-week-11-2020/39269?u=llogiq)!", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's everyone working on this week (11/2020)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fg0q9l", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583812682.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New week, new Rust! What are you folks up to? Answer here or over at &lt;a href=\"https://users.rust-lang.org/t/whats-everyone-working-on-this-week-11-2020/39269?u=llogiq\"&gt;rust-users&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fg0q9l", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fg0q9l/whats_everyone_working_on_this_week_112020/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/fg0q9l/whats_everyone_working_on_this_week_112020/", "subreddit_subscribers": 93176, "created_utc": 1583783882.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_9a6c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Bottlerocket, a new Linux-based OS, uses Rust for almost all new components", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgm2st", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 451, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 451, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583906832.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgm2st", "is_robot_indexable": true, "report_reasons": null, "author": "redshift", "discussion_type": null, "num_comments": 11, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fgm2st/bottlerocket_a_new_linuxbased_os_uses_rust_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/bottlerocket-os/bottlerocket", "subreddit_subscribers": 93176, "created_utc": 1583878032.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_8z4vc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "AVRA-RS: Microchip (Atmel) assembler written entirely in Rust", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fguvdu", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583950497.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fguvdu", "is_robot_indexable": true, "report_reasons": null, "author": "dozniak", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fguvdu/avrars_microchip_atmel_assembler_written_entirely/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/no111u3/avra-rs", "subreddit_subscribers": 93176, "created_utc": 1583921697.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_zoqvb14", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Impressions of Rust as a Swift Developer: Memory Management", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgue77", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583947345.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.spencerkohan.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgue77", "is_robot_indexable": true, "report_reasons": null, "author": "sk_dev", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fgue77/impressions_of_rust_as_a_swift_developer_memory/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.spencerkohan.com/impressions-of-rust-as-a-swift-developer-2/", "subreddit_subscribers": 93176, "created_utc": 1583918545.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_10li90", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My exploration of Rust and .NET", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgqz5l", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 41, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 41, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583927136.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "ericsink.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "Askama \u00b7 Quinn \u00b7 imap-proto \u00b7 tokio-imap", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgqz5l", "is_robot_indexable": true, "report_reasons": null, "author": "dochtman", "discussion_type": null, "num_comments": 11, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fgqz5l/my_exploration_of_rust_and_net/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://ericsink.com/entries/dotnet_rust.html", "subreddit_subscribers": 93176, "created_utc": 1583898336.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_xpr62", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[talk] Rust NYC: Jon Gjengset - Demystifying unsafe code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fglm6k", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 68, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/QAz-maaH0KM?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": "4c3a495a-89df-11e3-a482-12313d27e9a3", "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Rust NYC: Jon Gjengset - Demystifying unsafe code", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/QAz-maaH0KM?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Rust", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/QAz-maaH0KM/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCaYhcUwRBNscFNUKTjgPFiA"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/QAz-maaH0KM?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/fglm6k", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 68, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583905158.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "tonic", "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fglm6k", "is_robot_indexable": true, "report_reasons": null, "author": "lucio-rs", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/fglm6k/talk_rust_nyc_jon_gjengset_demystifying_unsafe/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=QAz-maaH0KM", "subreddit_subscribers": 93176, "created_utc": 1583876358.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Rust NYC: Jon Gjengset - Demystifying unsafe code", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/QAz-maaH0KM?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Rust", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/QAz-maaH0KM/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCaYhcUwRBNscFNUKTjgPFiA"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_3seok", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Etsy Open-Sources Their Neuro-Evolution Machine Learning System for Search", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgmlwc", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 45, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 45, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583908795.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgmlwc", "is_robot_indexable": true, "report_reasons": null, "author": "Refefer", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fgmlwc/etsy_opensources_their_neuroevolution_machine/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/etsy/Evokit", "subreddit_subscribers": 93176, "created_utc": 1583879995.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "A someone coming from C++-land and working with Rust recently, I'm trying to get a better understanding of how Rust's slices work. With C++, whenever I see a `std::string_view` or `std::span`, I know that there's a struct/class containing a pointer to the beginning of some contiguous sequence and a size. I understand that Rust's `&amp;str` and `&amp;[T]` primitives serve the same purpose.\n\nWhat (I think) I know: `&amp;str` and `&amp;[T]` (and `&amp;OsStr`, etc.) behave less like \"pointers\" or \"references\", despite the `&amp;`, and more like structures holding a reference to the data and the size. The fact that `mem::size_of::&lt;&amp;str&gt;()` is 16 bytes on my system and that the following code:\n\n    let foo = \"Hello, world!\";\n\ncompiles down to:\n\n    example::test:\n            push    rax\n            lea     rax, [rip + .L__unnamed_1]\n            mov     rdi, rax\n            mov     esi, 13\n            ...\n\nwhen optimizations are disabled seems to confirm this.\n\nWhat I don't understand is what exactly `str` and `[T]` are. The documentation seems to just gloss over them. What do they represent and how are they laid out in memory? Why aren't `str` and `[T]` themselves the structure that holds the pointer and size?\n\nI'm unable to call `std::mem::size_of::&lt;T&gt;()` on `str` or `[T]` or create variables of those types without hitting compile errors. I know that it's possible to use these types though. Looking at the [`OsStr` implementation](https://github.com/rust-lang/rust/blob/15812785344d913d779d9738fe3cca8de56f71d5/src/libstd/ffi/os_str.rs#L106-L108), it seems to boil down to [a struct holding a `[u8]`](https://github.com/rust-lang/rust/blob/15812785344d913d779d9738fe3cca8de56f71d5/src/libstd/sys_common/os_str_bytes.rs#L27-L29). What does it mean for a struct to contain a `[u8]`?\n\nWhen I see `&amp;str`, my brain is trying to equate that to `std::string_view *` in C++. I know that's not correct and that it actually behaves like a `std::string_view`. Maybe it'd be more intuitive to me if I knew why the `&amp;` is there and what purpose it serves.\n\nI'd appreciate any pointers (ha!) for better understanding these types!", "author_fullname": "t2_i4gim", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Trying to understand &amp;str vs. str, &amp;[T] vs [T], &amp;OsStr vs OsStr", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgpdb0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583920041.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;A someone coming from C++-land and working with Rust recently, I&amp;#39;m trying to get a better understanding of how Rust&amp;#39;s slices work. With C++, whenever I see a &lt;code&gt;std::string_view&lt;/code&gt; or &lt;code&gt;std::span&lt;/code&gt;, I know that there&amp;#39;s a struct/class containing a pointer to the beginning of some contiguous sequence and a size. I understand that Rust&amp;#39;s &lt;code&gt;&amp;amp;str&lt;/code&gt; and &lt;code&gt;&amp;amp;[T]&lt;/code&gt; primitives serve the same purpose.&lt;/p&gt;\n\n&lt;p&gt;What (I think) I know: &lt;code&gt;&amp;amp;str&lt;/code&gt; and &lt;code&gt;&amp;amp;[T]&lt;/code&gt; (and &lt;code&gt;&amp;amp;OsStr&lt;/code&gt;, etc.) behave less like &amp;quot;pointers&amp;quot; or &amp;quot;references&amp;quot;, despite the &lt;code&gt;&amp;amp;&lt;/code&gt;, and more like structures holding a reference to the data and the size. The fact that &lt;code&gt;mem::size_of::&amp;lt;&amp;amp;str&amp;gt;()&lt;/code&gt; is 16 bytes on my system and that the following code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let foo = &amp;quot;Hello, world!&amp;quot;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;compiles down to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;example::test:\n        push    rax\n        lea     rax, [rip + .L__unnamed_1]\n        mov     rdi, rax\n        mov     esi, 13\n        ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;when optimizations are disabled seems to confirm this.&lt;/p&gt;\n\n&lt;p&gt;What I don&amp;#39;t understand is what exactly &lt;code&gt;str&lt;/code&gt; and &lt;code&gt;[T]&lt;/code&gt; are. The documentation seems to just gloss over them. What do they represent and how are they laid out in memory? Why aren&amp;#39;t &lt;code&gt;str&lt;/code&gt; and &lt;code&gt;[T]&lt;/code&gt; themselves the structure that holds the pointer and size?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m unable to call &lt;code&gt;std::mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; on &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;[T]&lt;/code&gt; or create variables of those types without hitting compile errors. I know that it&amp;#39;s possible to use these types though. Looking at the &lt;a href=\"https://github.com/rust-lang/rust/blob/15812785344d913d779d9738fe3cca8de56f71d5/src/libstd/ffi/os_str.rs#L106-L108\"&gt;&lt;code&gt;OsStr&lt;/code&gt; implementation&lt;/a&gt;, it seems to boil down to &lt;a href=\"https://github.com/rust-lang/rust/blob/15812785344d913d779d9738fe3cca8de56f71d5/src/libstd/sys_common/os_str_bytes.rs#L27-L29\"&gt;a struct holding a &lt;code&gt;[u8]&lt;/code&gt;&lt;/a&gt;. What does it mean for a struct to contain a &lt;code&gt;[u8]&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;When I see &lt;code&gt;&amp;amp;str&lt;/code&gt;, my brain is trying to equate that to &lt;code&gt;std::string_view *&lt;/code&gt; in C++. I know that&amp;#39;s not correct and that it actually behaves like a &lt;code&gt;std::string_view&lt;/code&gt;. Maybe it&amp;#39;d be more intuitive to me if I knew why the &lt;code&gt;&amp;amp;&lt;/code&gt; is there and what purpose it serves.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d appreciate any pointers (ha!) for better understanding these types!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgpdb0", "is_robot_indexable": true, "report_reasons": null, "author": "chenxiaolong", "discussion_type": null, "num_comments": 16, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fgpdb0/trying_to_understand_str_vs_str_t_vs_t_osstr_vs/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/fgpdb0/trying_to_understand_str_vs_str_t_vs_t_osstr_vs/", "subreddit_subscribers": 93176, "created_utc": 1583891241.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "After publishing version [0.3.0](https://www.reddit.com/r/rust/comments/f2wuwc/i_just_published_crow_03_a_pixel_perfect_2d/), this version of `crow` now supports OpenGL version ~~0.3.3~~ `3.3` and has actually decent errors.\n\nUsing it in my WIP showcase game, [akari](https://github.com/lcnr/akari), I am really happy with the current API and will keep working on it in the future.\n\n[CHANGELOG](https://github.com/lcnr/crow/blob/master/CHANGELOG.md)", "author_fullname": "t2_p430ksz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "release of crow 0.4.0, a pixel perfect 2D graphics library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgeoey", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 102, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 102, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1583872953.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583879421.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;After publishing version &lt;a href=\"https://www.reddit.com/r/rust/comments/f2wuwc/i_just_published_crow_03_a_pixel_perfect_2d/\"&gt;0.3.0&lt;/a&gt;, this version of &lt;code&gt;crow&lt;/code&gt; now supports OpenGL version &lt;del&gt;0.3.3&lt;/del&gt; &lt;code&gt;3.3&lt;/code&gt; and has actually decent errors.&lt;/p&gt;\n\n&lt;p&gt;Using it in my WIP showcase game, &lt;a href=\"https://github.com/lcnr/akari\"&gt;akari&lt;/a&gt;, I am really happy with the current API and will keep working on it in the future.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/lcnr/crow/blob/master/CHANGELOG.md\"&gt;CHANGELOG&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgeoey", "is_robot_indexable": true, "report_reasons": null, "author": "olemni7", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fgeoey/release_of_crow_040_a_pixel_perfect_2d_graphics/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/fgeoey/release_of_crow_040_a_pixel_perfect_2d_graphics/", "subreddit_subscribers": 93176, "created_utc": 1583850621.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "[https://github.com/scooter-dangle/midas\\_rs](https://github.com/scooter-dangle/midas_rs)\n\nOriginal implementation: [https://github.com/bhatiasiddharth/MIDAS](https://github.com/bhatiasiddharth/MIDAS)\n\nCorresponding paper: [https://www.comp.nus.edu.sg/\\~sbhatia/assets/pdf/midas.pdf](https://www.comp.nus.edu.sg/~sbhatia/assets/pdf/midas.pdf)\n\n&amp;#x200B;\n\nA teammate wanted to noodle around with the algorithm described in the paper. The original C++ implementation is already pretty straight-forward (which made the port very easy), but both to be able to understand the workings of the algorithm a little better and to have a version that we'd be more comfortable supporting (since we work primarily in Rust and Python) if anyone on the team wanted to play with it, I ported it to Rust.\n\nI haven't done any benchmarking or extensive tests\u2014will develop further based on interest from the team or external users.\n\nI think the original author will be around here in case anyone has questions about the algorithm itself and how to interpret the outputs.", "author_fullname": "t2_60vlpec", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Rust impl (plus Python bindings) of MIDAS Count-Min Sketch based graph anomaly detector", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgshi9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1583935017.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/scooter-dangle/midas_rs\"&gt;https://github.com/scooter-dangle/midas_rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Original implementation: &lt;a href=\"https://github.com/bhatiasiddharth/MIDAS\"&gt;https://github.com/bhatiasiddharth/MIDAS&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Corresponding paper: &lt;a href=\"https://www.comp.nus.edu.sg/%7Esbhatia/assets/pdf/midas.pdf\"&gt;https://www.comp.nus.edu.sg/~sbhatia/assets/pdf/midas.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;A teammate wanted to noodle around with the algorithm described in the paper. The original C++ implementation is already pretty straight-forward (which made the port very easy), but both to be able to understand the workings of the algorithm a little better and to have a version that we&amp;#39;d be more comfortable supporting (since we work primarily in Rust and Python) if anyone on the team wanted to play with it, I ported it to Rust.&lt;/p&gt;\n\n&lt;p&gt;I haven&amp;#39;t done any benchmarking or extensive tests\u2014will develop further based on interest from the team or external users.&lt;/p&gt;\n\n&lt;p&gt;I think the original author will be around here in case anyone has questions about the algorithm itself and how to interpret the outputs.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgshi9", "is_robot_indexable": true, "report_reasons": null, "author": "slsteele", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fgshi9/rust_impl_plus_python_bindings_of_midas_countmin/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/fgshi9/rust_impl_plus_python_bindings_of_midas_countmin/", "subreddit_subscribers": 93176, "created_utc": 1583906217.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_3x7tbj5y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The 2020 RustConf CFP is Now Open!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fgj1u1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1583895881.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.rust-lang.org", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fgj1u1", "is_robot_indexable": true, "report_reasons": null, "author": "XAMPPRocky", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/fgj1u1/the_2020_rustconf_cfp_is_now_open/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.rust-lang.org/2020/03/10/rustconf-cfp.html", "subreddit_subscribers": 93176, "created_utc": 1583867081.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fgj1u1", "before": null}}