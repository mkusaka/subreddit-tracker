{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - October", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_j2xtzq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1601539524.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j2xtzq", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 5, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/j2xtzq/whos_hiring_typescript_developers_october/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/j2xtzq/whos_hiring_typescript_developers_october/", "subreddit_subscribers": 51231, "created_utc": 1601510724.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": ".Net background and I need to know why this code exists in some libraries. What good does it do?\n\nconst \\_ = this;  \n\\_.localVariable = &lt;some arbitrary value&gt;;\n\nWould it not be the same as just using this.localVariable?", "author_fullname": "t2_7fa9m", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "const _ = this;", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_jj0zlr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603833672.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;.Net background and I need to know why this code exists in some libraries. What good does it do?&lt;/p&gt;\n\n&lt;p&gt;const _ = this;&lt;br/&gt;\n_.localVariable = &amp;lt;some arbitrary value&amp;gt;;&lt;/p&gt;\n\n&lt;p&gt;Would it not be the same as just using this.localVariable?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jj0zlr", "is_robot_indexable": true, "report_reasons": null, "author": "Holm76", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jj0zlr/const_this/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jj0zlr/const_this/", "subreddit_subscribers": 51231, "created_utc": 1603804872.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm using `typegoose` with `type-graphql` and when I try to use nested `@InputType()`, the nested object gets converted into `mongoose.Types.ObjectId()`. How do I handle nested InputTypes\n\nThis is my code (`GrandChild` is not a mongoose document, it's a simple object-type)\n\n```ts\n@ObjectType()\nexport class GrandChild {\n  @Field()\n  name: string;\n}\n\n@ObjectType()\nexport class Child {\n  @prop()\n  @Field()\n  name: string;\n\n  @prop({ ref: GrandChild })\n  @Field(() =&gt; GrandChild)\n  grandChild: Ref&lt;GrandChild&gt;;\n}\n\n@ObjectType()\nexport class Parent {\n  @prop()\n  @Field()\n  name: string;\n\n  @prop({ ref: Child })\n  @Field(() =&gt; Child)\n  child: Ref&lt;Child&gt;;\n}\n\n@InputType()\nexport class GrandChildInput {\n  @Field()\n  name: string;\n}\n\n@InputType()\nexport class ChildInput {\n  @Field()\n  name: string;\n\n  @Field(() =&gt; GrandChild)\n  grandChild: GrandChildInput;\n}\n\n@InputType()\nexport class Parent {\n  @Field()\n  name: string;\n\n  @Field(() =&gt; Child)\n  child: ChildInput;\n}\n```\n\n---\n\nExample input:\n\n```json\n{\n  \"name\": \"Parent A\",\n  \"child\": {\n    \"name\": \"Child A\",\n    \"grandChild\": {\n      \"name\": \"GrandChild A\"\n    }\n  }\n}\n```\n\n`parent` query:\n\n```gql\n{\n  parent {\n    name\n    child {\n      name\n      grandChild {\n        name\n      }\n    }\n  }\n}\n```\n\nWhen I run the `parent` query, I get the following output\n\n```bash\nCannot read property \"Child.grandChild\" of undefined.\n```\n\nI used mongo bash to get the parent document and this is what I got:\n\ndb.parent.find():\n```json\n{\n  name: \"Parent A\",\n  child: ObjectId(\"some-object-id-here\")\n}\n```\n\ndb.child.find():\n```json\n{\n  name: \"Child A\",\n  grandChild: ObjectId(\"some-object-id-here\")  // &lt;-- This is not supposed to be a document\n}\n```\n\nHow do fix this?", "author_fullname": "t2_2towqz77", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Need help with type-graphql and typegoose", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jiyhvh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603822653.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m using &lt;code&gt;typegoose&lt;/code&gt; with &lt;code&gt;type-graphql&lt;/code&gt; and when I try to use nested &lt;code&gt;@InputType()&lt;/code&gt;, the nested object gets converted into &lt;code&gt;mongoose.Types.ObjectId()&lt;/code&gt;. How do I handle nested InputTypes&lt;/p&gt;\n\n&lt;p&gt;This is my code (&lt;code&gt;GrandChild&lt;/code&gt; is not a mongoose document, it&amp;#39;s a simple object-type)&lt;/p&gt;\n\n&lt;p&gt;```ts\n@ObjectType()\nexport class GrandChild {\n  @Field()\n  name: string;\n}&lt;/p&gt;\n\n&lt;p&gt;@ObjectType()\nexport class Child {\n  @prop()\n  @Field()\n  name: string;&lt;/p&gt;\n\n&lt;p&gt;@prop({ ref: GrandChild })\n  @Field(() =&amp;gt; GrandChild)\n  grandChild: Ref&amp;lt;GrandChild&amp;gt;;\n}&lt;/p&gt;\n\n&lt;p&gt;@ObjectType()\nexport class Parent {\n  @prop()\n  @Field()\n  name: string;&lt;/p&gt;\n\n&lt;p&gt;@prop({ ref: Child })\n  @Field(() =&amp;gt; Child)\n  child: Ref&amp;lt;Child&amp;gt;;\n}&lt;/p&gt;\n\n&lt;p&gt;@InputType()\nexport class GrandChildInput {\n  @Field()\n  name: string;\n}&lt;/p&gt;\n\n&lt;p&gt;@InputType()\nexport class ChildInput {\n  @Field()\n  name: string;&lt;/p&gt;\n\n&lt;p&gt;@Field(() =&amp;gt; GrandChild)\n  grandChild: GrandChildInput;\n}&lt;/p&gt;\n\n&lt;p&gt;@InputType()\nexport class Parent {\n  @Field()\n  name: string;&lt;/p&gt;\n\n&lt;p&gt;@Field(() =&amp;gt; Child)\n  child: ChildInput;\n}\n```&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Example input:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;json\n{\n  &amp;quot;name&amp;quot;: &amp;quot;Parent A&amp;quot;,\n  &amp;quot;child&amp;quot;: {\n    &amp;quot;name&amp;quot;: &amp;quot;Child A&amp;quot;,\n    &amp;quot;grandChild&amp;quot;: {\n      &amp;quot;name&amp;quot;: &amp;quot;GrandChild A&amp;quot;\n    }\n  }\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;parent&lt;/code&gt; query:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;gql\n{\n  parent {\n    name\n    child {\n      name\n      grandChild {\n        name\n      }\n    }\n  }\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;When I run the &lt;code&gt;parent&lt;/code&gt; query, I get the following output&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;bash\nCannot read property &amp;quot;Child.grandChild&amp;quot; of undefined.\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I used mongo bash to get the parent document and this is what I got:&lt;/p&gt;\n\n&lt;p&gt;db.parent.find():\n&lt;code&gt;json\n{\n  name: &amp;quot;Parent A&amp;quot;,\n  child: ObjectId(&amp;quot;some-object-id-here&amp;quot;)\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;db.child.find():\n&lt;code&gt;json\n{\n  name: &amp;quot;Child A&amp;quot;,\n  grandChild: ObjectId(&amp;quot;some-object-id-here&amp;quot;)  // &amp;lt;-- This is not supposed to be a document\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;How do fix this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jiyhvh", "is_robot_indexable": true, "report_reasons": null, "author": "wise_introvert", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jiyhvh/need_help_with_typegraphql_and_typegoose/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jiyhvh/need_help_with_typegraphql_and_typegoose/", "subreddit_subscribers": 51231, "created_utc": 1603793853.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_kj0nv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Dendron \u2013 A Hierarchical Tool for Thought", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_jijqyl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 47, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 47, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/cXafHlc4S3AkKDT_aD-MMFvNplHr0rqJjgEHxBftUJM.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1603764616.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/dendronhq/dendron", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Cdqhoo7mYVSgz26faEv413RVK7FBq8AnL8yXKD1aHyQ.jpg?auto=webp&amp;s=5d80405cf99e0257e15147330fc52118e546f177", "width": 2283, "height": 1144}, "resolutions": [{"url": "https://external-preview.redd.it/Cdqhoo7mYVSgz26faEv413RVK7FBq8AnL8yXKD1aHyQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4657f337c62be8f8094f9fc01737ed6b7e681bd0", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/Cdqhoo7mYVSgz26faEv413RVK7FBq8AnL8yXKD1aHyQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=82a92c05f72dcbe7ce43ea4f64361e88caf566b1", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/Cdqhoo7mYVSgz26faEv413RVK7FBq8AnL8yXKD1aHyQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9aacf8edf169220d061fbc90f28563f461f32cd0", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/Cdqhoo7mYVSgz26faEv413RVK7FBq8AnL8yXKD1aHyQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=50ced8605f0edd434bed6d185711abbbe1887c37", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/Cdqhoo7mYVSgz26faEv413RVK7FBq8AnL8yXKD1aHyQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c81b02aa40e49c7601892c7e16815e7484434729", "width": 960, "height": 481}, {"url": "https://external-preview.redd.it/Cdqhoo7mYVSgz26faEv413RVK7FBq8AnL8yXKD1aHyQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5c3ac696586e21decaa09e68a3789fdcd0baf3cf", "width": 1080, "height": 541}], "variants": {}, "id": "GhHxxlb1jFkF_cV7gLNxq6sNCno_qArgvx2HBdge2hI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jijqyl", "is_robot_indexable": true, "report_reasons": null, "author": "binaryfor", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jijqyl/dendron_a_hierarchical_tool_for_thought/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/dendronhq/dendron", "subreddit_subscribers": 51231, "created_utc": 1603735816.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "My larger question is essentially, what's the best way to get the typing checker to be happy with the following code snippet?\n\n```\nfunction foo(param: number | null | undefined): number | null { \n  const val = param !== undefined;\n  return val ? param : null;\n}\n```\n\nI want to avoid casting. I'd also like to avoid changing the ternary operator with an `if/else` branch.\n\n\n\nMy code has access to an assert function typed as so:\n\n```\ndeclare function assert(value: any): asserts value;\n```\n\nMy initial thought was to call this inline using the `,` operator like so:\n\n```\nfunction foo(param: number | null | undefined): number | null { \n  const val = param !== undefined;\n  return val ? (assert(param !== undefined), param) : null;\n}\n```\n\nBut `param` is still typed as `number | null | undefined` despite the assertion throwing if `param === undefined`.\n\nDoes anyone know a better way to call the assertion keeping my constraints I mentioned above? Or a better way to make the typing checker happy?", "author_fullname": "t2_15uusv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How can I make an inline assertion?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jiqo2b", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603786264.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My larger question is essentially, what&amp;#39;s the best way to get the typing checker to be happy with the following code snippet?&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nfunction foo(param: number | null | undefined): number | null { \n  const val = param !== undefined;\n  return val ? param : null;\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I want to avoid casting. I&amp;#39;d also like to avoid changing the ternary operator with an &lt;code&gt;if/else&lt;/code&gt; branch.&lt;/p&gt;\n\n&lt;p&gt;My code has access to an assert function typed as so:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\ndeclare function assert(value: any): asserts value;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;My initial thought was to call this inline using the &lt;code&gt;,&lt;/code&gt; operator like so:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nfunction foo(param: number | null | undefined): number | null { \n  const val = param !== undefined;\n  return val ? (assert(param !== undefined), param) : null;\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;But &lt;code&gt;param&lt;/code&gt; is still typed as &lt;code&gt;number | null | undefined&lt;/code&gt; despite the assertion throwing if &lt;code&gt;param === undefined&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Does anyone know a better way to call the assertion keeping my constraints I mentioned above? Or a better way to make the typing checker happy?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jiqo2b", "is_robot_indexable": true, "report_reasons": null, "author": "SlayMaster3000", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jiqo2b/how_can_i_make_an_inline_assertion/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jiqo2b/how_can_i_make_an_inline_assertion/", "subreddit_subscribers": 51231, "created_utc": 1603757464.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Is there anyway to use parser5 in a typescript project? I noticed that it was written in javascript, and uses const parse5 = require('parse5') to import it. If not is there anything that is very similar to it? I need the parser to keep track of the objects location in the DOM", "author_fullname": "t2_79w0koqz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using Parser5", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jio9h4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603778128.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is there anyway to use parser5 in a typescript project? I noticed that it was written in javascript, and uses const parse5 = require(&amp;#39;parse5&amp;#39;) to import it. If not is there anything that is very similar to it? I need the parser to keep track of the objects location in the DOM&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jio9h4", "is_robot_indexable": true, "report_reasons": null, "author": "geesesgoosesfuck", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jio9h4/using_parser5/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jio9h4/using_parser5/", "subreddit_subscribers": 51231, "created_utc": 1603749328.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_tohngqm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Continuations in TypeScript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jiapps", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 25, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1603728673.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/@wim_jongeneel/continuations-in-typescript-db18402010bc?source=friends_link&amp;sk=207a12570b354ebe74d7bfa220461ea5", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jiapps", "is_robot_indexable": true, "report_reasons": null, "author": "kiarash-irandoust", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jiapps/continuations_in_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@wim_jongeneel/continuations-in-typescript-db18402010bc?source=friends_link&amp;sk=207a12570b354ebe74d7bfa220461ea5", "subreddit_subscribers": 51231, "created_utc": 1603699873.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_kj0nv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "This week\u2019s open source newsletter just went out! This one had some seriously interesting projects, like a gaming framework written in Typescript released by Microsoft and a timeline component for React!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jhu66o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 55, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 55, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/QB0XqbnXoK7_ku9W2qAr9bzsuns98RETxwk-h9ZOVZs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 1}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1603664800.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "console.substack.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://console.substack.com/p/console-24?r=3cbez&amp;utm_campaign=post&amp;utm_medium=web&amp;utm_source=copy", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/P5SPZSqMp-LMrEolm7NooxAS8opylX1rhVNwMEhAubE.jpg?auto=webp&amp;s=d9d3671684b24c6b30e0526070f87a2c7c878a8b", "width": 720, "height": 720}, "resolutions": [{"url": "https://external-preview.redd.it/P5SPZSqMp-LMrEolm7NooxAS8opylX1rhVNwMEhAubE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7161110eb6629eb2887d2c109e03ad0213679c21", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/P5SPZSqMp-LMrEolm7NooxAS8opylX1rhVNwMEhAubE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6281d65165510977f5f214e3cc5613294079bef2", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/P5SPZSqMp-LMrEolm7NooxAS8opylX1rhVNwMEhAubE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4f36dc3b867afc25fc21451a5f4623424f2515e3", "width": 320, "height": 320}, {"url": "https://external-preview.redd.it/P5SPZSqMp-LMrEolm7NooxAS8opylX1rhVNwMEhAubE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=63ff9446fc080322a69278fdb2ab3ad2509ec268", "width": 640, "height": 640}], "variants": {}, "id": "6BBt5uilPQ0KC0I3J40YHFuZyjGRT4Dd2bwIAkYDF34"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jhu66o", "is_robot_indexable": true, "report_reasons": null, "author": "binaryfor", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jhu66o/this_weeks_open_source_newsletter_just_went_out/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://console.substack.com/p/console-24?r=3cbez&amp;utm_campaign=post&amp;utm_medium=web&amp;utm_source=copy", "subreddit_subscribers": 51231, "created_utc": 1603636000.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have a reducer in react. The action can be one of 8 types, but for simplicity, let's imagine that there's only 2 types\n\n```typescript\ntype Add = {\n  type: 'add';\n  id: string;\n  value: string;\n}\n\ntype Remove = {\n  type: 'remove';\n  id: string;\n}\n\ntype Action = Add | Remove;\n```\nInstead of using a switch case, I'm using an object of handlers, where each handler is a function that handles a specific action\n```typescript\nconst handlers = {\n  add: (state, action) =&gt; state,\n  remove: (state, action) =&gt; state,\n  default: (state, action) =&gt; state,\n}\n\nconst reducer = (state, action) =&gt; {\n  const handler = handlers[action.type] || handlers.default;\n  return handler(state, action);\n}\n```\nNow I want to type the `handlers` object appropriately. So the handler function should accept an action of type corresponding to its key in the `handlers` object.\n```typescript\ntype Handlers = {\n  [key in Action[\"type\"]]: (state: State, action: Action) =&gt; State\n//                                                \u2191this here should be the action\n//                                                which has type matching to it's key.\n//                                                So when the key is 'add', it should\n//                                                be of type Add, and so on.\n}\n```\nAll I could think of is to explicitly state the key and the matching action type. Is There a way to 'pick' the type from the union, according to the value of the key?\n\n[link to stackoverflow question](https://stackoverflow.com/questions/64527150/in-typescript-how-to-select-a-type-from-a-union-using-a-literal-type-property)", "author_fullname": "t2_1pn6sy05", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to select a type from a union, using a literal type property of said type?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jhyf8c", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1603679663.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a reducer in react. The action can be one of 8 types, but for simplicity, let&amp;#39;s imagine that there&amp;#39;s only 2 types&lt;/p&gt;\n\n&lt;p&gt;```typescript\ntype Add = {\n  type: &amp;#39;add&amp;#39;;\n  id: string;\n  value: string;\n}&lt;/p&gt;\n\n&lt;p&gt;type Remove = {\n  type: &amp;#39;remove&amp;#39;;\n  id: string;\n}&lt;/p&gt;\n\n&lt;p&gt;type Action = Add | Remove;\n&lt;code&gt;\nInstead of using a switch case, I&amp;#39;m using an object of handlers, where each handler is a function that handles a specific action\n&lt;/code&gt;typescript\nconst handlers = {\n  add: (state, action) =&amp;gt; state,\n  remove: (state, action) =&amp;gt; state,\n  default: (state, action) =&amp;gt; state,\n}&lt;/p&gt;\n\n&lt;p&gt;const reducer = (state, action) =&amp;gt; {\n  const handler = handlers[action.type] || handlers.default;\n  return handler(state, action);\n}\n&lt;code&gt;\nNow I want to type the `handlers` object appropriately. So the handler function should accept an action of type corresponding to its key in the `handlers` object.\n&lt;/code&gt;typescript\ntype Handlers = {\n  [key in Action[&amp;quot;type&amp;quot;]]: (state: State, action: Action) =&amp;gt; State\n//                                                \u2191this here should be the action\n//                                                which has type matching to it&amp;#39;s key.\n//                                                So when the key is &amp;#39;add&amp;#39;, it should\n//                                                be of type Add, and so on.\n}\n```\nAll I could think of is to explicitly state the key and the matching action type. Is There a way to &amp;#39;pick&amp;#39; the type from the union, according to the value of the key?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/64527150/in-typescript-how-to-select-a-type-from-a-union-using-a-literal-type-property\"&gt;link to stackoverflow question&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799", "width": 316, "height": 316}, "resolutions": [{"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda", "width": 216, "height": 216}], "variants": {}, "id": "nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jhyf8c", "is_robot_indexable": true, "report_reasons": null, "author": "AhmadMayo", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jhyf8c/how_to_select_a_type_from_a_union_using_a_literal/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jhyf8c/how_to_select_a_type_from_a_union_using_a_literal/", "subreddit_subscribers": 51231, "created_utc": 1603650863.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_kj0nv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Microsoft TileCode", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_jhjpq4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.85, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/pZCR4adWEVQAeMgp0tLhuo5W2f6ciopkvcMqLPuf9QA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1603613212.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/microsoft/tilecode", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?auto=webp&amp;s=cba779060580ed3f457410dab623d999244c625b", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=614e6bf4d7570c9c4d0e9da5224fcb0f4538375a", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=def3c0fba828bd11a25b8af3f4f19956f9a78586", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/oUQzzQfA3-JGtzj_7Jxhrq-7ysdjKnXeVDKfTykHdaA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=eaf239dada5661bd9cc8cf071f171e89bae3b4ea", "width": 320, "height": 320}], "variants": {}, "id": "NJXrOyE3KfKBJ_zZ_HKaff4PvMVJeGk8i3forC7kCZE"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jhjpq4", "is_robot_indexable": true, "report_reasons": null, "author": "binaryfor", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jhjpq4/microsoft_tilecode/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/microsoft/tilecode", "subreddit_subscribers": 51231, "created_utc": 1603584412.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hey guys,\n\nI\u2019m starting work on a project and had some questions about Auth0, Cognito and the likes. \n\nI understand that they can provide RBAC. But do I have to manually check and prevent if a particular user can edit a resource? Or can I leverage these services?\n\nFor example: I have a REST API `/user/:id ` to which you can POST to update information. How do I ensure that (with a JWT or something) the user logged in can only update resources they have access to?", "author_fullname": "t2_1goirws5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best services for RBAC and authorization", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_jhk048", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603614354.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys,&lt;/p&gt;\n\n&lt;p&gt;I\u2019m starting work on a project and had some questions about Auth0, Cognito and the likes. &lt;/p&gt;\n\n&lt;p&gt;I understand that they can provide RBAC. But do I have to manually check and prevent if a particular user can edit a resource? Or can I leverage these services?&lt;/p&gt;\n\n&lt;p&gt;For example: I have a REST API &lt;code&gt;/user/:id&lt;/code&gt; to which you can POST to update information. How do I ensure that (with a JWT or something) the user logged in can only update resources they have access to?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jhk048", "is_robot_indexable": true, "report_reasons": null, "author": "tueieo", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/jhk048/best_services_for_rbac_and_authorization/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/jhk048/best_services_for_rbac_and_authorization/", "subreddit_subscribers": 51231, "created_utc": 1603585554.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jhk048", "before": null}}