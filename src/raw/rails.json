{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Please use this thread to discuss **cool** but relatively **unknown** gems you've found.\n\nYou **should not** post popular gems such as [those listed in wiki](https://www.reddit.com/r/rails/wiki/index#wiki_popular_gems) that are already well known.\n\nPlease include a **description** and a **link** to the gem's homepage in your comment.", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Gimme Gems Thursdays - Found an awesome new gem? Post it here!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jbmadq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1602792387.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Please use this thread to discuss &lt;strong&gt;cool&lt;/strong&gt; but relatively &lt;strong&gt;unknown&lt;/strong&gt; gems you&amp;#39;ve found.&lt;/p&gt;\n\n&lt;p&gt;You &lt;strong&gt;should not&lt;/strong&gt; post popular gems such as &lt;a href=\"https://www.reddit.com/r/rails/wiki/index#wiki_popular_gems\"&gt;those listed in wiki&lt;/a&gt; that are already well known.&lt;/p&gt;\n\n&lt;p&gt;Please include a &lt;strong&gt;description&lt;/strong&gt; and a &lt;strong&gt;link&lt;/strong&gt; to the gem&amp;#39;s homepage in your comment.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jbmadq", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jbmadq/gimme_gems_thursdays_found_an_awesome_new_gem/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/jbmadq/gimme_gems_thursdays_found_an_awesome_new_gem/", "subreddit_subscribers": 46334, "created_utc": 1602763587.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "In this thread you can showcase your personal pet project to other redditors.\n\nNeed help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!\n\nA suggested format to get you started:\n\n1. **Name of your project**\n2. **A short description**\n3. **Application stack**\n4. **Link to Live app**\n5. **Link to GitHub**\n6. **You experience level**\n7. **Other information or areas that you would like advice on**\n\n\u00a0\n\n^(Many thanks to Kritnc for getting the ball rolling.)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Personal Projects - Show off your own project and/or ask for advice", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfcv1r", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603315962.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this thread you can showcase your personal pet project to other redditors.&lt;/p&gt;\n\n&lt;p&gt;Need help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!&lt;/p&gt;\n\n&lt;p&gt;A suggested format to get you started:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Name of your project&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;A short description&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Application stack&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to Live app&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to GitHub&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;You experience level&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Other information or areas that you would like advice on&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Many thanks to Kritnc for getting the ball rolling.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfcv1r", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfcv1r/personal_projects_show_off_your_own_project_andor/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/jfcv1r/personal_projects_show_off_your_own_project_andor/", "subreddit_subscribers": 46334, "created_utc": 1603287162.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Stimulus deserves to have a big and qualitative ecosystem with plug'n'play controllers like in other modern JS frameworks. \n\nMore info here \ud83d\udc49 [https://guillaumebriday.fr/introducing-stimulus-components](https://guillaumebriday.fr/introducing-stimulus-components)\n\nAll the available controllers are here \ud83d\udc49 [https://github.com/stimulus-components](https://github.com/stimulus-components)\n\nFeel free to open PRs and issues \ud83e\udd73", "author_fullname": "t2_cirse", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introducing Stimulus components with a first class support for Rails", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfvgem", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603382238.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Stimulus deserves to have a big and qualitative ecosystem with plug&amp;#39;n&amp;#39;play controllers like in other modern JS frameworks. &lt;/p&gt;\n\n&lt;p&gt;More info here \ud83d\udc49 &lt;a href=\"https://guillaumebriday.fr/introducing-stimulus-components\"&gt;https://guillaumebriday.fr/introducing-stimulus-components&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;All the available controllers are here \ud83d\udc49 &lt;a href=\"https://github.com/stimulus-components\"&gt;https://github.com/stimulus-components&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Feel free to open PRs and issues \ud83e\udd73&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfvgem", "is_robot_indexable": true, "report_reasons": null, "author": "ZiiCEagle", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfvgem/introducing_stimulus_components_with_a_first/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfvgem/introducing_stimulus_components_with_a_first/", "subreddit_subscribers": 46334, "created_utc": 1603353438.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "2020 is a being a very rich year for Rails **boilerplates and generators**. I've written a short article describing the most prominent ones: [https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html](https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html)\n\nHope you find it useful :)", "author_fullname": "t2_411klsg1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ruby on Rails: templates and generators in 2020", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfmas5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 33, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 33, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603345113.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;2020 is a being a very rich year for Rails &lt;strong&gt;boilerplates and generators&lt;/strong&gt;. I&amp;#39;ve written a short article describing the most prominent ones: &lt;a href=\"https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html\"&gt;https://blog.corsego.com/2020/10/ruby-on-rails-templates-and-generators.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hope you find it useful :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfmas5", "is_robot_indexable": true, "report_reasons": null, "author": "yarotheslav", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfmas5/ruby_on_rails_templates_and_generators_in_2020/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfmas5/ruby_on_rails_templates_and_generators_in_2020/", "subreddit_subscribers": 46334, "created_utc": 1603316313.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I have a table with a \"status\" string column where the values are either \"pending\" or \"complete\" and I'd like to know if there is a way to basically display two tables where each iterates each \"status\" value\n\nEDIT: \nOnly thing I've tried is:\n\nmodel.where(\"column\" =&gt; 'string') do \nend\n\nEDIT 2: \nOkay I figured it out, all i dead was put the .each at the end", "author_fullname": "t2_1u6ziqw1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Simple question I'm losing it", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfv6qz", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1603353018.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603380764.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a table with a &amp;quot;status&amp;quot; string column where the values are either &amp;quot;pending&amp;quot; or &amp;quot;complete&amp;quot; and I&amp;#39;d like to know if there is a way to basically display two tables where each iterates each &amp;quot;status&amp;quot; value&lt;/p&gt;\n\n&lt;p&gt;EDIT: \nOnly thing I&amp;#39;ve tried is:&lt;/p&gt;\n\n&lt;p&gt;model.where(&amp;quot;column&amp;quot; =&amp;gt; &amp;#39;string&amp;#39;) do \nend&lt;/p&gt;\n\n&lt;p&gt;EDIT 2: \nOkay I figured it out, all i dead was put the .each at the end&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfv6qz", "is_robot_indexable": true, "report_reasons": null, "author": "fkncharlie", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfv6qz/simple_question_im_losing_it/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfv6qz/simple_question_im_losing_it/", "subreddit_subscribers": 46334, "created_utc": 1603351964.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "", "author_fullname": "t2_6ptcsia4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anyone using Svelte,Elm or anything more obscure?How's your experience?", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfwvu2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603390107.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfwvu2", "is_robot_indexable": true, "report_reasons": null, "author": "Whisperecean", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfwvu2/anyone_using_svelteelm_or_anything_more/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfwvu2/anyone_using_svelteelm_or_anything_more/", "subreddit_subscribers": 46334, "created_utc": 1603361307.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hello good people,  \n\n\nHaving read through this post from yesterday and today:  \n[https://www.reddit.com/r/rails/comments/jeo0xy/where\\_do\\_people\\_host\\_their\\_rails\\_6\\_apps\\_in\\_2020/](https://www.reddit.com/r/rails/comments/jeo0xy/where_do_people_host_their_rails_6_apps_in_2020/)  \n\n\nI thought I would pose a similar question, I run a website ([https://www.marincricketclub.com/](https://www.marincricketclub.com/)) for a sports club I'm a part of, our website lays mostly dormant for 5 months a year and the rest of the year, we would be lucky if we got 500 hits a month.   \n\n\nWe are a non profit so any way I can reduce cost is great! We use Heroku Hobby dyno's at $7 per month and they have been more than adequate for our use case and been zero hassle as well.  \n\n\nBut, after reading the above thread and having done some other research on my own, I believe I can save us some money by moving to the Digital Ocean App Marketplace (probably $5 per month) or Google Cloud Services which based on our use case, should be free or worst case scenario maybe cost $1 a month and this would include our attached storage bucket.   \n\n\nI'm about to rebuild the existing site and have put together a (mostly) static site to serve as a place holder until the next season gets closer. Going forward, the app will send email, have an active storage solution and I want to get the deploy situation sorted now.  \n\n\nSo any advice, ideas or suggestions are very appreciated!  \nRed", "author_fullname": "t2_16uz70h5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hosting / Deployment Advice for Very Low Traffic Application", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfmy30", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603347182.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello good people,  &lt;/p&gt;\n\n&lt;p&gt;Having read through this post from yesterday and today:&lt;br/&gt;\n&lt;a href=\"https://www.reddit.com/r/rails/comments/jeo0xy/where_do_people_host_their_rails_6_apps_in_2020/\"&gt;https://www.reddit.com/r/rails/comments/jeo0xy/where_do_people_host_their_rails_6_apps_in_2020/&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;I thought I would pose a similar question, I run a website (&lt;a href=\"https://www.marincricketclub.com/\"&gt;https://www.marincricketclub.com/&lt;/a&gt;) for a sports club I&amp;#39;m a part of, our website lays mostly dormant for 5 months a year and the rest of the year, we would be lucky if we got 500 hits a month.   &lt;/p&gt;\n\n&lt;p&gt;We are a non profit so any way I can reduce cost is great! We use Heroku Hobby dyno&amp;#39;s at $7 per month and they have been more than adequate for our use case and been zero hassle as well.  &lt;/p&gt;\n\n&lt;p&gt;But, after reading the above thread and having done some other research on my own, I believe I can save us some money by moving to the Digital Ocean App Marketplace (probably $5 per month) or Google Cloud Services which based on our use case, should be free or worst case scenario maybe cost $1 a month and this would include our attached storage bucket.   &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m about to rebuild the existing site and have put together a (mostly) static site to serve as a place holder until the next season gets closer. Going forward, the app will send email, have an active storage solution and I want to get the deploy situation sorted now.  &lt;/p&gt;\n\n&lt;p&gt;So any advice, ideas or suggestions are very appreciated!&lt;br/&gt;\nRed&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfmy30", "is_robot_indexable": true, "report_reasons": null, "author": "CasualSportsFan", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfmy30/hosting_deployment_advice_for_very_low_traffic/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfmy30/hosting_deployment_advice_for_very_low_traffic/", "subreddit_subscribers": 46334, "created_utc": 1603318382.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Let's say you have the project X which is a simple Rails app. It's open source in github. \n\nThen you decide you will host the project on a custom VPS with capistrano for example and sell it to people as a SaaS. \n\nAnd then, you build another instance with small differences and sell it as a business app on a different domain. \n\nWhat is the right way to accomplish that without going crazy? \n\nThe use case is that I've build an app and I want to try and see If it gets any customers. It will have two plans, a personal and a business one. Obviously, the differences with the open source app would be to have extra models as `subscriptions` and more security. \n\nShould I keep the same *Core* and build everything else on top of gems and engines ? Or is there any other common solution I am missing ?\n\nThanks in advance!", "author_fullname": "t2_19yk1hqz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Same base project in three different instances. What do you suggest?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfa5h0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603304049.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s say you have the project X which is a simple Rails app. It&amp;#39;s open source in github. &lt;/p&gt;\n\n&lt;p&gt;Then you decide you will host the project on a custom VPS with capistrano for example and sell it to people as a SaaS. &lt;/p&gt;\n\n&lt;p&gt;And then, you build another instance with small differences and sell it as a business app on a different domain. &lt;/p&gt;\n\n&lt;p&gt;What is the right way to accomplish that without going crazy? &lt;/p&gt;\n\n&lt;p&gt;The use case is that I&amp;#39;ve build an app and I want to try and see If it gets any customers. It will have two plans, a personal and a business one. Obviously, the differences with the open source app would be to have extra models as &lt;code&gt;subscriptions&lt;/code&gt; and more security. &lt;/p&gt;\n\n&lt;p&gt;Should I keep the same &lt;em&gt;Core&lt;/em&gt; and build everything else on top of gems and engines ? Or is there any other common solution I am missing ?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfa5h0", "is_robot_indexable": true, "report_reasons": null, "author": "tonystarkco", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfa5h0/same_base_project_in_three_different_instances/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfa5h0/same_base_project_in_three_different_instances/", "subreddit_subscribers": 46334, "created_utc": 1603275249.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I'm setting up my API, and its only returning one table -- when it should be including the nested relationships between my models. There are at least 6 different other relationships that I want to include with my initial api request. The are nested attributes for the provider\\_form.\n\n**api.rb**\n\n&amp;#x200B;\n\n`require 'grape-entity'`\n\n`module Sims`\n\n`class API &lt; Grape::API`\n\n   `format :json`\n\n   `prefix :api`\n\n  `version 'v1', :path`\n\n `mount Sims::V1::ProviderForms`\n\n `end`\n\n`end`\n\n&amp;#x200B;\n\n**provider\\_form.rb**\n\n`module Sims`\n\n `module V1`\n\n  `class ProviderForms &lt; Sims::API`\n\n  `include Grape::Kamari`\n\n `params do` \n\n   `use :pagination, per_page: 20, max_per_page: 30`\n\n `resources :provider_forms do`\n\n `desc 'return provider forms'` \n\n `get do`\n\n`present paginate(ProviderForm.all), with: PersonalInfoEntity`\n\n`end` \n\n`end`\n\n&amp;#x200B;\n\n**personal\\_info\\_entity.rb**\n\n`class PersonalInfoEntity &lt; Grape::Entity`\n\n`expose :personal_info do`\n\n`expose :first_name`\n\n`expose :last_name`\n\n  `end`\n\n`end`\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n**provider\\_form.rb**\n\n`has_one :personal_info, dependent: :destroy`\n\n**personal\\_info.rb**\n\n`belongs_to :provider_form`", "author_fullname": "t2_asanmgz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anyone know how to retrieve nested attributes with Grape?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfmfqh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603345558.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m setting up my API, and its only returning one table -- when it should be including the nested relationships between my models. There are at least 6 different other relationships that I want to include with my initial api request. The are nested attributes for the provider_form.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;api.rb&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;require &amp;#39;grape-entity&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module Sims&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;class API &amp;lt; Grape::API&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;format :json&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;prefix :api&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;version &amp;#39;v1&amp;#39;, :path&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;mount Sims::V1::ProviderForms&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;provider_form.rb&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module Sims&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module V1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;class ProviderForms &amp;lt; Sims::API&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;include Grape::Kamari&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;params do&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;use :pagination, per_page: 20, max_per_page: 30&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;resources :provider_forms do&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;desc &amp;#39;return provider forms&amp;#39;&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;get do&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;present paginate(ProviderForm.all), with: PersonalInfoEntity&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;personal_info_entity.rb&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;class PersonalInfoEntity &amp;lt; Grape::Entity&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;expose :personal_info do&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;expose :first_name&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;expose :last_name&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;end&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;provider_form.rb&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;has_one :personal_info, dependent: :destroy&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;personal_info.rb&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;belongs_to :provider_form&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfmfqh", "is_robot_indexable": true, "report_reasons": null, "author": "Code4Greatness", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfmfqh/anyone_know_how_to_retrieve_nested_attributes/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfmfqh/anyone_know_how_to_retrieve_nested_attributes/", "subreddit_subscribers": 46334, "created_utc": 1603316758.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I am trying to build a stripped down version of a spree type application to learn. In my product form I want to be able to attached option\\_types to it. I do this by having a select field that has select2 on it. I choose the option types needed from the list and it adds them in as a sort of tags type text field. I think it should come out in the form params as a comma delimited field based on how I have it set up. \n\nWhen I update a product after I have selected some option types the product updates but I am getting the following error on an unpermitted parameter:\n\n&amp;#x200B;\n\nhttps://preview.redd.it/zc3a48ojyfu51.png?width=2509&amp;format=png&amp;auto=webp&amp;s=c7ad26b2e9b688d14497e61ccc97620ac8f91104\n\nI've tried everything and can't figure out why that is happening. Any thoughts on what the issue is based on the info below?\n\nproduct controller:\n\n    class ProductsController &lt; ApplicationController\n      before_action :set_product, only: [:show, :edit, :update, :destroy]\n      before_action :load_data\n      # GET /products\n      # GET /products.json\n      def index\n        u/products = Product.all\n        u/option_types = OptionType.all.map{|c| [ c.name, c.id ] }\n      end\n    \n      # GET /products/1\n      # GET /products/1.json\n      def show\n        puts params.inspect\n      end\n    \n      # GET /products/new\n      def new\n        u/product = Product.new\n        u/product.option_types.new\n        u/categories = Category.all.map{|c| [ c.title, c.id ] }\n        u/variants = Variant.all.map{|c| [ c.name, c.id ] }\n      end\n    \n      # GET /products/1/edit\n      def edit\n        u/categories = Category.all.map{|c| [ c.title, c.id ] }\n        u/option_types = u/product.option_types\n        u/product.option_types.new\n      end\n    \n      # POST /products\n      # POST /products.json\n      def create\n        u/product = Product.new(product_params)\n        u/product.user_id = current_user.id\n        u/product.category_id = params[:category_id]\n        respond_to do |format|\n          if u/product.save\n            format.html { redirect_to u/product, notice: 'Product was successfully created.' }\n            format.json { render :show, status: :created, location: u/product }\n          else\n            format.html { render :new }\n            format.json { render json: u/product.errors, status: :unprocessable_entity }\n          end\n        end\n      end\n    \n      # PATCH/PUT /products/1\n      # PATCH/PUT /products/1.json\n      def update\n        u/product.category_id = params[:category_id]\n    \n        if u/product.option_types.present?\n          u/product.option_types = u/product.option_types.split(',')\n        end\n    \n        respond_to do |format|\n          if u/product.update(product_params)\n            format.html { redirect_to u/product, notice: 'Product was successfully updated.' }\n            format.json { render :show, status: :ok, location: u/product }\n          else\n            format.html { render :edit }\n            format.json { render json: u/product.errors, status: :unprocessable_entity }\n          end\n        end\n      end\n    \n      # DELETE /products/1\n      # DELETE /products/1.json\n      def destroy\n        u/product.destroy\n        respond_to do |format|\n          format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }\n          format.json { head :no_content }\n        end\n      end\n    \n      private\n        # Use callbacks to share common setup or constraints between actions.\n        def set_product\n          u/product = Product.find(params[:id])\n        end\n    \n        def load_data\n          u/option_types = OptionType.order(:name)\n        end\n    \n        # Only allow a list of trusted parameters through.\n        def product_params\n          params.require(:product).permit(:name, :description, :stock, :available_on, :price, :user_id, :main_image, :option_type_ids, :option_type_id, option_type_attributes: [:id, :presentation])\n        end\n    end\n\nproduct model:\n\n    class Product &lt; ApplicationRecord\n      belongs_to :user\n      belongs_to :category\n      has_one_attached :main_image, dependent: :destroy\n      has_many_attached :images, dependent: :destroy\n    \n      has_many :product_option_types, dependent: :destroy\n      has_many :option_types, through: :product_option_types\n    \n      accepts_nested_attributes_for :option_types, allow_destroy: true\n    \n      has_many :variants, inverse_of: :product\n    \n    end\n    \n\noption\\_types model:\n\n    class OptionType &lt; ApplicationRecord\n      with_options dependent: :destroy, inverse_of: :option_type do\n        has_many :option_values, -&gt; { order(:position) }\n        has_many :product_option_types\n      end\n    \n      accepts_nested_attributes_for :option_values, reject_if: :all_blank, allow_destroy: true\n    \n      has_many :products, through: :product_option_types\n    end\n    \n\nproduct\\_option\\_types model:\n\n    class ProductOptionType &lt; ApplicationRecord\n      with_options inverse_of: :product_option_types do\n          belongs_to :product\n          belongs_to :option_type\n      end\n    \n      validates :product, :option_type, presence: true\n      validates :product_id, uniqueness: { scope: :option_type_id }, allow_nil: true\n    end\n    \n\nproduct \\_form\n\n    &lt;%= form_with(model: product, local: true) do |form| %&gt;\n      &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-md-9\"&gt;\n    \n      &lt;% if product.errors.any? %&gt;\n        &lt;div id=\"error_explanation\"&gt;\n          &lt;h2&gt;&lt;%= pluralize(product.errors.count, \"error\") %&gt; prohibited this product from being saved:&lt;/h2&gt;\n    \n          &lt;ul&gt;\n          &lt;% product.errors.full_messages.each do |message| %&gt;\n            &lt;li&gt;&lt;%= message %&gt;&lt;/li&gt;\n          &lt;% end %&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n      &lt;% end %&gt;\n    \n      &lt;div class=\"form-group\"&gt;\n        &lt;%= form.label :name %&gt;\n        &lt;%= form.text_field :name, class: 'form-control' %&gt;\n      &lt;/div&gt;\n    \n      &lt;div class=\"form-group\"&gt;\n        &lt;%= form.label :description %&gt;\n        &lt;%= form.text_area :description, class: 'form-control' %&gt;\n      &lt;/div&gt;\n    \n      &lt;div class=\"form-group\"&gt;\n        &lt;%= form.label :stock %&gt;\n        &lt;%= form.text_field :stock, class: 'form-control' %&gt;\n      &lt;/div&gt;\n    \n      &lt;div class=\"form-group\"&gt;\n        &lt;%= form.label :available_on %&gt;\n        &lt;%= form.text_field :available_on, class: 'form-control', data: { behavior: \"flatpickr\" } %&gt;\n      &lt;/div&gt;\n    \n      &lt;div class=\"form-group\"&gt;\n        &lt;%= form.label :price %&gt;\n        &lt;%= form.text_field :price, class: 'form-control' %&gt;\n      &lt;/div&gt;\n    \n      &lt;div class=\"form-group\"&gt;\n        &lt;%= form.label 'Category' %&gt;\n      &lt;%= select_tag(:category_id, options_for_select(@categories, u/product.category_id), class: 'form-control', :prompt =&gt; 'Select category') %&gt;\n      &lt;/div&gt;\n    \n      &lt;div class=\"form-group\" data-controller='select2'&gt;\n        &lt;%= form.label :option_type_ids %&gt;\n    \n        &lt;%= form.select :option_type_id, OptionType.all.map { |type| type.presentation }, {include_blank: false}, class: 'form-control content-search', multiple: 'multiple' %&gt;\n    \n      &lt;/div&gt;\n    \n        &lt;hr&gt;\n        &lt;div class=\"form-group\"&gt;\n        &lt;%= form.submit class: 'btn btn-primary' %&gt;\n    \n        &lt;% if product.persisted? %&gt;\n        &lt;div class=\"float-right\"&gt;\n          &lt;%= link_to 'Destroy', product, method: :delete, class: \"text-danger\", data: { confirm: 'Are you sure?' } %&gt;\n        &lt;/div&gt;\n          &lt;%= link_to \"Cancel\", product, class: \"btn btn-link\" %&gt;\n        &lt;% else %&gt;\n          &lt;%= link_to \"Cancel\", products_path, class: \"btn btn-link\" %&gt;\n        &lt;% end %&gt;\n    \n      &lt;/div&gt;\n    &lt;/div&gt;\n    \n    &lt;div class=\"col-md-3\"&gt;\n      &lt;div class=\"form-group\"&gt;\n        &lt;%= form.label 'Main Product Image' %&gt;\n        &lt;%= form.file_field :main_image, classs: 'form-control' %&gt;\n      &lt;/div&gt;\n    \n      &lt;% if product.persisted? %&gt;\n    \n          &lt;div class=\"form-group\"&gt;\n              &lt;%= link_to \"Manage Variants\", product_variants_path(@product), class: \"btn btn-link\" %&gt;\n          &lt;/div&gt;\n    \n        &lt;/div&gt;\n        &lt;% end %&gt;\n      &lt;/div&gt;\n      &lt;% end %&gt;", "author_fullname": "t2_8eiioqsu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Issue with unpermitted parameter", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "media_metadata": {"zc3a48ojyfu51": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 21, "x": 108, "u": "https://preview.redd.it/zc3a48ojyfu51.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=ef02d3584e4c52cfc436c750635072f4c01d6639"}, {"y": 42, "x": 216, "u": "https://preview.redd.it/zc3a48ojyfu51.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=fd9a97f799b342d52e303c6cdc7b94f102bc40d5"}, {"y": 63, "x": 320, "u": "https://preview.redd.it/zc3a48ojyfu51.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=a8fb640d7cc56c2f8e4f5f44afb932de290c5825"}, {"y": 126, "x": 640, "u": "https://preview.redd.it/zc3a48ojyfu51.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=e0804bfd87b064ee7eb1462db70426df9102e1e1"}, {"y": 189, "x": 960, "u": "https://preview.redd.it/zc3a48ojyfu51.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=35602413a903b210ad78d7d177b565dd6785a809"}, {"y": 213, "x": 1080, "u": "https://preview.redd.it/zc3a48ojyfu51.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8ace0c98a6d7ce95f371d24d709ad7dfe4427c03"}], "s": {"y": 495, "x": 2509, "u": "https://preview.redd.it/zc3a48ojyfu51.png?width=2509&amp;format=png&amp;auto=webp&amp;s=c7ad26b2e9b688d14497e61ccc97620ac8f91104"}, "id": "zc3a48ojyfu51"}}, "name": "t3_jfbvgm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603312248.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to build a stripped down version of a spree type application to learn. In my product form I want to be able to attached option_types to it. I do this by having a select field that has select2 on it. I choose the option types needed from the list and it adds them in as a sort of tags type text field. I think it should come out in the form params as a comma delimited field based on how I have it set up. &lt;/p&gt;\n\n&lt;p&gt;When I update a product after I have selected some option types the product updates but I am getting the following error on an unpermitted parameter:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/zc3a48ojyfu51.png?width=2509&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c7ad26b2e9b688d14497e61ccc97620ac8f91104\"&gt;https://preview.redd.it/zc3a48ojyfu51.png?width=2509&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c7ad26b2e9b688d14497e61ccc97620ac8f91104&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve tried everything and can&amp;#39;t figure out why that is happening. Any thoughts on what the issue is based on the info below?&lt;/p&gt;\n\n&lt;p&gt;product controller:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class ProductsController &amp;lt; ApplicationController\n  before_action :set_product, only: [:show, :edit, :update, :destroy]\n  before_action :load_data\n  # GET /products\n  # GET /products.json\n  def index\n    u/products = Product.all\n    u/option_types = OptionType.all.map{|c| [ c.name, c.id ] }\n  end\n\n  # GET /products/1\n  # GET /products/1.json\n  def show\n    puts params.inspect\n  end\n\n  # GET /products/new\n  def new\n    u/product = Product.new\n    u/product.option_types.new\n    u/categories = Category.all.map{|c| [ c.title, c.id ] }\n    u/variants = Variant.all.map{|c| [ c.name, c.id ] }\n  end\n\n  # GET /products/1/edit\n  def edit\n    u/categories = Category.all.map{|c| [ c.title, c.id ] }\n    u/option_types = u/product.option_types\n    u/product.option_types.new\n  end\n\n  # POST /products\n  # POST /products.json\n  def create\n    u/product = Product.new(product_params)\n    u/product.user_id = current_user.id\n    u/product.category_id = params[:category_id]\n    respond_to do |format|\n      if u/product.save\n        format.html { redirect_to u/product, notice: &amp;#39;Product was successfully created.&amp;#39; }\n        format.json { render :show, status: :created, location: u/product }\n      else\n        format.html { render :new }\n        format.json { render json: u/product.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /products/1\n  # PATCH/PUT /products/1.json\n  def update\n    u/product.category_id = params[:category_id]\n\n    if u/product.option_types.present?\n      u/product.option_types = u/product.option_types.split(&amp;#39;,&amp;#39;)\n    end\n\n    respond_to do |format|\n      if u/product.update(product_params)\n        format.html { redirect_to u/product, notice: &amp;#39;Product was successfully updated.&amp;#39; }\n        format.json { render :show, status: :ok, location: u/product }\n      else\n        format.html { render :edit }\n        format.json { render json: u/product.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /products/1\n  # DELETE /products/1.json\n  def destroy\n    u/product.destroy\n    respond_to do |format|\n      format.html { redirect_to products_url, notice: &amp;#39;Product was successfully destroyed.&amp;#39; }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_product\n      u/product = Product.find(params[:id])\n    end\n\n    def load_data\n      u/option_types = OptionType.order(:name)\n    end\n\n    # Only allow a list of trusted parameters through.\n    def product_params\n      params.require(:product).permit(:name, :description, :stock, :available_on, :price, :user_id, :main_image, :option_type_ids, :option_type_id, option_type_attributes: [:id, :presentation])\n    end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;product model:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Product &amp;lt; ApplicationRecord\n  belongs_to :user\n  belongs_to :category\n  has_one_attached :main_image, dependent: :destroy\n  has_many_attached :images, dependent: :destroy\n\n  has_many :product_option_types, dependent: :destroy\n  has_many :option_types, through: :product_option_types\n\n  accepts_nested_attributes_for :option_types, allow_destroy: true\n\n  has_many :variants, inverse_of: :product\n\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;option_types model:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class OptionType &amp;lt; ApplicationRecord\n  with_options dependent: :destroy, inverse_of: :option_type do\n    has_many :option_values, -&amp;gt; { order(:position) }\n    has_many :product_option_types\n  end\n\n  accepts_nested_attributes_for :option_values, reject_if: :all_blank, allow_destroy: true\n\n  has_many :products, through: :product_option_types\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;product_option_types model:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class ProductOptionType &amp;lt; ApplicationRecord\n  with_options inverse_of: :product_option_types do\n      belongs_to :product\n      belongs_to :option_type\n  end\n\n  validates :product, :option_type, presence: true\n  validates :product_id, uniqueness: { scope: :option_type_id }, allow_nil: true\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;product _form&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;%= form_with(model: product, local: true) do |form| %&amp;gt;\n  &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;\n    &amp;lt;div class=&amp;quot;col-md-9&amp;quot;&amp;gt;\n\n  &amp;lt;% if product.errors.any? %&amp;gt;\n    &amp;lt;div id=&amp;quot;error_explanation&amp;quot;&amp;gt;\n      &amp;lt;h2&amp;gt;&amp;lt;%= pluralize(product.errors.count, &amp;quot;error&amp;quot;) %&amp;gt; prohibited this product from being saved:&amp;lt;/h2&amp;gt;\n\n      &amp;lt;ul&amp;gt;\n      &amp;lt;% product.errors.full_messages.each do |message| %&amp;gt;\n        &amp;lt;li&amp;gt;&amp;lt;%= message %&amp;gt;&amp;lt;/li&amp;gt;\n      &amp;lt;% end %&amp;gt;\n      &amp;lt;/ul&amp;gt;\n    &amp;lt;/div&amp;gt;\n  &amp;lt;% end %&amp;gt;\n\n  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.label :name %&amp;gt;\n    &amp;lt;%= form.text_field :name, class: &amp;#39;form-control&amp;#39; %&amp;gt;\n  &amp;lt;/div&amp;gt;\n\n  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.label :description %&amp;gt;\n    &amp;lt;%= form.text_area :description, class: &amp;#39;form-control&amp;#39; %&amp;gt;\n  &amp;lt;/div&amp;gt;\n\n  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.label :stock %&amp;gt;\n    &amp;lt;%= form.text_field :stock, class: &amp;#39;form-control&amp;#39; %&amp;gt;\n  &amp;lt;/div&amp;gt;\n\n  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.label :available_on %&amp;gt;\n    &amp;lt;%= form.text_field :available_on, class: &amp;#39;form-control&amp;#39;, data: { behavior: &amp;quot;flatpickr&amp;quot; } %&amp;gt;\n  &amp;lt;/div&amp;gt;\n\n  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.label :price %&amp;gt;\n    &amp;lt;%= form.text_field :price, class: &amp;#39;form-control&amp;#39; %&amp;gt;\n  &amp;lt;/div&amp;gt;\n\n  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.label &amp;#39;Category&amp;#39; %&amp;gt;\n  &amp;lt;%= select_tag(:category_id, options_for_select(@categories, u/product.category_id), class: &amp;#39;form-control&amp;#39;, :prompt =&amp;gt; &amp;#39;Select category&amp;#39;) %&amp;gt;\n  &amp;lt;/div&amp;gt;\n\n  &amp;lt;div class=&amp;quot;form-group&amp;quot; data-controller=&amp;#39;select2&amp;#39;&amp;gt;\n    &amp;lt;%= form.label :option_type_ids %&amp;gt;\n\n    &amp;lt;%= form.select :option_type_id, OptionType.all.map { |type| type.presentation }, {include_blank: false}, class: &amp;#39;form-control content-search&amp;#39;, multiple: &amp;#39;multiple&amp;#39; %&amp;gt;\n\n  &amp;lt;/div&amp;gt;\n\n    &amp;lt;hr&amp;gt;\n    &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.submit class: &amp;#39;btn btn-primary&amp;#39; %&amp;gt;\n\n    &amp;lt;% if product.persisted? %&amp;gt;\n    &amp;lt;div class=&amp;quot;float-right&amp;quot;&amp;gt;\n      &amp;lt;%= link_to &amp;#39;Destroy&amp;#39;, product, method: :delete, class: &amp;quot;text-danger&amp;quot;, data: { confirm: &amp;#39;Are you sure?&amp;#39; } %&amp;gt;\n    &amp;lt;/div&amp;gt;\n      &amp;lt;%= link_to &amp;quot;Cancel&amp;quot;, product, class: &amp;quot;btn btn-link&amp;quot; %&amp;gt;\n    &amp;lt;% else %&amp;gt;\n      &amp;lt;%= link_to &amp;quot;Cancel&amp;quot;, products_path, class: &amp;quot;btn btn-link&amp;quot; %&amp;gt;\n    &amp;lt;% end %&amp;gt;\n\n  &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;\n\n&amp;lt;div class=&amp;quot;col-md-3&amp;quot;&amp;gt;\n  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n    &amp;lt;%= form.label &amp;#39;Main Product Image&amp;#39; %&amp;gt;\n    &amp;lt;%= form.file_field :main_image, classs: &amp;#39;form-control&amp;#39; %&amp;gt;\n  &amp;lt;/div&amp;gt;\n\n  &amp;lt;% if product.persisted? %&amp;gt;\n\n      &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;\n          &amp;lt;%= link_to &amp;quot;Manage Variants&amp;quot;, product_variants_path(@product), class: &amp;quot;btn btn-link&amp;quot; %&amp;gt;\n      &amp;lt;/div&amp;gt;\n\n    &amp;lt;/div&amp;gt;\n    &amp;lt;% end %&amp;gt;\n  &amp;lt;/div&amp;gt;\n  &amp;lt;% end %&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfbvgm", "is_robot_indexable": true, "report_reasons": null, "author": "radiologyDept", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfbvgm/issue_with_unpermitted_parameter/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfbvgm/issue_with_unpermitted_parameter/", "subreddit_subscribers": 46334, "created_utc": 1603283448.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hi, guys hope you are fine,\n\nI'm implementing an  API in which against certain actions user win some points and these points are saving in a column in User table &gt; Score.  by `user.score += 100`    \n\n\nbut now I want to get the trending user who wins the maximum score recently in 3 days.\n\ncan anyone please guide me ?", "author_fullname": "t2_7fudxvz7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Find a Trending user on the basis of recently 3 days score", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfb8fj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603309423.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, guys hope you are fine,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m implementing an  API in which against certain actions user win some points and these points are saving in a column in User table &amp;gt; Score.  by &lt;code&gt;user.score += 100&lt;/code&gt;    &lt;/p&gt;\n\n&lt;p&gt;but now I want to get the trending user who wins the maximum score recently in 3 days.&lt;/p&gt;\n\n&lt;p&gt;can anyone please guide me ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfb8fj", "is_robot_indexable": true, "report_reasons": null, "author": "Humayun-Naseer", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfb8fj/find_a_trending_user_on_the_basis_of_recently_3/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jfb8fj/find_a_trending_user_on_the_basis_of_recently_3/", "subreddit_subscribers": 46334, "created_utc": 1603280623.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": " As the default configuration, a user called postgres is made and the user postgres has full superadmin access to the entire PostgreSQL instance running on your OS.The default Postgres user is postgres and a password is not required for authentication. Thus, to add a password, we must first login and connect as the postgres user   \n\n\nIn a new rails project, whenever I perform rake db it either tells me: \n\n `peer authentication failed for user 'postgres'` or `no password supplied for postgres`\n\nI shouldnt have to necessarily touch `pg_hba.conf` file or \\password", "author_fullname": "t2_mnbw3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "New rails project postgres issue", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jf2n05", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603269865.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As the default configuration, a user called postgres is made and the user postgres has full superadmin access to the entire PostgreSQL instance running on your OS.The default Postgres user is postgres and a password is not required for authentication. Thus, to add a password, we must first login and connect as the postgres user   &lt;/p&gt;\n\n&lt;p&gt;In a new rails project, whenever I perform rake db it either tells me: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;peer authentication failed for user &amp;#39;postgres&amp;#39;&lt;/code&gt; or &lt;code&gt;no password supplied for postgres&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I shouldnt have to necessarily touch &lt;code&gt;pg_hba.conf&lt;/code&gt; file or \\password&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jf2n05", "is_robot_indexable": true, "report_reasons": null, "author": "Bulbasaur2015", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jf2n05/new_rails_project_postgres_issue/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jf2n05/new_rails_project_postgres_issue/", "subreddit_subscribers": 46334, "created_utc": 1603241065.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jf2n05", "before": null}}