{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - May", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gb7km3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 45, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 45, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588320346.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gb7km3", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": null, "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gb7km3/whos_hiring_typescript_developers_may/", "parent_whitelist_status": null, "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gb7km3/whos_hiring_typescript_developers_may/", "subreddit_subscribers": 39087, "created_utc": 1588291546.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm trying to find a best practice here. What's best?\nImporting like this:  \n`import { collectionRef} from '@mycoolpackage/prelude/control/function/collection';`  \nWhen I run the `tsc` transpiler and importing like above, it doesn't find the import.\n\nor like this:  \n`import { collectionRef } from '../../prelude/control/function/collection';`  \nThis works when I run the `tsc` transpiler.\n\nAre there any advantages?", "author_fullname": "t2_ayyfo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "importing with \"@\"", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_gef6u2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588777710.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to find a best practice here. What&amp;#39;s best?\nImporting like this:&lt;br/&gt;\n&lt;code&gt;import { collectionRef} from &amp;#39;@mycoolpackage/prelude/control/function/collection&amp;#39;;&lt;/code&gt;&lt;br/&gt;\nWhen I run the &lt;code&gt;tsc&lt;/code&gt; transpiler and importing like above, it doesn&amp;#39;t find the import.&lt;/p&gt;\n\n&lt;p&gt;or like this:&lt;br/&gt;\n&lt;code&gt;import { collectionRef } from &amp;#39;../../prelude/control/function/collection&amp;#39;;&lt;/code&gt;&lt;br/&gt;\nThis works when I run the &lt;code&gt;tsc&lt;/code&gt; transpiler.&lt;/p&gt;\n\n&lt;p&gt;Are there any advantages?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gef6u2", "is_robot_indexable": true, "report_reasons": null, "author": "heartchoke", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gef6u2/importing_with/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/gef6u2/importing_with/", "subreddit_subscribers": 39087, "created_utc": 1588748910.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_6bjclu0w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How Our Stack Evolved in 10 Years", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "hide_score": true, "name": "t3_gek2mm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/TDXecWCBQ83gv1viLQUnFKWNABJEY5IwEEdk1_H7q14.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1588800754.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "typescript-open-source-resources.s3.us-east-2.amazonaws.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/gJNRPP0JcKLZBYC1CTqXR3gn3Ia_-t_cQ77hM6j7ZBc.jpg?auto=webp&amp;s=ca1092128cceb7a1e69f03c0408151dafea9873d", "width": 2000, "height": 1000}, "resolutions": [{"url": "https://external-preview.redd.it/gJNRPP0JcKLZBYC1CTqXR3gn3Ia_-t_cQ77hM6j7ZBc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=76eb17a21995178c13c61039cd03f7ba2ed6a9ba", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/gJNRPP0JcKLZBYC1CTqXR3gn3Ia_-t_cQ77hM6j7ZBc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=284adf1566141912410bdaca041f298a9e7c378c", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/gJNRPP0JcKLZBYC1CTqXR3gn3Ia_-t_cQ77hM6j7ZBc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6c377220fe17da7f0d7637c17f934e58699170c2", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/gJNRPP0JcKLZBYC1CTqXR3gn3Ia_-t_cQ77hM6j7ZBc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=a85d1b650bb35e4e4e3bb80995eef326825d7d3c", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/gJNRPP0JcKLZBYC1CTqXR3gn3Ia_-t_cQ77hM6j7ZBc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b7b9d69f441987005716b0e249b77c0af2777a72", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/gJNRPP0JcKLZBYC1CTqXR3gn3Ia_-t_cQ77hM6j7ZBc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=986c77e56460e30b4dbcfdb38d717d8dee25384f", "width": 1080, "height": 540}], "variants": {}, "id": "LOTlBwbKpKobO8Sz74t2vkDp6uJGjee2rKwh5a6Hwtg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gek2mm", "is_robot_indexable": true, "report_reasons": null, "author": "such_pointy_ears", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gek2mm/how_our_stack_evolved_in_10_years/", "parent_whitelist_status": null, "stickied": false, "url": "https://typescript-open-source-resources.s3.us-east-2.amazonaws.com/the-stack-evolution.htm", "subreddit_subscribers": 39087, "created_utc": 1588771954.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_jchs5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ts-transformer-properties-rename - a custom transfomer for TypeScript which renames all private and internal properties, so you can mangle them with uglify-js/terser and reduce size of your bundles", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_ge56dn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/spbJa_iWWvzV06mDfeCShCBhhuTFcXtjOTWSt9FMN30.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1588738570.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zF_2-4b6206PIZbaqI5qJ_BRLt8ge5dzHziLLisldRw.jpg?auto=webp&amp;s=e98cbbce5cdf01f8ab3480021c8ab0f430ec1495", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/zF_2-4b6206PIZbaqI5qJ_BRLt8ge5dzHziLLisldRw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f9a77e6e50c0a7ed7ddbcd00c70274bb49ad777e", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/zF_2-4b6206PIZbaqI5qJ_BRLt8ge5dzHziLLisldRw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=96f19ee0d066d25765572eaa6850ab5ff38f2d1e", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/zF_2-4b6206PIZbaqI5qJ_BRLt8ge5dzHziLLisldRw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=45d07992182e3a6a435b4afaf6cff94df268c7b0", "width": 320, "height": 320}], "variants": {}, "id": "IIgNWBUG7Frenflf_66xxf93jFPcVZvVzfo4_6pTb-g"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ge56dn", "is_robot_indexable": true, "report_reasons": null, "author": "timocov", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ge56dn/tstransformerpropertiesrename_a_custom_transfomer/", "parent_whitelist_status": null, "stickied": false, "url": "https://github.com/timocov/ts-transformer-properties-rename", "subreddit_subscribers": 39087, "created_utc": 1588709770.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Foal TS framework version 1.8 is officially released!\n\n[Foal TS - May release \\(version 1.8\\)](https://preview.redd.it/xm3t9m4ev3x41.png?width=1606&amp;format=png&amp;auto=webp&amp;s=d9e0d848c980f799c5e0d25ffa1370a6c4b79a9b)\n\nThis version brings mainly **three new features**.\n\n1. **Interfaces and generic classes** (such as TypeORM repositories) **can** now **be injected** into services and controllers using FoalTS dependency injection system.\n\n[Example of service](https://preview.redd.it/umiskrw6w3x41.png?width=746&amp;format=png&amp;auto=webp&amp;s=b1d61cab00658afdfcf41891acaf9725358edd0b)\n\n[Injection of the concrete instances.](https://preview.redd.it/jevwe7q8w3x41.png?width=747&amp;format=png&amp;auto=webp&amp;s=0f01dbc77d59ab54155884e308d9d90bdbf5a2ce)\n\nDocumentation : [https://foalts.gitbook.io/docs/topic-guides/architecture/services-and-dependency-injection#usage-with-interfaces-and-generic-classes](https://foalts.gitbook.io/docs/topic-guides/architecture/services-and-dependency-injection#usage-with-interfaces-and-generic-classes)\n\n2. **Services** accept an optional `boot` **method for initialization**\n\n[Example of \\\\\"boot\\\\\" method](https://preview.redd.it/68sm4vmqw3x41.png?width=745&amp;format=png&amp;auto=webp&amp;s=c0fa86820f28abe83d37158d3adcc203f515137e)\n\nDocumentation: [https://foalts.gitbook.io/docs/topic-guides/architecture/initialization#the-services-boot-method](https://foalts.gitbook.io/docs/topic-guides/architecture/initialization#the-services-boot-method)\n\n3. `Group`, `Permission` and `UserWithPermissions` extend `BaseEntity` (TypeORM) so as to add new methods (find, save, etc) and `UserWithPermissions` has a new method `withPerm` which allows to retrieve all users with a given permission.\n\n[Permission extends BaseEntity](https://preview.redd.it/8uzmpoq9x3x41.png?width=745&amp;format=png&amp;auto=webp&amp;s=5bf024e17155b16aeb4a6162b27d19787650a54c)\n\n[Retrieve all users with the permission \\\\\"perm1\\\\\"](https://preview.redd.it/u9kqau8bx3x41.png?width=748&amp;format=png&amp;auto=webp&amp;s=6e8b612834a836fdf3e86d71d71d18587ad17955)\n\nDocumentation: [https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/groups-and-permissions#baseentity-inheritance](https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/groups-and-permissions#baseentity-inheritance)\n\n&amp;#x200B;\n\nFoal, in a few words, it's a Node.js framework:\n\n* written in TypeScript\n* provided with batteries included (Auth, OpenAPI, GraphQL, ORM, CLI, scripts, file storage)\n* and with a simple and intuitive architecture (no magic, no over-engineering).\n\nAnd the must: it has more than 11,000 lines of documentation.\n\n[https://foalts.org](https://foalts.org/)\n\n[https://github.com/FoalTS/foal](https://github.com/FoalTS/foal)\n\n[https://foalts.gitbook.io/docs/](https://foalts.gitbook.io/docs/)\n\n\\#TypeScript #JavaScript #NodeJS #FoalTS #DI #JWT #permissions", "author_fullname": "t2_2bvst1jn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Foal TS - May release (version 1.8) - Dependency injection with interfaces, permission management, service initialization", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "media_metadata": {"jevwe7q8w3x41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 20, "x": 108, "u": "https://preview.redd.it/jevwe7q8w3x41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=7782741a2fd05bd2319bb23d54ab436902cf43a2"}, {"y": 41, "x": 216, "u": "https://preview.redd.it/jevwe7q8w3x41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=9f7ff205fe7bbe4e3c6b83c900a4a56d36aee068"}, {"y": 61, "x": 320, "u": "https://preview.redd.it/jevwe7q8w3x41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=667d43675104fa21009f5fd4c9a2e4cece479a09"}, {"y": 123, "x": 640, "u": "https://preview.redd.it/jevwe7q8w3x41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=5a0a6d4ede49b218efb6ea202eb5785894c3f220"}], "s": {"y": 144, "x": 747, "u": "https://preview.redd.it/jevwe7q8w3x41.png?width=747&amp;format=png&amp;auto=webp&amp;s=0f01dbc77d59ab54155884e308d9d90bdbf5a2ce"}, "id": "jevwe7q8w3x41"}, "8uzmpoq9x3x41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 14, "x": 108, "u": "https://preview.redd.it/8uzmpoq9x3x41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=ec0fdcde3a7bc643c61bc1f4dcb4e9272029f4f1"}, {"y": 29, "x": 216, "u": "https://preview.redd.it/8uzmpoq9x3x41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=183e89e668453980fe2e96c93828480bbfcccf52"}, {"y": 43, "x": 320, "u": "https://preview.redd.it/8uzmpoq9x3x41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=37471f329832dd81da558bb723e9839bad7da43e"}, {"y": 86, "x": 640, "u": "https://preview.redd.it/8uzmpoq9x3x41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=d53fde90719cefe65c80dbf8f5b01c8e017e9285"}], "s": {"y": 101, "x": 745, "u": "https://preview.redd.it/8uzmpoq9x3x41.png?width=745&amp;format=png&amp;auto=webp&amp;s=5bf024e17155b16aeb4a6162b27d19787650a54c"}, "id": "8uzmpoq9x3x41"}, "xm3t9m4ev3x41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 38, "x": 108, "u": "https://preview.redd.it/xm3t9m4ev3x41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=456e66debe9c366d63768c7108a05ee7c444dff9"}, {"y": 76, "x": 216, "u": "https://preview.redd.it/xm3t9m4ev3x41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=7cc58f46f07e40b68bd8034b119d4c07320a6a78"}, {"y": 113, "x": 320, "u": "https://preview.redd.it/xm3t9m4ev3x41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=74ea325033cbdce68ba6cc2bf62dd48ecc862def"}, {"y": 227, "x": 640, "u": "https://preview.redd.it/xm3t9m4ev3x41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=0fdecf2dc8d2821aea4bfee93e6b4e7c30bcf447"}, {"y": 340, "x": 960, "u": "https://preview.redd.it/xm3t9m4ev3x41.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=00bbabafa1ab03df767e79b3ae626712fc1a16b7"}, {"y": 383, "x": 1080, "u": "https://preview.redd.it/xm3t9m4ev3x41.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=918cf4ec3de06983991c250684c2ea802c14a640"}], "s": {"y": 570, "x": 1606, "u": "https://preview.redd.it/xm3t9m4ev3x41.png?width=1606&amp;format=png&amp;auto=webp&amp;s=d9e0d848c980f799c5e0d25ffa1370a6c4b79a9b"}, "id": "xm3t9m4ev3x41"}, "umiskrw6w3x41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 66, "x": 108, "u": "https://preview.redd.it/umiskrw6w3x41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=ee402df1ed19be5ca35fb118fffd70c0d5f4bfb6"}, {"y": 133, "x": 216, "u": "https://preview.redd.it/umiskrw6w3x41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=dcbe0a360eaed0b7b82f5b99f8a5d84953fd58c6"}, {"y": 198, "x": 320, "u": "https://preview.redd.it/umiskrw6w3x41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=728b327bd994a711c12213979f38ee3713859163"}, {"y": 396, "x": 640, "u": "https://preview.redd.it/umiskrw6w3x41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=5c9d1500124bfcc4fe8172a87c6d4367cd49a6f5"}], "s": {"y": 462, "x": 746, "u": "https://preview.redd.it/umiskrw6w3x41.png?width=746&amp;format=png&amp;auto=webp&amp;s=b1d61cab00658afdfcf41891acaf9725358edd0b"}, "id": "umiskrw6w3x41"}, "68sm4vmqw3x41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 25, "x": 108, "u": "https://preview.redd.it/68sm4vmqw3x41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=6fee0554e0a3df4a6e34bfd658ce1b81207a9881"}, {"y": 51, "x": 216, "u": "https://preview.redd.it/68sm4vmqw3x41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=20c8d5392c96f26409563c5ca6489079c2d7a9fc"}, {"y": 75, "x": 320, "u": "https://preview.redd.it/68sm4vmqw3x41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=7a2aebf3db8b09fa92b42446dc333bfa9cf3eebe"}, {"y": 151, "x": 640, "u": "https://preview.redd.it/68sm4vmqw3x41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=273554bad2e73a099575764513980c9e8fb3db0c"}], "s": {"y": 176, "x": 745, "u": "https://preview.redd.it/68sm4vmqw3x41.png?width=745&amp;format=png&amp;auto=webp&amp;s=c0fa86820f28abe83d37158d3adcc203f515137e"}, "id": "68sm4vmqw3x41"}, "u9kqau8bx3x41": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 17, "x": 108, "u": "https://preview.redd.it/u9kqau8bx3x41.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=19adaa4852effe0abcb8a2897420a67995e9da52"}, {"y": 35, "x": 216, "u": "https://preview.redd.it/u9kqau8bx3x41.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=14dde8601180e78d32a05c402ff7024eecfa08e2"}, {"y": 52, "x": 320, "u": "https://preview.redd.it/u9kqau8bx3x41.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=ad04ed1bf165c35bce6ae79d1e14fc723268a6e0"}, {"y": 104, "x": 640, "u": "https://preview.redd.it/u9kqau8bx3x41.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=44152f368e200120a49f4f6027adc12dbce43fc9"}], "s": {"y": 122, "x": 748, "u": "https://preview.redd.it/u9kqau8bx3x41.png?width=748&amp;format=png&amp;auto=webp&amp;s=6e8b612834a836fdf3e86d71d71d18587ad17955"}, "id": "u9kqau8bx3x41"}}, "name": "t3_geg8up", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/szHt6AVL146Bpr56TbU7kiMC2syrEaQC8A1WFJoY_jI.jpg", "edited": 1588754937.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588783404.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Foal TS framework version 1.8 is officially released!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/xm3t9m4ev3x41.png?width=1606&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d9e0d848c980f799c5e0d25ffa1370a6c4b79a9b\"&gt;Foal TS - May release (version 1.8)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This version brings mainly &lt;strong&gt;three new features&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Interfaces and generic classes&lt;/strong&gt; (such as TypeORM repositories) &lt;strong&gt;can&lt;/strong&gt; now &lt;strong&gt;be injected&lt;/strong&gt; into services and controllers using FoalTS dependency injection system.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/umiskrw6w3x41.png?width=746&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b1d61cab00658afdfcf41891acaf9725358edd0b\"&gt;Example of service&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/jevwe7q8w3x41.png?width=747&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=0f01dbc77d59ab54155884e308d9d90bdbf5a2ce\"&gt;Injection of the concrete instances.&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Documentation : &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/architecture/services-and-dependency-injection#usage-with-interfaces-and-generic-classes\"&gt;https://foalts.gitbook.io/docs/topic-guides/architecture/services-and-dependency-injection#usage-with-interfaces-and-generic-classes&lt;/a&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Services&lt;/strong&gt; accept an optional &lt;code&gt;boot&lt;/code&gt; &lt;strong&gt;method for initialization&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/68sm4vmqw3x41.png?width=745&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c0fa86820f28abe83d37158d3adcc203f515137e\"&gt;Example of \\&amp;quot;boot\\&amp;quot; method&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Documentation: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/architecture/initialization#the-services-boot-method\"&gt;https://foalts.gitbook.io/docs/topic-guides/architecture/initialization#the-services-boot-method&lt;/a&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;Group&lt;/code&gt;, &lt;code&gt;Permission&lt;/code&gt; and &lt;code&gt;UserWithPermissions&lt;/code&gt; extend &lt;code&gt;BaseEntity&lt;/code&gt; (TypeORM) so as to add new methods (find, save, etc) and &lt;code&gt;UserWithPermissions&lt;/code&gt; has a new method &lt;code&gt;withPerm&lt;/code&gt; which allows to retrieve all users with a given permission.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/8uzmpoq9x3x41.png?width=745&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=5bf024e17155b16aeb4a6162b27d19787650a54c\"&gt;Permission extends BaseEntity&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/u9kqau8bx3x41.png?width=748&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=6e8b612834a836fdf3e86d71d71d18587ad17955\"&gt;Retrieve all users with the permission \\&amp;quot;perm1\\&amp;quot;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Documentation: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/groups-and-permissions#baseentity-inheritance\"&gt;https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/groups-and-permissions#baseentity-inheritance&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Foal, in a few words, it&amp;#39;s a Node.js framework:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;written in TypeScript&lt;/li&gt;\n&lt;li&gt;provided with batteries included (Auth, OpenAPI, GraphQL, ORM, CLI, scripts, file storage)&lt;/li&gt;\n&lt;li&gt;and with a simple and intuitive architecture (no magic, no over-engineering).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And the must: it has more than 11,000 lines of documentation.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://foalts.org/\"&gt;https://foalts.org&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/FoalTS/foal\"&gt;https://github.com/FoalTS/foal&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://foalts.gitbook.io/docs/\"&gt;https://foalts.gitbook.io/docs/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;#TypeScript #JavaScript #NodeJS #FoalTS #DI #JWT #permissions&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?auto=webp&amp;s=f8c1f999cc0e0e955f40a01b6e01473b5faa64cc", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d9712ade15f0e4c54aeff09da396c851b70265a7", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d9d704f94a1e1c9c50c9241009df0bd3b7fc0ae8", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=309e5708c93bdbbe28e56ff1e7e0c24ac01e1e04", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d2199c5e3c4b83fa47e45702b2be6408472c0efe", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=22335d0d8c66d19f6401b28ee65de40338ffd8bf", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=be5b22f5a12ee20adf1796d2a3bf7fa27785dd92", "width": 1080, "height": 567}], "variants": {}, "id": "KesvDeCiMQROF3n5xSH4CkvRvd3gXI_WE0qSKWlCYak"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "geg8up", "is_robot_indexable": true, "report_reasons": null, "author": "Loic_Poullain", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/geg8up/foal_ts_may_release_version_18_dependency/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/geg8up/foal_ts_may_release_version_18_dependency/", "subreddit_subscribers": 39087, "created_utc": 1588754604.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "e.g. I want to declare some record `foo`, where the values are all of a certain type `Bar`, so `foo` must extend `Record&lt;string, Bar&gt;` (`{ [ key: string ]: Bar}`).\n\nI can simply write `const foo: Record&lt;string, Bar&gt; = { fooKeyA: bar1, fooKeyB: bar2 };` but now all that I can extract from the declared `foo` is that it is of type `Record&lt;string, Bar&gt;`, which means I only know that its keys are `string`, i.e. I have lost the key names `fooKeyA` and `fooKeyB`.\n\nHere is a workaround:\n\n&gt;Declare a function that does nothing other than return its argument, and ensure that its argument extends a certain type. Anytime we declare something like foo, wrap the actual value we want to use in this function. i.e   \n`function iAmTotallyUselessAtRuntime&lt;T extends Record&lt;string, Bar&gt;&gt;(foo: Foo): Foo { return foo; }`  \n`const foo = iamTotallyUselessAtRuntime({ fooKeyA: bar1, fooKeyB: bar2 });`  \nNow foo has maintained its original type with its unique keys, and also we can be sure that it also extends the type it needs to extend.  \nHowever, (as I made clear in the function name) we are declaring a totally useless function that does nothing meaningful at run time. \n\nI feel that there must be a better way.\n\nThis seems like it should be so simple, but I can't really think of an efficient way to do it.", "author_fullname": "t2_jaybj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you declare a variable of type T that extends type U without \"losing\" type T?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_ge96nf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1588751818.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;e.g. I want to declare some record &lt;code&gt;foo&lt;/code&gt;, where the values are all of a certain type &lt;code&gt;Bar&lt;/code&gt;, so &lt;code&gt;foo&lt;/code&gt; must extend &lt;code&gt;Record&amp;lt;string, Bar&amp;gt;&lt;/code&gt; (&lt;code&gt;{ [ key: string ]: Bar}&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;I can simply write &lt;code&gt;const foo: Record&amp;lt;string, Bar&amp;gt; = { fooKeyA: bar1, fooKeyB: bar2 };&lt;/code&gt; but now all that I can extract from the declared &lt;code&gt;foo&lt;/code&gt; is that it is of type &lt;code&gt;Record&amp;lt;string, Bar&amp;gt;&lt;/code&gt;, which means I only know that its keys are &lt;code&gt;string&lt;/code&gt;, i.e. I have lost the key names &lt;code&gt;fooKeyA&lt;/code&gt; and &lt;code&gt;fooKeyB&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Here is a workaround:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Declare a function that does nothing other than return its argument, and ensure that its argument extends a certain type. Anytime we declare something like foo, wrap the actual value we want to use in this function. i.e&lt;br/&gt;\n&lt;code&gt;function iAmTotallyUselessAtRuntime&amp;lt;T extends Record&amp;lt;string, Bar&amp;gt;&amp;gt;(foo: Foo): Foo { return foo; }&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;const foo = iamTotallyUselessAtRuntime({ fooKeyA: bar1, fooKeyB: bar2 });&lt;/code&gt;&lt;br/&gt;\nNow foo has maintained its original type with its unique keys, and also we can be sure that it also extends the type it needs to extend.&lt;br/&gt;\nHowever, (as I made clear in the function name) we are declaring a totally useless function that does nothing meaningful at run time. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I feel that there must be a better way.&lt;/p&gt;\n\n&lt;p&gt;This seems like it should be so simple, but I can&amp;#39;t really think of an efficient way to do it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ge96nf", "is_robot_indexable": true, "report_reasons": null, "author": "KamiShikkaku", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ge96nf/how_do_you_declare_a_variable_of_type_t_that/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ge96nf/how_do_you_declare_a_variable_of_type_t_that/", "subreddit_subscribers": 39087, "created_utc": 1588723018.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_kvwx9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ultimate Vim TypeScript Setup", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_gdv3al", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.85, "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/64TQioNETozKlX8s-ZWeHmJaXr86TTggQGKRwbC-tD8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1588702196.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "pragmaticpineapple.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/lK4hhkYo9S7lRiaHr1AFKxlhX-qmlZA1iixJ1w5dxDA.jpg?auto=webp&amp;s=7f1e044dccc1ae6d6be478937f401b5b82cdaaa5", "width": 1200, "height": 627}, "resolutions": [{"url": "https://external-preview.redd.it/lK4hhkYo9S7lRiaHr1AFKxlhX-qmlZA1iixJ1w5dxDA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=93db32e82ff828cff5a39804b7e3b671a430aa59", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/lK4hhkYo9S7lRiaHr1AFKxlhX-qmlZA1iixJ1w5dxDA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0cfdb2238b5c2f31ce6f16d73332dbd0c5c1f95d", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/lK4hhkYo9S7lRiaHr1AFKxlhX-qmlZA1iixJ1w5dxDA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=80764448084456170f874eb42debab241bfc9d6c", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/lK4hhkYo9S7lRiaHr1AFKxlhX-qmlZA1iixJ1w5dxDA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0c8dfde0d576040b19d94d3fc419489426ba342c", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/lK4hhkYo9S7lRiaHr1AFKxlhX-qmlZA1iixJ1w5dxDA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=eccd648f8316415d5d66cb88fb10229a56f7f5f4", "width": 960, "height": 501}, {"url": "https://external-preview.redd.it/lK4hhkYo9S7lRiaHr1AFKxlhX-qmlZA1iixJ1w5dxDA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8f1abaf35804d709eda56600db986bf944372bc3", "width": 1080, "height": 564}], "variants": {}, "id": "p9zxnQ2bbmFACUvIw4MvXAe4JIWFAd8Rsa--aAF7vTo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gdv3al", "is_robot_indexable": true, "report_reasons": null, "author": "nikolalsvk", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gdv3al/ultimate_vim_typescript_setup/", "parent_whitelist_status": null, "stickied": false, "url": "https://pragmaticpineapple.com/ultimate-vim-typescript-setup/", "subreddit_subscribers": 39087, "created_utc": 1588673396.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Hi all, I'm trying to import a package ([filestack-js](https://github.com/filestack/filestack-js)) into my typescript code which has multiple entry points defined in its `package.json` file.\n\nWhen trying to run the typescript compiler i get type errors relating to not being able to find  '`@types/node'` (which I've excluded from the project as it causes other type problems with our browser typings).\n\n&amp;#x200B;\n\nI did some digging and saw that the typescript compiler is using the '`main`' entry point as described in the `package.json` file. However, the package authors only intend this entry point to be used in a node js environment. I see that they have defined a '`browser`' entry point that doesn't have these problems but the compiler is favoring main instead. Anyway I can force this resolution?\n\n&amp;#x200B;\n\nI imagine this isn't a unique problem, how do others resolve these conflicts?\n\n&amp;#x200B;\n\nIf I set `skipLibCheck` to `true` the errors go away but that feels like overkill to me. I'm also using webpack to bundle my compiled js files and that happily resolves to the correct source code.", "author_fullname": "t2_3l2in", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Incorrect module resolution causing type errors", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_ge8bqd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588748759.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all, I&amp;#39;m trying to import a package (&lt;a href=\"https://github.com/filestack/filestack-js\"&gt;filestack-js&lt;/a&gt;) into my typescript code which has multiple entry points defined in its &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;\n\n&lt;p&gt;When trying to run the typescript compiler i get type errors relating to not being able to find  &amp;#39;&lt;code&gt;@types/node&amp;#39;&lt;/code&gt; (which I&amp;#39;ve excluded from the project as it causes other type problems with our browser typings).&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I did some digging and saw that the typescript compiler is using the &amp;#39;&lt;code&gt;main&lt;/code&gt;&amp;#39; entry point as described in the &lt;code&gt;package.json&lt;/code&gt; file. However, the package authors only intend this entry point to be used in a node js environment. I see that they have defined a &amp;#39;&lt;code&gt;browser&lt;/code&gt;&amp;#39; entry point that doesn&amp;#39;t have these problems but the compiler is favoring main instead. Anyway I can force this resolution?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I imagine this isn&amp;#39;t a unique problem, how do others resolve these conflicts?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;If I set &lt;code&gt;skipLibCheck&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; the errors go away but that feels like overkill to me. I&amp;#39;m also using webpack to bundle my compiled js files and that happily resolves to the correct source code.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/6vpgEJKd3jWabYdzbrHvr2gGsTl8E5LD0JP4idpqrZo.jpg?auto=webp&amp;s=76ab5d1b6e29b8718cc91b7a622fe18f62554cb8", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/6vpgEJKd3jWabYdzbrHvr2gGsTl8E5LD0JP4idpqrZo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4bdd84daa215d9573c26027e33f0af95e41db7b1", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/6vpgEJKd3jWabYdzbrHvr2gGsTl8E5LD0JP4idpqrZo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7d12bf9d2b1a5fdd24f2b7709cbec5ff536cb67c", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/6vpgEJKd3jWabYdzbrHvr2gGsTl8E5LD0JP4idpqrZo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2a1fbcceed52b7bef573c4456f1fbd4c90684c3d", "width": 320, "height": 320}], "variants": {}, "id": "uA2jRgiF25lNeg4H0P7bwt2zuRUgmbVfnx7LC8qNBak"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ge8bqd", "is_robot_indexable": true, "report_reasons": null, "author": "lol__wut", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ge8bqd/incorrect_module_resolution_causing_type_errors/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ge8bqd/incorrect_module_resolution_causing_type_errors/", "subreddit_subscribers": 39087, "created_utc": 1588719959.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_pwbbp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I have just released Jackson-js: Powerful JavaScript decorators to serialize/deserialize objects into JSON and vice versa", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "hide_score": false, "name": "t3_ge1jth", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.64, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/kGIintWzj9RddPR2Bj2xaiIEREcDK9zVB5q24HDFNxc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1588726816.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/0Q6hfmQc_QW6w2M_OFC91bm9ZcNbqhJnP9U0Edr_PYA.jpg?auto=webp&amp;s=96b4c53f78d11cc8a9dd18b6f60b1d0a8235be35", "width": 5733, "height": 3822}, "resolutions": [{"url": "https://external-preview.redd.it/0Q6hfmQc_QW6w2M_OFC91bm9ZcNbqhJnP9U0Edr_PYA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=84271ca265e63200e976e80fd6410b4d7eeb568a", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/0Q6hfmQc_QW6w2M_OFC91bm9ZcNbqhJnP9U0Edr_PYA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ca1a9ee005d6d1713b7e0c1880ded140d6d49242", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/0Q6hfmQc_QW6w2M_OFC91bm9ZcNbqhJnP9U0Edr_PYA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e72477058235e07f21b682b08d27cae8407bbd75", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/0Q6hfmQc_QW6w2M_OFC91bm9ZcNbqhJnP9U0Edr_PYA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=cb23557bcbfeff59247c5f3353d1fcec5ddde9fd", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/0Q6hfmQc_QW6w2M_OFC91bm9ZcNbqhJnP9U0Edr_PYA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=301a23c010bc09eeb21baa80b45e2e4140de7cac", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/0Q6hfmQc_QW6w2M_OFC91bm9ZcNbqhJnP9U0Edr_PYA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=73c09e135651afde4886a218de7c036e562dbfd5", "width": 1080, "height": 720}], "variants": {}, "id": "N0l3c9cznsIKZ4lZPXQjdGbSDOvNL0WXKEblKo0EAUM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ge1jth", "is_robot_indexable": true, "report_reasons": null, "author": "LorePi", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ge1jth/i_have_just_released_jacksonjs_powerful/", "parent_whitelist_status": null, "stickied": false, "url": "https://medium.com/@pichillilorenzo/df952454cf?source=friends_link&amp;sk=a65bd247eca2f95fdfddda34447a6db6", "subreddit_subscribers": 39087, "created_utc": 1588698016.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_3isgn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "VIM Users: ale vs tsuquyomi?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_ge7y2d", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/0NXYoI2R3mLBgSn-GyQuvxyLcO2ZXTyS_Qq64aWK5w8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1588747439.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "vi.stackexchange.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/jh7uJ0Ei9ED9hFzJEVVYuw09OI3KzR0H9Wan9hvI4m4.jpg?auto=webp&amp;s=cd6e0ded71c99bbb5922745ce709b6c45b508e89", "width": 316, "height": 316}, "resolutions": [{"url": "https://external-preview.redd.it/jh7uJ0Ei9ED9hFzJEVVYuw09OI3KzR0H9Wan9hvI4m4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a4463c46fee88f66e58143717dc4b38b4591edfa", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/jh7uJ0Ei9ED9hFzJEVVYuw09OI3KzR0H9Wan9hvI4m4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=03a225e636ae29a0ea4fd05cb0a8f721e4dc415a", "width": 216, "height": 216}], "variants": {}, "id": "FIT8Og1VsTFc1pHyCG-NXu0cEVIVQgROUzYnkykwDZ4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ge7y2d", "is_robot_indexable": true, "report_reasons": null, "author": "EvanCarroll", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ge7y2d/vim_users_ale_vs_tsuquyomi/", "parent_whitelist_status": null, "stickied": false, "url": "https://vi.stackexchange.com/questions/25111/typescript-ale-vs-tsuquyomi", "subreddit_subscribers": 39087, "created_utc": 1588718639.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "What is the difference between a property and method in Typescript? I am trying to add a property to each of my functions in a class. It works fine with anonymous functions but with methods tsserver doesn't display the correct type. Any help would be appreciated here is a [stackblitz](https://stackblitz.com/edit/typescript-1jgdjg)\n\n    type Func = (...args: any[]) =&gt; any;\n    \n    /** Add a property to the function */\n    interface Spy&lt;Fn extends Func&gt; {\n      (...params: Parameters&lt;Fn&gt;): ReturnType&lt;Fn&gt;;\n      extraProperty: string;\n    }\n    /** Loop through all properties of T, if the property is a function, make it a spy */\n    type MakeSpys&lt;T&gt; = { [x in keyof T]: T[x] extends Func ? Spy&lt;T[x]&gt; : false };\n    \n    class Class {\n      method(): null {\n        return null;\n      }\n      property = (): null =&gt; null;\n    }\n    \n    let _: Class['method']; // type: () =&gt; null (expected)\n    let __: Class['property']; //type : () =&gt; null (expected)\n    let spyObj: MakeSpys&lt;Class&gt;;\n    spyObj.property; // type: Spy&lt;() =&gt; null&gt; (expected)\n    spyObj.method; // type: method(): null (why?????)\n    const method = spyObj.method; // type: Spy&lt;() =&gt; null&gt; (expected)\n\nspyObj.method should be of type Spy&lt;() =&gt; null&gt; so that the reader is aware that there was a property added to the function", "author_fullname": "t2_2gjoxaxw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Difference between property and method in Typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_ge7evn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1588745634.0, "link_flair_type": "text", "wls": null, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What is the difference between a property and method in Typescript? I am trying to add a property to each of my functions in a class. It works fine with anonymous functions but with methods tsserver doesn&amp;#39;t display the correct type. Any help would be appreciated here is a &lt;a href=\"https://stackblitz.com/edit/typescript-1jgdjg\"&gt;stackblitz&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Func = (...args: any[]) =&amp;gt; any;\n\n/** Add a property to the function */\ninterface Spy&amp;lt;Fn extends Func&amp;gt; {\n  (...params: Parameters&amp;lt;Fn&amp;gt;): ReturnType&amp;lt;Fn&amp;gt;;\n  extraProperty: string;\n}\n/** Loop through all properties of T, if the property is a function, make it a spy */\ntype MakeSpys&amp;lt;T&amp;gt; = { [x in keyof T]: T[x] extends Func ? Spy&amp;lt;T[x]&amp;gt; : false };\n\nclass Class {\n  method(): null {\n    return null;\n  }\n  property = (): null =&amp;gt; null;\n}\n\nlet _: Class[&amp;#39;method&amp;#39;]; // type: () =&amp;gt; null (expected)\nlet __: Class[&amp;#39;property&amp;#39;]; //type : () =&amp;gt; null (expected)\nlet spyObj: MakeSpys&amp;lt;Class&amp;gt;;\nspyObj.property; // type: Spy&amp;lt;() =&amp;gt; null&amp;gt; (expected)\nspyObj.method; // type: method(): null (why?????)\nconst method = spyObj.method; // type: Spy&amp;lt;() =&amp;gt; null&amp;gt; (expected)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;spyObj.method should be of type Spy&amp;lt;() =&amp;gt; null&amp;gt; so that the reader is aware that there was a property added to the function&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/3fwwJuXaaMLsylzKnkWoNk-49yTQKx83zRluq5tfyn4.jpg?auto=webp&amp;s=11ef126bd7856e0e6369aa5da594e71c9762ec41", "width": 256, "height": 256}, "resolutions": [{"url": "https://external-preview.redd.it/3fwwJuXaaMLsylzKnkWoNk-49yTQKx83zRluq5tfyn4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=590656546d02cb92ee76b3063fc46e8245f547af", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/3fwwJuXaaMLsylzKnkWoNk-49yTQKx83zRluq5tfyn4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=959f591fb28b609cff533a9cc830af342d58607f", "width": 216, "height": 216}], "variants": {}, "id": "ZkSTVCYhQnzIra5ej1DWMvh6qm6hzlsB6aPQW1eUCp8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ge7evn", "is_robot_indexable": true, "report_reasons": null, "author": "420-jesus", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/ge7evn/difference_between_property_and_method_in/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/ge7evn/difference_between_property_and_method_in/", "subreddit_subscribers": 39087, "created_utc": 1588716834.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ge7evn", "before": null}}