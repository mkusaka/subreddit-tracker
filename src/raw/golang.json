{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_36tr2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go's Tooling is an Undervalued Technology", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_es621w", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 71, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 71, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579692092.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "nullprogram.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "es621w", "is_robot_indexable": true, "report_reasons": null, "author": "chewxy", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/es621w/gos_tooling_is_an_undervalued_technology/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://nullprogram.com/blog/2020/01/21/", "subreddit_subscribers": 100330, "created_utc": 1579663292.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm a senior engineer at https://coder.com.\n\nWe're a small startup in Austin, TX looking to scale our Go team with solid engineers. The positions involve developing and maintaining the Go microservices that serve our development platform on kubernetes. There are more details on precisely what the company does on the site.\n\nWe want someone by our downtown Austin office but are open to remote for the first few months until we can get you relocated. If you\u2019re really good, full time remote is also possible. US &amp; Canada preferred.\n\nWe are big on open source. Check out some of our projects at https://github.com/cdr or mine at https://github.com/nhooyr.\n\nWe want solid engineers and will pay accordingly (90k - 200k USD).\n\nThe general hiring process looks like:\n\n1. Technical interview directly with me\n    - I won't quiz you on useless trivia\n    - Most of my questions will be about general programming, Go, docker, k8s etc.\n2. I'll give you a 2 hour take home for which you'll be compensated with a $200 amazon gift card.\n3. You have a interview with our CTO about your goals and a touch of tech\n4. You have a general call with a different senior engineer\n5. One last call to discuss your compensation and then the offer gets formally sent out\n\nYou\u2019ll get 3 weeks PTO standard (you can always take more unpaid) plus 10 company holidays yearly, solid work life balance (we don\u2019t work more than 40 hours a week) and whatever desk setup you want. We have a very talented team full of Go lovers and I\u2019m looking forward to seeing it grow.\n\nPlease email me at [anmol@coder.com](mailto:anmol@coder.com) with your resume.", "author_fullname": "t2_nk7dz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hiring Go Engineers at Coder", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_erz90i", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 105, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 105, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": 1579670064.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579662177.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a senior engineer at &lt;a href=\"https://coder.com\"&gt;https://coder.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;re a small startup in Austin, TX looking to scale our Go team with solid engineers. The positions involve developing and maintaining the Go microservices that serve our development platform on kubernetes. There are more details on precisely what the company does on the site.&lt;/p&gt;\n\n&lt;p&gt;We want someone by our downtown Austin office but are open to remote for the first few months until we can get you relocated. If you\u2019re really good, full time remote is also possible. US &amp;amp; Canada preferred.&lt;/p&gt;\n\n&lt;p&gt;We are big on open source. Check out some of our projects at &lt;a href=\"https://github.com/cdr\"&gt;https://github.com/cdr&lt;/a&gt; or mine at &lt;a href=\"https://github.com/nhooyr\"&gt;https://github.com/nhooyr&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;We want solid engineers and will pay accordingly (90k - 200k USD).&lt;/p&gt;\n\n&lt;p&gt;The general hiring process looks like:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Technical interview directly with me\n\n&lt;ul&gt;\n&lt;li&gt;I won&amp;#39;t quiz you on useless trivia&lt;/li&gt;\n&lt;li&gt;Most of my questions will be about general programming, Go, docker, k8s etc.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;I&amp;#39;ll give you a 2 hour take home for which you&amp;#39;ll be compensated with a $200 amazon gift card.&lt;/li&gt;\n&lt;li&gt;You have a interview with our CTO about your goals and a touch of tech&lt;/li&gt;\n&lt;li&gt;You have a general call with a different senior engineer&lt;/li&gt;\n&lt;li&gt;One last call to discuss your compensation and then the offer gets formally sent out&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;You\u2019ll get 3 weeks PTO standard (you can always take more unpaid) plus 10 company holidays yearly, solid work life balance (we don\u2019t work more than 40 hours a week) and whatever desk setup you want. We have a very talented team full of Go lovers and I\u2019m looking forward to seeing it grow.&lt;/p&gt;\n\n&lt;p&gt;Please email me at [&lt;a href=\"mailto:anmol@coder.com\"&gt;anmol@coder.com&lt;/a&gt;](mailto:&lt;a href=\"mailto:anmol@coder.com\"&gt;anmol@coder.com&lt;/a&gt;) with your resume.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "erz90i", "is_robot_indexable": true, "report_reasons": null, "author": "nhooyr", "discussion_type": null, "num_comments": 54, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/erz90i/hiring_go_engineers_at_coder/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/erz90i/hiring_go_engineers_at_coder/", "subreddit_subscribers": 100330, "created_utc": 1579633377.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3f5z7j84", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Reduce debugging time while programming. Use static and stack-trace analysis to determine which func call causes the error.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_esb2i4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579724004.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "esb2i4", "is_robot_indexable": true, "report_reasons": null, "author": "valentin_michou", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/esb2i4/reduce_debugging_time_while_programming_use/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/snwfdhmp/errlog", "subreddit_subscribers": 100330, "created_utc": 1579695204.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3cl7e290", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Load balancing goroutines in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_es9wuq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579716256.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "es9wuq", "is_robot_indexable": true, "report_reasons": null, "author": "EvoNext", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/es9wuq/load_balancing_goroutines_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@addityasingh/load-balancing-goroutines-in-go-57e0896c7f86?source=friends_link&amp;sk=6e5b32bb42717b2b0577a78753bfa285", "subreddit_subscribers": 100330, "created_utc": 1579687456.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Does anyone know how to catch a systemd \"reload\" instruction in a golang service? \n\nI'm looking at the [go-systemd libraries](https://github.com/coreos/go-systemd) but I don't see a method of responding to a D-bus \"Reload\" instruction?", "author_fullname": "t2_55oruts9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "golang systemd reload configuration instruction", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_es9lpn", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579713874.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone know how to catch a systemd &amp;quot;reload&amp;quot; instruction in a golang service? &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m looking at the &lt;a href=\"https://github.com/coreos/go-systemd\"&gt;go-systemd libraries&lt;/a&gt; but I don&amp;#39;t see a method of responding to a D-bus &amp;quot;Reload&amp;quot; instruction?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "es9lpn", "is_robot_indexable": true, "report_reasons": null, "author": "sirincredibleracoon", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/es9lpn/golang_systemd_reload_configuration_instruction/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/es9lpn/golang_systemd_reload_configuration_instruction/", "subreddit_subscribers": 100330, "created_utc": 1579685074.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "https://github.com/nanmu42/gzip\n\n# Look and Feel\n\n## Gin\n\n```go\nimport github.com/nanmu42/gzip\n\nfunc main() {\n\tg := gin.Default()\n\n        // use default settings\n\tg.Use(gzip.DefaultHandler().Gin)\n\n\tg.GET(\"/\", func(c *gin.Context) {\n\t\tc.JSON(http.StatusOK, map[string]interface{}{\n\t\t\t\"code\": 0,\n\t\t\t\"msg\":  \"hello\",\n\t\t\t\"data\": fmt.Sprintf(\"l%sng!\", strings.Repeat(\"o\", 1000)),\n\t\t})\n\t})\n\n\tlog.Println(g.Run(fmt.Sprintf(\":%d\", 3000)))\n}\n```\n\n## net/http\n\n```go\nimport github.com/nanmu42/gzip\n\nfunc main() {\n\tmux := http.NewServeMux()\n\tmux.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n\t\twriteString(w, fmt.Sprintf(\"This content is compressed: l%sng!\", strings.Repeat(\"o\", 1000)))\n\t})\n\n    // wrap http.Handler using default settings\n\tlog.Println(http.ListenAndServe(fmt.Sprintf(\":%d\", 3001), gzip.DefaultHandler().WrapHandler(mux)))\n}\n\nfunc writeString(w http.ResponseWriter, payload string) {\n\tw.Header().Set(\"Content-Type\", \"text/plain; charset=utf8\")\n\t_, _ = io.WriteString(w, payload+\"\\n\")\n}\n```\n\n# Customizable Handler\n\nHandler can be customized during initialization:\n\n```go\nimport github.com/nanmu42/gzip\n\nhandler := gzip.NewHandler(gzip.Config{\n    // gzip compression level to use\n\tCompressionLevel: 6,\n    // minimum content length to trigger gzip, the unit is in byte.\n\tMinContentLength: 256,\n    // RequestFilter decide whether or not to compress response judging by request.\n    // Filters are applied in the sequence here.\n\tRequestFilter: []RequestFilter{\n\t    NewCommonRequestFilter(),\n\t    DefaultExtensionFilter(),\n\t},\n    // ResponseHeaderFilter decide whether or not to compress response\n    // judging by request\n\tResponseHeaderFilter: []ResponseHeaderFilter{\n\t\tNewSkipCompressedFilter(),\n\t\tDefaultContentTypeFilter(),\n\t},\n})\n```\n\n`RequestFilter` and `ResponseHeaderFilter` are interfaces.\nYou may define one that specially suits your need.", "author_fullname": "t2_1exlho62", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "gzip: An out-of-the-box, also customizable gzip middleware for Gin and net/http", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_es97qf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579710952.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/nanmu42/gzip\"&gt;https://github.com/nanmu42/gzip&lt;/a&gt;&lt;/p&gt;\n\n&lt;h1&gt;Look and Feel&lt;/h1&gt;\n\n&lt;h2&gt;Gin&lt;/h2&gt;\n\n&lt;p&gt;```go\nimport github.com/nanmu42/gzip&lt;/p&gt;\n\n&lt;p&gt;func main() {\n    g := gin.Default()&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    // use default settings\ng.Use(gzip.DefaultHandler().Gin)\n\ng.GET(&amp;quot;/&amp;quot;, func(c *gin.Context) {\n    c.JSON(http.StatusOK, map[string]interface{}{\n        &amp;quot;code&amp;quot;: 0,\n        &amp;quot;msg&amp;quot;:  &amp;quot;hello&amp;quot;,\n        &amp;quot;data&amp;quot;: fmt.Sprintf(&amp;quot;l%sng!&amp;quot;, strings.Repeat(&amp;quot;o&amp;quot;, 1000)),\n    })\n})\n\nlog.Println(g.Run(fmt.Sprintf(&amp;quot;:%d&amp;quot;, 3000)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;h2&gt;net/http&lt;/h2&gt;\n\n&lt;p&gt;```go\nimport github.com/nanmu42/gzip&lt;/p&gt;\n\n&lt;p&gt;func main() {\n    mux := http.NewServeMux()\n    mux.HandleFunc(&amp;quot;/&amp;quot;, func(w http.ResponseWriter, r *http.Request) {\n        writeString(w, fmt.Sprintf(&amp;quot;This content is compressed: l%sng!&amp;quot;, strings.Repeat(&amp;quot;o&amp;quot;, 1000)))\n    })&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// wrap http.Handler using default settings\nlog.Println(http.ListenAndServe(fmt.Sprintf(&amp;quot;:%d&amp;quot;, 3001), gzip.DefaultHandler().WrapHandler(mux)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;func writeString(w http.ResponseWriter, payload string) {\n    w.Header().Set(&amp;quot;Content-Type&amp;quot;, &amp;quot;text/plain; charset=utf8&amp;quot;)\n    _, _ = io.WriteString(w, payload+&amp;quot;\\n&amp;quot;)\n}\n```&lt;/p&gt;\n\n&lt;h1&gt;Customizable Handler&lt;/h1&gt;\n\n&lt;p&gt;Handler can be customized during initialization:&lt;/p&gt;\n\n&lt;p&gt;```go\nimport github.com/nanmu42/gzip&lt;/p&gt;\n\n&lt;p&gt;handler := gzip.NewHandler(gzip.Config{\n    // gzip compression level to use\n    CompressionLevel: 6,\n    // minimum content length to trigger gzip, the unit is in byte.\n    MinContentLength: 256,\n    // RequestFilter decide whether or not to compress response judging by request.\n    // Filters are applied in the sequence here.\n    RequestFilter: []RequestFilter{\n        NewCommonRequestFilter(),\n        DefaultExtensionFilter(),\n    },\n    // ResponseHeaderFilter decide whether or not to compress response\n    // judging by request\n    ResponseHeaderFilter: []ResponseHeaderFilter{\n        NewSkipCompressedFilter(),\n        DefaultContentTypeFilter(),\n    },\n})\n```&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;RequestFilter&lt;/code&gt; and &lt;code&gt;ResponseHeaderFilter&lt;/code&gt; are interfaces.\nYou may define one that specially suits your need.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "es97qf", "is_robot_indexable": true, "report_reasons": null, "author": "nanmu42", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/es97qf/gzip_an_outofthebox_also_customizable_gzip/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/es97qf/gzip_an_outofthebox_also_customizable_gzip/", "subreddit_subscribers": 100330, "created_utc": 1579682152.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "npmtrends is great to check traction, growth base of a node module. Is there anything similar in Go land?", "author_fullname": "t2_2x0723cu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is there something like npmtrends.com for Go?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_es91qy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579709711.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;npmtrends is great to check traction, growth base of a node module. Is there anything similar in Go land?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "es91qy", "is_robot_indexable": true, "report_reasons": null, "author": "desmap", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/es91qy/is_there_something_like_npmtrendscom_for_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/es91qy/is_there_something_like_npmtrendscom_for_go/", "subreddit_subscribers": 100330, "created_utc": 1579680911.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_1u2pb6nw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "cabify/gotoprom: Type-safe Prometheus metrics builder library for golang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ers1df", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 64, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 64, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579625919.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ers1df", "is_robot_indexable": true, "report_reasons": null, "author": "lambroso", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ers1df/cabifygotoprom_typesafe_prometheus_metrics/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/cabify/gotoprom", "subreddit_subscribers": 100330, "created_utc": 1579597119.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I was doing a code review for a package some of my fellow devs were making and found an interface that was defined in out that had every method from the package's main struct in it. I naturally commented that it's not being used by anything and so should be removed. They countered with it being for the consumers to easily mock and even included the mock in this package. We got into a debate and their argument was generally that it provides more by including a mock than it takes away - being less declarative in its usage elsewhere, and that generally for now all consumers will likely use all methods. So we went with leaning it in for now and monitoring changes.\n\nI know that the style guide says interfaces go in consumers but I couldn't really find _why_ that's the case.\n\nAnyone able to shed light on it?", "author_fullname": "t2_uxx71", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Interface in library instead of consumer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_es615w", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1579691973.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was doing a code review for a package some of my fellow devs were making and found an interface that was defined in out that had every method from the package&amp;#39;s main struct in it. I naturally commented that it&amp;#39;s not being used by anything and so should be removed. They countered with it being for the consumers to easily mock and even included the mock in this package. We got into a debate and their argument was generally that it provides more by including a mock than it takes away - being less declarative in its usage elsewhere, and that generally for now all consumers will likely use all methods. So we went with leaning it in for now and monitoring changes.&lt;/p&gt;\n\n&lt;p&gt;I know that the style guide says interfaces go in consumers but I couldn&amp;#39;t really find &lt;em&gt;why&lt;/em&gt; that&amp;#39;s the case.&lt;/p&gt;\n\n&lt;p&gt;Anyone able to shed light on it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "es615w", "is_robot_indexable": true, "report_reasons": null, "author": "wubrgess", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/es615w/interface_in_library_instead_of_consumer/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/es615w/interface_in_library_instead_of_consumer/", "subreddit_subscribers": 100330, "created_utc": 1579663173.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3smne", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Building a global services network using Go, QUIC and Micro", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_ertnaa", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1579636694.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "micro.mu", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ertnaa", "is_robot_indexable": true, "report_reasons": null, "author": "chuhnk", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ertnaa/building_a_global_services_network_using_go_quic/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://micro.mu/blog/2019/12/05/building-a-microservices-network.html", "subreddit_subscribers": 100330, "created_utc": 1579607894.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ertnaa", "before": null}}