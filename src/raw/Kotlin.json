{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "In Java 14 we are now enabled to use pattern matching with `instanceof` expressions.\ne.g. on my code\n\n```\nif (psiVariableReferenceContext instanceof PsiExpressionList psiExpressionList &amp;&amp;\n    psiExpressionList.getContext() instanceof PsiMethodCallExpression psiMethodCallExpr &amp;&amp;\n    !isMethodParameterCharSequence(psiVariableReference, psiMethodCallExpr)) {\n  return false;\n}\n```\n\nIs there a similar Kotlin alternative?  \nCurrently I need to re-cast the instance and call the getter a second time.\n\n```\nif (psiVariableReferenceContext is PsiExpressionList &amp;&amp;\n    psiVariableReferenceContext.context is PsiMethodCallExpression &amp;&amp;\n    !isMethodParameterCharSequence(\n      psiVariableReference,\n      psiVariable.context as PsiMethodCallExpression\n    )) {\n  return false\n}\n```", "author_fullname": "t2_ln0qf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kotlin pattern matching with instanceof (the Java 14 way)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fl9ry0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584652232.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In Java 14 we are now enabled to use pattern matching with &lt;code&gt;instanceof&lt;/code&gt; expressions.\ne.g. on my code&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nif (psiVariableReferenceContext instanceof PsiExpressionList psiExpressionList &amp;amp;&amp;amp;\n    psiExpressionList.getContext() instanceof PsiMethodCallExpression psiMethodCallExpr &amp;amp;&amp;amp;\n    !isMethodParameterCharSequence(psiVariableReference, psiMethodCallExpr)) {\n  return false;\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Is there a similar Kotlin alternative?&lt;br/&gt;\nCurrently I need to re-cast the instance and call the getter a second time.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nif (psiVariableReferenceContext is PsiExpressionList &amp;amp;&amp;amp;\n    psiVariableReferenceContext.context is PsiMethodCallExpression &amp;amp;&amp;amp;\n    !isMethodParameterCharSequence(\n      psiVariableReference,\n      psiVariable.context as PsiMethodCallExpression\n    )) {\n  return false\n}\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fl9ry0", "is_robot_indexable": true, "report_reasons": null, "author": "lppedd", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fl9ry0/kotlin_pattern_matching_with_instanceof_the_java/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fl9ry0/kotlin_pattern_matching_with_instanceof_the_java/", "subreddit_subscribers": 28464, "created_utc": 1584623432.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "1. I am having a hard time checking whether or not [NSD](https://developer.android.com/training/connect-devices-wirelessly/nsd) is working or not. The resources online are scarce, slack isn't answering, documentation is well made but nothing past the bare minimum. All in all catastrophe... I am basically registering a service, discovering, and then I keep discovering myself on my emulators (I run 2 emulators at the same time). By myself I mean I discover the emulator I registered on and not the other....\n2.  Could someone explain a little bit what \"service type\" and \"service name\" are. As service type when registering equals to \\_http.\\_tcp NO DOT, and when listening to a protocol it's with A DOT at the end.  And an example for this with real machine (printer, PC, another phone). \n3. Is there an easier way to work with 2 emulators without having to go into android studio and change the device everytime? Is there a way to split screen logcat and just have both emulators logcats open? (if not where can i ask for this feature?) Or is there another way to test an application that talks to another device. I mean you have to  have 2 emulators open?  \n\n\nThank you for your time. I am stuck on this for like 3 or so days. It's been frustrating. The examples online are horrible and just a copy paste of the documentation.", "author_fullname": "t2_f0n1j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How do you work with Network System Discovery? [Question]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fl5yb6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584631549.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;ol&gt;\n&lt;li&gt;I am having a hard time checking whether or not &lt;a href=\"https://developer.android.com/training/connect-devices-wirelessly/nsd\"&gt;NSD&lt;/a&gt; is working or not. The resources online are scarce, slack isn&amp;#39;t answering, documentation is well made but nothing past the bare minimum. All in all catastrophe... I am basically registering a service, discovering, and then I keep discovering myself on my emulators (I run 2 emulators at the same time). By myself I mean I discover the emulator I registered on and not the other....&lt;/li&gt;\n&lt;li&gt; Could someone explain a little bit what &amp;quot;service type&amp;quot; and &amp;quot;service name&amp;quot; are. As service type when registering equals to _http._tcp NO DOT, and when listening to a protocol it&amp;#39;s with A DOT at the end.  And an example for this with real machine (printer, PC, another phone). &lt;/li&gt;\n&lt;li&gt;Is there an easier way to work with 2 emulators without having to go into android studio and change the device everytime? Is there a way to split screen logcat and just have both emulators logcats open? (if not where can i ask for this feature?) Or is there another way to test an application that talks to another device. I mean you have to  have 2 emulators open?&lt;br/&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Thank you for your time. I am stuck on this for like 3 or so days. It&amp;#39;s been frustrating. The examples online are horrible and just a copy paste of the documentation.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fl5yb6", "is_robot_indexable": true, "report_reasons": null, "author": "bananagodbro123", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fl5yb6/how_do_you_work_with_network_system_discovery/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fl5yb6/how_do_you_work_with_network_system_discovery/", "subreddit_subscribers": 28464, "created_utc": 1584602749.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "So here's the behaviour I want:\n\n```Kotlin\nval nums = sequence {\n    var n = 0\n    while (true) { yield(n++) }\n}\n\nnums.find { isPrime(it) } // 2\nnums.first()              // Want : 3 but I get 0\nnums.take(5).toList()     // Want : [4, 5, 6, 7, 8] but I get [0, 1, 2, 3, 4]\n```\n\nAny ideas on how I could do something like this?\n\n---\n\nHere's my actual code which essentially require a state-full sequence.\n\nHere's my actual code:\n```Kotlin\n// See 0 for setup.\nwhile (true) {\n    // See 1 for the logic that's implemented below (if sequences had state)\n    val data = (blockingQueuesLoopingSequence.take(numQueues) \n        .find { it.peek() != null } ?: blockingQueuesLoopingSequence.first())\n        .get()\n    // Do stuff with data\n}\n```\n### 0\nHere i have a sequence that loops infinitely over a list of `blockingQueues`. \n\n### 1\nThink of a Round-Robin scheduler, current position in the list \ncould be any particular queue which would be our state.  \nSay we are on the `m^th` queue and we have a total on `N` unique queues.\n\nFrom all Queues starting from position `m` (our state) looping back to `m-1th` queue.  \nFind the first queue that has something available. (Now state is m')\n\nIf no such queue choose the first queue from current position \n(which will be `m' = (m + N) mod N = m`)\n\nCall a blocking get on the chosen queue.\n\nUnfortunately, the state(`m`) of `blockingQueuesLoopingSequence` doesn't update and `m is always 0`.", "author_fullname": "t2_1y4pqdt5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "State-full sequences", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fl3nq7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1584595046.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584619733.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So here&amp;#39;s the behaviour I want:&lt;/p&gt;\n\n&lt;p&gt;```Kotlin\nval nums = sequence {\n    var n = 0\n    while (true) { yield(n++) }\n}&lt;/p&gt;\n\n&lt;p&gt;nums.find { isPrime(it) } // 2\nnums.first()              // Want : 3 but I get 0\nnums.take(5).toList()     // Want : [4, 5, 6, 7, 8] but I get [0, 1, 2, 3, 4]\n```&lt;/p&gt;\n\n&lt;p&gt;Any ideas on how I could do something like this?&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Here&amp;#39;s my actual code which essentially require a state-full sequence.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s my actual code:\n&lt;code&gt;Kotlin\n// See 0 for setup.\nwhile (true) {\n    // See 1 for the logic that&amp;#39;s implemented below (if sequences had state)\n    val data = (blockingQueuesLoopingSequence.take(numQueues) \n        .find { it.peek() != null } ?: blockingQueuesLoopingSequence.first())\n        .get()\n    // Do stuff with data\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h3&gt;0&lt;/h3&gt;\n\n&lt;p&gt;Here i have a sequence that loops infinitely over a list of &lt;code&gt;blockingQueues&lt;/code&gt;. &lt;/p&gt;\n\n&lt;h3&gt;1&lt;/h3&gt;\n\n&lt;p&gt;Think of a Round-Robin scheduler, current position in the list \ncould be any particular queue which would be our state.&lt;br/&gt;\nSay we are on the &lt;code&gt;m^th&lt;/code&gt; queue and we have a total on &lt;code&gt;N&lt;/code&gt; unique queues.&lt;/p&gt;\n\n&lt;p&gt;From all Queues starting from position &lt;code&gt;m&lt;/code&gt; (our state) looping back to &lt;code&gt;m-1th&lt;/code&gt; queue.&lt;br/&gt;\nFind the first queue that has something available. (Now state is m&amp;#39;)&lt;/p&gt;\n\n&lt;p&gt;If no such queue choose the first queue from current position \n(which will be &lt;code&gt;m&amp;#39; = (m + N) mod N = m&lt;/code&gt;)&lt;/p&gt;\n\n&lt;p&gt;Call a blocking get on the chosen queue.&lt;/p&gt;\n\n&lt;p&gt;Unfortunately, the state(&lt;code&gt;m&lt;/code&gt;) of &lt;code&gt;blockingQueuesLoopingSequence&lt;/code&gt; doesn&amp;#39;t update and &lt;code&gt;m is always 0&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fl3nq7", "is_robot_indexable": true, "report_reasons": null, "author": "hpar1", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fl3nq7/statefull_sequences/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fl3nq7/statefull_sequences/", "subreddit_subscribers": 28464, "created_utc": 1584590933.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_57th51e1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Equalizer type Progress Indicator", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fl6cz3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "androiddev", "selftext": "Hello People,\n\nI've made a music equalizer kind of progress indicator using Kotlin. It can be found [here](https://github.com/abhishekaudupa/CustomProgressIndicator). Feel free to use it and give me your feedback.\n\nRecommendations and suggestions are more than welcome. I'd like to learn more.", "author_fullname": "t2_57th51e1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Equalizer type Progress Indicator", "link_flair_richtext": [], "subreddit_name_prefixed": "r/androiddev", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fko6rs", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1584533740.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584560516.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.androiddev", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello People,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve made a music equalizer kind of progress indicator using Kotlin. It can be found &lt;a href=\"https://github.com/abhishekaudupa/CustomProgressIndicator\"&gt;here&lt;/a&gt;. Feel free to use it and give me your feedback.&lt;/p&gt;\n\n&lt;p&gt;Recommendations and suggestions are more than welcome. I&amp;#39;d like to learn more.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2r26y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fko6rs", "is_robot_indexable": true, "report_reasons": null, "author": "idiotOfIndia", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/androiddev/comments/fko6rs/equalizer_type_progress_indicator/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/androiddev/comments/fko6rs/equalizer_type_progress_indicator/", "subreddit_subscribers": 136516, "created_utc": 1584531716.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1584633868.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.androiddev", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fl6cz3", "is_robot_indexable": true, "report_reasons": null, "author": "idiotOfIndia", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_fko6rs", "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fl6cz3/equalizer_type_progress_indicator/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/androiddev/comments/fko6rs/equalizer_type_progress_indicator/", "subreddit_subscribers": 28464, "created_utc": 1584605068.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "I have a code like this\n\nval x = MyObject(\"first\", \"second\")\n\nfunction1(x)\n\nfunction2(x)\n\nI want to send different version of x to function 1 but without actually altering it so function2 can have the first version. I have tried let, run, apply and also but couldn't get a solution.", "author_fullname": "t2_4m3xlg53", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How can I pass different version of object without altering it as argument?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fl6dom", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584633985.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a code like this&lt;/p&gt;\n\n&lt;p&gt;val x = MyObject(&amp;quot;first&amp;quot;, &amp;quot;second&amp;quot;)&lt;/p&gt;\n\n&lt;p&gt;function1(x)&lt;/p&gt;\n\n&lt;p&gt;function2(x)&lt;/p&gt;\n\n&lt;p&gt;I want to send different version of x to function 1 but without actually altering it so function2 can have the first version. I have tried let, run, apply and also but couldn&amp;#39;t get a solution.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fl6dom", "is_robot_indexable": true, "report_reasons": null, "author": "goksel123", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fl6dom/how_can_i_pass_different_version_of_object/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fl6dom/how_can_i_pass_different_version_of_object/", "subreddit_subscribers": 28464, "created_utc": 1584605185.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Hi, we have some java business logic that we want to migrate to Kotlin and use as library on multiplatform. Spring is used in the java code, can we reuse it directly in the new library that will be also integrated in iOS/Andoird solutions?\n\nIf we have to use Kotlin DI solution in the library, can it be mixed back with Spring-based java apps that would consume this new library?\n\nthanks!", "author_fullname": "t2_2npdsxpz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "can we use Spring with Kotlin/Native?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fkn5ko", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584554496.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, we have some java business logic that we want to migrate to Kotlin and use as library on multiplatform. Spring is used in the java code, can we reuse it directly in the new library that will be also integrated in iOS/Andoird solutions?&lt;/p&gt;\n\n&lt;p&gt;If we have to use Kotlin DI solution in the library, can it be mixed back with Spring-based java apps that would consume this new library?&lt;/p&gt;\n\n&lt;p&gt;thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fkn5ko", "is_robot_indexable": true, "report_reasons": null, "author": "cicinema", "discussion_type": null, "num_comments": 25, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fkn5ko/can_we_use_spring_with_kotlinnative/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fkn5ko/can_we_use_spring_with_kotlinnative/", "subreddit_subscribers": 28464, "created_utc": 1584525696.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "My web framework [Kweb](https://docs.kweb.io/) incorporates quite a sophisticated DSL involving a large number of quite short functions (often corresponding to HTML tags).\n\nMy instinct was to break these small functions up into different packages according to purpose, but this had the effect of relying much more heavily on IntelliJ to auto-import symbols when necessary.\n\nIs there a better pattern?  Should I just say \"screw it\" and put them all in `kweb.*` for ease of importing?", "author_fullname": "t2_75zx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Good API design patterns to help imports be more seamless?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk1r38", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584462764.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My web framework &lt;a href=\"https://docs.kweb.io/\"&gt;Kweb&lt;/a&gt; incorporates quite a sophisticated DSL involving a large number of quite short functions (often corresponding to HTML tags).&lt;/p&gt;\n\n&lt;p&gt;My instinct was to break these small functions up into different packages according to purpose, but this had the effect of relying much more heavily on IntelliJ to auto-import symbols when necessary.&lt;/p&gt;\n\n&lt;p&gt;Is there a better pattern?  Should I just say &amp;quot;screw it&amp;quot; and put them all in &lt;code&gt;kweb.*&lt;/code&gt; for ease of importing?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk1r38", "is_robot_indexable": true, "report_reasons": null, "author": "sanity", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fk1r38/good_api_design_patterns_to_help_imports_be_more/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fk1r38/good_api_design_patterns_to_help_imports_be_more/", "subreddit_subscribers": 28464, "created_utc": 1584433964.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "    \n    import android.graphics.Color\n    import androidx.appcompat.app.AppCompatActivity\n    import android.os.Bundle\n    import android.view.View\n    import android.widget.Button\n    import android.widget.Toast\n    import kotlinx.android.synthetic.main.activity_main.*\n    import kotlin.random.Random\n    \n    \n    class MainActivity : AppCompatActivity() {\n    \n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_main)\n        }\n         fun buClick(view:View){\n       val buSelected:Button = view as Button\n            var cellID=0\n            when(buSelected.id){\n                R.id.bu1-&gt; cellID=1\n                R.id.bu2-&gt; cellID=2\n                R.id.bu3-&gt; cellID=3\n                R.id.bu4-&gt; cellID=4\n                R.id.bu5-&gt; cellID=5\n                R.id.bu6-&gt; cellID=6\n                R.id.bu7-&gt; cellID=7\n                R.id.bu8-&gt; cellID=8\n                R.id.bu9-&gt; cellID=9\n            }\n    \n             //Log.d(\"buClick:\",buSelected.id.toString())\n             //Log.d(\"buClick:cellID:\",cellID.toString())\n           PlayGame(cellID,buSelected)\n        }\n        var Player1=ArrayList&lt;Int&gt;()\n        var Player2=ArrayList&lt;Int&gt;()\n        var ActivePlayer=1\n        fun PlayGame(cellID:Int,buSelected:Button){\n            if (ActivePlayer==1){\n                buSelected.text=\"X\"\n                buSelected.setBackgroundColor(Color.BLUE)\n                Player1.add(cellID)\n                ActivePlayer=2\n                AutoPlay()\n            }else{\n                buSelected.text=\"O\"\n                buSelected.setBackgroundColor(Color.RED)\n                Player2.add(cellID)\n                ActivePlayer=1\n            }\n            buSelected.isEnabled=false\n            CheckWinner()\n        }\n        fun CheckWinner() {\n            var Winner = -1\n            //Row1\n            if (Player1.contains(1) &amp;&amp; Player1.contains(2) &amp;&amp; Player1.contains(3)) {\n                Winner = 1\n            }\n            if (Player2.contains(1) &amp;&amp; Player1.contains(2) &amp;&amp; Player2.contains(3)) {\n                Winner = 2\n            }\n    \n            //Row2\n            if (Player1.contains(4) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(6)) {\n                Winner = 1\n            }\n            if (Player2.contains(4) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(6)) {\n                Winner = 2\n            }\n    \n            //Row3\n            if (Player1.contains(7) &amp;&amp; Player1.contains(8) &amp;&amp; Player1.contains(9)) {\n                Winner = 1\n            }\n            if (Player2.contains(7) &amp;&amp; Player2.contains(8) &amp;&amp; Player2.contains(9)) {\n                Winner = 2\n            }\n    \n    \n            //Column1\n            if (Player1.contains(1) &amp;&amp; Player1.contains(4) &amp;&amp; Player1.contains(7)) {\n                Winner = 1\n            }\n            if (Player2.contains(1) &amp;&amp; Player2.contains(4) &amp;&amp; Player2.contains(7)) {\n                Winner = 1\n            }\n    \n            //Column 2\n            if (Player1.contains(2) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(8)) {\n                Winner = 1\n            }\n            if (Player2.contains(2) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(8)) {\n                Winner = 2\n            }\n    \n            //Column 3\n            if (Player1.contains(3) &amp;&amp; Player1.contains(6) &amp;&amp; Player1.contains(9)) {\n                Winner = 1\n            }\n            if (Player2.contains(3) &amp;&amp; Player2.contains(6) &amp;&amp; Player2.contains(9)) {\n                Winner = 2\n            }\n    \n    \n            //Cross from Left\n            if (Player1.contains(1) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(9)) {\n                Winner = 1\n            }\n    \n            if (Player2.contains(1) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(9)) {\n                Winner = 2\n            }\n    \n            //Cross from Left\n            if (Player1.contains(3) &amp;&amp; Player1.contains(5) &amp;&amp; Player1.contains(7)) {\n                Winner = 1\n            }\n            if (Player2.contains(3) &amp;&amp; Player2.contains(5) &amp;&amp; Player2.contains(7)) {\n                Winner = 2\n            }\n    \n    \n            if (Winner != -1) {\n                if (Winner == 1) {\n                    Toast.makeText(this, \"X is the WINNER\", Toast.LENGTH_LONG).show()\n                } else {\n                    Toast.makeText(this, \"O is the WINNER\", Toast.LENGTH_LONG).show()\n                }\n    \n            }\n    \n    \n        }\n    private fun AutoPlay(){\n        //SCAN EMPTY CELLS\n        var EmptyCell=ArrayList&lt;Int&gt;()\n    for (CellID in 1..9){\n        if (!Player1.contains(CellID)||!Player2.contains(CellID)){\n            EmptyCell.add(CellID)\n        }\n        //SELECT RANDOM INDEX\n        val r = Random\n        val randIndex=r.nextInt(EmptyCell.size-0)+0\n        val CellID=EmptyCell[randIndex]\n        //CONVERT INDEX INTO BUTTON\n        var buSelect:Button?\n        when(CellID){\n            1-&gt;buSelect=bu1\n            2-&gt;buSelect=bu2\n            3-&gt;buSelect=bu3\n            4-&gt;buSelect=bu4\n            5-&gt;buSelect=bu5\n            6-&gt;buSelect=bu6\n            7-&gt;buSelect=bu7\n            8-&gt;buSelect=bu8\n            9-&gt;buSelect=bu9\n            else-&gt;{\n                buSelect=bu1\n            }\n        }\n        PlayGame(CellID,buSelect)\n    }\n    }\n    \n    \n    }", "author_fullname": "t2_14e1w1ei", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I'm beginner I'm trying to make Tic Tac Toe game but when I press any button the app crashes and the device don't choose any button", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk22et", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584464654.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;import android.graphics.Color\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.view.View\nimport android.widget.Button\nimport android.widget.Toast\nimport kotlinx.android.synthetic.main.activity_main.*\nimport kotlin.random.Random\n\n\nclass MainActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n    }\n     fun buClick(view:View){\n   val buSelected:Button = view as Button\n        var cellID=0\n        when(buSelected.id){\n            R.id.bu1-&amp;gt; cellID=1\n            R.id.bu2-&amp;gt; cellID=2\n            R.id.bu3-&amp;gt; cellID=3\n            R.id.bu4-&amp;gt; cellID=4\n            R.id.bu5-&amp;gt; cellID=5\n            R.id.bu6-&amp;gt; cellID=6\n            R.id.bu7-&amp;gt; cellID=7\n            R.id.bu8-&amp;gt; cellID=8\n            R.id.bu9-&amp;gt; cellID=9\n        }\n\n         //Log.d(&amp;quot;buClick:&amp;quot;,buSelected.id.toString())\n         //Log.d(&amp;quot;buClick:cellID:&amp;quot;,cellID.toString())\n       PlayGame(cellID,buSelected)\n    }\n    var Player1=ArrayList&amp;lt;Int&amp;gt;()\n    var Player2=ArrayList&amp;lt;Int&amp;gt;()\n    var ActivePlayer=1\n    fun PlayGame(cellID:Int,buSelected:Button){\n        if (ActivePlayer==1){\n            buSelected.text=&amp;quot;X&amp;quot;\n            buSelected.setBackgroundColor(Color.BLUE)\n            Player1.add(cellID)\n            ActivePlayer=2\n            AutoPlay()\n        }else{\n            buSelected.text=&amp;quot;O&amp;quot;\n            buSelected.setBackgroundColor(Color.RED)\n            Player2.add(cellID)\n            ActivePlayer=1\n        }\n        buSelected.isEnabled=false\n        CheckWinner()\n    }\n    fun CheckWinner() {\n        var Winner = -1\n        //Row1\n        if (Player1.contains(1) &amp;amp;&amp;amp; Player1.contains(2) &amp;amp;&amp;amp; Player1.contains(3)) {\n            Winner = 1\n        }\n        if (Player2.contains(1) &amp;amp;&amp;amp; Player1.contains(2) &amp;amp;&amp;amp; Player2.contains(3)) {\n            Winner = 2\n        }\n\n        //Row2\n        if (Player1.contains(4) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(6)) {\n            Winner = 1\n        }\n        if (Player2.contains(4) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(6)) {\n            Winner = 2\n        }\n\n        //Row3\n        if (Player1.contains(7) &amp;amp;&amp;amp; Player1.contains(8) &amp;amp;&amp;amp; Player1.contains(9)) {\n            Winner = 1\n        }\n        if (Player2.contains(7) &amp;amp;&amp;amp; Player2.contains(8) &amp;amp;&amp;amp; Player2.contains(9)) {\n            Winner = 2\n        }\n\n\n        //Column1\n        if (Player1.contains(1) &amp;amp;&amp;amp; Player1.contains(4) &amp;amp;&amp;amp; Player1.contains(7)) {\n            Winner = 1\n        }\n        if (Player2.contains(1) &amp;amp;&amp;amp; Player2.contains(4) &amp;amp;&amp;amp; Player2.contains(7)) {\n            Winner = 1\n        }\n\n        //Column 2\n        if (Player1.contains(2) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(8)) {\n            Winner = 1\n        }\n        if (Player2.contains(2) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(8)) {\n            Winner = 2\n        }\n\n        //Column 3\n        if (Player1.contains(3) &amp;amp;&amp;amp; Player1.contains(6) &amp;amp;&amp;amp; Player1.contains(9)) {\n            Winner = 1\n        }\n        if (Player2.contains(3) &amp;amp;&amp;amp; Player2.contains(6) &amp;amp;&amp;amp; Player2.contains(9)) {\n            Winner = 2\n        }\n\n\n        //Cross from Left\n        if (Player1.contains(1) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(9)) {\n            Winner = 1\n        }\n\n        if (Player2.contains(1) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(9)) {\n            Winner = 2\n        }\n\n        //Cross from Left\n        if (Player1.contains(3) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(7)) {\n            Winner = 1\n        }\n        if (Player2.contains(3) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(7)) {\n            Winner = 2\n        }\n\n\n        if (Winner != -1) {\n            if (Winner == 1) {\n                Toast.makeText(this, &amp;quot;X is the WINNER&amp;quot;, Toast.LENGTH_LONG).show()\n            } else {\n                Toast.makeText(this, &amp;quot;O is the WINNER&amp;quot;, Toast.LENGTH_LONG).show()\n            }\n\n        }\n\n\n    }\nprivate fun AutoPlay(){\n    //SCAN EMPTY CELLS\n    var EmptyCell=ArrayList&amp;lt;Int&amp;gt;()\nfor (CellID in 1..9){\n    if (!Player1.contains(CellID)||!Player2.contains(CellID)){\n        EmptyCell.add(CellID)\n    }\n    //SELECT RANDOM INDEX\n    val r = Random\n    val randIndex=r.nextInt(EmptyCell.size-0)+0\n    val CellID=EmptyCell[randIndex]\n    //CONVERT INDEX INTO BUTTON\n    var buSelect:Button?\n    when(CellID){\n        1-&amp;gt;buSelect=bu1\n        2-&amp;gt;buSelect=bu2\n        3-&amp;gt;buSelect=bu3\n        4-&amp;gt;buSelect=bu4\n        5-&amp;gt;buSelect=bu5\n        6-&amp;gt;buSelect=bu6\n        7-&amp;gt;buSelect=bu7\n        8-&amp;gt;buSelect=bu8\n        9-&amp;gt;buSelect=bu9\n        else-&amp;gt;{\n            buSelect=bu1\n        }\n    }\n    PlayGame(CellID,buSelect)\n}\n}\n\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk22et", "is_robot_indexable": true, "report_reasons": null, "author": "Huzaifaomar", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fk22et/im_beginner_im_trying_to_make_tic_tac_toe_game/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fk22et/im_beginner_im_trying_to_make_tic_tac_toe_game/", "subreddit_subscribers": 28464, "created_utc": 1584435854.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "Checkout it here: [https://github.com/arkivanov/MVIKotlin](https://github.com/arkivanov/MVIKotlin)\n\nFeatures:\n\n* Multiplatform: Android, JVM, JavaScript, iosX64, iosArm64, linuxX64\n* Does not depend on any reactive library or coroutines\n* Extensions for [Reaktive](https://github.com/badoo/Reaktive) library\n* Extensions for [Coroutines](https://github.com/Kotlin/kotlinx.coroutines)\n* Multithreading friendly (freezable in Kotlin Native if needed)\n* Logging functionality with adjustable verboseness and ability to provide custom logger\n* Time travel feature:\n   * Multiplatform for all supported targets\n   * Plug-and-play UI for Android and iOS\n   * Export/import events for JVM and Android", "author_fullname": "t2_3p49xt6a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "MVIKotlin - new Kotlin Multiplatform framework for MVI", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fjjupo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1584388944.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Kotlin", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Checkout it here: &lt;a href=\"https://github.com/arkivanov/MVIKotlin\"&gt;https://github.com/arkivanov/MVIKotlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Multiplatform: Android, JVM, JavaScript, iosX64, iosArm64, linuxX64&lt;/li&gt;\n&lt;li&gt;Does not depend on any reactive library or coroutines&lt;/li&gt;\n&lt;li&gt;Extensions for &lt;a href=\"https://github.com/badoo/Reaktive\"&gt;Reaktive&lt;/a&gt; library&lt;/li&gt;\n&lt;li&gt;Extensions for &lt;a href=\"https://github.com/Kotlin/kotlinx.coroutines\"&gt;Coroutines&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Multithreading friendly (freezable in Kotlin Native if needed)&lt;/li&gt;\n&lt;li&gt;Logging functionality with adjustable verboseness and ability to provide custom logger&lt;/li&gt;\n&lt;li&gt;Time travel feature:\n\n&lt;ul&gt;\n&lt;li&gt;Multiplatform for all supported targets&lt;/li&gt;\n&lt;li&gt;Plug-and-play UI for Android and iOS&lt;/li&gt;\n&lt;li&gt;Export/import events for JVM and Android&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fjjupo", "is_robot_indexable": true, "report_reasons": null, "author": "ArkadiiIvanov", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fjjupo/mvikotlin_new_kotlin_multiplatform_framework_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Kotlin/comments/fjjupo/mvikotlin_new_kotlin_multiplatform_framework_for/", "subreddit_subscribers": 28464, "created_utc": 1584360144.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Kotlin", "selftext": "", "author_fullname": "t2_13maxu9i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How brevity in Kotlin increases developers' product as compare to Java with example", "link_flair_richtext": [], "subreddit_name_prefixed": "r/Kotlin", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fk1k4s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1584461522.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "vtnetzwelt.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2so2r", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fk1k4s", "is_robot_indexable": true, "report_reasons": null, "author": "petergalle", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Kotlin/comments/fk1k4s/how_brevity_in_kotlin_increases_developers/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.vtnetzwelt.com/mobile/java-vs-kotlin/", "subreddit_subscribers": 28464, "created_utc": 1584432722.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fk1k4s", "before": null}}