{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "In this thread you can showcase your personal pet project to other redditors.\n\nNeed help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!\n\nA suggested format to get you started:\n\n1. **Name of your project**\n2. **A short description**\n3. **Application stack**\n4. **Link to Live app**\n5. **Link to GitHub**\n6. **You experience level**\n7. **Other information or areas that you would like advice on**\n\n\u00a0\n\n^(Many thanks to Kritnc for getting the ball rolling.)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Personal Projects - Show off your own project and/or ask for advice", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jfcv1r", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "author_premium": true, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1603315962.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this thread you can showcase your personal pet project to other redditors.&lt;/p&gt;\n\n&lt;p&gt;Need help with a specific problem or just wanna have some extra eyeballs on your code? Ask away!&lt;/p&gt;\n\n&lt;p&gt;A suggested format to get you started:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Name of your project&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;A short description&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Application stack&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to Live app&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Link to GitHub&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;You experience level&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Other information or areas that you would like advice on&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Many thanks to Kritnc for getting the ball rolling.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jfcv1r", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jfcv1r/personal_projects_show_off_your_own_project_andor/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rails/comments/jfcv1r/personal_projects_show_off_your_own_project_andor/", "subreddit_subscribers": 46435, "created_utc": 1603287162.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I am trying to read meta information from mp3s uploaded using taglib-ruby gem. It doesn't seem to be finding the file to read in though. My active storage is set up to store in public/uploads. How would I reference the recently uploaded file in this model?\n\n    class Song &lt; ApplicationRecord\n      belongs_to :band\n      has_one_attached :file, dependent: :destroy\n    \n      after_save :set_id3_tags_in_database\n    \n      require 'taglib'\n    \n      def set_id3_tags_in_database\n      TagLib::MPEG::File.open(file.filename) do |file|\n         tag = file.id3v2_tag\n         tag.title\n         tag.album\n         tag.artist\n       end\n      end\n    end\n\nNot even sure if I should put that in the model or in the controller either.\n\n&amp;#x200B;\n\nAny thoughts are appreciated.", "author_fullname": "t2_8eiioqsu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to reference new active storage file after save in model?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jlbpt1", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604144807.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to read meta information from mp3s uploaded using taglib-ruby gem. It doesn&amp;#39;t seem to be finding the file to read in though. My active storage is set up to store in public/uploads. How would I reference the recently uploaded file in this model?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Song &amp;lt; ApplicationRecord\n  belongs_to :band\n  has_one_attached :file, dependent: :destroy\n\n  after_save :set_id3_tags_in_database\n\n  require &amp;#39;taglib&amp;#39;\n\n  def set_id3_tags_in_database\n  TagLib::MPEG::File.open(file.filename) do |file|\n     tag = file.id3v2_tag\n     tag.title\n     tag.album\n     tag.artist\n   end\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Not even sure if I should put that in the model or in the controller either.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Any thoughts are appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jlbpt1", "is_robot_indexable": true, "report_reasons": null, "author": "radiologyDept", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jlbpt1/how_to_reference_new_active_storage_file_after/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jlbpt1/how_to_reference_new_active_storage_file_after/", "subreddit_subscribers": 46435, "created_utc": 1604116007.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "The \"rails new\" command is very handy when you have to test something in complete isolation. Here are my complains about that command :\n\n\\* Too much things included. It would have been better to start with raw defaults and then only include  actual needs.\n\n\\* To the contrary, very basic things (or things that I consider very basic) are missing : env var, code coverage, http mocking... I know there are gems for this, but I find it weird that ActionText is a default, but env var not.\n\n\\* Webpacker seems unfinished feature so far. Webpack manage JS, but Sprockets others assets.\n\n\\* I miss a default HomeController or WelcomeController. Same can be said for the view.\n\n\\* .gitignore is not bad but still miss a few lines\n\n\\* No auto-refresh of the browser when coding the view (or backend) part.\n\n\\* sqlite by default. I don't know a Rails coders who uses it.\n\n\\* sassc is too slow to install. Defaut compilation (without tweaking) of webpacker assets are also too slow.\n\nBottom line : a **very big thank you** to Rails contributors, too much is better than not enough, and there are good ways to start with better defaults that match your needs anyway. Just wanted to share my thoughts with the community. Do you have also things you dislike about the Rails default tools ?", "author_fullname": "t2_14z3on", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What are your dislikes about the \"rails new\" command ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jkwpxr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604093222.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The &amp;quot;rails new&amp;quot; command is very handy when you have to test something in complete isolation. Here are my complains about that command :&lt;/p&gt;\n\n&lt;p&gt;* Too much things included. It would have been better to start with raw defaults and then only include  actual needs.&lt;/p&gt;\n\n&lt;p&gt;* To the contrary, very basic things (or things that I consider very basic) are missing : env var, code coverage, http mocking... I know there are gems for this, but I find it weird that ActionText is a default, but env var not.&lt;/p&gt;\n\n&lt;p&gt;* Webpacker seems unfinished feature so far. Webpack manage JS, but Sprockets others assets.&lt;/p&gt;\n\n&lt;p&gt;* I miss a default HomeController or WelcomeController. Same can be said for the view.&lt;/p&gt;\n\n&lt;p&gt;* .gitignore is not bad but still miss a few lines&lt;/p&gt;\n\n&lt;p&gt;* No auto-refresh of the browser when coding the view (or backend) part.&lt;/p&gt;\n\n&lt;p&gt;* sqlite by default. I don&amp;#39;t know a Rails coders who uses it.&lt;/p&gt;\n\n&lt;p&gt;* sassc is too slow to install. Defaut compilation (without tweaking) of webpacker assets are also too slow.&lt;/p&gt;\n\n&lt;p&gt;Bottom line : a &lt;strong&gt;very big thank you&lt;/strong&gt; to Rails contributors, too much is better than not enough, and there are good ways to start with better defaults that match your needs anyway. Just wanted to share my thoughts with the community. Do you have also things you dislike about the Rails default tools ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkwpxr", "is_robot_indexable": true, "report_reasons": null, "author": "bdavidxyz", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jkwpxr/what_are_your_dislikes_about_the_rails_new_command/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jkwpxr/what_are_your_dislikes_about_the_rails_new_command/", "subreddit_subscribers": 46435, "created_utc": 1604064422.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I don't like having separate columns for `city`, `state`, `street_address_1` etc...So here's how I store them as a hash and *edit them in a form*: [https://blog.corsego.com/2020/10/ruby-on-rails-serialization-saving.html](https://blog.corsego.com/2020/10/ruby-on-rails-serialization-saving.html) **But... do you think this approach makes sence?**", "author_fullname": "t2_411klsg1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "New article: saving address as a hash with serialization", "link_flair_richtext": [{"e": "text", "t": "Learning"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "learning", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jl4eco", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Learning", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1604094633.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604117980.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t like having separate columns for &lt;code&gt;city&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt;, &lt;code&gt;street_address_1&lt;/code&gt; etc...So here&amp;#39;s how I store them as a hash and &lt;em&gt;edit them in a form&lt;/em&gt;: &lt;a href=\"https://blog.corsego.com/2020/10/ruby-on-rails-serialization-saving.html\"&gt;https://blog.corsego.com/2020/10/ruby-on-rails-serialization-saving.html&lt;/a&gt; &lt;strong&gt;But... do you think this approach makes sence?&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c0045e6c-adff-11e4-9f08-22000b3012cc", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jl4eco", "is_robot_indexable": true, "report_reasons": null, "author": "yarotheslav", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jl4eco/new_article_saving_address_as_a_hash_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jl4eco/new_article_saving_address_as_a_hash_with/", "subreddit_subscribers": 46435, "created_utc": 1604089180.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Does anyone know how to use devise\\_ldap\\_authenticatable as a bare bones API?", "author_fullname": "t2_asanmgz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "devise_ldap_authenticatable API Based", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jl00hg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604104130.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone know how to use devise_ldap_authenticatable as a bare bones API?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jl00hg", "is_robot_indexable": true, "report_reasons": null, "author": "Code4Greatness", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jl00hg/devise_ldap_authenticatable_api_based/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jl00hg/devise_ldap_authenticatable_api_based/", "subreddit_subscribers": 46435, "created_utc": 1604075330.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hi, I want to start utilizing APIs in my Rails apps but I am completely lost on how to actually get data from APIs when using a gem.\n\nI am trying to make a simple app where you search for a query and it brings up a list of items with the matching keyword. Here are some API gems I have been trying to work with:\n\nGiant Bomb: [https://github.com/games-directory/api-giantbomb](https://github.com/games-directory/api-giantbomb)\n\nSteam: [https://github.com/Olgagr/steam-web-api](https://github.com/Olgagr/steam-web-api)\n\nPokeAPI: [https://github.com/rdavid1099/poke-api-v2](https://github.com/rdavid1099/poke-api-v2)\n\nI'm mostly focusing on the Giant Bomb API. I've added the gem and initialized my API key, but after that I'm pretty clueless in what to do. I was thinking I need to make a search method in my Games controller like so:\n\n  def search\n\n@ games = Game.find\\_by(params\\[:id\\])\n\nsearch = GiantBomb::Search.new().query(:query)\n\n  end\n\nI'm not sure what to do beyond this or even if it's right (my search is not working so I assume the latter).\n\nAny tips or guides? I've googled for API guides but most seem to be fetching data via an API key and now on how to use an API gem.", "author_fullname": "t2_5aobq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Clueless about how to fetch data from an API gem", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jkt9ab", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604076943.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I want to start utilizing APIs in my Rails apps but I am completely lost on how to actually get data from APIs when using a gem.&lt;/p&gt;\n\n&lt;p&gt;I am trying to make a simple app where you search for a query and it brings up a list of items with the matching keyword. Here are some API gems I have been trying to work with:&lt;/p&gt;\n\n&lt;p&gt;Giant Bomb: &lt;a href=\"https://github.com/games-directory/api-giantbomb\"&gt;https://github.com/games-directory/api-giantbomb&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Steam: &lt;a href=\"https://github.com/Olgagr/steam-web-api\"&gt;https://github.com/Olgagr/steam-web-api&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;PokeAPI: &lt;a href=\"https://github.com/rdavid1099/poke-api-v2\"&gt;https://github.com/rdavid1099/poke-api-v2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m mostly focusing on the Giant Bomb API. I&amp;#39;ve added the gem and initialized my API key, but after that I&amp;#39;m pretty clueless in what to do. I was thinking I need to make a search method in my Games controller like so:&lt;/p&gt;\n\n&lt;p&gt;def search&lt;/p&gt;\n\n&lt;p&gt;@ games = Game.find_by(params[:id])&lt;/p&gt;\n\n&lt;p&gt;search = GiantBomb::Search.new().query(:query)&lt;/p&gt;\n\n&lt;p&gt;end&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not sure what to do beyond this or even if it&amp;#39;s right (my search is not working so I assume the latter).&lt;/p&gt;\n\n&lt;p&gt;Any tips or guides? I&amp;#39;ve googled for API guides but most seem to be fetching data via an API key and now on how to use an API gem.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkt9ab", "is_robot_indexable": true, "report_reasons": null, "author": "ForkballK", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jkt9ab/clueless_about_how_to_fetch_data_from_an_api_gem/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jkt9ab/clueless_about_how_to_fetch_data_from_an_api_gem/", "subreddit_subscribers": 46435, "created_utc": 1604048143.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I've been working on upgrading an old large Rails 4.2 project to 5.2 and hit this debugging some stuff... if I leave the last two methods (descendants/debug) uncommented, rspec tests take 3-4 times longer than if these methods are commented out. The methods aren't called anywhere (I only use this in console) ... any idea why that is? I wonder if I'm doing this unintentionally in other places.  \n\nApplicationRecord is inherited by all models (part of Rails 5 upgrade)\n\n```\nclass ApplicationRecord &lt; ActiveRecord::Base\n  self.abstract_class = true\n\n  def self.descendants\n    ObjectSpace.each_object(Class).select { |klass| klass &lt; self }\n  end\n\n  def self.debug\n    Rails.logger.level = 3\n    descendants.sort_by(&amp;:name).each_with_index do |obj, idx|\n      puts \"#{idx}-#{obj.name}: #{obj.count}\"\n    end\n    nil\n  end\nend\n```", "author_fullname": "t2_31ofk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Unused methods slow down rspec?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jknjzu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604050375.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been working on upgrading an old large Rails 4.2 project to 5.2 and hit this debugging some stuff... if I leave the last two methods (descendants/debug) uncommented, rspec tests take 3-4 times longer than if these methods are commented out. The methods aren&amp;#39;t called anywhere (I only use this in console) ... any idea why that is? I wonder if I&amp;#39;m doing this unintentionally in other places.  &lt;/p&gt;\n\n&lt;p&gt;ApplicationRecord is inherited by all models (part of Rails 5 upgrade)&lt;/p&gt;\n\n&lt;p&gt;```\nclass ApplicationRecord &amp;lt; ActiveRecord::Base\n  self.abstract_class = true&lt;/p&gt;\n\n&lt;p&gt;def self.descendants\n    ObjectSpace.each_object(Class).select { |klass| klass &amp;lt; self }\n  end&lt;/p&gt;\n\n&lt;p&gt;def self.debug\n    Rails.logger.level = 3\n    descendants.sort_by(&amp;amp;:name).each_with_index do |obj, idx|\n      puts &amp;quot;#{idx}-#{obj.name}: #{obj.count}&amp;quot;\n    end\n    nil\n  end\nend\n```&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jknjzu", "is_robot_indexable": true, "report_reasons": null, "author": "wiseleyb", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jknjzu/unused_methods_slow_down_rspec/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jknjzu/unused_methods_slow_down_rspec/", "subreddit_subscribers": 46435, "created_utc": 1604021575.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I have a **emails** field in my **contacts** table which is a hstore: `t.hstore :emails` . My goal is to store key value pairs of label and email. For example if a use has 2 emails:\n\n    { \"Home\" =&gt; \"email@example.com\", \"Work\" =&gt; \"work@example.com\" }\n\nHow do I go about making a form where a user can select the label from a select dropdown and enter his email in a text field? Also, would it be possible for the user to add more emails if wanted?\n\nI would also need to permit the emails param in the controller which is giving me issues.\n\nThanks", "author_fullname": "t2_10x09g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Help] Using Hstore in Form", "link_flair_richtext": [{"e": "text", "t": "Help"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "help", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jknjx7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Help", "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604050366.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a &lt;strong&gt;emails&lt;/strong&gt; field in my &lt;strong&gt;contacts&lt;/strong&gt; table which is a hstore: &lt;code&gt;t.hstore :emails&lt;/code&gt; . My goal is to store key value pairs of label and email. For example if a use has 2 emails:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{ &amp;quot;Home&amp;quot; =&amp;gt; &amp;quot;email@example.com&amp;quot;, &amp;quot;Work&amp;quot; =&amp;gt; &amp;quot;work@example.com&amp;quot; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How do I go about making a form where a user can select the label from a select dropdown and enter his email in a text field? Also, would it be possible for the user to add more emails if wanted?&lt;/p&gt;\n\n&lt;p&gt;I would also need to permit the emails param in the controller which is giving me issues.&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "eef0b990-adfb-11e4-8e15-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jknjx7", "is_robot_indexable": true, "report_reasons": null, "author": "knife_bose", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jknjx7/help_using_hstore_in_form/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jknjx7/help_using_hstore_in_form/", "subreddit_subscribers": 46435, "created_utc": 1604021566.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I was searching for a good API authentication way in rails and I found this medium article: \n\n[https://medium.com/@nandhae/2019-how-i-set-up-authentication-with-jwt-in-just-a-few-lines-of-code-with-rails-5-api-devise-9db7d3cee2c0](https://medium.com/@nandhae/2019-how-i-set-up-authentication-with-jwt-in-just-a-few-lines-of-code-with-rails-5-api-devise-9db7d3cee2c0) \n\nIt really explained the implementation phase very well, but I have a question, how can we make users? how can we authenticate users? \n\nThese are unsolved for me. \n\nP.S : Haven't implemented what I read yet. I may do it in a better time (It's almost 4 A.M in my zone! and I'm too sleepy!)", "author_fullname": "t2_1lai2din", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Read this medium post about \"devise-jwt\" and some question popped in my head.", "link_flair_richtext": [{"e": "text", "t": "Question"}], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": "question", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jkm7gt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604045563.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was searching for a good API authentication way in rails and I found this medium article: &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://medium.com/@nandhae/2019-how-i-set-up-authentication-with-jwt-in-just-a-few-lines-of-code-with-rails-5-api-devise-9db7d3cee2c0\"&gt;https://medium.com/@nandhae/2019-how-i-set-up-authentication-with-jwt-in-just-a-few-lines-of-code-with-rails-5-api-devise-9db7d3cee2c0&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;It really explained the implementation phase very well, but I have a question, how can we make users? how can we authenticate users? &lt;/p&gt;\n\n&lt;p&gt;These are unsolved for me. &lt;/p&gt;\n\n&lt;p&gt;P.S : Haven&amp;#39;t implemented what I read yet. I may do it in a better time (It&amp;#39;s almost 4 A.M in my zone! and I&amp;#39;m too sleepy!)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "fdfc6806-aea7-11e4-bf37-22000b3889f5", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkm7gt", "is_robot_indexable": true, "report_reasons": null, "author": "Haghiri75", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jkm7gt/read_this_medium_post_about_devisejwt_and_some/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jkm7gt/read_this_medium_post_about_devisejwt_and_some/", "subreddit_subscribers": 46435, "created_utc": 1604016763.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "I'm currently looking to use either one of these two for auditing changes made by specific user roles on a rails 6 ecommerce app using mysql. They both seem similar and I'm currently leaning towards papertrail due to the more frequent gem updates, but I was curious if there is any specific advantage of using one over the other(performance, ease of use...etc) or anyone knows of any pros/cons that stick out.\n\nWould be keen to know if people have used any other gems that seemed good as well.", "author_fullname": "t2_160u4a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Audited vs papertrail gem for auditing table changes?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jk9i0y", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1604026356.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604004963.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m currently looking to use either one of these two for auditing changes made by specific user roles on a rails 6 ecommerce app using mysql. They both seem similar and I&amp;#39;m currently leaning towards papertrail due to the more frequent gem updates, but I was curious if there is any specific advantage of using one over the other(performance, ease of use...etc) or anyone knows of any pros/cons that stick out.&lt;/p&gt;\n\n&lt;p&gt;Would be keen to know if people have used any other gems that seemed good as well.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jk9i0y", "is_robot_indexable": true, "report_reasons": null, "author": "darren457", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jk9i0y/audited_vs_papertrail_gem_for_auditing_table/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jk9i0y/audited_vs_papertrail_gem_for_auditing_table/", "subreddit_subscribers": 46435, "created_utc": 1603976163.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rails", "selftext": "Hey Rails stars,\n\nAm working with ActiveAdmin and I have a custom page am calling \"Approvals\" with an Arbe table that's supposed to display data from a join of 2 tables. My code is as follows:\n\n**AA custom page:**\n\n    ActiveAdmin.register_page 'Approvals' do\n        content do render partial: 'approval_requests', locals: { request_items:         ApprovalRequest.joins(:approval_items) } \n    end \n    end\n\n&amp;#x200B;\n\n**..the partial**\n\n    &lt;%=\n    Arbre::Context.new({}, self) do \n    table_for(request_items, sortable: true, class: 'index_table') do \n        column :requesting_party \n        column :approving_party \n        column 'Resource Type' do |ar| \n            ar.resource_type \n        end \n        end \n    end \n    %&gt;\n\n&amp;#x200B;\n\n**ApprovalRequest**\n\n    class ApprovalRequest &lt; ApplicationRecord\n        #fields: :requesting_party, :approving_party...\n        has_many :approval_items \n    end\n\n&amp;#x200B;\n\n**ApprovalItem**\n\n    class ApprovalItem &lt; ApplicationRecord\n        #fields: :request_id, :resource_type....\n        belongs_to :approval_request, foreign_key: :request_id \n    end\n\n&amp;#x200B;\n\nWith that, am getting the error \"PG::UndefinedColumn: ERROR:  column approval\\_items.approval\\_request\\_id does not exist..\"\n\nSo where could I be missing it? Thanks.", "author_fullname": "t2_ujn1vcq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How can I make this fetch?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rails", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_jkbozb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1604012726.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rails", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey Rails stars,&lt;/p&gt;\n\n&lt;p&gt;Am working with ActiveAdmin and I have a custom page am calling &amp;quot;Approvals&amp;quot; with an Arbe table that&amp;#39;s supposed to display data from a join of 2 tables. My code is as follows:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;AA custom page:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ActiveAdmin.register_page &amp;#39;Approvals&amp;#39; do\n    content do render partial: &amp;#39;approval_requests&amp;#39;, locals: { request_items:         ApprovalRequest.joins(:approval_items) } \nend \nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;..the partial&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;%=\nArbre::Context.new({}, self) do \ntable_for(request_items, sortable: true, class: &amp;#39;index_table&amp;#39;) do \n    column :requesting_party \n    column :approving_party \n    column &amp;#39;Resource Type&amp;#39; do |ar| \n        ar.resource_type \n    end \n    end \nend \n%&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;ApprovalRequest&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class ApprovalRequest &amp;lt; ApplicationRecord\n    #fields: :requesting_party, :approving_party...\n    has_many :approval_items \nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;ApprovalItem&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class ApprovalItem &amp;lt; ApplicationRecord\n    #fields: :request_id, :resource_type....\n    belongs_to :approval_request, foreign_key: :request_id \nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;With that, am getting the error &amp;quot;PG::UndefinedColumn: ERROR:  column approval_items.approval_request_id does not exist..&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;So where could I be missing it? Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qhjn", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "jkbozb", "is_robot_indexable": true, "report_reasons": null, "author": "tshub", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rails/comments/jkbozb/how_can_i_make_this_fetch/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rails/comments/jkbozb/how_can_i_make_this_fetch/", "subreddit_subscribers": 46435, "created_utc": 1603983926.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_jkbozb", "before": null}}