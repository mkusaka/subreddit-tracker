{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5pazjf1e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "PayPal Taps Go to Modernize and Scale: In our tightly managed environments where we run Go code, we have seen a CPU reduction of approximately ten percent with cleaner and maintainable code.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ilr81s", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 66, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 66, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599159415.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "go.dev", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://go.dev/solutions/paypal/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilr81s", "is_robot_indexable": true, "report_reasons": null, "author": "noahlewisca", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilr81s/paypal_taps_go_to_modernize_and_scale_in_our/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://go.dev/solutions/paypal/", "subreddit_subscribers": 124172, "created_utc": 1599130615.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5nxwrjjq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "All about PKCE and generate code_verifier and code_challenge through multiple languages including golang.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_ilt9zb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599168114.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "loginradius.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.loginradius.com/engineering/blog/pkce/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilt9zb", "is_robot_indexable": true, "report_reasons": null, "author": "pareek-narendra", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilt9zb/all_about_pkce_and_generate_code_verifier_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.loginradius.com/engineering/blog/pkce/", "subreddit_subscribers": 124172, "created_utc": 1599139314.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi Gophers\n\nI'm a Go and reddit noob (this is my first post), so please be gentle.\n\nI'd like to share with you my latest project: [treedrawer](https://github.com/m1gwings/treedrawer)\n\nIt is a simple Go module that can draw trees with several layers and several children for each node on the terminal. It can handle nodes with any type that satisfies the NodeValue interface, so you can have trees with integers, strings or custom types.\n\nI started this project just for the sake of learning. I am currently studying \"The Go Programming Language\" and, in order to solve an exercise that required to implement the String() method on a tree, I ended up creating this.\n\nI think that my code is far from \"Good Golang code\", so I'd like your feedback to discover my mistakes and improve. I also believe that maybe someone could find this module useful, but I'm not that sure.\n\nThanks in advance.", "author_fullname": "t2_7rgmos9d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "treedrawer: a Go module for drawing trees on the terminal", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_ilsocu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599165849.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi Gophers&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m a Go and reddit noob (this is my first post), so please be gentle.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d like to share with you my latest project: &lt;a href=\"https://github.com/m1gwings/treedrawer\"&gt;treedrawer&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It is a simple Go module that can draw trees with several layers and several children for each node on the terminal. It can handle nodes with any type that satisfies the NodeValue interface, so you can have trees with integers, strings or custom types.&lt;/p&gt;\n\n&lt;p&gt;I started this project just for the sake of learning. I am currently studying &amp;quot;The Go Programming Language&amp;quot; and, in order to solve an exercise that required to implement the String() method on a tree, I ended up creating this.&lt;/p&gt;\n\n&lt;p&gt;I think that my code is far from &amp;quot;Good Golang code&amp;quot;, so I&amp;#39;d like your feedback to discover my mistakes and improve. I also believe that maybe someone could find this module useful, but I&amp;#39;m not that sure.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilsocu", "is_robot_indexable": true, "report_reasons": null, "author": "migwings", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilsocu/treedrawer_a_go_module_for_drawing_trees_on_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ilsocu/treedrawer_a_go_module_for_drawing_trees_on_the/", "subreddit_subscribers": 124172, "created_utc": 1599137049.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi all!\n\nIt seems questions about clean architecture, DDD, and related patterns seem to come up on this subreddit pretty often. I'd like to share some ideas on this topic together with refactoring of a [real go project](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example). I hope someone finds it useful. :)\n\n[https://threedots.tech/post/introducing-clean-architecture/](https://threedots.tech/post/introducing-clean-architecture/)", "author_fullname": "t2_a3n51", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introducing Clean Architecture by refactoring a Go project", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_il70h4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 149, "total_awards_received": 3, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 149, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599082971.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all!&lt;/p&gt;\n\n&lt;p&gt;It seems questions about clean architecture, DDD, and related patterns seem to come up on this subreddit pretty often. I&amp;#39;d like to share some ideas on this topic together with refactoring of a &lt;a href=\"https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example\"&gt;real go project&lt;/a&gt;. I hope someone finds it useful. :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://threedots.tech/post/introducing-clean-architecture/\"&gt;https://threedots.tech/post/introducing-clean-architecture/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 200, "resized_tier_icons": null, "id": "award_1703f934-cf44-40cc-a96d-3729d0b48262", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=16&amp;height=16&amp;auto=webp&amp;s=e3adc32e42cf534e27afea719ff932b1ce797cfd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=32&amp;height=32&amp;auto=webp&amp;s=08542909c94777e870c41a35413bce688ca2fd6c", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=48&amp;height=48&amp;auto=webp&amp;s=4d85746d584b5494087da3561944d6d241f57674", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=64&amp;height=64&amp;auto=webp&amp;s=fd7683c8de2839998a432e7e53e1e06d66c35ad3", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=128&amp;height=128&amp;auto=webp&amp;s=a750da7a573bb231bd863be9725abece0332b828", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "My kindergarten teacher, my cat, my mom, and you.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "I'd Like to Thank...", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=16&amp;height=16&amp;auto=webp&amp;s=e3adc32e42cf534e27afea719ff932b1ce797cfd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=32&amp;height=32&amp;auto=webp&amp;s=08542909c94777e870c41a35413bce688ca2fd6c", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=48&amp;height=48&amp;auto=webp&amp;s=4d85746d584b5494087da3561944d6d241f57674", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=64&amp;height=64&amp;auto=webp&amp;s=fd7683c8de2839998a432e7e53e1e06d66c35ad3", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png?width=128&amp;height=128&amp;auto=webp&amp;s=a750da7a573bb231bd863be9725abece0332b828", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/8ad2jffnclf41_Thanks.png"}, {"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 125, "resized_tier_icons": null, "id": "award_5f123e3d-4f48-42f4-9c11-e98b566d5897", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "When you come across a feel-good thing.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Wholesome", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png"}, {"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 75, "resized_tier_icons": null, "id": "award_ce5f9ce6-49d9-4905-9228-22950e889206", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything's better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png"}], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il70h4", "is_robot_indexable": true, "report_reasons": null, "author": "mi_losz", "discussion_type": null, "num_comments": 31, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/il70h4/introducing_clean_architecture_by_refactoring_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/il70h4/introducing_clean_architecture_by_refactoring_a/", "subreddit_subscribers": 124172, "created_utc": 1599054171.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_4xpn49l2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Turn your Go REST API to GraphQL using Hasura Actions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_ilsouk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599165902.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "hasura.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://hasura.io/blog/turn-your-go-rest-api-to-graphql-using-hasura-actions/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilsouk", "is_robot_indexable": true, "report_reasons": null, "author": "vishmehta30", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilsouk/turn_your_go_rest_api_to_graphql_using_hasura/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://hasura.io/blog/turn-your-go-rest-api-to-graphql-using-hasura-actions/", "subreddit_subscribers": 124172, "created_utc": 1599137102.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5czkqdxq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Twitter authentication with Go Language and Goth", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_ilsarf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1599164325.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "loginradius.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.loginradius.com/engineering/blog/twitter-authentication-with-golang-and-goth/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilsarf", "is_robot_indexable": true, "report_reasons": null, "author": "mock_coder", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilsarf/twitter_authentication_with_go_language_and_goth/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.loginradius.com/engineering/blog/twitter-authentication-with-golang-and-goth/", "subreddit_subscribers": 124172, "created_utc": 1599135525.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "so if i do something like this;\n\n`for i := 0 ... {\n  bar\n}`\n\ndoes i get reallocated with every iteration of the loop? or does it just assign to the existing i?", "author_fullname": "t2_2q8c74t7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "mechanics of :=", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ilmz80", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599137088.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;so if i do something like this;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for i := 0 ... {\n  bar\n}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;does i get reallocated with every iteration of the loop? or does it just assign to the existing i?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilmz80", "is_robot_indexable": true, "report_reasons": null, "author": "abcrixyz", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilmz80/mechanics_of/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ilmz80/mechanics_of/", "subreddit_subscribers": 124172, "created_utc": 1599108288.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I want to pull some data using JSON response and fetch it through the struct in golang. Thing is the contents change and it is really hard to come up with the right method as everything I tried does not seem to work, that's why I would really appreciate some help.\n\n&amp;#x200B;\n\nOriginal working code, you can copy and paste the following JSON response to check for consistency:\n\n`{\"table_contents\":[{\"id\":100,\"description\":\"text100\"},{\"id\":101,\"description\":\"text101\"},{\"id\":1,\"description\":\"text1\"}]}`\n\n    package main\n    \n    import (\n    \t\"fmt\"\n    \t\"encoding/json\"\n    )\n    \n    type MyStruct1 struct {\n    \tTableContents []struct {\n    \t\tID          int\n    \t\tDescription string\n    \t} `json:\"table_contents\"`\n    }\n    \n    func main() {\n    \tresult:= []byte(`{\"table_contents\":[{\"id\":100,\"description\":\"text100\"},{\"id\":101,\"description\":\"text101\"},{\"id\":1,\"description\":\"text1\"}]}`)\n    \tvar container MyStruct1\n    \terr := json.Unmarshal(result, &amp;container)\n    \tif err != nil {\n    \t\tfmt.Println(\" [0] Error message: \" + err.Error())\n    \t\treturn\n    \t}\n    }\n    \n\n&amp;#x200B;\n\nNew code looks like this, sometimes we get nested array as well.\n\n`{\"table_contents\":[[{\"id\":100,\"description\":\"text100\"},{\"id\":101,\"description\":\"text101\"}],{\"id\":1,\"description\":\"text1\"}]}`\n\nI wanted to make it work with the code above and this is what I have tried so far:\n\n&amp;#x200B;\n\n1st Try:\n\n    package main\n    \n    import (\n    \t\"fmt\"\n    \t\"encoding/json\"\n    )\n    \n    type MyStruct1 struct {\n    \tTableContents [][]struct {\n    \t\tID          int\n    \t\tDescription string\n    \t} `json:\"table_contents\"`\n    }\n    \n    func main() {\n    \tresult:= []byte(`{\"table_contents\":[[{\"id\":100,\"description\":\"text100\"},{\"id\":101,\"description\":\"text101\"}],{\"id\":1,\"description\":\"text1\"}]}`)\n    \tvar container MyStruct1\n    \terr := json.Unmarshal(result, &amp;container)\n    \tif err != nil {\n    \t\tfmt.Println(\" [0] Error message: \" + err.Error())\n    \t\treturn\n    \t}\n    }\n    \n\n&gt;\\[0\\] Error message: json: cannot unmarshal object into Go struct field MyStruct1.table\\_contents of type \\[\\]struct { ID int; Description string } \n\nYou might have noticed I have added another set of square brackets in TableContents inside the struct. That did not seem to work.\n\n&amp;#x200B;\n\n2nd Try:\n\n    package main\n    \n    import (\n    \t\"fmt\"\n    \t\"encoding/json\"\n    )\n    \n    type MyStruct1 struct {\n    \tTableContents []interface{} `json:\"table_contents\"`\n    }\n    \n    func main() {\n    \tresult:= []byte(`{\"table_contents\":[[{\"id\":100,\"description\":\"text100\"},{\"id\":101,\"description\":\"text101\"}],{\"id\":1,\"description\":\"text1\"}]}`)\n    \tvar container MyStruct1\n    \terr := json.Unmarshal(result, &amp;container)\n    \tif err != nil {\n    \t\tfmt.Println(\" [0] Error message: \" + err.Error())\n    \t\treturn\n    \t}\n    \t\n    \tfor i := range container.TableContents {\n    \t\tfmt.Println(container.TableContents[i].Description)\n    \t}\n    }\n    \n\n&gt; ./prog.go:22:41: container.TableContents\\[i\\].Description undefined (type interface {} is interface with no methods) \n\n&amp;#x200B;\n\nThis time I tried utilising interface, but it is not possible to retrieve its values once they have been processed or I am doing it wrong?\n\n&amp;#x200B;\n\n\\---\n\nIn short, we can receive either responses and we have to process it through the struct:\n\n`{\"table_contents\":[{\"id\":100,\"description\":\"text100\"},{\"id\":101,\"description\":\"text101\"},{\"id\":1,\"description\":\"text1\"}]}`\n\n`{\"table_contents\":[[{\"id\":100,\"description\":\"text100\"},{\"id\":101,\"description\":\"text101\"}],{\"id\":1,\"description\":\"text1\"}]}`\n\n&amp;#x200B;\n\nI would really like for someone to show me a quick example if anyone is aware how to do this", "author_fullname": "t2_4k75tkzi", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anonymous Struct or Interface in flexible json result?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_ilt4s8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599167587.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to pull some data using JSON response and fetch it through the struct in golang. Thing is the contents change and it is really hard to come up with the right method as everything I tried does not seem to work, that&amp;#39;s why I would really appreciate some help.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Original working code, you can copy and paste the following JSON response to check for consistency:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&amp;quot;table_contents&amp;quot;:[{&amp;quot;id&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;text100&amp;quot;},{&amp;quot;id&amp;quot;:101,&amp;quot;description&amp;quot;:&amp;quot;text101&amp;quot;},{&amp;quot;id&amp;quot;:1,&amp;quot;description&amp;quot;:&amp;quot;text1&amp;quot;}]}&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;encoding/json&amp;quot;\n)\n\ntype MyStruct1 struct {\n    TableContents []struct {\n        ID          int\n        Description string\n    } `json:&amp;quot;table_contents&amp;quot;`\n}\n\nfunc main() {\n    result:= []byte(`{&amp;quot;table_contents&amp;quot;:[{&amp;quot;id&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;text100&amp;quot;},{&amp;quot;id&amp;quot;:101,&amp;quot;description&amp;quot;:&amp;quot;text101&amp;quot;},{&amp;quot;id&amp;quot;:1,&amp;quot;description&amp;quot;:&amp;quot;text1&amp;quot;}]}`)\n    var container MyStruct1\n    err := json.Unmarshal(result, &amp;amp;container)\n    if err != nil {\n        fmt.Println(&amp;quot; [0] Error message: &amp;quot; + err.Error())\n        return\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;New code looks like this, sometimes we get nested array as well.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&amp;quot;table_contents&amp;quot;:[[{&amp;quot;id&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;text100&amp;quot;},{&amp;quot;id&amp;quot;:101,&amp;quot;description&amp;quot;:&amp;quot;text101&amp;quot;}],{&amp;quot;id&amp;quot;:1,&amp;quot;description&amp;quot;:&amp;quot;text1&amp;quot;}]}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I wanted to make it work with the code above and this is what I have tried so far:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;1st Try:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;encoding/json&amp;quot;\n)\n\ntype MyStruct1 struct {\n    TableContents [][]struct {\n        ID          int\n        Description string\n    } `json:&amp;quot;table_contents&amp;quot;`\n}\n\nfunc main() {\n    result:= []byte(`{&amp;quot;table_contents&amp;quot;:[[{&amp;quot;id&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;text100&amp;quot;},{&amp;quot;id&amp;quot;:101,&amp;quot;description&amp;quot;:&amp;quot;text101&amp;quot;}],{&amp;quot;id&amp;quot;:1,&amp;quot;description&amp;quot;:&amp;quot;text1&amp;quot;}]}`)\n    var container MyStruct1\n    err := json.Unmarshal(result, &amp;amp;container)\n    if err != nil {\n        fmt.Println(&amp;quot; [0] Error message: &amp;quot; + err.Error())\n        return\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;[0] Error message: json: cannot unmarshal object into Go struct field MyStruct1.table_contents of type []struct { ID int; Description string } &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You might have noticed I have added another set of square brackets in TableContents inside the struct. That did not seem to work.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;2nd Try:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;encoding/json&amp;quot;\n)\n\ntype MyStruct1 struct {\n    TableContents []interface{} `json:&amp;quot;table_contents&amp;quot;`\n}\n\nfunc main() {\n    result:= []byte(`{&amp;quot;table_contents&amp;quot;:[[{&amp;quot;id&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;text100&amp;quot;},{&amp;quot;id&amp;quot;:101,&amp;quot;description&amp;quot;:&amp;quot;text101&amp;quot;}],{&amp;quot;id&amp;quot;:1,&amp;quot;description&amp;quot;:&amp;quot;text1&amp;quot;}]}`)\n    var container MyStruct1\n    err := json.Unmarshal(result, &amp;amp;container)\n    if err != nil {\n        fmt.Println(&amp;quot; [0] Error message: &amp;quot; + err.Error())\n        return\n    }\n\n    for i := range container.TableContents {\n        fmt.Println(container.TableContents[i].Description)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;./prog.go:22:41: container.TableContents[i].Description undefined (type interface {} is interface with no methods) &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;This time I tried utilising interface, but it is not possible to retrieve its values once they have been processed or I am doing it wrong?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;---&lt;/p&gt;\n\n&lt;p&gt;In short, we can receive either responses and we have to process it through the struct:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&amp;quot;table_contents&amp;quot;:[{&amp;quot;id&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;text100&amp;quot;},{&amp;quot;id&amp;quot;:101,&amp;quot;description&amp;quot;:&amp;quot;text101&amp;quot;},{&amp;quot;id&amp;quot;:1,&amp;quot;description&amp;quot;:&amp;quot;text1&amp;quot;}]}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&amp;quot;table_contents&amp;quot;:[[{&amp;quot;id&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;text100&amp;quot;},{&amp;quot;id&amp;quot;:101,&amp;quot;description&amp;quot;:&amp;quot;text101&amp;quot;}],{&amp;quot;id&amp;quot;:1,&amp;quot;description&amp;quot;:&amp;quot;text1&amp;quot;}]}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I would really like for someone to show me a quick example if anyone is aware how to do this&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilt4s8", "is_robot_indexable": true, "report_reasons": null, "author": "watery555", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilt4s8/anonymous_struct_or_interface_in_flexible_json/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ilt4s8/anonymous_struct_or_interface_in_flexible_json/", "subreddit_subscribers": 124172, "created_utc": 1599138787.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_58u1yi6h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A tool for ETL and many other jobs developed in Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_iliu1s", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "ETL", "selftext": "This version upgrade the runtime to `go1.14.8`.\n\nhttps://dixer.stgo.do\n\n# New\n\n* New destination: HTML Table.\n* New destination: Markdown Table.\n* New job type `jobsgroup`.\n* New job type `compress`.\n* New job type `decompress`.\n* Ability to execute a job or complete worlflow in defined comma separated list of OS.\n* Allow unescape xml element values with new mapping key `source_xml_unescape`.\n* Allow CDATA in destination XML element value with new key `destination_xml_cdata`.\n* Added optimized binaries for POWER9 in archs ppc64 and ppc64le and Operative Systems Linux and AIX.\n* Added experimental binary RISC-V 64 bit for Linux. (Without support for FirebirdSQL).\n\n# Enhancement\n\n* Output of job type `process` is saved when timeout exceeded or unexpected exit code is returned.\n* Job type `for` now is called `bucle`. The old name is deprecated. This version is the last to support it.\n* Performance improvements in job type `delay`.\n* The `custom_duration` key in `delay` job type can accept the duration doesn't matter the order of units.\n* Performance improvements inserting in Oracle table when there is a destination column with data type `INTERVAL DAY TO SECOND`.\n\n# Bug Fixes\n\n* Solved: XML destination values weren't escaped. Now this is the default behavior.\n* Fixed when output of job type `process` is blank in some cases.\n\n# Libraries upgrades\n\n* FirebirdSQL driver upgraded to commit [0cfab755829a](https://github.com/nakagami/firebirdsql/tree/0cfab755829a)\n* go-toml library upgraded to version [v1.8.0](https://github.com/pelletier/go-toml/tree/v1.8.0)\n* SQLite3 driver upgraded to version [v1.14.2](https://github.com/mattn/go-sqlite3/tree/v1.14.2)\n* go-simple-mail library upgraded to version [v2.5.1](https://github.com/xhit/go-simple-mail/tree/v2.5.1)\n* xml-stream-parser library upgraded to version [v1.4.0](https://github.com/tamerh/xml-stream-parser/tree/v1.4.0)\n* ftp library upgraded to commit [39e3779af0db](https://github.com/jlaffaye/ftp/tree/39e3779af0db)\n* Excelize library upgraded to version [v2.3.0](https://github.com/360EntSecGroup-Skylar/excelize/tree/v2.3.0)\n* copy library upgraded to version [v1.2.0](https://github.com/otiai10/copy/tree/v1.2.0)\n* go-str2duration upgraded to version [v2.0.0](https://github.com/xhit/go-str2duration/tree/v2.0.0)\n* gosoap library upgraded to commit [49156ec557](https://github.com/tiaguinho/gosoap/tree/49156ec55791ac44b1ab7ceef73cace3f4b1a752)", "author_fullname": "t2_58u1yi6h", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Dixer v1.1.0 is out!!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ETL", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_il76z7", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599083618.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ETL", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This version upgrade the runtime to &lt;code&gt;go1.14.8&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://dixer.stgo.do\"&gt;https://dixer.stgo.do&lt;/a&gt;&lt;/p&gt;\n\n&lt;h1&gt;New&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;New destination: HTML Table.&lt;/li&gt;\n&lt;li&gt;New destination: Markdown Table.&lt;/li&gt;\n&lt;li&gt;New job type &lt;code&gt;jobsgroup&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;New job type &lt;code&gt;compress&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;New job type &lt;code&gt;decompress&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Ability to execute a job or complete worlflow in defined comma separated list of OS.&lt;/li&gt;\n&lt;li&gt;Allow unescape xml element values with new mapping key &lt;code&gt;source_xml_unescape&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Allow CDATA in destination XML element value with new key &lt;code&gt;destination_xml_cdata&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Added optimized binaries for POWER9 in archs ppc64 and ppc64le and Operative Systems Linux and AIX.&lt;/li&gt;\n&lt;li&gt;Added experimental binary RISC-V 64 bit for Linux. (Without support for FirebirdSQL).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1&gt;Enhancement&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Output of job type &lt;code&gt;process&lt;/code&gt; is saved when timeout exceeded or unexpected exit code is returned.&lt;/li&gt;\n&lt;li&gt;Job type &lt;code&gt;for&lt;/code&gt; now is called &lt;code&gt;bucle&lt;/code&gt;. The old name is deprecated. This version is the last to support it.&lt;/li&gt;\n&lt;li&gt;Performance improvements in job type &lt;code&gt;delay&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;custom_duration&lt;/code&gt; key in &lt;code&gt;delay&lt;/code&gt; job type can accept the duration doesn&amp;#39;t matter the order of units.&lt;/li&gt;\n&lt;li&gt;Performance improvements inserting in Oracle table when there is a destination column with data type &lt;code&gt;INTERVAL DAY TO SECOND&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1&gt;Bug Fixes&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Solved: XML destination values weren&amp;#39;t escaped. Now this is the default behavior.&lt;/li&gt;\n&lt;li&gt;Fixed when output of job type &lt;code&gt;process&lt;/code&gt; is blank in some cases.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1&gt;Libraries upgrades&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;FirebirdSQL driver upgraded to commit &lt;a href=\"https://github.com/nakagami/firebirdsql/tree/0cfab755829a\"&gt;0cfab755829a&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;go-toml library upgraded to version &lt;a href=\"https://github.com/pelletier/go-toml/tree/v1.8.0\"&gt;v1.8.0&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;SQLite3 driver upgraded to version &lt;a href=\"https://github.com/mattn/go-sqlite3/tree/v1.14.2\"&gt;v1.14.2&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;go-simple-mail library upgraded to version &lt;a href=\"https://github.com/xhit/go-simple-mail/tree/v2.5.1\"&gt;v2.5.1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;xml-stream-parser library upgraded to version &lt;a href=\"https://github.com/tamerh/xml-stream-parser/tree/v1.4.0\"&gt;v1.4.0&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;ftp library upgraded to commit &lt;a href=\"https://github.com/jlaffaye/ftp/tree/39e3779af0db\"&gt;39e3779af0db&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Excelize library upgraded to version &lt;a href=\"https://github.com/360EntSecGroup-Skylar/excelize/tree/v2.3.0\"&gt;v2.3.0&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;copy library upgraded to version &lt;a href=\"https://github.com/otiai10/copy/tree/v1.2.0\"&gt;v1.2.0&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;go-str2duration upgraded to version &lt;a href=\"https://github.com/xhit/go-str2duration/tree/v2.0.0\"&gt;v2.0.0&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;gosoap library upgraded to commit &lt;a href=\"https://github.com/tiaguinho/gosoap/tree/49156ec55791ac44b1ab7ceef73cace3f4b1a752\"&gt;49156ec557&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2r4rr", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "il76z7", "is_robot_indexable": true, "report_reasons": null, "author": "s_t_g_o", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ETL/comments/il76z7/dixer_v110_is_out/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ETL/comments/il76z7/dixer_v110_is_out/", "subreddit_subscribers": 4309, "created_utc": 1599054818.0, "num_crossposts": 1, "media": null, "is_video": false}], "created": 1599120602.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ETL", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "/r/ETL/comments/il76z7/dixer_v110_is_out/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iliu1s", "is_robot_indexable": true, "report_reasons": null, "author": "s_t_g_o", "discussion_type": null, "num_comments": 7, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_il76z7", "author_flair_text_color": null, "permalink": "/r/golang/comments/iliu1s/a_tool_for_etl_and_many_other_jobs_developed_in_go/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/ETL/comments/il76z7/dixer_v110_is_out/", "subreddit_subscribers": 124172, "created_utc": 1599091802.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello I'm having a hard time getting my TLS certificates on a freshly installed debian 10 VPS.\n\nDomain name is \"deiz.fr\".\n\nUsing echo atm, following the most basic example from their websites :\n\n```\n\ne.AutoTLSManager.Cache\u00a0=\u00a0autocert.DirCache(\"/var/www/.cache\")  \ne.Logger.Fatal(e.StartAutoTLS(\":443\"))\n\n```\n\n\nThe server starts, but whenever I logged to the domain I get this error message :\n&gt; http: TLS handshake error from 31.33.213.24:59575: acme/autocert: unable to satisfy  https://acme-v02.api.letsencrypt.org/acme/authz-v3/6956493770\" for domain \"deiz.fr\": no viable challenge type found\n\nI built a minimum example equivalent with gorilla and I manage to get the certificate :\n\n```\nfunc main() {\n\trouter := mux.NewRouter()\n\trouter.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n\t\tfmt.Fprintf(w, \"Requested with TLS certificates\")\n\t})\n\tdataDir := \"/var/www/.cache/certificates\"\n\tcertManager := &amp;autocert.Manager{\n\t\tPrompt:     autocert.AcceptTOS,\n\t\tHostPolicy: autocert.HostWhitelist(\"deiz.fr\", \"www.deiz.fr\"),\n\t\tCache:      autocert.DirCache(dataDir),\n\t}\n\tserver := &amp;http.Server{\n\t\tHandler:   router,\n\t\tAddr:      \":https\",\n\t\tTLSConfig: &amp;tls.Config{GetCertificate: certManager.GetCertificate},\n\t}\n\tgo http.ListenAndServe(\":80\", certManager.HTTPHandler(nil))\n\tserver.ListenAndServeTLS(\"\", \"\")\n}\n\n```\n\nIs there something I am missing with echo ?", "author_fullname": "t2_9x47q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Getting TLS certificates with echo", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_ilqigb", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1599128657.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1599155702.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello I&amp;#39;m having a hard time getting my TLS certificates on a freshly installed debian 10 VPS.&lt;/p&gt;\n\n&lt;p&gt;Domain name is &amp;quot;deiz.fr&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Using echo atm, following the most basic example from their websites :&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;e.AutoTLSManager.Cache\u00a0=\u00a0autocert.DirCache(&amp;quot;/var/www/.cache&amp;quot;)&lt;br/&gt;\ne.Logger.Fatal(e.StartAutoTLS(&amp;quot;:443&amp;quot;))&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;The server starts, but whenever I logged to the domain I get this error message :&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;http: TLS handshake error from 31.33.213.24:59575: acme/autocert: unable to satisfy  &lt;a href=\"https://acme-v02.api.letsencrypt.org/acme/authz-v3/6956493770\"&gt;https://acme-v02.api.letsencrypt.org/acme/authz-v3/6956493770&lt;/a&gt;&amp;quot; for domain &amp;quot;deiz.fr&amp;quot;: no viable challenge type found&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I built a minimum example equivalent with gorilla and I manage to get the certificate :&lt;/p&gt;\n\n&lt;p&gt;```\nfunc main() {\n    router := mux.NewRouter()\n    router.HandleFunc(&amp;quot;/&amp;quot;, func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprintf(w, &amp;quot;Requested with TLS certificates&amp;quot;)\n    })\n    dataDir := &amp;quot;/var/www/.cache/certificates&amp;quot;\n    certManager := &amp;amp;autocert.Manager{\n        Prompt:     autocert.AcceptTOS,\n        HostPolicy: autocert.HostWhitelist(&amp;quot;deiz.fr&amp;quot;, &amp;quot;&lt;a href=\"http://www.deiz.fr%22\"&gt;www.deiz.fr&amp;quot;&lt;/a&gt;),\n        Cache:      autocert.DirCache(dataDir),\n    }\n    server := &amp;amp;http.Server{\n        Handler:   router,\n        Addr:      &amp;quot;:https&amp;quot;,\n        TLSConfig: &amp;amp;tls.Config{GetCertificate: certManager.GetCertificate},\n    }\n    go http.ListenAndServe(&amp;quot;:80&amp;quot;, certManager.HTTPHandler(nil))\n    server.ListenAndServeTLS(&amp;quot;&amp;quot;, &amp;quot;&amp;quot;)\n}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;Is there something I am missing with echo ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ilqigb", "is_robot_indexable": true, "report_reasons": null, "author": "Poimu", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/ilqigb/getting_tls_certificates_with_echo/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/ilqigb/getting_tls_certificates_with_echo/", "subreddit_subscribers": 124172, "created_utc": 1599126902.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ilqigb", "before": null}}