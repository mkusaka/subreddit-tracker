{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_5ydwf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Virtual Go Meetup - Come learn about WebRTC and how you can build sub-second decentralized real-time communications software!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fs6lrc", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 83, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 83, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585658733.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "meetup.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fs6lrc", "is_robot_indexable": true, "report_reasons": null, "author": "Sean-Der", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fs6lrc/virtual_go_meetup_come_learn_about_webrtc_and_how/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.meetup.com/golang/events/269676725/", "subreddit_subscribers": 107418, "created_utc": 1585629933.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_2sp9p1p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "An engineer who uses Go and Rust details when he likes to use each", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_frs5av", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 180, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 180, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585608581.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "dmv.myhatchpad.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "frs5av", "is_robot_indexable": true, "report_reasons": null, "author": "HatchDMV", "discussion_type": null, "num_comments": 73, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/frs5av/an_engineer_who_uses_go_and_rust_details_when_he/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://dmv.myhatchpad.com/insight/choosing-between-rust-or-go/", "subreddit_subscribers": 107418, "created_utc": 1585579781.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi.\n\nI struggle to understand how to deserialize json to my types\n\nConsider the flowing:\n\n```\ntype Car struct {\n\tBrand string `json:\"brand\"`\n\tModel string `json:\"model\"`\n}\n\ntype Entry struct {\n\tCar\n\tColor string `json:\"color\"`\n}\n\n```\nThe folowing json is deserialized fine:\n\n```\n{\"brand\":\"Nissan\",\"model\":\"Sunny\",\"color\":\"white\"}\n```\n\nHowever, when Car have a custom unmarshalJSON function, the field Color wont be set.\n\nHere is an example: https://play.golang.org/p/dEIVnJctykV\n\nI can probably find ways around this, but I am curios why this not works as expected. (or why I should expect this not to work :)\n\nbr.", "author_fullname": "t2_e1b119c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "unmarshal and anonymus strut in struct", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fscqz0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585689479.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi.&lt;/p&gt;\n\n&lt;p&gt;I struggle to understand how to deserialize json to my types&lt;/p&gt;\n\n&lt;p&gt;Consider the flowing:&lt;/p&gt;\n\n&lt;p&gt;``&lt;code&gt;\ntype Car struct {\n    Brand string&lt;/code&gt;json:&amp;quot;brand&amp;quot;&lt;code&gt;\n    Model string&lt;/code&gt;json:&amp;quot;model&amp;quot;`\n}&lt;/p&gt;\n\n&lt;p&gt;type Entry struct {\n    Car\n    Color string &lt;code&gt;json:&amp;quot;color&amp;quot;&lt;/code&gt;\n}&lt;/p&gt;\n\n&lt;p&gt;```\nThe folowing json is deserialized fine:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n{&amp;quot;brand&amp;quot;:&amp;quot;Nissan&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Sunny&amp;quot;,&amp;quot;color&amp;quot;:&amp;quot;white&amp;quot;}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;However, when Car have a custom unmarshalJSON function, the field Color wont be set.&lt;/p&gt;\n\n&lt;p&gt;Here is an example: &lt;a href=\"https://play.golang.org/p/dEIVnJctykV\"&gt;https://play.golang.org/p/dEIVnJctykV&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I can probably find ways around this, but I am curios why this not works as expected. (or why I should expect this not to work :)&lt;/p&gt;\n\n&lt;p&gt;br.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fscqz0", "is_robot_indexable": true, "report_reasons": null, "author": "kjell_k", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fscqz0/unmarshal_and_anonymus_strut_in_struct/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fscqz0/unmarshal_and_anonymus_strut_in_struct/", "subreddit_subscribers": 107418, "created_utc": 1585660679.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3smne", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go Micro v2.4.0 release is out - The Go microservices development framework", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fsb58y", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585682257.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsb58y", "is_robot_indexable": true, "report_reasons": null, "author": "chuhnk", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fsb58y/go_micro_v240_release_is_out_the_go_microservices/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/micro/go-micro/releases/tag/v2.4.0", "subreddit_subscribers": 107418, "created_utc": 1585653457.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Ever got stuck with marshalling structs in [\\#Golang](https://twitter.com/hashtag/Golang?src=hashtag_click)? \n\nPenned a new blog on this problem!!  This will surely be useful for you someday.\n\nDo give it a read :)\n\nFeedbacks and improvements are welcome.\n\n[https://mohitkhare.me/blog/marshal-structs-golang/](https://mohitkhare.me/blog/marshal-structs-golang/)", "author_fullname": "t2_13sqqiqu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Marshal structs the right way: Golang", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fs8fkx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "author_cakeday": true, "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585667803.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Ever got stuck with marshalling structs in &lt;a href=\"https://twitter.com/hashtag/Golang?src=hashtag_click\"&gt;#Golang&lt;/a&gt;? &lt;/p&gt;\n\n&lt;p&gt;Penned a new blog on this problem!!  This will surely be useful for you someday.&lt;/p&gt;\n\n&lt;p&gt;Do give it a read :)&lt;/p&gt;\n\n&lt;p&gt;Feedbacks and improvements are welcome.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://mohitkhare.me/blog/marshal-structs-golang/\"&gt;https://mohitkhare.me/blog/marshal-structs-golang/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fs8fkx", "is_robot_indexable": true, "report_reasons": null, "author": "mkfeuhrer", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fs8fkx/marshal_structs_the_right_way_golang/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fs8fkx/marshal_structs_the_right_way_golang/", "subreddit_subscribers": 107418, "created_utc": 1585639003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_qnt5p69", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "hashicorp/go-connlimit: A simple library that allows a network server to limit how may concurrent connections it supports from each client IP.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fsaugv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585680774.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsaugv", "is_robot_indexable": true, "report_reasons": null, "author": "mastabadtomm", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fsaugv/hashicorpgoconnlimit_a_simple_library_that_allows/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/hashicorp/go-connlimit", "subreddit_subscribers": 107418, "created_utc": 1585651974.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_upj0q40", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Minimal push-pull service based on worker pool", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fs9ly7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585674177.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fs9ly7", "is_robot_indexable": true, "report_reasons": null, "author": "_vardius", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fs9ly7/minimal_pushpull_service_based_on_worker_pool/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/vardius/pushpull", "subreddit_subscribers": 107418, "created_utc": 1585645377.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "[https://stackoverflow.com/questions/60950014/split-a-text-file-into-two-text-files-of-equal-size-in-order](https://stackoverflow.com/questions/60950014/split-a-text-file-into-two-text-files-of-equal-size-in-order) \n\n`func WordbyWordScan()\u00a0{\u00a0//A\u00a0function\u00a0for\u00a0dividing\u00a0a\u00a0text\u00a0file\u00a0into\u00a0two\u00a0file\u00a0texts.file,\u00a0err :=\u00a0os.Open(\"file.txt.txt\")\u00a0//Open\u00a0a\u00a0file\u00a0for\u00a0doing\u00a0operation\u00a0on\u00a0it.if\u00a0err\u00a0!= nil\u00a0{log.Fatal(err)}file1,\u00a0err :=\u00a0os.Create(\"file1.txt.txt\")\u00a0//Create\u00a0a\u00a0fileif\u00a0err\u00a0!= nil\u00a0{panic(err)}file2,\u00a0err :=\u00a0os.Create(\"file2.txt.txt\")\u00a0//Create\u00a0a\u00a0fileif\u00a0err\u00a0!= nil\u00a0{panic(err)}defer\u00a0file.Close()\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//close\u00a0file\u00a0at\u00a0the\u00a0end.defer\u00a0file1.Close()\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//close\u00a0file\u00a0at\u00a0the\u00a0end.defer\u00a0file2.Close()\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//close\u00a0file\u00a0at\u00a0the\u00a0end.file.Seek(0,\u00a00)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\"Seek\u00a0sets\u00a0the\u00a0offset\u00a0for\u00a0the\u00a0next\u00a0Read\u00a0or\u00a0Write\u00a0on\u00a0file\u00a0to\u00a0offset.\"scanner :=\u00a0bufio.NewScanner(file)\u00a0//\u00a0\"NewScanner\u00a0returns\u00a0a\u00a0new\u00a0Scanner\u00a0to\u00a0read\u00a0from\u00a0file\"scanner.Split(bufio.ScanWords)\u00a0\u00a0\u00a0\u00a0//\u00a0\"Set\u00a0the\u00a0split\u00a0function\u00a0for\u00a0the\u00a0scanning\u00a0operation.\"w := 0for\u00a0scanner.Scan()\u00a0{\u00a0//writing\u00a0to\u00a0file1\u00a0and\u00a0file2var outfile *os.Fileif\u00a0w%2 == 0\u00a0{outfile =\u00a0file1}\u00a0else\u00a0{outfile =\u00a0file2}fmt.Fprintln(outfile,\u00a0scanner.Text())\u00a0//\"Fprintln\u00a0formats\u00a0using\u00a0the\u00a0default\u00a0formats\u00a0for\u00a0its\u00a0operands\u00a0and\u00a0writes\u00a0to\u00a0outfile.\"w++}if err :=\u00a0scanner.Err();\u00a0err\u00a0!= nil\u00a0{log.Fatal(err)}}`\n\nThis code above, split the file.txt word by word instead of splitting the first half of words and then the second half in order. For example, this sentence \u201cPackage bufio implements buffered I/O. It wraps an io.Reader or io.Writer object, creating another object.\u201d should be split like this:\n\nFirst half: \u201cPackage bufio implements buffered I/O. It wraps an io\u201d\n\nSecond half: \u201c.Reader or io.Writer object, creating another object.\u201d\n\nIf anyone has any idea to fix this, I look forward to hearing from you.", "author_fullname": "t2_4q83q4sh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Split a text file into two text files of equal size in order", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_fsbq89", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1585656806.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1585685079.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/60950014/split-a-text-file-into-two-text-files-of-equal-size-in-order\"&gt;https://stackoverflow.com/questions/60950014/split-a-text-file-into-two-text-files-of-equal-size-in-order&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;func WordbyWordScan()\u00a0{\u00a0//A\u00a0function\u00a0for\u00a0dividing\u00a0a\u00a0text\u00a0file\u00a0into\u00a0two\u00a0file\u00a0texts.file,\u00a0err :=\u00a0os.Open(&amp;quot;file.txt.txt&amp;quot;)\u00a0//Open\u00a0a\u00a0file\u00a0for\u00a0doing\u00a0operation\u00a0on\u00a0it.if\u00a0err\u00a0!= nil\u00a0{log.Fatal(err)}file1,\u00a0err :=\u00a0os.Create(&amp;quot;file1.txt.txt&amp;quot;)\u00a0//Create\u00a0a\u00a0fileif\u00a0err\u00a0!= nil\u00a0{panic(err)}file2,\u00a0err :=\u00a0os.Create(&amp;quot;file2.txt.txt&amp;quot;)\u00a0//Create\u00a0a\u00a0fileif\u00a0err\u00a0!= nil\u00a0{panic(err)}defer\u00a0file.Close()\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//close\u00a0file\u00a0at\u00a0the\u00a0end.defer\u00a0file1.Close()\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//close\u00a0file\u00a0at\u00a0the\u00a0end.defer\u00a0file2.Close()\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//close\u00a0file\u00a0at\u00a0the\u00a0end.file.Seek(0,\u00a00)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0&amp;quot;Seek\u00a0sets\u00a0the\u00a0offset\u00a0for\u00a0the\u00a0next\u00a0Read\u00a0or\u00a0Write\u00a0on\u00a0file\u00a0to\u00a0offset.&amp;quot;scanner :=\u00a0bufio.NewScanner(file)\u00a0//\u00a0&amp;quot;NewScanner\u00a0returns\u00a0a\u00a0new\u00a0Scanner\u00a0to\u00a0read\u00a0from\u00a0file&amp;quot;scanner.Split(bufio.ScanWords)\u00a0\u00a0\u00a0\u00a0//\u00a0&amp;quot;Set\u00a0the\u00a0split\u00a0function\u00a0for\u00a0the\u00a0scanning\u00a0operation.&amp;quot;w := 0for\u00a0scanner.Scan()\u00a0{\u00a0//writing\u00a0to\u00a0file1\u00a0and\u00a0file2var outfile *os.Fileif\u00a0w%2 == 0\u00a0{outfile =\u00a0file1}\u00a0else\u00a0{outfile =\u00a0file2}fmt.Fprintln(outfile,\u00a0scanner.Text())\u00a0//&amp;quot;Fprintln\u00a0formats\u00a0using\u00a0the\u00a0default\u00a0formats\u00a0for\u00a0its\u00a0operands\u00a0and\u00a0writes\u00a0to\u00a0outfile.&amp;quot;w++}if err :=\u00a0scanner.Err();\u00a0err\u00a0!= nil\u00a0{log.Fatal(err)}}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This code above, split the file.txt word by word instead of splitting the first half of words and then the second half in order. For example, this sentence \u201cPackage bufio implements buffered I/O. It wraps an io.Reader or io.Writer object, creating another object.\u201d should be split like this:&lt;/p&gt;\n\n&lt;p&gt;First half: \u201cPackage bufio implements buffered I/O. It wraps an io\u201d&lt;/p&gt;\n\n&lt;p&gt;Second half: \u201c.Reader or io.Writer object, creating another object.\u201d&lt;/p&gt;\n\n&lt;p&gt;If anyone has any idea to fix this, I look forward to hearing from you.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fsbq89", "is_robot_indexable": true, "report_reasons": null, "author": "Programmer07", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fsbq89/split_a_text_file_into_two_text_files_of_equal/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/fsbq89/split_a_text_file_into_two_text_files_of_equal/", "subreddit_subscribers": 107418, "created_utc": 1585656279.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_djere", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Goro: A High-level Machine Learning Library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_frrz42", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585607998.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "frrz42", "is_robot_indexable": true, "report_reasons": null, "author": "yahyaheee", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/frrz42/goro_a_highlevel_machine_learning_library/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/aunum/goro", "subreddit_subscribers": 107418, "created_utc": 1585579198.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_ruzijjq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learn Golang Step By Step", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_fs7qqd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1585664230.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "sagarjaybhay.net", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "fs7qqd", "is_robot_indexable": true, "report_reasons": null, "author": "Sagar-Jaybhay", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/fs7qqd/learn_golang_step_by_step/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://sagarjaybhay.net/category/google-go/", "subreddit_subscribers": 107418, "created_utc": 1585635430.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_fs7qqd", "before": null}}