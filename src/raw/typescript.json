{"kind": "Listing", "data": {"modhash": "", "dist": 11, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The monthly thread for people to post openings at their companies.\n\n* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.\n\n* Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards **Please report recruiters or job boards**. \n\n* Only one post per company. \n\n* If it isn't a household name, explain what your company does. Sell it.\n\n* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).\n\n\nCommenters: please don't reply to job posts to complain about something. It's off topic here.\n\nReaders: please only email if you are personally interested in the job. \n\nPosting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)\n\n[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who's hiring Typescript developers - June", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": "monthly-hiring", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_gua247", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Monthly Hiring Thread", "can_mod_post": false, "score": 34, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1590998803.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The monthly thread for people to post openings at their companies.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please only post if you personally are part of the hiring company\u2014no recruiting firms or job boards &lt;strong&gt;Please report recruiters or job boards&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only one post per company. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If it isn&amp;#39;t a household name, explain what your company does. Sell it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Commenters: please don&amp;#39;t reply to job posts to complain about something. It&amp;#39;s off topic here.&lt;/p&gt;\n\n&lt;p&gt;Readers: please only email if you are personally interested in the job. &lt;/p&gt;\n\n&lt;p&gt;Posting top level comments that aren&amp;#39;t job postings, &lt;a href=\"https://i.imgur.com/FxMKfnY.jpg\"&gt;that&amp;#39;s a paddlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/typescript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3AMonthly%2BHiring%2BThread\"&gt;Previous Hiring Threads&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?auto=webp&amp;s=e7ed7da8371b4e16c167355386ca2a5744ead415", "width": 500, "height": 361}, "resolutions": [{"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66a18e0a3c52817ab852fa4b7c250a55c579d165", "width": 108, "height": 77}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2025ba1460e8c8c9834f11cb40ba4e3832a2d3e9", "width": 216, "height": 155}, {"url": "https://external-preview.redd.it/VyGnlbKCiZgJWJ1wbp_MHOxxVM8sKYuGRykp5LnDnGo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3329109c390c2bd989b508c72a7ebf0d2bad3697", "width": 320, "height": 231}], "variants": {}, "id": "L_ccfLuUd62HPSmub7C2gCgZ5motXBmWQ__1MAuL6is"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gua247", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 1, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/typescript/comments/gua247/whos_hiring_typescript_developers_june/", "subreddit_subscribers": 41732, "created_utc": 1590970003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_1qkgaw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A lightweight yet powerful dependency injection framework using modern TypeScript and decorators", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_h0ogq0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.74, "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/5vaMHE4wyxJ7Wi_DPkzM1e-tO7jAZgj_cKEKYzqTFsE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1591864917.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?auto=webp&amp;s=374468de6b4c4ada2cd1225d9360c98a6d603c05", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4aa40ff955edca75f3b5511a1e50120b919b3962", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e5435f35877c832e6742175196fef4e08cbbc695", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/1RK787ruMyFzefTA2Lqd7_wN2dRmYmM2_oqEaWkxm2g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3f00eac514a6bf6b164734f3dcc9726816a5976a", "width": 320, "height": 320}], "variants": {}, "id": "3Z528e4up8IuRIC5XNE-iRzVMsPQvkdNsglDp2osACc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0ogq0", "is_robot_indexable": true, "report_reasons": null, "author": "The_Droide", "discussion_type": null, "num_comments": 24, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0ogq0/a_lightweight_yet_powerful_dependency_injection/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/H1ghBre4k3r/dependory", "subreddit_subscribers": 41732, "created_utc": 1591836117.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Foal TS framework version 1.9 is officially released!\n\n[Foal TS - June release \\(version 1.9\\)](https://preview.redd.it/cbw3ao9078451.png?width=1250&amp;format=png&amp;auto=webp&amp;s=f1281bba1a03e446043f4cc901173ea9cf6a4016)\n\nThis version brings many improvements and fixes bugs.\n\n1. **MongoDB can now be fully used with TypeORM**. The new `fetchMongoDBUser` allows you to retrieve the MongoDB user whether you use sessions or stateless JWTs.\n\n[Authentication with JWT\\/MongoDB\\/TypeORM](https://preview.redd.it/st1vyyzi88451.png?width=363&amp;format=png&amp;auto=webp&amp;s=43047d0979f8707e848186f8142ea81109080ee4)\n\nDocs: [https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start](https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start)\n\n2. **\\[Shortcut\\] The request params and body** are passed as **second** and **third arguments** of the controllers.\n\n[Quick access to the request body and params](https://preview.redd.it/y12146c998451.png?width=525&amp;format=png&amp;auto=webp&amp;s=1bd65f3567295334f29622b0346c1a3fe6f585d6)\n\nDocs: [https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments](https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments)\n\n3. \\[CLI\\] The CLI `generate` command has been extended to support subdirectories. You can now fully generate your controller (or service) architecture from the command line\n\n[CLI commands](https://preview.redd.it/rbctunjr98451.png?width=649&amp;format=png&amp;auto=webp&amp;s=4f98058b17d5efce6efd22fbd12e0b4d87aeab26)\n\n[Architecture generated](https://preview.redd.it/5vfxegbt98451.png?width=651&amp;format=png&amp;auto=webp&amp;s=3173ecd8a3925847c0f2f38cc572045345192821)\n\n[app.controller.ts updated](https://preview.redd.it/hnjls0vq98451.png?width=645&amp;format=png&amp;auto=webp&amp;s=71cd1772b42804a0981cbdb8aa7ceae981d0fa30)\n\n[api.controller.ts generated](https://preview.redd.it/gbiqvaos98451.png?width=644&amp;format=png&amp;auto=webp&amp;s=4ab3e7f480a60c528236976fce39170725c2e743)\n\nDocs: [https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller](https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller)\n\nFoal, in a few words, it's a **Node.js framework**:\n\n* written in **TypeScript**\n* provided **with batteries included** (Auth, OpenAPI, GraphQL, ORM, CLI, scripts, Cloud file storage, etc)\n* and with a **simple and intuitive architecture** (no magic, no over-engineering).\n\nAnd the must: it has more than 11,000 lines of documentation.\n\n[https://foalts.org](https://foalts.org/)\n\n[https://github.com/FoalTS/foal](https://github.com/FoalTS/foal)\n\n[https://foalts.gitbook.io/docs/](https://foalts.gitbook.io/docs/)\n\n\\#TypeScript #JavaScript #NodeJS #FoalTS #CLI #Auth #Authentification #JWT", "author_fullname": "t2_2bvst1jn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Foal TS - June release (version 1.9) - Auth with MongoDB/TypeORM, auth with REST APIs, handy shortcuts, CLI improvements", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "top_awarded_type": null, "hide_score": false, "media_metadata": {"hnjls0vq98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 21, "x": 108, "u": "https://preview.redd.it/hnjls0vq98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=45aeef65bbae103c2b93a55d6c5eff75365f19f6"}, {"y": 43, "x": 216, "u": "https://preview.redd.it/hnjls0vq98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=4d92e397352cfe1522ca4ab09645b7a85f233367"}, {"y": 64, "x": 320, "u": "https://preview.redd.it/hnjls0vq98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=fc8328909649ac1230b94b44ac5b463aa9f82039"}, {"y": 129, "x": 640, "u": "https://preview.redd.it/hnjls0vq98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=0099a648235b58a75818c19ea92217bf76fba9b7"}], "s": {"y": 131, "x": 645, "u": "https://preview.redd.it/hnjls0vq98451.png?width=645&amp;format=png&amp;auto=webp&amp;s=71cd1772b42804a0981cbdb8aa7ceae981d0fa30"}, "id": "hnjls0vq98451"}, "5vfxegbt98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 35, "x": 108, "u": "https://preview.redd.it/5vfxegbt98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=195d2a66b5a87880863ef53c35f0ad47acc38b71"}, {"y": 71, "x": 216, "u": "https://preview.redd.it/5vfxegbt98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=b59600c398ff4872dfce0b111827d534c0e00518"}, {"y": 106, "x": 320, "u": "https://preview.redd.it/5vfxegbt98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=61f7df281e5a3ac6434d9e0327aaf8b2e629e059"}, {"y": 212, "x": 640, "u": "https://preview.redd.it/5vfxegbt98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=1e95f027dd64aaf3ace55606ac3f858a6eed530a"}], "s": {"y": 216, "x": 651, "u": "https://preview.redd.it/5vfxegbt98451.png?width=651&amp;format=png&amp;auto=webp&amp;s=3173ecd8a3925847c0f2f38cc572045345192821"}, "id": "5vfxegbt98451"}, "y12146c998451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 37, "x": 108, "u": "https://preview.redd.it/y12146c998451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=c56817b08526dc68ff42a68290ce2d48595f6cfb"}, {"y": 75, "x": 216, "u": "https://preview.redd.it/y12146c998451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=01523a0a2882fc066eb393fe52b5628f628d5928"}, {"y": 111, "x": 320, "u": "https://preview.redd.it/y12146c998451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=6e5d3eddd152f9f0702bf4c989a07b0b146d1e01"}], "s": {"y": 183, "x": 525, "u": "https://preview.redd.it/y12146c998451.png?width=525&amp;format=png&amp;auto=webp&amp;s=1bd65f3567295334f29622b0346c1a3fe6f585d6"}, "id": "y12146c998451"}, "rbctunjr98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 12, "x": 108, "u": "https://preview.redd.it/rbctunjr98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=21c12777a590204270e4c6ee1351be42df5f18c7"}, {"y": 24, "x": 216, "u": "https://preview.redd.it/rbctunjr98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=556c2305b7f64bc0039836a2f3184578a66ca6e6"}, {"y": 36, "x": 320, "u": "https://preview.redd.it/rbctunjr98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=56caa78fd50b311b98f4169bfcdec4c70ace8dbf"}, {"y": 73, "x": 640, "u": "https://preview.redd.it/rbctunjr98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=4f670b64fc4d19a3440000ff764076c21720acb8"}], "s": {"y": 75, "x": 649, "u": "https://preview.redd.it/rbctunjr98451.png?width=649&amp;format=png&amp;auto=webp&amp;s=4f98058b17d5efce6efd22fbd12e0b4d87aeab26"}, "id": "rbctunjr98451"}, "cbw3ao9078451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 60, "x": 108, "u": "https://preview.redd.it/cbw3ao9078451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=84f7561792c438712efc596f1b04d216ac2f7227"}, {"y": 121, "x": 216, "u": "https://preview.redd.it/cbw3ao9078451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=ac5e827b861719d2f6388ca99a31483562a0ac42"}, {"y": 180, "x": 320, "u": "https://preview.redd.it/cbw3ao9078451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=74209823e233e34db4c2f2fca016d450ccf02d44"}, {"y": 360, "x": 640, "u": "https://preview.redd.it/cbw3ao9078451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=9309c950ebeeab2a1b1f7513ba2ead80892deab4"}, {"y": 540, "x": 960, "u": "https://preview.redd.it/cbw3ao9078451.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=3a9829541fa2b1a23dd9bb3eea76cd14eda42f36"}, {"y": 608, "x": 1080, "u": "https://preview.redd.it/cbw3ao9078451.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2059cee0aae551967eaa6459769126ac2a23df85"}], "s": {"y": 704, "x": 1250, "u": "https://preview.redd.it/cbw3ao9078451.png?width=1250&amp;format=png&amp;auto=webp&amp;s=f1281bba1a03e446043f4cc901173ea9cf6a4016"}, "id": "cbw3ao9078451"}, "st1vyyzi88451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 35, "x": 108, "u": "https://preview.redd.it/st1vyyzi88451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=5788d7f87ff9ed420f3ab2de4ec961cb2cf3cecf"}, {"y": 70, "x": 216, "u": "https://preview.redd.it/st1vyyzi88451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=2e943146d1691ce919db2c9f41927b16ad933fbe"}, {"y": 104, "x": 320, "u": "https://preview.redd.it/st1vyyzi88451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=468b759b78730ce27f1e4592a2909f1f7d377443"}], "s": {"y": 118, "x": 363, "u": "https://preview.redd.it/st1vyyzi88451.png?width=363&amp;format=png&amp;auto=webp&amp;s=43047d0979f8707e848186f8142ea81109080ee4"}, "id": "st1vyyzi88451"}, "gbiqvaos98451": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 21, "x": 108, "u": "https://preview.redd.it/gbiqvaos98451.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=6f747a71f6347115f5837b3625950d46821fcf5a"}, {"y": 43, "x": 216, "u": "https://preview.redd.it/gbiqvaos98451.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=dbf56398360366ee5c8509e8cb82a14a42f91c05"}, {"y": 64, "x": 320, "u": "https://preview.redd.it/gbiqvaos98451.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=db4ffc6a6fb2030196f0d39952d306059cc5c052"}, {"y": 129, "x": 640, "u": "https://preview.redd.it/gbiqvaos98451.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=ee6a45ac936082a6045180904d187cbd330cf40a"}], "s": {"y": 130, "x": 644, "u": "https://preview.redd.it/gbiqvaos98451.png?width=644&amp;format=png&amp;auto=webp&amp;s=4ab3e7f480a60c528236976fce39170725c2e743"}, "id": "gbiqvaos98451"}}, "name": "t3_h0tzhe", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.72, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/YEbJl_XlpFlD_-dBjskJ-HsvEnL9fs1NCseekRZeO3g.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1591887114.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Foal TS framework version 1.9 is officially released!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/cbw3ao9078451.png?width=1250&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f1281bba1a03e446043f4cc901173ea9cf6a4016\"&gt;Foal TS - June release (version 1.9)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This version brings many improvements and fixes bugs.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;MongoDB can now be fully used with TypeORM&lt;/strong&gt;. The new &lt;code&gt;fetchMongoDBUser&lt;/code&gt; allows you to retrieve the MongoDB user whether you use sessions or stateless JWTs.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/st1vyyzi88451.png?width=363&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=43047d0979f8707e848186f8142ea81109080ee4\"&gt;Authentication with JWT/MongoDB/TypeORM&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start\"&gt;https://foalts.gitbook.io/docs/topic-guides/authentication-and-access-control/quick-start&lt;/a&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;[Shortcut] The request params and body&lt;/strong&gt; are passed as &lt;strong&gt;second&lt;/strong&gt; and &lt;strong&gt;third arguments&lt;/strong&gt; of the controllers.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/y12146c998451.png?width=525&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=1bd65f3567295334f29622b0346c1a3fe6f585d6\"&gt;Quick access to the request body and params&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments\"&gt;https://foalts.gitbook.io/docs/topic-guides/architecture/controllers#the-controller-method-arguments&lt;/a&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;[CLI] The CLI &lt;code&gt;generate&lt;/code&gt; command has been extended to support subdirectories. You can now fully generate your controller (or service) architecture from the command line&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/rbctunjr98451.png?width=649&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4f98058b17d5efce6efd22fbd12e0b4d87aeab26\"&gt;CLI commands&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/5vfxegbt98451.png?width=651&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3173ecd8a3925847c0f2f38cc572045345192821\"&gt;Architecture generated&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/hnjls0vq98451.png?width=645&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=71cd1772b42804a0981cbdb8aa7ceae981d0fa30\"&gt;app.controller.ts updated&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/gbiqvaos98451.png?width=644&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4ab3e7f480a60c528236976fce39170725c2e743\"&gt;api.controller.ts generated&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller\"&gt;https://foalts.gitbook.io/docs/topic-guides/cli-and-development-environment/code-generation#create-a-controller&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Foal, in a few words, it&amp;#39;s a &lt;strong&gt;Node.js framework&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;written in &lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;provided &lt;strong&gt;with batteries included&lt;/strong&gt; (Auth, OpenAPI, GraphQL, ORM, CLI, scripts, Cloud file storage, etc)&lt;/li&gt;\n&lt;li&gt;and with a &lt;strong&gt;simple and intuitive architecture&lt;/strong&gt; (no magic, no over-engineering).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And the must: it has more than 11,000 lines of documentation.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://foalts.org/\"&gt;https://foalts.org&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/FoalTS/foal\"&gt;https://github.com/FoalTS/foal&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://foalts.gitbook.io/docs/\"&gt;https://foalts.gitbook.io/docs/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;#TypeScript #JavaScript #NodeJS #FoalTS #CLI #Auth #Authentification #JWT&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?auto=webp&amp;s=f8c1f999cc0e0e955f40a01b6e01473b5faa64cc", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d9712ade15f0e4c54aeff09da396c851b70265a7", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d9d704f94a1e1c9c50c9241009df0bd3b7fc0ae8", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=309e5708c93bdbbe28e56ff1e7e0c24ac01e1e04", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d2199c5e3c4b83fa47e45702b2be6408472c0efe", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=22335d0d8c66d19f6401b28ee65de40338ffd8bf", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/bgDQMp0ZDW3-G8bcKgluN6EFy1prWJWyph_24n6-p70.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=be5b22f5a12ee20adf1796d2a3bf7fa27785dd92", "width": 1080, "height": 567}], "variants": {}, "id": "KesvDeCiMQROF3n5xSH4CkvRvd3gXI_WE0qSKWlCYak"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0tzhe", "is_robot_indexable": true, "report_reasons": null, "author": "Loic_Poullain", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0tzhe/foal_ts_june_release_version_19_auth_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h0tzhe/foal_ts_june_release_version_19_auth_with/", "subreddit_subscribers": 41732, "created_utc": 1591858314.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I'm trying to pass a 1st class function to a another function while have the generic inferred without calling it, but I can't get typescript to infer the type, only if I explicitly call the function.\n\n    sql.parseTable = &lt;T&gt;(res: QueryResult): T[] =&gt;\n        pipe(sqlResRows, map(convertToCamelCase))(res)\n    \n    const songs = await sql.query({\n        sql: SELECT_SONGS,\n        parse: sql.parseTable, // in this line the generic can't be inferred\n        parse: res =&gt; sql.parseTable(res), // the generic correctly inferred\n    })\n\nI would prefer the first one as it's cleaner and would mean i don't have to change all my graphql resolvers, but the generic can't be inferred.\n\nAny ideas?\n\nTS: 3.9.5, Node: 14.4.0", "author_fullname": "t2_63nye6ip", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Passing generic to function without calling it (1st class function)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h0qrqx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591873422.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to pass a 1st class function to a another function while have the generic inferred without calling it, but I can&amp;#39;t get typescript to infer the type, only if I explicitly call the function.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sql.parseTable = &amp;lt;T&amp;gt;(res: QueryResult): T[] =&amp;gt;\n    pipe(sqlResRows, map(convertToCamelCase))(res)\n\nconst songs = await sql.query({\n    sql: SELECT_SONGS,\n    parse: sql.parseTable, // in this line the generic can&amp;#39;t be inferred\n    parse: res =&amp;gt; sql.parseTable(res), // the generic correctly inferred\n})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I would prefer the first one as it&amp;#39;s cleaner and would mean i don&amp;#39;t have to change all my graphql resolvers, but the generic can&amp;#39;t be inferred.&lt;/p&gt;\n\n&lt;p&gt;Any ideas?&lt;/p&gt;\n\n&lt;p&gt;TS: 3.9.5, Node: 14.4.0&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0qrqx", "is_robot_indexable": true, "report_reasons": null, "author": "olyop", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0qrqx/passing_generic_to_function_without_calling_it/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h0qrqx/passing_generic_to_function_without_calling_it/", "subreddit_subscribers": 41732, "created_utc": 1591844622.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "", "author_fullname": "t2_17fq9i", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Can i use typescript in express.js with functional programming, will everything works fine ?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h0eqsx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591836610.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0eqsx", "is_robot_indexable": true, "report_reasons": null, "author": "Saiken97", "discussion_type": null, "num_comments": 29, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0eqsx/can_i_use_typescript_in_expressjs_with_functional/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h0eqsx/can_i_use_typescript_in_expressjs_with_functional/", "subreddit_subscribers": 41732, "created_utc": 1591807810.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "The code:\n\nThe main file:\n\n`server.ts`\n\n    import * as Fastify from \"fastify\";\n    import * as Dotenv from \"dotenv\";\n    import * as mongoose from \"mongoose\";\n    import routes from \"./routes\";\n    import fastify = require(\"fastify\");\n    \n    Dotenv.config();\n    \n    const server = Fastify({ logger: true });\n    \n    server.register(routes);\n    \n    const connectToMongo = async (): Promise&lt;void&gt; =&gt; {\n      try {\n        await mongoose.connect(String(process.env.MONGODB_URI), {\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          useCreateIndex: true,\n        });\n      } catch (err) {\n        throw err;\n      }\n    };\n    \n    const startServer = async (): Promise&lt;void&gt; =&gt; {\n      try {\n        await server.listen(Number(process.env.PORT), process.env.ADDR);\n        server.log.info(`Started Server @ ${process.env.ADDR}:${process.env.PORT}`);\n        await connectToMongo();\n        server.log.info(\"Connected to Mongo...\");\n      } catch (err) {\n        server.log.error(err);\n        process.exit(-1);\n      }\n    };\n    \n    startServer();\n\nA sample schema:\n\n`schema/task.ts`\n\n    import { createSchema, Type, typedModel } from \"ts-mongoose\";\n    \n    const taskSchema = createSchema(\n      {\n        entryDate: Type.date({ required: true }),\n        particulars: Type.string({ required: true }),\n        finishDate: Type.date({ required: false }),\n      },\n      { collection: \"Task\", timestamps: true }\n    );\n    \n    export default taskSchema;\n\nModels:\n\n`models.ts`\n\n    import { typedModel } from \"ts-mongoose\";\n    import aggregateSchema from \"./schemata/aggregate\";\n    import taskSchema from \"./schemata/task\";\n    import transactionSchema from \"./schemata/transaction\";\n    \n    const models = {\n      Aggregate: typedModel(\"Aggregate\", aggregateSchema),\n      Task: typedModel(\"Task\", taskSchema),\n      Transaction: typedModel(\"Transaction\", transactionSchema),\n    };\n    \n    export default models;\n\nRoutes file (WIP):\n\n`route.ts`\n\n    import * as Fastify from \"fastify\";\n    import { Server, IncomingMessage, ServerResponse } from \"http\";\n    import handlers from \"./handlers\";\n    \n    const routes = (\n      server: Fastify.FastifyInstance&lt;Server, IncomingMessage, ServerResponse&gt;,\n      opts: Fastify.RegisterOptions&lt;Server, IncomingMessage, ServerResponse&gt;,\n      done: (err?: Fastify.FastifyError | undefined) =&gt; void\n    ): void =&gt; {\n      server.get(\"/transaction\", opts, handlers.getTransactionHandler);\n    \n      server.post(\"/transaction\", opts, async (req, res) =&gt; {});\n    \n      server.get(\"/aggregate\", opts, async () =&gt; {});\n    \n      server.get(\"/task\", opts, async () =&gt; {});\n      server.post(\"/task\", opts, async () =&gt; {});\n      server.put(\"/task/:id\", opts, async () =&gt; {});\n    \n      done();\n    };\n    \n    export default routes;\n\nHandlers file (WIP):\n\n`handlers.ts`\n\n    import { FastifyRequest, FastifyReply } from \"fastify\";\n    import { ServerResponse } from \"http\";\n    \n    import models from \"./models\";\n    const { Aggregate, Task, Transaction } = models;\n    \n    const handlers = {\n      getTransactionHandler: async (\n        req: FastifyRequest,\n        _: FastifyReply&lt;ServerResponse&gt;\n      ) =&gt; {\n        const x = new Task({ entryDate: Date() });\n        await x.save();\n        return \"Hello\";\n      },\n    };\n    \n    export default handlers;\n\nIn `handlers.ts`, when I instantiate a `Task` object without one of the required properties, no error is thrown at compile time. Error is thrown at runtime. Also, intellisense/autocomplete of VS Code does not work with the property names. Is that expected behaviour? I expected almost class-like typechecking behaviour, like when we instantiate a new object using constructor.", "author_fullname": "t2_z3bdd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help with TS-Mongoose", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h0e3ff", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 7, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1591807245.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591834420.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The code:&lt;/p&gt;\n\n&lt;p&gt;The main file:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;server.ts&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import * as Fastify from &amp;quot;fastify&amp;quot;;\nimport * as Dotenv from &amp;quot;dotenv&amp;quot;;\nimport * as mongoose from &amp;quot;mongoose&amp;quot;;\nimport routes from &amp;quot;./routes&amp;quot;;\nimport fastify = require(&amp;quot;fastify&amp;quot;);\n\nDotenv.config();\n\nconst server = Fastify({ logger: true });\n\nserver.register(routes);\n\nconst connectToMongo = async (): Promise&amp;lt;void&amp;gt; =&amp;gt; {\n  try {\n    await mongoose.connect(String(process.env.MONGODB_URI), {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst startServer = async (): Promise&amp;lt;void&amp;gt; =&amp;gt; {\n  try {\n    await server.listen(Number(process.env.PORT), process.env.ADDR);\n    server.log.info(`Started Server @ ${process.env.ADDR}:${process.env.PORT}`);\n    await connectToMongo();\n    server.log.info(&amp;quot;Connected to Mongo...&amp;quot;);\n  } catch (err) {\n    server.log.error(err);\n    process.exit(-1);\n  }\n};\n\nstartServer();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A sample schema:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;schema/task.ts&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { createSchema, Type, typedModel } from &amp;quot;ts-mongoose&amp;quot;;\n\nconst taskSchema = createSchema(\n  {\n    entryDate: Type.date({ required: true }),\n    particulars: Type.string({ required: true }),\n    finishDate: Type.date({ required: false }),\n  },\n  { collection: &amp;quot;Task&amp;quot;, timestamps: true }\n);\n\nexport default taskSchema;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Models:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;models.ts&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { typedModel } from &amp;quot;ts-mongoose&amp;quot;;\nimport aggregateSchema from &amp;quot;./schemata/aggregate&amp;quot;;\nimport taskSchema from &amp;quot;./schemata/task&amp;quot;;\nimport transactionSchema from &amp;quot;./schemata/transaction&amp;quot;;\n\nconst models = {\n  Aggregate: typedModel(&amp;quot;Aggregate&amp;quot;, aggregateSchema),\n  Task: typedModel(&amp;quot;Task&amp;quot;, taskSchema),\n  Transaction: typedModel(&amp;quot;Transaction&amp;quot;, transactionSchema),\n};\n\nexport default models;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Routes file (WIP):&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;route.ts&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import * as Fastify from &amp;quot;fastify&amp;quot;;\nimport { Server, IncomingMessage, ServerResponse } from &amp;quot;http&amp;quot;;\nimport handlers from &amp;quot;./handlers&amp;quot;;\n\nconst routes = (\n  server: Fastify.FastifyInstance&amp;lt;Server, IncomingMessage, ServerResponse&amp;gt;,\n  opts: Fastify.RegisterOptions&amp;lt;Server, IncomingMessage, ServerResponse&amp;gt;,\n  done: (err?: Fastify.FastifyError | undefined) =&amp;gt; void\n): void =&amp;gt; {\n  server.get(&amp;quot;/transaction&amp;quot;, opts, handlers.getTransactionHandler);\n\n  server.post(&amp;quot;/transaction&amp;quot;, opts, async (req, res) =&amp;gt; {});\n\n  server.get(&amp;quot;/aggregate&amp;quot;, opts, async () =&amp;gt; {});\n\n  server.get(&amp;quot;/task&amp;quot;, opts, async () =&amp;gt; {});\n  server.post(&amp;quot;/task&amp;quot;, opts, async () =&amp;gt; {});\n  server.put(&amp;quot;/task/:id&amp;quot;, opts, async () =&amp;gt; {});\n\n  done();\n};\n\nexport default routes;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Handlers file (WIP):&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;handlers.ts&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import { FastifyRequest, FastifyReply } from &amp;quot;fastify&amp;quot;;\nimport { ServerResponse } from &amp;quot;http&amp;quot;;\n\nimport models from &amp;quot;./models&amp;quot;;\nconst { Aggregate, Task, Transaction } = models;\n\nconst handlers = {\n  getTransactionHandler: async (\n    req: FastifyRequest,\n    _: FastifyReply&amp;lt;ServerResponse&amp;gt;\n  ) =&amp;gt; {\n    const x = new Task({ entryDate: Date() });\n    await x.save();\n    return &amp;quot;Hello&amp;quot;;\n  },\n};\n\nexport default handlers;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In &lt;code&gt;handlers.ts&lt;/code&gt;, when I instantiate a &lt;code&gt;Task&lt;/code&gt; object without one of the required properties, no error is thrown at compile time. Error is thrown at runtime. Also, intellisense/autocomplete of VS Code does not work with the property names. Is that expected behaviour? I expected almost class-like typechecking behaviour, like when we instantiate a new object using constructor.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0e3ff", "is_robot_indexable": true, "report_reasons": null, "author": "Mycroft2046", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0e3ff/help_with_tsmongoose/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h0e3ff/help_with_tsmongoose/", "subreddit_subscribers": 41732, "created_utc": 1591805620.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "    // works\n    const configData = this.steps.reduce((accumulator: Partial&lt;ConfigData&gt;,\n     currentStepInstance: WizardSteps): Partial&lt;ConfigData&gt; =&gt; {...}, {});\n    \n    return configData as ConfigData;\n       \n    \n    // doesn't work\n    const configData: ConfigData = this.steps.reduce((accumulator: Partial&lt;ConfigData&gt;, \n    currentStepInstance: WizardSteps): Partial&lt;ConfigData&gt; =&gt; {...}, {});\n    \n    return configData;\n    \n    \n    // doesn't work\n    const configData as ConfigData = this.steps.reduce((accumulator: Partial&lt;ConfigData&gt;, \n    currentStepInstance: WizardSteps): Partial&lt;ConfigData&gt; =&gt; {...}, {});\n    \n    return configData;\n    \n    \n    // doesn't work\n    const configData&lt;ConfigData&gt; = this.steps.reduce((accumulator: Partial&lt;ConfigData&gt;, \n    currentStepInstance: WizardSteps): Partial&lt;ConfigData&gt; =&gt; {...}, {});\n    \n    return configData;\n\nMy understanding of type assertions is not complete.\n\nI initially thought the 2nd version should work, but the error message made sense, it looks like `reduce` will be returning a Partial of the type with no explicit acknowledgement that all k/v pairs will be there.\n\nOk, so a type assertion should work. But both `as` and `&lt;&gt;` syntax have failed and I don't understand why.\n\nOnly the first example worked where the type was initially allowed to be inferred, only being asserted later as the object is returned. Personally I don't like that, I want to be explicit earlier on if possible.\n\nThanks for any feedback on this.", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help understanding why these type assertions aren't working", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h0p61x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591867327.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;// works\nconst configData = this.steps.reduce((accumulator: Partial&amp;lt;ConfigData&amp;gt;,\n currentStepInstance: WizardSteps): Partial&amp;lt;ConfigData&amp;gt; =&amp;gt; {...}, {});\n\nreturn configData as ConfigData;\n\n\n// doesn&amp;#39;t work\nconst configData: ConfigData = this.steps.reduce((accumulator: Partial&amp;lt;ConfigData&amp;gt;, \ncurrentStepInstance: WizardSteps): Partial&amp;lt;ConfigData&amp;gt; =&amp;gt; {...}, {});\n\nreturn configData;\n\n\n// doesn&amp;#39;t work\nconst configData as ConfigData = this.steps.reduce((accumulator: Partial&amp;lt;ConfigData&amp;gt;, \ncurrentStepInstance: WizardSteps): Partial&amp;lt;ConfigData&amp;gt; =&amp;gt; {...}, {});\n\nreturn configData;\n\n\n// doesn&amp;#39;t work\nconst configData&amp;lt;ConfigData&amp;gt; = this.steps.reduce((accumulator: Partial&amp;lt;ConfigData&amp;gt;, \ncurrentStepInstance: WizardSteps): Partial&amp;lt;ConfigData&amp;gt; =&amp;gt; {...}, {});\n\nreturn configData;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My understanding of type assertions is not complete.&lt;/p&gt;\n\n&lt;p&gt;I initially thought the 2nd version should work, but the error message made sense, it looks like &lt;code&gt;reduce&lt;/code&gt; will be returning a Partial of the type with no explicit acknowledgement that all k/v pairs will be there.&lt;/p&gt;\n\n&lt;p&gt;Ok, so a type assertion should work. But both &lt;code&gt;as&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; syntax have failed and I don&amp;#39;t understand why.&lt;/p&gt;\n\n&lt;p&gt;Only the first example worked where the type was initially allowed to be inferred, only being asserted later as the object is returned. Personally I don&amp;#39;t like that, I want to be explicit earlier on if possible.&lt;/p&gt;\n\n&lt;p&gt;Thanks for any feedback on this.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0p61x", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0p61x/help_understanding_why_these_type_assertions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h0p61x/help_understanding_why_these_type_assertions/", "subreddit_subscribers": 41732, "created_utc": 1591838527.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I want to code a package about styled-components. I haven't published package before and using Typescript generally. I know installing packages with Typescript is little bit trying. How about coding a npm package with Typescript ? If you want to contribute contact w/me", "author_fullname": "t2_5cafciwb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Can I code npm package with Typescript? If I can, how to do it?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h0kbef", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591852202.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to code a package about styled-components. I haven&amp;#39;t published package before and using Typescript generally. I know installing packages with Typescript is little bit trying. How about coding a npm package with Typescript ? If you want to contribute contact w/me&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h0kbef", "is_robot_indexable": true, "report_reasons": null, "author": "farukbigez", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h0kbef/can_i_code_npm_package_with_typescript_if_i_can/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h0kbef/can_i_code_npm_package_with_typescript_if_i_can/", "subreddit_subscribers": 41732, "created_utc": 1591823402.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "My understanding is that most charting libraries rely on traditional style rules, so wouldn't play well with TypeStyle (or styled-components) - is that accurate? If so, what recommendations do people have?", "author_fullname": "t2_4pa84", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's a good charting library that I can use with TypeStyle &amp; React?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h02b26", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 30, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 30, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1591759394.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591786228.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My understanding is that most charting libraries rely on traditional style rules, so wouldn&amp;#39;t play well with TypeStyle (or styled-components) - is that accurate? If so, what recommendations do people have?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h02b26", "is_robot_indexable": true, "report_reasons": null, "author": "rollie82", "discussion_type": null, "num_comments": 21, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h02b26/whats_a_good_charting_library_that_i_can_use_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h02b26/whats_a_good_charting_library_that_i_can_use_with/", "subreddit_subscribers": 41732, "created_utc": 1591757428.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "Pnpm is a package manager that uses symlinks for node modules. Yesterday I started learning typescript but the code doesn't runs with pnpm. Using the npm instead of pnpm works. I stumbled upon few stackoverflow and github questions but none had the answer.", "author_fullname": "t2_y9r2p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Does typescript works with pnpm?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h043pc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591793775.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Pnpm is a package manager that uses symlinks for node modules. Yesterday I started learning typescript but the code doesn&amp;#39;t runs with pnpm. Using the npm instead of pnpm works. I stumbled upon few stackoverflow and github questions but none had the answer.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h043pc", "is_robot_indexable": true, "report_reasons": null, "author": "farhantahir", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h043pc/does_typescript_works_with_pnpm/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h043pc/does_typescript_works_with_pnpm/", "subreddit_subscribers": 41732, "created_utc": 1591764975.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "typescript", "selftext": "I have an interface `ConfigData` that identifies a couple of key/value pairs (`languageCode: string`, and `numberOfRepeats: number`).\n\nNot every step object being reduced will contribute to the accumulator. Of 5 steps passing through, only 2 will add a k/v pair.\n\nI want `const configData` in the example below to receive a `ConfigData` object after the reduce method evaluates. But my code is incorrect as is in (at least) two places:\n\n       run(): ConfigData {\n    \n          const configData = this.steps.reduce((accumulator: Partial&lt;ConfigData&gt;, currentStep: WizardSteps): ConfigData =&gt; {\n             // instruct and ask for feedback\n             currentStep.explain();\n             const rawUserResponse: string = currentStep.prompt();\n    \n             if (currentStep.needsInputValidation) {\n                const validatedInput: string = currentStep.validate(rawUserResponse);\n                \n                return {\n                   [currentStep.configDataKey] : validatedInput\n    // const validatedInput: string\n    // Type '{ [x: string]: string; }' is missing the following \n    // properties from type 'ConfigData': languageCode, \n    // numberOfRepeats ts(2739)\n                };\n             }\n    \n             if (currentStep.needsFileValidation) {\n                // blocks until file is validated\n                currentStep.validate();\n             }\n    \n    \n          }, {});\n    \n          return configData;\n    // const configData: Partial&lt;ConfigData&gt;\n    // Type 'Partial&lt;ConfigData&gt;' is not assignable to type 'ConfigData'.\n    // Property 'languageCode' is optional in type 'Partial&lt;ConfigData&gt;' \n    // but required in type 'ConfigData'. ts(2322)\n       }\n\nI'm having a hard time with both of these. The second one is at least comprehensible but I'm lost on how to fix both. Anyone know how?", "author_fullname": "t2_4w51o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help with return values out of `reduce` method", "link_flair_richtext": [], "subreddit_name_prefixed": "r/typescript", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_h06rlf", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": true, "thumbnail": "self", "edited": 1591778638.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1591806682.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.typescript", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have an interface &lt;code&gt;ConfigData&lt;/code&gt; that identifies a couple of key/value pairs (&lt;code&gt;languageCode: string&lt;/code&gt;, and &lt;code&gt;numberOfRepeats: number&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;Not every step object being reduced will contribute to the accumulator. Of 5 steps passing through, only 2 will add a k/v pair.&lt;/p&gt;\n\n&lt;p&gt;I want &lt;code&gt;const configData&lt;/code&gt; in the example below to receive a &lt;code&gt;ConfigData&lt;/code&gt; object after the reduce method evaluates. But my code is incorrect as is in (at least) two places:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   run(): ConfigData {\n\n      const configData = this.steps.reduce((accumulator: Partial&amp;lt;ConfigData&amp;gt;, currentStep: WizardSteps): ConfigData =&amp;gt; {\n         // instruct and ask for feedback\n         currentStep.explain();\n         const rawUserResponse: string = currentStep.prompt();\n\n         if (currentStep.needsInputValidation) {\n            const validatedInput: string = currentStep.validate(rawUserResponse);\n\n            return {\n               [currentStep.configDataKey] : validatedInput\n// const validatedInput: string\n// Type &amp;#39;{ [x: string]: string; }&amp;#39; is missing the following \n// properties from type &amp;#39;ConfigData&amp;#39;: languageCode, \n// numberOfRepeats ts(2739)\n            };\n         }\n\n         if (currentStep.needsFileValidation) {\n            // blocks until file is validated\n            currentStep.validate();\n         }\n\n\n      }, {});\n\n      return configData;\n// const configData: Partial&amp;lt;ConfigData&amp;gt;\n// Type &amp;#39;Partial&amp;lt;ConfigData&amp;gt;&amp;#39; is not assignable to type &amp;#39;ConfigData&amp;#39;.\n// Property &amp;#39;languageCode&amp;#39; is optional in type &amp;#39;Partial&amp;lt;ConfigData&amp;gt;&amp;#39; \n// but required in type &amp;#39;ConfigData&amp;#39;. ts(2322)\n   }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m having a hard time with both of these. The second one is at least comprehensible but I&amp;#39;m lost on how to fix both. Anyone know how?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2v6gg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "h06rlf", "is_robot_indexable": true, "report_reasons": null, "author": "fpuen", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/typescript/comments/h06rlf/help_with_return_values_out_of_reduce_method/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/typescript/comments/h06rlf/help_with_return_values_out_of_reduce_method/", "subreddit_subscribers": 41732, "created_utc": 1591777882.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_h06rlf", "before": null}}