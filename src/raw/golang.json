{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_3hn41pel", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Academic] Open Source Development Survey (Software Developers using GitHub)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j0ovtc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "SampleSize", "selftext": "We are a team of researchers interested in improving software development.  \n\n\nIf you contributed to a GitHub repository as a developer in the last 12 months , we ask for your help by answering questions about your contribution and motivation.  \n\n\nAnswering\u00a0[these questions](https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j)\u00a0is estimated to take about 10 minutes of your time.  \n\n\nThree of the participants will receive a 50$ gift card.  \n\n\nThank you so much for your help in\u00a0answering \u00a0[the\u00a0survey](https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j).  \nIf you are familiar with a person that might be interested in the survey, please forward this message.  \n\n\nProf. Dror Feitelson, Prof. Avi Kluger, \u00a0Ph.D. candidate Idan Amit", "author_fullname": "t2_3hn41pel", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Academic] Open Source Development Survey (Software Developers using GitHub)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/SampleSize", "hidden": false, "pwls": 6, "link_flair_css_class": "academic", "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_iybrqr", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Academic", "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1600902088.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.SampleSize", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We are a team of researchers interested in improving software development.  &lt;/p&gt;\n\n&lt;p&gt;If you contributed to a GitHub repository as a developer in the last 12 months , we ask for your help by answering questions about your contribution and motivation.  &lt;/p&gt;\n\n&lt;p&gt;Answering\u00a0&lt;a href=\"https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j\"&gt;these questions&lt;/a&gt;\u00a0is estimated to take about 10 minutes of your time.  &lt;/p&gt;\n\n&lt;p&gt;Three of the participants will receive a 50$ gift card.  &lt;/p&gt;\n\n&lt;p&gt;Thank you so much for your help in\u00a0answering \u00a0&lt;a href=\"https://huji.az1.qualtrics.com/jfe/form/SV_73wu35ICXBWm07j\"&gt;the\u00a0survey&lt;/a&gt;.&lt;br/&gt;\nIf you are familiar with a person that might be interested in the survey, please forward this message.  &lt;/p&gt;\n\n&lt;p&gt;Prof. Dror Feitelson, Prof. Avi Kluger, \u00a0Ph.D. candidate Idan Amit&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "599bc8d2-1845-11e3-800b-12313d223dbc", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2tlqg", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#609eaf", "id": "iybrqr", "is_robot_indexable": true, "report_reasons": null, "author": "idan_huji", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/SampleSize/comments/iybrqr/academic_open_source_development_survey_software/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/SampleSize/comments/iybrqr/academic_open_source_development_survey_software/", "subreddit_subscribers": 144591, "created_utc": 1600873288.0, "num_crossposts": 20, "media": null, "is_video": false}], "created": 1601231071.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.SampleSize", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "/r/SampleSize/comments/iybrqr/academic_open_source_development_survey_software/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0ovtc", "is_robot_indexable": true, "report_reasons": null, "author": "idan_huji", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_iybrqr", "author_flair_text_color": null, "permalink": "/r/golang/comments/j0ovtc/academic_open_source_development_survey_software/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "/r/SampleSize/comments/iybrqr/academic_open_source_development_survey_software/", "subreddit_subscribers": 126171, "created_utc": 1601202271.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello guys,\n\n* I've written a small program to benchmark the query timing for an open source tool called [Apache Druid](https://druid.apache.org/).\n* Apache Druid is a high performance real-time analytics database.\n* Here is the code I wrote - [https://play.golang.org/p/5naCxt2NzoB](https://play.golang.org/p/5naCxt2NzoB)\n\n&amp;#x200B;\n\nWhat does the code do?\n\n* Read a JSON file (Druid's query will  be in JSON format)\n* Create `Transport`, `Client` and a `NewRequest`\n* Execute the request.\n* The purpose of the code is to execute the request and collect the elapsed time (for benchmarking purpose)\n\n&amp;#x200B;\n\nI'm relatively new to Go, and would like some feedback on code style, the way I execute requests (good or bad), how to separate the functions in their respective folders, also I've not created any custom `type` is this fine for this code?\n\n&amp;#x200B;\n\nEnd Goal\n\n* I've 40 JSON files (each JSON file is a query which will be executed to Broker endpoint)\n* Make all 40 queries run concurrently\n* Aggregate and average out the timing for each query which runs several times\n\n&amp;#x200B;\n\nAny feedback would be much appreciated.\n\n&amp;#x200B;\n\nThank you,\n\nJeet", "author_fullname": "t2_oabtp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Structure the code?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j0m4ew", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601216061.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello guys,&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I&amp;#39;ve written a small program to benchmark the query timing for an open source tool called &lt;a href=\"https://druid.apache.org/\"&gt;Apache Druid&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Apache Druid is a high performance real-time analytics database.&lt;/li&gt;\n&lt;li&gt;Here is the code I wrote - &lt;a href=\"https://play.golang.org/p/5naCxt2NzoB\"&gt;https://play.golang.org/p/5naCxt2NzoB&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;What does the code do?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Read a JSON file (Druid&amp;#39;s query will  be in JSON format)&lt;/li&gt;\n&lt;li&gt;Create &lt;code&gt;Transport&lt;/code&gt;, &lt;code&gt;Client&lt;/code&gt; and a &lt;code&gt;NewRequest&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Execute the request.&lt;/li&gt;\n&lt;li&gt;The purpose of the code is to execute the request and collect the elapsed time (for benchmarking purpose)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m relatively new to Go, and would like some feedback on code style, the way I execute requests (good or bad), how to separate the functions in their respective folders, also I&amp;#39;ve not created any custom &lt;code&gt;type&lt;/code&gt; is this fine for this code?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;End Goal&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I&amp;#39;ve 40 JSON files (each JSON file is a query which will be executed to Broker endpoint)&lt;/li&gt;\n&lt;li&gt;Make all 40 queries run concurrently&lt;/li&gt;\n&lt;li&gt;Aggregate and average out the timing for each query which runs several times&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Any feedback would be much appreciated.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thank you,&lt;/p&gt;\n\n&lt;p&gt;Jeet&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0m4ew", "is_robot_indexable": true, "report_reasons": null, "author": "jeetpatel108", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j0m4ew/how_to_structure_the_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j0m4ew/how_to_structure_the_code/", "subreddit_subscribers": 126171, "created_utc": 1601187261.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I have seen this in a test file:\n\n    import (\n    \n    \"image\"\n    \n    \"image/draw\"\n    \n    )\n    \n    var _ Node = &amp;BasicNode{}\n\nWhat is the purpose of `var _ Node = &amp;BasicNode{}`?", "author_fullname": "t2_4orosgn8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is var _ type = &amp;type{} used for?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j0b73d", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 89, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 89, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1601145425.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601174005.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have seen this in a test file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import (\n\n&amp;quot;image&amp;quot;\n\n&amp;quot;image/draw&amp;quot;\n\n)\n\nvar _ Node = &amp;amp;BasicNode{}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What is the purpose of &lt;code&gt;var _ Node = &amp;amp;BasicNode{}&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0b73d", "is_robot_indexable": true, "report_reasons": null, "author": "amblified", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j0b73d/what_is_var_type_type_used_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j0b73d/what_is_var_type_type_used_for/", "subreddit_subscribers": 126171, "created_utc": 1601145205.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi,\n\nI just released a little library I'd like to share here: Peek-A-Buf\n\nPeek-A-Buf is a buffered reader with side effect free peeking capability.\n\nQuite niche, very tiny, but maybe someone finds this a bit interesting. :)\n\n[https://github.com/philiplb/peekabuf](https://github.com/philiplb/peekabuf)", "author_fullname": "t2_5eavd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Just released a little library, Peek-A-Buf", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j0fv77", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 22, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 22, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601190162.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I just released a little library I&amp;#39;d like to share here: Peek-A-Buf&lt;/p&gt;\n\n&lt;p&gt;Peek-A-Buf is a buffered reader with side effect free peeking capability.&lt;/p&gt;\n\n&lt;p&gt;Quite niche, very tiny, but maybe someone finds this a bit interesting. :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/philiplb/peekabuf\"&gt;https://github.com/philiplb/peekabuf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0fv77", "is_robot_indexable": true, "report_reasons": null, "author": "philiplb", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j0fv77/just_released_a_little_library_peekabuf/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j0fv77/just_released_a_little_library_peekabuf/", "subreddit_subscribers": 126171, "created_utc": 1601161362.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello everyone. Title is a bit messy i know.  \n\n\nIn my trip to learn golang i have created a personal tasklist app using react and a backend in go+gORM.\n\nEverything is working well so i decided to try and create a time tracking capability.\n\nThis means that i want to go on my task, hit the button \"track\"/\"start working on\" or something similar and that will start tracking the time working on a task.\n\nI know that i can track the time in the frontend and send the values on stop but if the browser dies, freezes, if i close the tab and maybe even change it(not sure what would happen then tbh) the time tracked will be lost.\n\nI am guessing it's gonna need sockets to work this out?\n\nAny known examples or some pointers to what to look into for this task?\n\nTYVM.", "author_fullname": "t2_3ex8268j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Ideas on how to implement a timetracker", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": true, "name": "t3_j0qn8z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601240162.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone. Title is a bit messy i know.  &lt;/p&gt;\n\n&lt;p&gt;In my trip to learn golang i have created a personal tasklist app using react and a backend in go+gORM.&lt;/p&gt;\n\n&lt;p&gt;Everything is working well so i decided to try and create a time tracking capability.&lt;/p&gt;\n\n&lt;p&gt;This means that i want to go on my task, hit the button &amp;quot;track&amp;quot;/&amp;quot;start working on&amp;quot; or something similar and that will start tracking the time working on a task.&lt;/p&gt;\n\n&lt;p&gt;I know that i can track the time in the frontend and send the values on stop but if the browser dies, freezes, if i close the tab and maybe even change it(not sure what would happen then tbh) the time tracked will be lost.&lt;/p&gt;\n\n&lt;p&gt;I am guessing it&amp;#39;s gonna need sockets to work this out?&lt;/p&gt;\n\n&lt;p&gt;Any known examples or some pointers to what to look into for this task?&lt;/p&gt;\n\n&lt;p&gt;TYVM.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0qn8z", "is_robot_indexable": true, "report_reasons": null, "author": "Sancroth_2621", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j0qn8z/ideas_on_how_to_implement_a_timetracker/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j0qn8z/ideas_on_how_to_implement_a_timetracker/", "subreddit_subscribers": 126171, "created_utc": 1601211362.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I started this book yesterday and just now got to point 2.\n\nThe book starts off by showcasing gifs, local webservers, and introduces things such as maps right off the bat. The excercises reflect stuff he glosses over earlier in the pages...\n\nAm I missing something? It feels way too verbose for a beginner in a language, and this isn't even my first programming language (Know Python for 1 year)\n\nShould I have went for another resource, or should I continue with this one?", "author_fullname": "t2_85lrw31g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Should I have started with some book other than \"Go programming language\"?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j0ee0o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601184976.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I started this book yesterday and just now got to point 2.&lt;/p&gt;\n\n&lt;p&gt;The book starts off by showcasing gifs, local webservers, and introduces things such as maps right off the bat. The excercises reflect stuff he glosses over earlier in the pages...&lt;/p&gt;\n\n&lt;p&gt;Am I missing something? It feels way too verbose for a beginner in a language, and this isn&amp;#39;t even my first programming language (Know Python for 1 year)&lt;/p&gt;\n\n&lt;p&gt;Should I have went for another resource, or should I continue with this one?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0ee0o", "is_robot_indexable": true, "report_reasons": null, "author": "PeacePersonal", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j0ee0o/should_i_have_started_with_some_book_other_than/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j0ee0o/should_i_have_started_with_some_book_other_than/", "subreddit_subscribers": 126171, "created_utc": 1601156176.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "So if I have an error defined as\n\n`var MyError = errors.New(\"my error\")`\n\nAnd then try to do the following \n\n`MyError == error.New(\"my error\")`\n\nThis returns false? What mechanics are used for this comparison and why is it false?", "author_fullname": "t2_gt1m9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why does comparison between an error created with error.New() and an error assigned to a variable return false?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j0p15i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601231944.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So if I have an error defined as&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var MyError = errors.New(&amp;quot;my error&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;And then try to do the following &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;MyError == error.New(&amp;quot;my error&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This returns false? What mechanics are used for this comparison and why is it false?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0p15i", "is_robot_indexable": true, "report_reasons": null, "author": "Darkstar3000", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j0p15i/why_does_comparison_between_an_error_created_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j0p15i/why_does_comparison_between_an_error_created_with/", "subreddit_subscribers": 126171, "created_utc": 1601203144.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "author_fullname": "t2_y9vnd5a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "ESP32 and ESP8266 support in TinyGo", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j027qe", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.98, "author_flair_background_color": null, "subreddit_type": "public", "ups": 107, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 107, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1601136771.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "aykevl.nl", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://aykevl.nl/2020/09/tinygo-esp32", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j027qe", "is_robot_indexable": true, "report_reasons": null, "author": "olablt", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j027qe/esp32_and_esp8266_support_in_tinygo/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://aykevl.nl/2020/09/tinygo-esp32", "subreddit_subscribers": 126171, "created_utc": 1601107971.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I noticed in the example for [Time.Format](https://golang.org/pkg/time/#Time.Format), it outputs the following:\n\n    Unix format: Wed Feb 25 11:06:39 PST 2015\n    Same, in UTC: Wed Feb 25 11:06:39 UTC 2015\n\nThis was unexpected, why isn't it `19:06:39 UTC`?", "author_fullname": "t2_euqwui", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Time.UTC working as intended?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j0gu2g", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601193811.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I noticed in the example for &lt;a href=\"https://golang.org/pkg/time/#Time.Format\"&gt;Time.Format&lt;/a&gt;, it outputs the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Unix format: Wed Feb 25 11:06:39 PST 2015\nSame, in UTC: Wed Feb 25 11:06:39 UTC 2015\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This was unexpected, why isn&amp;#39;t it &lt;code&gt;19:06:39 UTC&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j0gu2g", "is_robot_indexable": true, "report_reasons": null, "author": "smariot2", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j0gu2g/timeutc_working_as_intended/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j0gu2g/timeutc_working_as_intended/", "subreddit_subscribers": 126171, "created_utc": 1601165011.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I created some benchmarks which suggest that on my machine a struct consisting of up to 9 int 64 is faster to be passed as value. From 10 fields and more passing by pointer is faster.\n\n[https://github.com/komkom/value-vs-ptr](https://github.com/komkom/value-vs-ptr)\n\nAre these tests correct? And if they are correct why would it be that on both of my machines the breaking point is 9 fields?", "author_fullname": "t2_xtv49", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Up to which struct size is passing by value quicker then passing by pointer?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_j05usq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.69, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1601154999.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.golang", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I created some benchmarks which suggest that on my machine a struct consisting of up to 9 int 64 is faster to be passed as value. From 10 fields and more passing by pointer is faster.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/komkom/value-vs-ptr\"&gt;https://github.com/komkom/value-vs-ptr&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Are these tests correct? And if they are correct why would it be that on both of my machines the breaking point is 9 fields?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "j05usq", "is_robot_indexable": true, "report_reasons": null, "author": "komkahh", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/j05usq/up_to_which_struct_size_is_passing_by_value/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/j05usq/up_to_which_struct_size_is_passing_by_value/", "subreddit_subscribers": 126171, "created_utc": 1601126199.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_j05usq", "before": null}}