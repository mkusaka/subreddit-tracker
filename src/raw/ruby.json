{"kind": "Listing", "data": {"modhash": "", "dist": 10, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_1tsxyrpu", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I've always struggled with rails schema migrations, so I made my own TUI for it!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_iiipbx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 68, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/ruby", "can_mod_post": false, "score": 68, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/M5xTdqWzP6EBS5nqUEKlU5PEj1WoFSTZ1V9pejVf3-M.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1598688802.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/jesseduffield/lazy_migrate", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/yqhe9Is2Gn6Yada7_F_brxnlJ9tv1gTBwpDDugnRtV8.jpg?auto=webp&amp;s=429c2438fdfa3424d7e3761985fa630c50d88d38", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/yqhe9Is2Gn6Yada7_F_brxnlJ9tv1gTBwpDDugnRtV8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aef781046b6a1d013146f591e11255fb46ac117d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/yqhe9Is2Gn6Yada7_F_brxnlJ9tv1gTBwpDDugnRtV8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6a5b39f94b0d15a54e5dc17a7ffdbba8999c74c9", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/yqhe9Is2Gn6Yada7_F_brxnlJ9tv1gTBwpDDugnRtV8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3b710f9c024b6241a4f6ee899fbb99d4bfcdb155", "width": 320, "height": 320}], "variants": {}, "id": "0X_e8e-D1MGiAwNW_b8GwG_GEXxFOYiDR-amFPCQSls"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 75, "resized_tier_icons": null, "id": "award_ce5f9ce6-49d9-4905-9228-22950e889206", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything's better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=7a3164ef705ae0a41198e29767e4a51fd86e2dcd", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=5c621179e63f7f6fbb6a0807367bd79467878784", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ebf40f79a711e9c4206f5f841235e43697f7a3f5", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=18dad26bb669e202c42ff6b742d6c0f9d1e62ee9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=61ccae2b32cfbf2f26bd53c9d1287d1235da4d68", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5smbysczm1w41_Hugz.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "d57de81a-873c-11e9-9a25-0e18d14df676", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iiipbx", "is_robot_indexable": true, "report_reasons": null, "author": "jesseduffield", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iiipbx/ive_always_struggled_with_rails_schema_migrations/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/jesseduffield/lazy_migrate", "subreddit_subscribers": 67118, "created_utc": 1598660002.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lc0kps6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How environment check works in Ruby on Rails?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 92, "top_awarded_type": null, "hide_score": true, "name": "t3_iirt1i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/sawwrn34eXUbh0oufMaQL0jczmniOOhoalaotCM2iak.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1598734001.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/rubycademy/how-environment-check-works-in-ruby-on-rails-4cfbd0434605", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/AkBn_40VUBwvOjutOs-U5415KPPvQB9Hblrn8maVGqs.jpg?auto=webp&amp;s=de4fd0c658fbc3d9cc10c81ba0c32dba89f7ec4e", "width": 1200, "height": 795}, "resolutions": [{"url": "https://external-preview.redd.it/AkBn_40VUBwvOjutOs-U5415KPPvQB9Hblrn8maVGqs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e3a61a7f0ab1e65b030d2fc23b72e0f9c4ab0242", "width": 108, "height": 71}, {"url": "https://external-preview.redd.it/AkBn_40VUBwvOjutOs-U5415KPPvQB9Hblrn8maVGqs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=89fb9c05297c6af18f8d02c12f3842349cde4c3c", "width": 216, "height": 143}, {"url": "https://external-preview.redd.it/AkBn_40VUBwvOjutOs-U5415KPPvQB9Hblrn8maVGqs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=97e4876577fc0c57326ed7e7922fba6fb9a6ca0f", "width": 320, "height": 212}, {"url": "https://external-preview.redd.it/AkBn_40VUBwvOjutOs-U5415KPPvQB9Hblrn8maVGqs.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e6ec8c9e5566a5e6162d60adf1e9d847c305f6f3", "width": 640, "height": 424}, {"url": "https://external-preview.redd.it/AkBn_40VUBwvOjutOs-U5415KPPvQB9Hblrn8maVGqs.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=695716d1ddc6572bcd0c132b8c3fed84d9de4595", "width": 960, "height": 636}, {"url": "https://external-preview.redd.it/AkBn_40VUBwvOjutOs-U5415KPPvQB9Hblrn8maVGqs.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8fa98bb0db0c1ae688f0002f4376215c5f1a2d5b", "width": 1080, "height": 715}], "variants": {}, "id": "xsDVYtsrrTPlZFZIjvxWInYgQws0m4uLfc774V1w4Zk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iirt1i", "is_robot_indexable": true, "report_reasons": null, "author": "mehdifarsi", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iirt1i/how_environment_check_works_in_ruby_on_rails/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/rubycademy/how-environment-check-works-in-ruby-on-rails-4cfbd0434605", "subreddit_subscribers": 67118, "created_utc": 1598705201.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_h9vxd", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Linting Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iifp3k", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1598678062.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "kevindeisz.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://kevindeisz.com/2020/08/28/linting-ruby.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iifp3k", "is_robot_indexable": true, "report_reasons": null, "author": "musicnerd47", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iifp3k/linting_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kevindeisz.com/2020/08/28/linting-ruby.html", "subreddit_subscribers": 67118, "created_utc": 1598649262.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_3lozp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Build Your Own Gem in Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_ii8g4i", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/nKAeSYF0mEyZQ-lo96LfIiegDXWAAEsAqDhgu_o26G8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1598655114.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.engineyard.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.engineyard.com/how-to-build-your-own-gem-in-ruby", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/AZ50QEH2z9MEXlDGcdzp_zGVFJsW3omUrJ3UKRticCo.jpg?auto=webp&amp;s=a2ef9ed7715f655acb03b86ff7da7791f6e0d076", "width": 200, "height": 259}, "resolutions": [{"url": "https://external-preview.redd.it/AZ50QEH2z9MEXlDGcdzp_zGVFJsW3omUrJ3UKRticCo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4e241b13e8f20706eabac8a0cf4f0a3343c158c8", "width": 108, "height": 139}], "variants": {}, "id": "FJ9_z6dhKqfHg7VGdWigFA2WcO7WnDSGo6uzwOZoIUQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ii8g4i", "is_robot_indexable": true, "report_reasons": null, "author": "aspleenic", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ii8g4i/how_to_build_your_own_gem_in_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.engineyard.com/how-to-build-your-own-gem-in-ruby", "subreddit_subscribers": 67118, "created_utc": 1598626314.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "I have a foreign team building me an online community using ruby and react.  I need to add two features that I hope are available as an addon or plugin.\n\n1. Private messaging system - This will be like sending emails or private notes to each other.  Would love in \"in box\" with messages received, read and sent.\n2. In-app notifications for when users reply to your posts in our custom forum.  So, if someone replies to your post, you'd get an in-app notification badge like the facebook badges.\n\nDoes anyone know of any addons or plugins that could help satisfy these requirements?", "author_fullname": "t2_3s9s0g3u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Newbie - Looking for private messaging and in-app notifications addons. Please help.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_iidz2z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1598672531.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a foreign team building me an online community using ruby and react.  I need to add two features that I hope are available as an addon or plugin.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Private messaging system - This will be like sending emails or private notes to each other.  Would love in &amp;quot;in box&amp;quot; with messages received, read and sent.&lt;/li&gt;\n&lt;li&gt;In-app notifications for when users reply to your posts in our custom forum.  So, if someone replies to your post, you&amp;#39;d get an in-app notification badge like the facebook badges.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Does anyone know of any addons or plugins that could help satisfy these requirements?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "iidz2z", "is_robot_indexable": true, "report_reasons": null, "author": "Puzzleheaded-Rub7953", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/iidz2z/newbie_looking_for_private_messaging_and_inapp/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/iidz2z/newbie_looking_for_private_messaging_and_inapp/", "subreddit_subscribers": 67118, "created_utc": 1598643731.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "Hi!\n\nI posted some gameplay videos of my [open source platformer game](https://victords.itch.io/super-bombinhas) on YouTube, please check it out: [https://www.youtube.com/channel/UCDF29vao7Xur\\_mTS4NFRviA/videos](https://www.youtube.com/channel/UCDF29vao7Xur_mTS4NFRviA/videos)\n\nThe videos started with \"NEW\" are from the current version of the project. There's also a video from a past version from many years ago.\n\nThanks!", "author_fullname": "t2_xo6ku", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Super Bombinhas - gameplay videos", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ii5m7h", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1598644176.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi!&lt;/p&gt;\n\n&lt;p&gt;I posted some gameplay videos of my &lt;a href=\"https://victords.itch.io/super-bombinhas\"&gt;open source platformer game&lt;/a&gt; on YouTube, please check it out: &lt;a href=\"https://www.youtube.com/channel/UCDF29vao7Xur_mTS4NFRviA/videos\"&gt;https://www.youtube.com/channel/UCDF29vao7Xur_mTS4NFRviA/videos&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The videos started with &amp;quot;NEW&amp;quot; are from the current version of the project. There&amp;#39;s also a video from a past version from many years ago.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/JSohwni8RUUXKkE3lQX0a6eSsdycBYJJ2_hhW8Pie38.jpg?auto=webp&amp;s=2a8d5776729b06b35dec86ded5b5108fac26afe5", "width": 798, "height": 598}, "resolutions": [{"url": "https://external-preview.redd.it/JSohwni8RUUXKkE3lQX0a6eSsdycBYJJ2_hhW8Pie38.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e63d841da2101982988d9c19c10a51c07ffcbcaa", "width": 108, "height": 80}, {"url": "https://external-preview.redd.it/JSohwni8RUUXKkE3lQX0a6eSsdycBYJJ2_hhW8Pie38.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b2f8bfbab5b15d6ac1d9fbe6fabee8fe63b76ef0", "width": 216, "height": 161}, {"url": "https://external-preview.redd.it/JSohwni8RUUXKkE3lQX0a6eSsdycBYJJ2_hhW8Pie38.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=dd523de31be79db85122e82b6482ea98ab7ee2f6", "width": 320, "height": 239}, {"url": "https://external-preview.redd.it/JSohwni8RUUXKkE3lQX0a6eSsdycBYJJ2_hhW8Pie38.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c15a8a057ac16225d4d9f354e9d0817ad0a01188", "width": 640, "height": 479}], "variants": {}, "id": "AzTNG06L33Q3_CcJaH7R9fGmN2rkjSpB2p2ct2gmqWU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ii5m7h", "is_robot_indexable": true, "report_reasons": null, "author": "victordshm", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ii5m7h/super_bombinhas_gameplay_videos/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ii5m7h/super_bombinhas_gameplay_videos/", "subreddit_subscribers": 67118, "created_utc": 1598615376.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_c9kt5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Dependency Graphs in Ruby - Rewind Backups", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_ii83l5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog post", "can_mod_post": false, "score": 8, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/4kKfYwHXBRzPGWKqvZ2_lxtPvZA2WYdqquphV2q6piQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1598653961.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rewind.io", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://rewind.io/blog/dependency-graphs-in-ruby/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/tYN38AuQMqjP8pHYNL9gZl1MTml1sM-ca03RwORid_U.jpg?auto=webp&amp;s=a0b748689ef038d03b60f4bdf5bf44da7f1b24e2", "width": 2250, "height": 1500}, "resolutions": [{"url": "https://external-preview.redd.it/tYN38AuQMqjP8pHYNL9gZl1MTml1sM-ca03RwORid_U.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3b09c94594130ffe639b36e8cf72e2c42b491e21", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/tYN38AuQMqjP8pHYNL9gZl1MTml1sM-ca03RwORid_U.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=aac13292b5802d37a60c467449f27e267059ded5", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/tYN38AuQMqjP8pHYNL9gZl1MTml1sM-ca03RwORid_U.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f500c9ef157729a5b372913e23d2eb093d6828ea", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/tYN38AuQMqjP8pHYNL9gZl1MTml1sM-ca03RwORid_U.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1804c5f6d04c78ca18df82ded174b261503bff53", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/tYN38AuQMqjP8pHYNL9gZl1MTml1sM-ca03RwORid_U.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=41c5c50f57f52f1b9be4dc7c53232296f03072ad", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/tYN38AuQMqjP8pHYNL9gZl1MTml1sM-ca03RwORid_U.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7420e765bbfa47d5b832d911535cd93d69a47fd9", "width": 1080, "height": 720}], "variants": {}, "id": "dJDkaJLIDD1kuXdUb-mRYs8Mu-FnZiI7gNxZf_BaoFg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c8896134-873c-11e9-8edb-0e1f22813c3e", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ii83l5", "is_robot_indexable": true, "report_reasons": null, "author": "guppyF1", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ii83l5/dependency_graphs_in_ruby_rewind_backups/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rewind.io/blog/dependency-graphs-in-ruby/", "subreddit_subscribers": 67118, "created_utc": 1598625161.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "So, I try to get my feet wet again with a script that helps me automating the creation of a dhcp config.\n\nNow I am at a point where everything works as expected. I need to get my head around API pagination but as I am currently only handling \\~100 hosts that will be an issue for future KervyN (poor guy).\n\nI want to refactor the code in the following terms:\n\n* readability\n* ABC lint error (I've read about the basic concept and there was a medium article on \"Use dictionaries for that, but I don't know how to do it in this case)\n* Maybe working with class(es) (if it makes sense). I don't know if it makes sense here, or if the code would benefit from it.\n\nSo here is the code:\n\n    #!/usr/bin/env ruby\n    \n    require 'CGI'\n    require 'http'\n    require 'resolv'\n    \n    AUTH_HEADER = { Authorization: 'Token xxxxxxxxxxxxxxxxxxxxxxxx' }.freeze\n    API_BASEURL = 'https://netbox/api/dcim/'.freeze\n    \n    @hosts = {}\n    \n    def request_api(endpoint, parameters = {})\n      query = ''\n      # if parameters are set we itereate over it and escape the values\n      unless parameters.empty?\n        query = ('?' + parameters.collect { |k, v| \"#{CGI.escape(k.to_s)}=#{CGI.escape(v)}\" }.join('&amp;'))\n      end\n    \n      HTTP.headers(AUTH_HEADER).get(API_BASEURL + endpoint + '/' + query).parse\n    end\n    \n    def sites\n      statuses = %w[active planned]\n    \n      sites = request_api('sites')['results']\n      sites.each { |site| @hosts[site['slug'].to_sym] = {} if statuses.include?(site['status']['value']) }\n    end\n    \n    def hosts_from_site(site)\n      types = %w[storage cpu]\n      types.each do |type|\n        request_api('devices', { site: site, name__isw: type, status: 'active' })['results'].map do |host|\n          @hosts[site.to_sym][host['id']] = { name: host['name'], type: type, macaddresses: [] }\n        end\n      end\n    end\n    \n    def mac_addresses_for_host_ids\n      @hosts.map do |site, hosts|\n        hosts.keys.each do |id|\n          request_api('interfaces', { device_id: id.to_s })['results'].each do |interface|\n            @hosts[site.to_sym][id][:macaddresses] &lt;&lt; interface['mac_address']&amp;.downcase if interface['name'] =~ /\\Ae[tn][ho0]\\d/i &amp;&amp; !interface['mac_address'].nil?\n          end\n        end\n      end\n    end\n    \n    def parse_logical_location\n      @hosts.map do |site, hosts|\n        hosts.map { |hostid, host| @hosts[site][hostid][:logcal_location] = host[:name].split('.').last }\n      end\n    end\n    \n    def ip_address_for_hostname\n      @hosts.map do |site, hosts|\n        hosts.map { |hostid, host| @hosts[site][hostid][:address] = Resolv::getaddress(host[:name] + '.example.org') }\n      end\n    end\n    \n    def build_shit\n      sites\n      @hosts.keys.each { |k| hosts_from_site(k.to_s) }\n      mac_addresses_for_host_ids\n      parse_logical_location\n      ip_address_for_hostname\n    \n      @hosts.map do |_site, hosts|\n        hosts.map { |_hostid, host| puts \"dhcp-host=#{host[:macaddresses].join(',')},#{host[:name].split('.').first},#{host[:address]},set:netboot,set:known\"  }\n      end\n    end\n\nthe \"@hosts\" hash looks like this in the end\n\n    &gt;&gt; pp @hosts\n    {:location1=&gt;\n      {19=&gt;\n        {:name=&gt;\"storage1.fra1\",\n         :type=&gt;\"storage\",\n         :macaddresses=&gt;[\"CC:CC:CC:CC:CC:CC\", \"DD:DD:DD:DD:DD:DD\"],\n         :logcal_location=&gt;\"fra1\",\n         :address=&gt;\"10.2.3.4\"},\n       21=&gt;\n        {:name=&gt;\"storage2.fra1\",\n         :type=&gt;\"storage\",\n         :macaddresses=&gt;[\"BB:BB:BB:BB:BB:BB\", \"AA:AA:AA:AA:AA:AA\"],\n         :logcal_location=&gt;\"fra1\",\n         :address=&gt;\"10.2.3.5\"}\n      }\n    }\n\nThanks in advance and mybe you beings have some sweet tips.  \n\n\nCodesnipet for readability: [https://gitlab.com/-/snippets/2009689](https://gitlab.com/-/snippets/2009689)", "author_fullname": "t2_56avx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[help a novice] Refacotring my netbox wrapper", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ii9m89", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Question", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1598658870.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.ruby", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So, I try to get my feet wet again with a script that helps me automating the creation of a dhcp config.&lt;/p&gt;\n\n&lt;p&gt;Now I am at a point where everything works as expected. I need to get my head around API pagination but as I am currently only handling ~100 hosts that will be an issue for future KervyN (poor guy).&lt;/p&gt;\n\n&lt;p&gt;I want to refactor the code in the following terms:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;readability&lt;/li&gt;\n&lt;li&gt;ABC lint error (I&amp;#39;ve read about the basic concept and there was a medium article on &amp;quot;Use dictionaries for that, but I don&amp;#39;t know how to do it in this case)&lt;/li&gt;\n&lt;li&gt;Maybe working with class(es) (if it makes sense). I don&amp;#39;t know if it makes sense here, or if the code would benefit from it.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;So here is the code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby\n\nrequire &amp;#39;CGI&amp;#39;\nrequire &amp;#39;http&amp;#39;\nrequire &amp;#39;resolv&amp;#39;\n\nAUTH_HEADER = { Authorization: &amp;#39;Token xxxxxxxxxxxxxxxxxxxxxxxx&amp;#39; }.freeze\nAPI_BASEURL = &amp;#39;https://netbox/api/dcim/&amp;#39;.freeze\n\n@hosts = {}\n\ndef request_api(endpoint, parameters = {})\n  query = &amp;#39;&amp;#39;\n  # if parameters are set we itereate over it and escape the values\n  unless parameters.empty?\n    query = (&amp;#39;?&amp;#39; + parameters.collect { |k, v| &amp;quot;#{CGI.escape(k.to_s)}=#{CGI.escape(v)}&amp;quot; }.join(&amp;#39;&amp;amp;&amp;#39;))\n  end\n\n  HTTP.headers(AUTH_HEADER).get(API_BASEURL + endpoint + &amp;#39;/&amp;#39; + query).parse\nend\n\ndef sites\n  statuses = %w[active planned]\n\n  sites = request_api(&amp;#39;sites&amp;#39;)[&amp;#39;results&amp;#39;]\n  sites.each { |site| @hosts[site[&amp;#39;slug&amp;#39;].to_sym] = {} if statuses.include?(site[&amp;#39;status&amp;#39;][&amp;#39;value&amp;#39;]) }\nend\n\ndef hosts_from_site(site)\n  types = %w[storage cpu]\n  types.each do |type|\n    request_api(&amp;#39;devices&amp;#39;, { site: site, name__isw: type, status: &amp;#39;active&amp;#39; })[&amp;#39;results&amp;#39;].map do |host|\n      @hosts[site.to_sym][host[&amp;#39;id&amp;#39;]] = { name: host[&amp;#39;name&amp;#39;], type: type, macaddresses: [] }\n    end\n  end\nend\n\ndef mac_addresses_for_host_ids\n  @hosts.map do |site, hosts|\n    hosts.keys.each do |id|\n      request_api(&amp;#39;interfaces&amp;#39;, { device_id: id.to_s })[&amp;#39;results&amp;#39;].each do |interface|\n        @hosts[site.to_sym][id][:macaddresses] &amp;lt;&amp;lt; interface[&amp;#39;mac_address&amp;#39;]&amp;amp;.downcase if interface[&amp;#39;name&amp;#39;] =~ /\\Ae[tn][ho0]\\d/i &amp;amp;&amp;amp; !interface[&amp;#39;mac_address&amp;#39;].nil?\n      end\n    end\n  end\nend\n\ndef parse_logical_location\n  @hosts.map do |site, hosts|\n    hosts.map { |hostid, host| @hosts[site][hostid][:logcal_location] = host[:name].split(&amp;#39;.&amp;#39;).last }\n  end\nend\n\ndef ip_address_for_hostname\n  @hosts.map do |site, hosts|\n    hosts.map { |hostid, host| @hosts[site][hostid][:address] = Resolv::getaddress(host[:name] + &amp;#39;.example.org&amp;#39;) }\n  end\nend\n\ndef build_shit\n  sites\n  @hosts.keys.each { |k| hosts_from_site(k.to_s) }\n  mac_addresses_for_host_ids\n  parse_logical_location\n  ip_address_for_hostname\n\n  @hosts.map do |_site, hosts|\n    hosts.map { |_hostid, host| puts &amp;quot;dhcp-host=#{host[:macaddresses].join(&amp;#39;,&amp;#39;)},#{host[:name].split(&amp;#39;.&amp;#39;).first},#{host[:address]},set:netboot,set:known&amp;quot;  }\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the &amp;quot;@hosts&amp;quot; hash looks like this in the end&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; pp @hosts\n{:location1=&amp;gt;\n  {19=&amp;gt;\n    {:name=&amp;gt;&amp;quot;storage1.fra1&amp;quot;,\n     :type=&amp;gt;&amp;quot;storage&amp;quot;,\n     :macaddresses=&amp;gt;[&amp;quot;CC:CC:CC:CC:CC:CC&amp;quot;, &amp;quot;DD:DD:DD:DD:DD:DD&amp;quot;],\n     :logcal_location=&amp;gt;&amp;quot;fra1&amp;quot;,\n     :address=&amp;gt;&amp;quot;10.2.3.4&amp;quot;},\n   21=&amp;gt;\n    {:name=&amp;gt;&amp;quot;storage2.fra1&amp;quot;,\n     :type=&amp;gt;&amp;quot;storage&amp;quot;,\n     :macaddresses=&amp;gt;[&amp;quot;BB:BB:BB:BB:BB:BB&amp;quot;, &amp;quot;AA:AA:AA:AA:AA:AA&amp;quot;],\n     :logcal_location=&amp;gt;&amp;quot;fra1&amp;quot;,\n     :address=&amp;gt;&amp;quot;10.2.3.5&amp;quot;}\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thanks in advance and mybe you beings have some sweet tips.  &lt;/p&gt;\n\n&lt;p&gt;Codesnipet for readability: &lt;a href=\"https://gitlab.com/-/snippets/2009689\"&gt;https://gitlab.com/-/snippets/2009689&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?auto=webp&amp;s=6b590839e21b0f0e5d45a926d1c383c41316f7fd", "width": 128, "height": 128}, "resolutions": [{"url": "https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a3dfba29f9d19dc5dd95d58e68cd2ca48d0f6551", "width": 108, "height": 108}], "variants": {}, "id": "euUE_k9o_euzwgNONmIZMM026oeSTBH_ZdvLjtUNylg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "d3392e70-873c-11e9-af37-0eea3fce36a6", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ii9m89", "is_robot_indexable": true, "report_reasons": null, "author": "KervyN", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ii9m89/help_a_novice_refacotring_my_netbox_wrapper/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/ruby/comments/ii9m89/help_a_novice_refacotring_my_netbox_wrapper/", "subreddit_subscribers": 67118, "created_utc": 1598630070.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_lc0kps6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The super keyword in Ruby", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_ihs9k0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/zj2e2b6n2gidyxK5lPAQvl1SDjKFF30A9f2p7PBEwRI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1598586982.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/rubycademy/the-super-keyword-a75b67f46f05", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/XmOa_5qCxNrsc569jG8D-_xFIfc8XkwM-ym2FJnalXs.jpg?auto=webp&amp;s=74727324ecfabced3e7f32569a22c2153dbca39b", "width": 1200, "height": 900}, "resolutions": [{"url": "https://external-preview.redd.it/XmOa_5qCxNrsc569jG8D-_xFIfc8XkwM-ym2FJnalXs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ed4a7f87118d5ced234292af07cbf2fef0e282ba", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/XmOa_5qCxNrsc569jG8D-_xFIfc8XkwM-ym2FJnalXs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=643f726d8b4a4c613978c8b7e77d2ba37abfe77b", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/XmOa_5qCxNrsc569jG8D-_xFIfc8XkwM-ym2FJnalXs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=bd60d1cf91d02ce6a80222ae831c5779c221a0ad", "width": 320, "height": 240}, {"url": "https://external-preview.redd.it/XmOa_5qCxNrsc569jG8D-_xFIfc8XkwM-ym2FJnalXs.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=328b8bb54b53945021f162898ce111e6cdf59a3d", "width": 640, "height": 480}, {"url": "https://external-preview.redd.it/XmOa_5qCxNrsc569jG8D-_xFIfc8XkwM-ym2FJnalXs.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7a2028786fddcaaf134ecaa3ff6bd97805b962e2", "width": 960, "height": 720}, {"url": "https://external-preview.redd.it/XmOa_5qCxNrsc569jG8D-_xFIfc8XkwM-ym2FJnalXs.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c8d8f2d5f6d7548d8743c91fef529c67ad1be4dc", "width": 1080, "height": 810}], "variants": {}, "id": "tw_0aR0_RwmQ4peYoX6qNkr8eJicYEAWw8wNPHdrSbk"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ihs9k0", "is_robot_indexable": true, "report_reasons": null, "author": "mehdifarsi", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ihs9k0/the_super_keyword_in_ruby/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/rubycademy/the-super-keyword-a75b67f46f05", "subreddit_subscribers": 67118, "created_utc": 1598558182.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "ruby", "selftext": "", "author_fullname": "t2_28auw7q9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Multipart file upload to Active Storage using GraphQL-ruby and Apollo", "link_flair_richtext": [], "subreddit_name_prefixed": "r/ruby", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_ihqqrg", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.79, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/7m_NpdvcEh-0gkl6PyPRTs1a8aJe4czdlfrC-t71F6U.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1598582426.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "abhaynikam.me", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.abhaynikam.me/posts/active-storage-multipart-file-upload-graphql-ruby/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/UdliMqLzmPggYphZbbMuOYSQ8gUnJTjpJpJpTI_O8Ew.jpg?auto=webp&amp;s=31b70965deb6a0feb64d1e4d139981e24f0dd2c6", "width": 3568, "height": 3597}, "resolutions": [{"url": "https://external-preview.redd.it/UdliMqLzmPggYphZbbMuOYSQ8gUnJTjpJpJpTI_O8Ew.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6011fbac90cecae58677a18ca48404f54f3be140", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/UdliMqLzmPggYphZbbMuOYSQ8gUnJTjpJpJpTI_O8Ew.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=378dd2a02fb604ea2efa4021c10e24337d5f680a", "width": 216, "height": 217}, {"url": "https://external-preview.redd.it/UdliMqLzmPggYphZbbMuOYSQ8gUnJTjpJpJpTI_O8Ew.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c26dc16fc2868e0a43c45e30b6847fc9746c41e8", "width": 320, "height": 322}, {"url": "https://external-preview.redd.it/UdliMqLzmPggYphZbbMuOYSQ8gUnJTjpJpJpTI_O8Ew.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=020260c99dd2a2f6814bfb738c6d97e83e1d0d21", "width": 640, "height": 645}, {"url": "https://external-preview.redd.it/UdliMqLzmPggYphZbbMuOYSQ8gUnJTjpJpJpTI_O8Ew.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=8443d7d533756bb47c4a18c135289645156068cc", "width": 960, "height": 967}, {"url": "https://external-preview.redd.it/UdliMqLzmPggYphZbbMuOYSQ8gUnJTjpJpJpTI_O8Ew.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=89b5c1ab3a317c1176e4b9f3b0174ef712c7b15b", "width": 1080, "height": 1088}], "variants": {}, "id": "dyVv6Zemr6U9YB3do__Tf3hH9z7jYopCEtGMoFbQ36k"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh21", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ihqqrg", "is_robot_indexable": true, "report_reasons": null, "author": "abhaynikam", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/ruby/comments/ihqqrg/multipart_file_upload_to_active_storage_using/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.abhaynikam.me/posts/active-storage-multipart-file-upload-graphql-ruby/", "subreddit_subscribers": 67118, "created_utc": 1598553626.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ihqqrg", "before": null}}