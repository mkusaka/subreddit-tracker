{"kind": "Listing", "data": {"modhash": "", "dist": 12, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven't been written yet.\n\nIf you have a [StackOverflow](http://stackoverflow.com/) account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it [the \"Rust\" tag](http://stackoverflow.com/questions/tagged/rust) for maximum visibility). Note that this site is very interested in question quality. I've been asked to read a RFC I authored once. If you want your code reviewed or review other's code, there's a [codereview stackexchange](https://codereview.stackexchange.com/questions/tagged/rust), too. If you need to test your code, maybe [the Rust playground](https://play.rust-lang.org) is for you.\n\nHere are some other venues where help may be found:\n\n[/r/learnrust](https://www.reddit.com/r/learnrust) is a subreddit to share your questions and epiphanies learning Rust programming.\n\nThe official Rust user forums: [https://users.rust-lang.org/](https://users.rust-lang.org/).\n\nThe official Rust Programming Language Discord: [https://discord.gg/rust-lang](https://discord.gg/rust-lang)\n\nThe unofficial Rust community Discord: [https://bit.ly/rust-community](https://bit.ly/rust-community)\n\nAlso check out [last week's thread](https://reddit.com/r/rust/comments/ghw4v6/hey_rustaceans_got_an_easy_question_ask_here/) with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.\n\nAlso if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.", "author_fullname": "t2_1kxp4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hey Rustaceans! Got an easy question? Ask here (21/2020)!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_glvkc5", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": "", "subreddit_type": "public", "ups": 19, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 19, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": "contrib", "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1589809487.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mystified about strings? Borrow checker have you in a headlock? Seek help here! There are no stupid questions, only docs that haven&amp;#39;t been written yet.&lt;/p&gt;\n\n&lt;p&gt;If you have a &lt;a href=\"http://stackoverflow.com/\"&gt;StackOverflow&lt;/a&gt; account, consider asking it there instead! StackOverflow shows up much higher in search results, so having your question there also helps future Rust users (be sure to give it &lt;a href=\"http://stackoverflow.com/questions/tagged/rust\"&gt;the &amp;quot;Rust&amp;quot; tag&lt;/a&gt; for maximum visibility). Note that this site is very interested in question quality. I&amp;#39;ve been asked to read a RFC I authored once. If you want your code reviewed or review other&amp;#39;s code, there&amp;#39;s a &lt;a href=\"https://codereview.stackexchange.com/questions/tagged/rust\"&gt;codereview stackexchange&lt;/a&gt;, too. If you need to test your code, maybe &lt;a href=\"https://play.rust-lang.org\"&gt;the Rust playground&lt;/a&gt; is for you.&lt;/p&gt;\n\n&lt;p&gt;Here are some other venues where help may be found:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/r/learnrust\"&gt;/r/learnrust&lt;/a&gt; is a subreddit to share your questions and epiphanies learning Rust programming.&lt;/p&gt;\n\n&lt;p&gt;The official Rust user forums: &lt;a href=\"https://users.rust-lang.org/\"&gt;https://users.rust-lang.org/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The official Rust Programming Language Discord: &lt;a href=\"https://discord.gg/rust-lang\"&gt;https://discord.gg/rust-lang&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The unofficial Rust community Discord: &lt;a href=\"https://bit.ly/rust-community\"&gt;https://bit.ly/rust-community&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also check out &lt;a href=\"https://reddit.com/r/rust/comments/ghw4v6/hey_rustaceans_got_an_easy_question_ask_here/\"&gt;last week&amp;#39;s thread&lt;/a&gt; with many good questions and answers. And if you believe your question to be either very complex or worthy of larger dissemination, feel free to create a text post.&lt;/p&gt;\n\n&lt;p&gt;Also if you want to be mentored by experienced Rustaceans, tell us the area of expertise that you seek.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "clippy \u00b7 twir \u00b7 rust \u00b7 mutagen \u00b7 flamer \u00b7 overflower \u00b7 bytecount", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "glvkc5", "is_robot_indexable": true, "report_reasons": null, "author": "llogiq", "discussion_type": null, "num_comments": 181, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/glvkc5/hey_rustaceans_got_an_easy_question_ask_here/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/rust/comments/glvkc5/hey_rustaceans_got_an_easy_question_ask_here/", "subreddit_subscribers": 100450, "created_utc": 1589780687.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_eki22", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "This Week in Rust 339", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gmyv8h", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": "", "subreddit_type": "public", "ups": 83, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 83, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1589956218.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "this-week-in-rust.org", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "twir", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gmyv8h", "is_robot_indexable": true, "report_reasons": null, "author": "seino_chan", "discussion_type": null, "num_comments": 16, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/rust/comments/gmyv8h/this_week_in_rust_339/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://this-week-in-rust.org/blog/2020/05/19/this-week-in-rust-339/", "subreddit_subscribers": 100450, "created_utc": 1589927418.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_fzphh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I did my first project in Rust! A \"photo mode\" for Yakuza Kiwami 2!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gp1que", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 200, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"reddit_video": {"fallback_url": "https://v.redd.it/q0o5fikhbh051/DASH_1080?source=fallback", "height": 1080, "width": 1920, "scrubber_media_url": "https://v.redd.it/q0o5fikhbh051/DASH_96", "dash_url": "https://v.redd.it/q0o5fikhbh051/DASHPlaylist.mpd?a=1592832853%2CNDk3MmJlZTY2NjI4YmZiNDJmODUxMDFjYThjNmZmMzlmNGY5MTA4NTEyYmI3NTI2NDRmNDI3N2MxZWYxZTI5MQ%3D%3D&amp;v=v1&amp;f=sd", "duration": 21, "hls_url": "https://v.redd.it/q0o5fikhbh051/HLSPlaylist.m3u8?a=1592832853%2CNDk3MmJlZTY2NjI4YmZiNDJmODUxMDFjYThjNmZmMzlmNGY5MTA4NTEyYmI3NTI2NDRmNDI3N2MxZWYxZTI5MQ%3D%3D&amp;v=v1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_reddit_media_domain": true, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 200, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590253072.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "v.redd.it", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp1que", "is_robot_indexable": true, "report_reasons": null, "author": "EtraStyle", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gp1que/i_did_my_first_project_in_rust_a_photo_mode_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://v.redd.it/q0o5fikhbh051", "subreddit_subscribers": 100450, "created_utc": 1590224272.0, "num_crossposts": 0, "media": {"reddit_video": {"fallback_url": "https://v.redd.it/q0o5fikhbh051/DASH_1080?source=fallback", "height": 1080, "width": 1920, "scrubber_media_url": "https://v.redd.it/q0o5fikhbh051/DASH_96", "dash_url": "https://v.redd.it/q0o5fikhbh051/DASHPlaylist.mpd?a=1592832853%2CNDk3MmJlZTY2NjI4YmZiNDJmODUxMDFjYThjNmZmMzlmNGY5MTA4NTEyYmI3NTI2NDRmNDI3N2MxZWYxZTI5MQ%3D%3D&amp;v=v1&amp;f=sd", "duration": 21, "hls_url": "https://v.redd.it/q0o5fikhbh051/HLSPlaylist.m3u8?a=1592832853%2CNDk3MmJlZTY2NjI4YmZiNDJmODUxMDFjYThjNmZmMzlmNGY5MTA4NTEyYmI3NTI2NDRmNDI3N2MxZWYxZTI5MQ%3D%3D&amp;v=v1&amp;f=sd", "is_gif": false, "transcoding_status": "completed"}}, "is_video": true}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Over the weekend, the contents of an internal Gitlab instance from Daimler (Mercedes) was leaked. It contains, among other things, the source code of their internal \"onboard logic unit\" (OLU) software systems for Mercedes vans.\n\nSee this ZDNET post for details: [https://www.zdnet.com/article/mercedes-benz-onboard-logic-unit-olu-source-code-leaks-online/](https://www.zdnet.com/article/mercedes-benz-onboard-logic-unit-olu-source-code-leaks-online/)\n\nHere's a list of Rust repos in the Daimler leak: [https://git.rip/search?utf8=%E2%9C%93&amp;search=rust&amp;group\\_id=169&amp;project\\_id=&amp;repository\\_ref=&amp;nav\\_source=navbar](https://git.rip/search?utf8=%E2%9C%93&amp;search=rust&amp;group_id=169&amp;project_id=&amp;repository_ref=&amp;nav_source=navbar)\n\nIt seems it's mostly example projects on how to connect to the OLU server from Rust. The main parts of the system are C++. Still interesting!", "author_fullname": "t2_52edeitt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Daimler internal source code leaked: Some Rust included :-o", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gp2uey", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 35, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 35, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590259482.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Over the weekend, the contents of an internal Gitlab instance from Daimler (Mercedes) was leaked. It contains, among other things, the source code of their internal &amp;quot;onboard logic unit&amp;quot; (OLU) software systems for Mercedes vans.&lt;/p&gt;\n\n&lt;p&gt;See this ZDNET post for details: &lt;a href=\"https://www.zdnet.com/article/mercedes-benz-onboard-logic-unit-olu-source-code-leaks-online/\"&gt;https://www.zdnet.com/article/mercedes-benz-onboard-logic-unit-olu-source-code-leaks-online/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s a list of Rust repos in the Daimler leak: &lt;a href=\"https://git.rip/search?utf8=%E2%9C%93&amp;amp;search=rust&amp;amp;group_id=169&amp;amp;project_id=&amp;amp;repository_ref=&amp;amp;nav_source=navbar\"&gt;https://git.rip/search?utf8=%E2%9C%93&amp;amp;search=rust&amp;amp;group_id=169&amp;amp;project_id=&amp;amp;repository_ref=&amp;amp;nav_source=navbar&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It seems it&amp;#39;s mostly example projects on how to connect to the OLU server from Rust. The main parts of the system are C++. Still interesting!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp2uey", "is_robot_indexable": true, "report_reasons": null, "author": "frando3000", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gp2uey/daimler_internal_source_code_leaked_some_rust/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/gp2uey/daimler_internal_source_code_leaked_some_rust/", "subreddit_subscribers": 100450, "created_utc": 1590230682.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_6d5cgfas", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Common Rust Lifetime Misconceptions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "hide_score": false, "name": "t3_golrsx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type": "public", "ups": 403, "total_awards_received": 4, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "\ud83e\udd80", "can_mod_post": false, "score": 403, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590191301.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 500, "id": "award_2ae56630-cfe0-424e-b810-4945b9145358", "penny_donate": null, "coin_reward": 100, "icon_url": "https://i.redd.it/award_images/t5_22cerq/trz28na8ajz31_Helpful.png", "days_of_premium": 0, "icon_height": 2048, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/trz28na8ajz31_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=2a2dcb39c9a8722a5293a6567094936af3366433", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trz28na8ajz31_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=2a712a82bcfae96a0244c7d53395af082e4f030f", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trz28na8ajz31_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=a414be7b8a7820efe5bd8909eb9d80a27a9a901e", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trz28na8ajz31_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=37c769614dc2e0855c9e898f0691cbf5e25bce53", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/trz28na8ajz31_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=8706e3101ef36c57ab8f82f642bb26383c845c82", "width": 128, "height": 128}], "icon_width": 2048, "start_date": null, "is_enabled": true, "description": "Thank you stranger. Gives %{coin_symbol}100 Coins to both the author and the community.", "end_date": null, "subreddit_coin_reward": 100, "count": 2, "name": "Helpful (Pro)", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}, {"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "id": "award_f44611f1-b89e-46dc-97fe-892280b13b82", "penny_donate": null, "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png", "days_of_premium": 0, "icon_height": 2048, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_width": 2048, "start_date": null, "is_enabled": true, "description": "Thank you stranger. Shows the award.", "end_date": null, "subreddit_coin_reward": 0, "count": 2, "name": "Helpful", "icon_format": null, "award_sub_type": "GLOBAL", "penny_price": null, "award_type": "global"}], "awarders": [], "media_only": false, "link_flair_template_id": "d2ca554e-3403-11ea-9388-0e7a9d50174f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#fff7e6", "id": "golrsx", "is_robot_indexable": true, "report_reasons": null, "author": "pretzelhammer", "discussion_type": null, "num_comments": 39, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/golrsx/common_rust_lifetime_misconceptions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/pretzelhammer/rust-blog/blob/master/posts/common-rust-lifetime-misconceptions.md", "subreddit_subscribers": 100450, "created_utc": 1590162501.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Hello everybody,\n\nI'm happy to present you the first stable release of my crate [console\\_engine](https://crates.io/crates/console_engine) !\n\n## But what is console_engine ?\n\nIt's a Terminal User Interface (tui) library built on top of [crossterm](https://crates.io/crates/crossterm). It's far from being as cool as [tui](https://crates.io/crates/tui) himself but I think that console\\_engine can have its own advantages for some use cases.\n\nThe crate has two main structs : `ConsoleEngine` and `Screen`. Let's start with `Screen` first :\n\n* a Screen is like a virtual screen that you create with a specific width and height.\n* It has many drawing functions that allow you to plot characters wherever you want. You can print text on specific coordinates but also draw lines, rectangles, circles or even triangles.\n* You can print a Screen into another one.\n* You can resize a Screen if needed\n* When your screen is ready, you just have to call the draw function\n* Screens are standalone and as such, you can only use it without even using ConsoleEngine !\n\nNow that you're more familiar with Screens, let's take a look into ConsoleEngine :\n\n* It's a structure where you provide a width, height and target frame per seconds, and then you just need to run it in an infinite loop.\n* It'll capture keyboard and mouse inputs, and give them back via some functions\n* In the meantime, it also has internally a Screen. You can do the same operations to the engine as if it's a Screen.\n* each \"frame\" is drawn of top of each other, so you can do some animations on screen\n* terminal resizing is supported : you just need to call one function to auto-resize the engine's screen\n\nI tried to provide many examples and have widely documented most of the functions to help new users to get used to it.\n\nI hope that this crate find its public and that's why I wanted to communicate at least on its 1.0 release.", "author_fullname": "t2_6ii37b1n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Release 1.0] console_engine", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gp430d", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1590237830.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590265649.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everybody,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m happy to present you the first stable release of my crate &lt;a href=\"https://crates.io/crates/console_engine\"&gt;console_engine&lt;/a&gt; !&lt;/p&gt;\n\n&lt;h2&gt;But what is console_engine ?&lt;/h2&gt;\n\n&lt;p&gt;It&amp;#39;s a Terminal User Interface (tui) library built on top of &lt;a href=\"https://crates.io/crates/crossterm\"&gt;crossterm&lt;/a&gt;. It&amp;#39;s far from being as cool as &lt;a href=\"https://crates.io/crates/tui\"&gt;tui&lt;/a&gt; himself but I think that console_engine can have its own advantages for some use cases.&lt;/p&gt;\n\n&lt;p&gt;The crate has two main structs : &lt;code&gt;ConsoleEngine&lt;/code&gt; and &lt;code&gt;Screen&lt;/code&gt;. Let&amp;#39;s start with &lt;code&gt;Screen&lt;/code&gt; first :&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;a Screen is like a virtual screen that you create with a specific width and height.&lt;/li&gt;\n&lt;li&gt;It has many drawing functions that allow you to plot characters wherever you want. You can print text on specific coordinates but also draw lines, rectangles, circles or even triangles.&lt;/li&gt;\n&lt;li&gt;You can print a Screen into another one.&lt;/li&gt;\n&lt;li&gt;You can resize a Screen if needed&lt;/li&gt;\n&lt;li&gt;When your screen is ready, you just have to call the draw function&lt;/li&gt;\n&lt;li&gt;Screens are standalone and as such, you can only use it without even using ConsoleEngine !&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Now that you&amp;#39;re more familiar with Screens, let&amp;#39;s take a look into ConsoleEngine :&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It&amp;#39;s a structure where you provide a width, height and target frame per seconds, and then you just need to run it in an infinite loop.&lt;/li&gt;\n&lt;li&gt;It&amp;#39;ll capture keyboard and mouse inputs, and give them back via some functions&lt;/li&gt;\n&lt;li&gt;In the meantime, it also has internally a Screen. You can do the same operations to the engine as if it&amp;#39;s a Screen.&lt;/li&gt;\n&lt;li&gt;each &amp;quot;frame&amp;quot; is drawn of top of each other, so you can do some animations on screen&lt;/li&gt;\n&lt;li&gt;terminal resizing is supported : you just need to call one function to auto-resize the engine&amp;#39;s screen&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I tried to provide many examples and have widely documented most of the functions to help new users to get used to it.&lt;/p&gt;\n\n&lt;p&gt;I hope that this crate find its public and that&amp;#39;s why I wanted to communicate at least on its 1.0 release.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp430d", "is_robot_indexable": true, "report_reasons": null, "author": "VincentFoulon80", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gp430d/release_10_console_engine/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/gp430d/release_10_console_engine/", "subreddit_subscribers": 100450, "created_utc": 1590236849.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_81yj9s9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Demo Zoo: Zero Cost Abstractions in C++20, Rust, &amp; Zig", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gp0vb2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/43X9ia-qpds?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Demo Zoo: Zero Cost Abstractions in C++20, Rust, &amp; Zig", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/43X9ia-qpds?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Context Free", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/43X9ia-qpds/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCS4FAVeYW_IaZqAbqhlvxlA"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/43X9ia-qpds?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/gp0vb2", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 13, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590247919.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp0vb2", "is_robot_indexable": true, "report_reasons": null, "author": "donutloop", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gp0vb2/demo_zoo_zero_cost_abstractions_in_c20_rust_zig/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=43X9ia-qpds&amp;feature=share", "subreddit_subscribers": 100450, "created_utc": 1590219119.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Demo Zoo: Zero Cost Abstractions in C++20, Rust, &amp; Zig", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/43X9ia-qpds?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Context Free", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/43X9ia-qpds/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCS4FAVeYW_IaZqAbqhlvxlA"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "The last time this question was asked was in 2018 it is not 2020 and I was wondering if the information presented in previous questions is still applicable. [Previous Question!](https://www.reddit.com/r/rust/comments/6v44nn/ask_rustaceans_which_web_socket_library_to_use/)\n\n**What initiated this post?**\n\n*  When researching the available crates that can be used to satisfy websocket needs I found there are [84 different crates!](https://lib.rs/web-programming/websocket) and it is not clear what their pros/cons are.\n* When this question was last asked the most talked about crates where ``websocket`` and ``ws`` however now it looks like the most used crate is actually ``tungstenite`` or ``tokio-tungstenite``. ``Tungstenite`` also seems to be the most active out of all the crates, perhaps this is the reason for it being most used?", "author_fullname": "t2_4ryv6j6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Which Websocket library to use?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_goxm85", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1590203464.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590232074.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The last time this question was asked was in 2018 it is not 2020 and I was wondering if the information presented in previous questions is still applicable. &lt;a href=\"https://www.reddit.com/r/rust/comments/6v44nn/ask_rustaceans_which_web_socket_library_to_use/\"&gt;Previous Question!&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;What initiated this post?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt; When researching the available crates that can be used to satisfy websocket needs I found there are &lt;a href=\"https://lib.rs/web-programming/websocket\"&gt;84 different crates!&lt;/a&gt; and it is not clear what their pros/cons are.&lt;/li&gt;\n&lt;li&gt;When this question was last asked the most talked about crates where &lt;code&gt;websocket&lt;/code&gt; and &lt;code&gt;ws&lt;/code&gt; however now it looks like the most used crate is actually &lt;code&gt;tungstenite&lt;/code&gt; or &lt;code&gt;tokio-tungstenite&lt;/code&gt;. &lt;code&gt;Tungstenite&lt;/code&gt; also seems to be the most active out of all the crates, perhaps this is the reason for it being most used?&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "goxm85", "is_robot_indexable": true, "report_reasons": null, "author": "Swaggpickle", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/goxm85/which_websocket_library_to_use/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/goxm85/which_websocket_library_to_use/", "subreddit_subscribers": 100450, "created_utc": 1590203274.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "", "author_fullname": "t2_opo23", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tour of Rust - Chapter 4 Released! - Generic Types, new Brazilian Portuguese translation, and more", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gp3wc4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1590264801.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tourofrust.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp3wc4", "is_robot_indexable": true, "report_reasons": null, "author": "richardanaya", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gp3wc4/tour_of_rust_chapter_4_released_generic_types_new/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://tourofrust.com/chapter_4_en.html", "subreddit_subscribers": 100450, "created_utc": 1590236001.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Hello \ud83d\ude4b\u200d\u2642\ufe0f\n\nI have attempted to create my first Rust API using Tide and SQLX.\n\n[https://github.com/cobbinma/example-rust-api](https://github.com/cobbinma/example-rust-api)\n\nI am at a point now when I would really appreciate feedback. \n\nMy main question is over testing it. What would be the recommended approach to testing an API like this? Would you create a database level trait and mock it or test on an actual database?\n\nThanks in advance!", "author_fullname": "t2_5dd69lqw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tide and SQLX Rust API", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": true, "name": "t3_gp3yrl", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590265118.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello \ud83d\ude4b\u200d\u2642\ufe0f&lt;/p&gt;\n\n&lt;p&gt;I have attempted to create my first Rust API using Tide and SQLX.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/cobbinma/example-rust-api\"&gt;https://github.com/cobbinma/example-rust-api&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I am at a point now when I would really appreciate feedback. &lt;/p&gt;\n\n&lt;p&gt;My main question is over testing it. What would be the recommended approach to testing an API like this? Would you create a database level trait and mock it or test on an actual database?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp3yrl", "is_robot_indexable": true, "report_reasons": null, "author": "cobbingm", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gp3yrl/tide_and_sqlx_rust_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/gp3yrl/tide_and_sqlx_rust_api/", "subreddit_subscribers": 100450, "created_utc": 1590236318.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "Okay, so I\u2019ve been trying to write a tool to interact with a kernel driver in Windows recently. My main source has been the `winapi` and `kernel32` crates and it\u2019s been a goddamned nightmare.\n\nTrying to define all the unique Nullable types from rust to do a task as simple as `CreateFileA` to the driver name, and `DeviceIoControl` methods, the argument types and documentation are a steaming pile of undefined behaviour. Never mind the fact that the rust compiler is constantly bitching at me for unsafe types and methods being used all over the place.\n\nI\u2019m just curious, has anyone had any success writing low level windows tools in Rust? And if so... how the fuck are you doing this? My code is littered with `std::mem::zeroes` and `unsafe` C types, plus it doesn\u2019t even work, I suddenly have lost all of the joys of Rusts memory system and compiler warnings. Suddenly I can compile my code and when I run it, it doesn\u2019t work AT ALL. It\u2019s worse than writing it in C.\n\nQuestion; when will the Rust ecosystem on Windows mature? Is anyone even working on it? I\u2019m really distraught and it\u2019s making me hate my favourite language which has served me so incredibly well over the years of writing it on Linux systems. So sad. Sorry for the rant just needed to get this out there.\n\nHave a lovely weekend y\u2019all!!\n\nEDIT:\nJust to be clear, I\u2019m not dissing the maintainers of the crates, I think they\u2019ve done an incredible job at getting access to those API\u2019s . But the API\u2019s are so outdated that rust doesn\u2019t plug into them like we\u2019re used to in Linux. It\u2019s a real shame and I don\u2019t see it changing until the WinAPI is improved.\n\nEdit2: \nAnd finally, the rust community has proven me wrong as I hoped! The ecosystem isn\u2019t perfect sure, but there are lots of cool ways to make it manageable and some really impressive projects out there to use as a basis. Thank you everyone for listening to my rant and being so helpful.", "author_fullname": "t2_4mfbozhk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[RANT] the rust ecosystem on Windows....", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gortry", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": 1590233525.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590210336.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Okay, so I\u2019ve been trying to write a tool to interact with a kernel driver in Windows recently. My main source has been the &lt;code&gt;winapi&lt;/code&gt; and &lt;code&gt;kernel32&lt;/code&gt; crates and it\u2019s been a goddamned nightmare.&lt;/p&gt;\n\n&lt;p&gt;Trying to define all the unique Nullable types from rust to do a task as simple as &lt;code&gt;CreateFileA&lt;/code&gt; to the driver name, and &lt;code&gt;DeviceIoControl&lt;/code&gt; methods, the argument types and documentation are a steaming pile of undefined behaviour. Never mind the fact that the rust compiler is constantly bitching at me for unsafe types and methods being used all over the place.&lt;/p&gt;\n\n&lt;p&gt;I\u2019m just curious, has anyone had any success writing low level windows tools in Rust? And if so... how the fuck are you doing this? My code is littered with &lt;code&gt;std::mem::zeroes&lt;/code&gt; and &lt;code&gt;unsafe&lt;/code&gt; C types, plus it doesn\u2019t even work, I suddenly have lost all of the joys of Rusts memory system and compiler warnings. Suddenly I can compile my code and when I run it, it doesn\u2019t work AT ALL. It\u2019s worse than writing it in C.&lt;/p&gt;\n\n&lt;p&gt;Question; when will the Rust ecosystem on Windows mature? Is anyone even working on it? I\u2019m really distraught and it\u2019s making me hate my favourite language which has served me so incredibly well over the years of writing it on Linux systems. So sad. Sorry for the rant just needed to get this out there.&lt;/p&gt;\n\n&lt;p&gt;Have a lovely weekend y\u2019all!!&lt;/p&gt;\n\n&lt;p&gt;EDIT:\nJust to be clear, I\u2019m not dissing the maintainers of the crates, I think they\u2019ve done an incredible job at getting access to those API\u2019s . But the API\u2019s are so outdated that rust doesn\u2019t plug into them like we\u2019re used to in Linux. It\u2019s a real shame and I don\u2019t see it changing until the WinAPI is improved.&lt;/p&gt;\n\n&lt;p&gt;Edit2: \nAnd finally, the rust community has proven me wrong as I hoped! The ecosystem isn\u2019t perfect sure, but there are lots of cool ways to make it manageable and some really impressive projects out there to use as a basis. Thank you everyone for listening to my rant and being so helpful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gortry", "is_robot_indexable": true, "report_reasons": null, "author": "covid9teen", "discussion_type": null, "num_comments": 27, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gortry/rant_the_rust_ecosystem_on_windows/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/gortry/rant_the_rust_ecosystem_on_windows/", "subreddit_subscribers": 100450, "created_utc": 1590181536.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "rust", "selftext": "This will not compile. I have no hair left so I am hoping someone can point me in the right direction...\n\n`#[test]`  \n`fn a_test()\u00a0{`  \n `let\u00a0mymarked:\u00a0Arc&lt;Mutex&lt;bool&gt;&gt;\u00a0=\u00a0Arc::new(Mutex::new(false));`  \n\u00a0\u00a0\u00a0\u00a0`std::thread::spawn(move\u00a0||\u00a0{`  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0`*mymarked.get_mut().unwrap()\u00a0=\u00a0true;`  \n\u00a0\u00a0\u00a0\u00a0`});`  \n`}`  \nThe error I get is:\n\n`error[E0596]: cannot borrow data in an \\`Arc\\` as mutable`\n\n   `--&gt; src\\lib.rs:197:14`\n\n`|`\n\n`197 |             *mymarked.get_mut().unwrap() = true;`\n\n`|              ^^^^^^^^ cannot borrow as mutable`\n\n`|`\n\n`= help: trait \\`DerefMut\\` is required to modify through a dereference, but it is not implemented for \\`std::sync::Arc&lt;std::sync::Mutex&lt;bool&gt;&gt;\\``\n\nThanks for any help. Yes I tried RTFM, rustc --explain E0596, etc. I am very new to the language so it is probably something simple.\n\nThanks,  \nSLDR  \n(Stephen L. De Rudder)", "author_fullname": "t2_6jl1l3nz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What am I missing here??? (I am new to Rust btw)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/rust", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "hide_score": false, "name": "t3_gp3czx", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1590262218.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.rust", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This will not compile. I have no hair left so I am hoping someone can point me in the right direction...&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;#[test]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;fn a_test()\u00a0{&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;let\u00a0mymarked:\u00a0Arc&amp;lt;Mutex&amp;lt;bool&amp;gt;&amp;gt;\u00a0=\u00a0Arc::new(Mutex::new(false));&lt;/code&gt;&lt;br/&gt;\n\u00a0\u00a0\u00a0\u00a0&lt;code&gt;std::thread::spawn(move\u00a0||\u00a0{&lt;/code&gt;&lt;br/&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;code&gt;*mymarked.get_mut().unwrap()\u00a0=\u00a0true;&lt;/code&gt;&lt;br/&gt;\n\u00a0\u00a0\u00a0\u00a0&lt;code&gt;});&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\nThe error I get is:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;error[E0596]: cannot borrow data in an \\&lt;/code&gt;Arc` as mutable`&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;--&amp;gt; src\\lib.rs:197:14&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;197 |             *mymarked.get_mut().unwrap() = true;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;|              ^^^^^^^^ cannot borrow as mutable&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;|&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;= help: trait \\&lt;/code&gt;DerefMut` is required to modify through a dereference, but it is not implemented for `std::sync::Arc&amp;lt;std::sync::Mutex&amp;lt;bool&amp;gt;&amp;gt;``&lt;/p&gt;\n\n&lt;p&gt;Thanks for any help. Yes I tried RTFM, rustc --explain E0596, etc. I am very new to the language so it is probably something simple.&lt;/p&gt;\n\n&lt;p&gt;Thanks,&lt;br/&gt;\nSLDR&lt;br/&gt;\n(Stephen L. De Rudder)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2s7lj", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "gp3czx", "is_robot_indexable": true, "report_reasons": null, "author": "sldrman", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/rust/comments/gp3czx/what_am_i_missing_here_i_am_new_to_rust_btw/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/rust/comments/gp3czx/what_am_i_missing_here_i_am_new_to_rust_btw/", "subreddit_subscribers": 100450, "created_utc": 1590233418.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_gp3czx", "before": null}}